var __getOwnPropNames = Object.getOwnPropertyNames;
var __commonJS = (cb, mod) => function __require() {
  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};
var require_index = __commonJS({
  "vendor/npm/emlapack@0.0.3/index.cjs"(exports, module) {
    var window = typeof window !== "undefined" ? window : typeof Deno !== "undefined" ? globalThis : void 0;
    var Module;
    if (!Module) Module = (typeof Module !== "undefined" ? Module : null) || {};
    (async function() {
      var moduleOverrides = {};
      for (var key in Module) {
        if (Module.hasOwnProperty(key)) {
          moduleOverrides[key] = Module[key];
        }
      }
      var ENVIRONMENT_IS_WEB = false;
      var ENVIRONMENT_IS_WORKER = false;
      var ENVIRONMENT_IS_NODE = false;
      var ENVIRONMENT_IS_SHELL = false;
      if (Module["ENVIRONMENT"]) {
        if (Module["ENVIRONMENT"] === "WEB") {
          ENVIRONMENT_IS_WEB = true;
        } else if (Module["ENVIRONMENT"] === "WORKER") {
          ENVIRONMENT_IS_WORKER = true;
        } else if (Module["ENVIRONMENT"] === "NODE") {
          ENVIRONMENT_IS_NODE = true;
        } else if (Module["ENVIRONMENT"] === "SHELL") {
          ENVIRONMENT_IS_SHELL = true;
        } else {
          throw new Error("The provided Module['ENVIRONMENT'] value is not valid. It must be one of: WEB|WORKER|NODE|SHELL.");
        }
      } else {
        ENVIRONMENT_IS_WEB = typeof window === "object";
        ENVIRONMENT_IS_WORKER = typeof importScripts === "function";
        ENVIRONMENT_IS_NODE = typeof process === "object" && typeof require === "function" && !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_WORKER;
        ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;
      }
      if (ENVIRONMENT_IS_NODE) {
        if (!Module["print"]) Module["print"] = console.log;
        if (!Module["printErr"]) Module["printErr"] = console.warn;
        var nodeFS = await import("node:fs");
        var nodePath = await import("node:path");
        Module["read"] = function read2(filename, binary) {
          filename = nodePath["normalize"](filename);
          var ret = nodeFS["readFileSync"](filename);
          return binary ? ret : ret.toString();
        };
        Module["readBinary"] = function readBinary(filename) {
          var ret = Module["read"](filename, true);
          if (!ret.buffer) {
            ret = new Uint8Array(ret);
          }
          assert(ret.buffer);
          return ret;
        };
        Module["load"] = function load(f) {
          globalEval(read(f));
        };
        if (!Module["thisProgram"]) {
          if (process["argv"].length > 1) {
            Module["thisProgram"] = process["argv"][1].replace(/\\/g, "/");
          } else {
            Module["thisProgram"] = "unknown-program";
          }
        }
        Module["arguments"] = process["argv"].slice(2);
        if (typeof module !== "undefined") {
          module["exports"] = Module;
        }
        process["on"]("uncaughtException", (function(ex) {
          if (!(ex instanceof ExitStatus)) {
            throw ex;
          }
        }));
        Module["inspect"] = (function() {
          return "[Emscripten Module object]";
        });
      } else if (ENVIRONMENT_IS_SHELL) {
        if (!Module["print"]) Module["print"] = print;
        if (typeof printErr != "undefined") Module["printErr"] = printErr;
        if (typeof read != "undefined") {
          Module["read"] = read;
        } else {
          Module["read"] = function read2() {
            throw "no read() available";
          };
        }
        Module["readBinary"] = function readBinary(f) {
          if (typeof readbuffer === "function") {
            return new Uint8Array(readbuffer(f));
          }
          var data = read(f, "binary");
          assert(typeof data === "object");
          return data;
        };
        if (typeof scriptArgs != "undefined") {
          Module["arguments"] = scriptArgs;
        } else if (typeof arguments != "undefined") {
          Module["arguments"] = arguments;
        }
      } else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {
        Module["read"] = function read2(url) {
          var xhr = new XMLHttpRequest();
          xhr.open("GET", url, false);
          xhr.send(null);
          return xhr.responseText;
        };
        Module["readAsync"] = function readAsync(url, onload, onerror) {
          var xhr = new XMLHttpRequest();
          xhr.open("GET", url, true);
          xhr.responseType = "arraybuffer";
          xhr.onload = function xhr_onload() {
            if (xhr.status == 200 || xhr.status == 0 && xhr.response) {
              onload(xhr.response);
            } else {
              onerror();
            }
          };
          xhr.onerror = onerror;
          xhr.send(null);
        };
        if (typeof arguments != "undefined") {
          Module["arguments"] = arguments;
        }
        if (typeof console !== "undefined") {
          if (!Module["print"]) Module["print"] = function print2(x) {
            console.log(x);
          };
          if (!Module["printErr"]) Module["printErr"] = function printErr2(x) {
            console.warn(x);
          };
        } else {
          var TRY_USE_DUMP = false;
          if (!Module["print"]) Module["print"] = TRY_USE_DUMP && typeof dump !== "undefined" ? (function(x) {
            dump(x);
          }) : (function(x) {
          });
        }
        if (ENVIRONMENT_IS_WORKER) {
          Module["load"] = importScripts;
        }
        if (typeof Module["setWindowTitle"] === "undefined") {
          Module["setWindowTitle"] = (function(title) {
            document.title = title;
          });
        }
      } else {
        throw "Unknown runtime environment. Where are we?";
      }
      function globalEval(x) {
        eval.call(null, x);
      }
      if (!Module["load"] && Module["read"]) {
        Module["load"] = function load(f) {
          globalEval(Module["read"](f));
        };
      }
      if (!Module["print"]) {
        Module["print"] = (function() {
        });
      }
      if (!Module["printErr"]) {
        Module["printErr"] = Module["print"];
      }
      if (!Module["arguments"]) {
        Module["arguments"] = [];
      }
      if (!Module["thisProgram"]) {
        Module["thisProgram"] = "./this.program";
      }
      Module.print = Module["print"];
      Module.printErr = Module["printErr"];
      Module["preRun"] = [];
      Module["postRun"] = [];
      for (var key in moduleOverrides) {
        if (moduleOverrides.hasOwnProperty(key)) {
          Module[key] = moduleOverrides[key];
        }
      }
      moduleOverrides = void 0;
      var Runtime = {
        setTempRet0: (function(value) {
          tempRet0 = value;
        }),
        getTempRet0: (function() {
          return tempRet0;
        }),
        stackSave: (function() {
          return STACKTOP;
        }),
        stackRestore: (function(stackTop) {
          STACKTOP = stackTop;
        }),
        getNativeTypeSize: (function(type2) {
          switch (type2) {
            case "i1":
            case "i8":
              return 1;
            case "i16":
              return 2;
            case "i32":
              return 4;
            case "i64":
              return 8;
            case "float":
              return 4;
            case "double":
              return 8;
            default: {
              if (type2[type2.length - 1] === "*") {
                return Runtime.QUANTUM_SIZE;
              } else if (type2[0] === "i") {
                var bits = parseInt(type2.substr(1));
                assert(bits % 8 === 0);
                return bits / 8;
              } else {
                return 0;
              }
            }
          }
        }),
        getNativeFieldSize: (function(type2) {
          return Math.max(Runtime.getNativeTypeSize(type2), Runtime.QUANTUM_SIZE);
        }),
        STACK_ALIGN: 16,
        prepVararg: (function(ptr, type2) {
          if (type2 === "double" || type2 === "i64") {
            if (ptr & 7) {
              assert((ptr & 7) === 4);
              ptr += 4;
            }
          } else {
            assert((ptr & 3) === 0);
          }
          return ptr;
        }),
        getAlignSize: (function(type2, size, vararg) {
          if (!vararg && (type2 == "i64" || type2 == "double")) return 8;
          if (!type2) return Math.min(size, 8);
          return Math.min(size || (type2 ? Runtime.getNativeFieldSize(type2) : 0), Runtime.QUANTUM_SIZE);
        }),
        dynCall: (function(sig, ptr, args) {
          if (args && args.length) {
            return Module["dynCall_" + sig].apply(null, [ptr].concat(args));
          } else {
            return Module["dynCall_" + sig].call(null, ptr);
          }
        }),
        functionPointers: [],
        addFunction: (function(func2) {
          for (var i2 = 0; i2 < Runtime.functionPointers.length; i2++) {
            if (!Runtime.functionPointers[i2]) {
              Runtime.functionPointers[i2] = func2;
              return 2 * (1 + i2);
            }
          }
          throw "Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.";
        }),
        removeFunction: (function(index) {
          Runtime.functionPointers[(index - 2) / 2] = null;
        }),
        warnOnce: (function(text) {
          if (!Runtime.warnOnce.shown) Runtime.warnOnce.shown = {};
          if (!Runtime.warnOnce.shown[text]) {
            Runtime.warnOnce.shown[text] = 1;
            Module.printErr(text);
          }
        }),
        funcWrappers: {},
        getFuncWrapper: (function(func2, sig) {
          assert(sig);
          if (!Runtime.funcWrappers[sig]) {
            Runtime.funcWrappers[sig] = {};
          }
          var sigCache = Runtime.funcWrappers[sig];
          if (!sigCache[func2]) {
            if (sig.length === 1) {
              sigCache[func2] = function dynCall_wrapper() {
                return Runtime.dynCall(sig, func2);
              };
            } else if (sig.length === 2) {
              sigCache[func2] = function dynCall_wrapper(arg2) {
                return Runtime.dynCall(sig, func2, [arg2]);
              };
            } else {
              sigCache[func2] = function dynCall_wrapper() {
                return Runtime.dynCall(sig, func2, Array.prototype.slice.call(arguments));
              };
            }
          }
          return sigCache[func2];
        }),
        getCompilerSetting: (function(name) {
          throw "You must build with -s RETAIN_COMPILER_SETTINGS=1 for Runtime.getCompilerSetting or emscripten_get_compiler_setting to work";
        }),
        stackAlloc: (function(size) {
          var ret = STACKTOP;
          STACKTOP = STACKTOP + size | 0;
          STACKTOP = STACKTOP + 15 & -16;
          return ret;
        }),
        staticAlloc: (function(size) {
          var ret = STATICTOP;
          STATICTOP = STATICTOP + size | 0;
          STATICTOP = STATICTOP + 15 & -16;
          return ret;
        }),
        dynamicAlloc: (function(size) {
          var ret = HEAP32[DYNAMICTOP_PTR >> 2];
          var end = (ret + size + 15 | 0) & -16;
          HEAP32[DYNAMICTOP_PTR >> 2] = end;
          if (end >= TOTAL_MEMORY) {
            var success = enlargeMemory();
            if (!success) {
              HEAP32[DYNAMICTOP_PTR >> 2] = ret;
              return 0;
            }
          }
          return ret;
        }),
        alignMemory: (function(size, quantum) {
          var ret = size = Math.ceil(size / (quantum ? quantum : 16)) * (quantum ? quantum : 16);
          return ret;
        }),
        makeBigInt: (function(low, high, unsigned) {
          var ret = unsigned ? +(low >>> 0) + +(high >>> 0) * 4294967296 : +(low >>> 0) + +(high | 0) * 4294967296;
          return ret;
        }),
        GLOBAL_BASE: 8,
        QUANTUM_SIZE: 4,
        __dummy__: 0
      };
      Module["Runtime"] = Runtime;
      var ABORT = false;
      var EXITSTATUS = 0;
      function assert(condition, text) {
        if (!condition) {
          abort("Assertion failed: " + text);
        }
      }
      function getCFunc(ident) {
        var func = Module["_" + ident];
        if (!func) {
          try {
            func = eval("_" + ident);
          } catch (e) {
          }
        }
        assert(func, "Cannot call unknown function " + ident + " (perhaps LLVM optimizations or closure removed it?)");
        return func;
      }
      var cwrap, ccall;
      (function() {
        var JSfuncs = {
          "stackSave": (function() {
            Runtime.stackSave();
          }),
          "stackRestore": (function() {
            Runtime.stackRestore();
          }),
          "arrayToC": (function(arr) {
            var ret = Runtime.stackAlloc(arr.length);
            writeArrayToMemory(arr, ret);
            return ret;
          }),
          "stringToC": (function(str) {
            var ret = 0;
            if (str !== null && str !== void 0 && str !== 0) {
              var len = (str.length << 2) + 1;
              ret = Runtime.stackAlloc(len);
              stringToUTF8(str, ret, len);
            }
            return ret;
          })
        };
        var toC = {
          "string": JSfuncs["stringToC"],
          "array": JSfuncs["arrayToC"]
        };
        ccall = function ccallFunc(ident2, returnType2, argTypes2, args, opts) {
          var func2 = getCFunc(ident2);
          var cArgs = [];
          var stack = 0;
          if (args) {
            for (var i2 = 0; i2 < args.length; i2++) {
              var converter = toC[argTypes2[i2]];
              if (converter) {
                if (stack === 0) stack = Runtime.stackSave();
                cArgs[i2] = converter(args[i2]);
              } else {
                cArgs[i2] = args[i2];
              }
            }
          }
          var ret = func2.apply(null, cArgs);
          if (returnType2 === "string") ret = Pointer_stringify(ret);
          if (stack !== 0) {
            if (opts && opts.async) {
              EmterpreterAsync.asyncFinalizers.push((function() {
                Runtime.stackRestore(stack);
              }));
              return;
            }
            Runtime.stackRestore(stack);
          }
          return ret;
        };
        var sourceRegex = /^function\s*[a-zA-Z$_0-9]*\s*\(([^)]*)\)\s*{\s*([^*]*?)[\s;]*(?:return\s*(.*?)[;\s]*)?}$/;
        function parseJSFunc(jsfunc) {
          var parsed = jsfunc.toString().match(sourceRegex).slice(1);
          return {
            arguments: parsed[0],
            body: parsed[1],
            returnValue: parsed[2]
          };
        }
        var JSsource = null;
        function ensureJSsource() {
          if (!JSsource) {
            JSsource = {};
            for (var fun in JSfuncs) {
              if (JSfuncs.hasOwnProperty(fun)) {
                JSsource[fun] = parseJSFunc(JSfuncs[fun]);
              }
            }
          }
        }
        cwrap = function cwrap(ident, returnType, argTypes) {
          argTypes = argTypes || [];
          var cfunc = getCFunc(ident);
          var numericArgs = argTypes.every((function(type2) {
            return type2 === "number";
          }));
          var numericRet = returnType !== "string";
          if (numericRet && numericArgs) {
            return cfunc;
          }
          var argNames = argTypes.map((function(x, i2) {
            return "$" + i2;
          }));
          var funcstr = "(function(" + argNames.join(",") + ") {";
          var nargs = argTypes.length;
          if (!numericArgs) {
            ensureJSsource();
            funcstr += "var stack = " + JSsource["stackSave"].body + ";";
            for (var i = 0; i < nargs; i++) {
              var arg = argNames[i], type = argTypes[i];
              if (type === "number") continue;
              var convertCode = JSsource[type + "ToC"];
              funcstr += "var " + convertCode.arguments + " = " + arg + ";";
              funcstr += convertCode.body + ";";
              funcstr += arg + "=(" + convertCode.returnValue + ");";
            }
          }
          var cfuncname = parseJSFunc((function() {
            return cfunc;
          })).returnValue;
          funcstr += "var ret = " + cfuncname + "(" + argNames.join(",") + ");";
          if (!numericRet) {
            var strgfy = parseJSFunc((function() {
              return Pointer_stringify;
            })).returnValue;
            funcstr += "ret = " + strgfy + "(ret);";
          }
          if (!numericArgs) {
            ensureJSsource();
            funcstr += JSsource["stackRestore"].body.replace("()", "(stack)") + ";";
          }
          funcstr += "return ret})";
          return eval(funcstr);
        };
      })();
      Module["ccall"] = ccall;
      Module["cwrap"] = cwrap;
      function setValue(ptr, value, type2, noSafe) {
        type2 = type2 || "i8";
        if (type2.charAt(type2.length - 1) === "*") type2 = "i32";
        switch (type2) {
          case "i1":
            HEAP8[ptr >> 0] = value;
            break;
          case "i8":
            HEAP8[ptr >> 0] = value;
            break;
          case "i16":
            HEAP16[ptr >> 1] = value;
            break;
          case "i32":
            HEAP32[ptr >> 2] = value;
            break;
          case "i64":
            tempI64 = [value >>> 0, (tempDouble = value, +Math_abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math_min(+Math_floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math_ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0)], HEAP32[ptr >> 2] = tempI64[0], HEAP32[ptr + 4 >> 2] = tempI64[1];
            break;
          case "float":
            HEAPF32[ptr >> 2] = value;
            break;
          case "double":
            HEAPF64[ptr >> 3] = value;
            break;
          default:
            abort("invalid type for setValue: " + type2);
        }
      }
      Module["setValue"] = setValue;
      function getValue(ptr, type2, noSafe) {
        type2 = type2 || "i8";
        if (type2.charAt(type2.length - 1) === "*") type2 = "i32";
        switch (type2) {
          case "i1":
            return HEAP8[ptr >> 0];
          case "i8":
            return HEAP8[ptr >> 0];
          case "i16":
            return HEAP16[ptr >> 1];
          case "i32":
            return HEAP32[ptr >> 2];
          case "i64":
            return HEAP32[ptr >> 2];
          case "float":
            return HEAPF32[ptr >> 2];
          case "double":
            return HEAPF64[ptr >> 3];
          default:
            abort("invalid type for setValue: " + type2);
        }
        return null;
      }
      Module["getValue"] = getValue;
      var ALLOC_NORMAL = 0;
      var ALLOC_STACK = 1;
      var ALLOC_STATIC = 2;
      var ALLOC_DYNAMIC = 3;
      var ALLOC_NONE = 4;
      Module["ALLOC_NORMAL"] = ALLOC_NORMAL;
      Module["ALLOC_STACK"] = ALLOC_STACK;
      Module["ALLOC_STATIC"] = ALLOC_STATIC;
      Module["ALLOC_DYNAMIC"] = ALLOC_DYNAMIC;
      Module["ALLOC_NONE"] = ALLOC_NONE;
      function allocate(slab, types, allocator, ptr) {
        var zeroinit, size;
        if (typeof slab === "number") {
          zeroinit = true;
          size = slab;
        } else {
          zeroinit = false;
          size = slab.length;
        }
        var singleType = typeof types === "string" ? types : null;
        var ret;
        if (allocator == ALLOC_NONE) {
          ret = ptr;
        } else {
          ret = [typeof _malloc === "function" ? _malloc : Runtime.staticAlloc, Runtime.stackAlloc, Runtime.staticAlloc, Runtime.dynamicAlloc][allocator === void 0 ? ALLOC_STATIC : allocator](Math.max(size, singleType ? 1 : types.length));
        }
        if (zeroinit) {
          var ptr = ret, stop;
          assert((ret & 3) == 0);
          stop = ret + (size & ~3);
          for (; ptr < stop; ptr += 4) {
            HEAP32[ptr >> 2] = 0;
          }
          stop = ret + size;
          while (ptr < stop) {
            HEAP8[ptr++ >> 0] = 0;
          }
          return ret;
        }
        if (singleType === "i8") {
          if (slab.subarray || slab.slice) {
            HEAPU8.set(slab, ret);
          } else {
            HEAPU8.set(new Uint8Array(slab), ret);
          }
          return ret;
        }
        var i2 = 0, type2, typeSize, previousType;
        while (i2 < size) {
          var curr = slab[i2];
          if (typeof curr === "function") {
            curr = Runtime.getFunctionIndex(curr);
          }
          type2 = singleType || types[i2];
          if (type2 === 0) {
            i2++;
            continue;
          }
          if (type2 == "i64") type2 = "i32";
          setValue(ret + i2, curr, type2);
          if (previousType !== type2) {
            typeSize = Runtime.getNativeTypeSize(type2);
            previousType = type2;
          }
          i2 += typeSize;
        }
        return ret;
      }
      Module["allocate"] = allocate;
      function getMemory(size) {
        if (!staticSealed) return Runtime.staticAlloc(size);
        if (!runtimeInitialized) return Runtime.dynamicAlloc(size);
        return _malloc(size);
      }
      Module["getMemory"] = getMemory;
      function Pointer_stringify(ptr, length) {
        if (length === 0 || !ptr) return "";
        var hasUtf = 0;
        var t;
        var i2 = 0;
        while (1) {
          t = HEAPU8[ptr + i2 >> 0];
          hasUtf |= t;
          if (t == 0 && !length) break;
          i2++;
          if (length && i2 == length) break;
        }
        if (!length) length = i2;
        var ret = "";
        if (hasUtf < 128) {
          var MAX_CHUNK = 1024;
          var curr;
          while (length > 0) {
            curr = String.fromCharCode.apply(String, HEAPU8.subarray(ptr, ptr + Math.min(length, MAX_CHUNK)));
            ret = ret ? ret + curr : curr;
            ptr += MAX_CHUNK;
            length -= MAX_CHUNK;
          }
          return ret;
        }
        return Module["UTF8ToString"](ptr);
      }
      Module["Pointer_stringify"] = Pointer_stringify;
      function AsciiToString(ptr) {
        var str = "";
        while (1) {
          var ch = HEAP8[ptr++ >> 0];
          if (!ch) return str;
          str += String.fromCharCode(ch);
        }
      }
      Module["AsciiToString"] = AsciiToString;
      function stringToAscii(str, outPtr) {
        return writeAsciiToMemory(str, outPtr, false);
      }
      Module["stringToAscii"] = stringToAscii;
      var UTF8Decoder = typeof TextDecoder !== "undefined" ? new TextDecoder("utf8") : void 0;
      function UTF8ArrayToString(u8Array, idx) {
        var endPtr = idx;
        while (u8Array[endPtr]) ++endPtr;
        if (endPtr - idx > 16 && u8Array.subarray && UTF8Decoder) {
          return UTF8Decoder.decode(u8Array.subarray(idx, endPtr));
        } else {
          var u0, u1, u2, u3, u4, u5;
          var str = "";
          while (1) {
            u0 = u8Array[idx++];
            if (!u0) return str;
            if (!(u0 & 128)) {
              str += String.fromCharCode(u0);
              continue;
            }
            u1 = u8Array[idx++] & 63;
            if ((u0 & 224) == 192) {
              str += String.fromCharCode((u0 & 31) << 6 | u1);
              continue;
            }
            u2 = u8Array[idx++] & 63;
            if ((u0 & 240) == 224) {
              u0 = (u0 & 15) << 12 | u1 << 6 | u2;
            } else {
              u3 = u8Array[idx++] & 63;
              if ((u0 & 248) == 240) {
                u0 = (u0 & 7) << 18 | u1 << 12 | u2 << 6 | u3;
              } else {
                u4 = u8Array[idx++] & 63;
                if ((u0 & 252) == 248) {
                  u0 = (u0 & 3) << 24 | u1 << 18 | u2 << 12 | u3 << 6 | u4;
                } else {
                  u5 = u8Array[idx++] & 63;
                  u0 = (u0 & 1) << 30 | u1 << 24 | u2 << 18 | u3 << 12 | u4 << 6 | u5;
                }
              }
            }
            if (u0 < 65536) {
              str += String.fromCharCode(u0);
            } else {
              var ch = u0 - 65536;
              str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);
            }
          }
        }
      }
      Module["UTF8ArrayToString"] = UTF8ArrayToString;
      function UTF8ToString(ptr) {
        return UTF8ArrayToString(HEAPU8, ptr);
      }
      Module["UTF8ToString"] = UTF8ToString;
      function stringToUTF8Array(str, outU8Array, outIdx, maxBytesToWrite) {
        if (!(maxBytesToWrite > 0)) return 0;
        var startIdx = outIdx;
        var endIdx = outIdx + maxBytesToWrite - 1;
        for (var i2 = 0; i2 < str.length; ++i2) {
          var u = str.charCodeAt(i2);
          if (u >= 55296 && u <= 57343) u = 65536 + ((u & 1023) << 10) | str.charCodeAt(++i2) & 1023;
          if (u <= 127) {
            if (outIdx >= endIdx) break;
            outU8Array[outIdx++] = u;
          } else if (u <= 2047) {
            if (outIdx + 1 >= endIdx) break;
            outU8Array[outIdx++] = 192 | u >> 6;
            outU8Array[outIdx++] = 128 | u & 63;
          } else if (u <= 65535) {
            if (outIdx + 2 >= endIdx) break;
            outU8Array[outIdx++] = 224 | u >> 12;
            outU8Array[outIdx++] = 128 | u >> 6 & 63;
            outU8Array[outIdx++] = 128 | u & 63;
          } else if (u <= 2097151) {
            if (outIdx + 3 >= endIdx) break;
            outU8Array[outIdx++] = 240 | u >> 18;
            outU8Array[outIdx++] = 128 | u >> 12 & 63;
            outU8Array[outIdx++] = 128 | u >> 6 & 63;
            outU8Array[outIdx++] = 128 | u & 63;
          } else if (u <= 67108863) {
            if (outIdx + 4 >= endIdx) break;
            outU8Array[outIdx++] = 248 | u >> 24;
            outU8Array[outIdx++] = 128 | u >> 18 & 63;
            outU8Array[outIdx++] = 128 | u >> 12 & 63;
            outU8Array[outIdx++] = 128 | u >> 6 & 63;
            outU8Array[outIdx++] = 128 | u & 63;
          } else {
            if (outIdx + 5 >= endIdx) break;
            outU8Array[outIdx++] = 252 | u >> 30;
            outU8Array[outIdx++] = 128 | u >> 24 & 63;
            outU8Array[outIdx++] = 128 | u >> 18 & 63;
            outU8Array[outIdx++] = 128 | u >> 12 & 63;
            outU8Array[outIdx++] = 128 | u >> 6 & 63;
            outU8Array[outIdx++] = 128 | u & 63;
          }
        }
        outU8Array[outIdx] = 0;
        return outIdx - startIdx;
      }
      Module["stringToUTF8Array"] = stringToUTF8Array;
      function stringToUTF8(str, outPtr, maxBytesToWrite) {
        return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);
      }
      Module["stringToUTF8"] = stringToUTF8;
      function lengthBytesUTF8(str) {
        var len = 0;
        for (var i2 = 0; i2 < str.length; ++i2) {
          var u = str.charCodeAt(i2);
          if (u >= 55296 && u <= 57343) u = 65536 + ((u & 1023) << 10) | str.charCodeAt(++i2) & 1023;
          if (u <= 127) {
            ++len;
          } else if (u <= 2047) {
            len += 2;
          } else if (u <= 65535) {
            len += 3;
          } else if (u <= 2097151) {
            len += 4;
          } else if (u <= 67108863) {
            len += 5;
          } else {
            len += 6;
          }
        }
        return len;
      }
      Module["lengthBytesUTF8"] = lengthBytesUTF8;
      var UTF16Decoder = typeof TextDecoder !== "undefined" ? new TextDecoder("utf-16le") : void 0;
      function demangle(func2) {
        var hasLibcxxabi = !!Module["___cxa_demangle"];
        if (hasLibcxxabi) {
          try {
            var s = func2.substr(1);
            var len = lengthBytesUTF8(s) + 1;
            var buf = _malloc(len);
            stringToUTF8(s, buf, len);
            var status = _malloc(4);
            var ret = Module["___cxa_demangle"](buf, 0, 0, status);
            if (getValue(status, "i32") === 0 && ret) {
              return Pointer_stringify(ret);
            }
          } catch (e) {
          } finally {
            if (buf) _free(buf);
            if (status) _free(status);
            if (ret) _free(ret);
          }
          return func2;
        }
        Runtime.warnOnce("warning: build with  -s DEMANGLE_SUPPORT=1  to link in libcxxabi demangling");
        return func2;
      }
      function demangleAll(text) {
        return text.replace(/__Z[\w\d_]+/g, (function(x) {
          var y = demangle(x);
          return x === y ? x : x + " [" + y + "]";
        }));
      }
      function jsStackTrace() {
        var err = new Error();
        if (!err.stack) {
          try {
            throw new Error(0);
          } catch (e) {
            err = e;
          }
          if (!err.stack) {
            return "(no stack trace available)";
          }
        }
        return err.stack.toString();
      }
      function stackTrace() {
        var js = jsStackTrace();
        if (Module["extraStackTrace"]) js += "\n" + Module["extraStackTrace"]();
        return demangleAll(js);
      }
      Module["stackTrace"] = stackTrace;
      var HEAP;
      var buffer;
      var HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;
      function updateGlobalBufferViews() {
        Module["HEAP8"] = HEAP8 = new Int8Array(buffer);
        Module["HEAP16"] = HEAP16 = new Int16Array(buffer);
        Module["HEAP32"] = HEAP32 = new Int32Array(buffer);
        Module["HEAPU8"] = HEAPU8 = new Uint8Array(buffer);
        Module["HEAPU16"] = HEAPU16 = new Uint16Array(buffer);
        Module["HEAPU32"] = HEAPU32 = new Uint32Array(buffer);
        Module["HEAPF32"] = HEAPF32 = new Float32Array(buffer);
        Module["HEAPF64"] = HEAPF64 = new Float64Array(buffer);
      }
      var STATIC_BASE, STATICTOP, staticSealed;
      var STACK_BASE, STACKTOP, STACK_MAX;
      var DYNAMIC_BASE, DYNAMICTOP_PTR;
      STATIC_BASE = STATICTOP = STACK_BASE = STACKTOP = STACK_MAX = DYNAMIC_BASE = DYNAMICTOP_PTR = 0;
      staticSealed = false;
      function abortOnCannotGrowMemory() {
        abort("Cannot enlarge memory arrays. Either (1) compile with  -s TOTAL_MEMORY=X  with X higher than the current value " + TOTAL_MEMORY + ", (2) compile with  -s ALLOW_MEMORY_GROWTH=1  which adjusts the size at runtime but prevents some optimizations, (3) set Module.TOTAL_MEMORY to a higher value before the program runs, or if you want malloc to return NULL (0) instead of this abort, compile with  -s ABORTING_MALLOC=0 ");
      }
      function enlargeMemory() {
        abortOnCannotGrowMemory();
      }
      var TOTAL_STACK = Module["TOTAL_STACK"] || 5242880;
      var TOTAL_MEMORY = Module["TOTAL_MEMORY"] || 16777216;
      var totalMemory = 64 * 1024;
      while (totalMemory < TOTAL_MEMORY || totalMemory < 2 * TOTAL_STACK) {
        if (totalMemory < 16 * 1024 * 1024) {
          totalMemory *= 2;
        } else {
          totalMemory += 16 * 1024 * 1024;
        }
      }
      if (totalMemory !== TOTAL_MEMORY) {
        TOTAL_MEMORY = totalMemory;
      }
      if (Module["buffer"]) {
        buffer = Module["buffer"];
      } else {
        buffer = new ArrayBuffer(TOTAL_MEMORY);
      }
      updateGlobalBufferViews();
      function getTotalMemory() {
        return TOTAL_MEMORY;
      }
      HEAP32[0] = 1668509029;
      HEAP16[1] = 25459;
      if (HEAPU8[2] !== 115 || HEAPU8[3] !== 99) throw "Runtime error: expected the system to be little-endian!";
      Module["HEAP"] = HEAP;
      Module["buffer"] = buffer;
      Module["HEAP8"] = HEAP8;
      Module["HEAP16"] = HEAP16;
      Module["HEAP32"] = HEAP32;
      Module["HEAPU8"] = HEAPU8;
      Module["HEAPU16"] = HEAPU16;
      Module["HEAPU32"] = HEAPU32;
      Module["HEAPF32"] = HEAPF32;
      Module["HEAPF64"] = HEAPF64;
      function callRuntimeCallbacks(callbacks) {
        while (callbacks.length > 0) {
          var callback = callbacks.shift();
          if (typeof callback == "function") {
            callback();
            continue;
          }
          var func2 = callback.func;
          if (typeof func2 === "number") {
            if (callback.arg === void 0) {
              Runtime.dynCall("v", func2);
            } else {
              Runtime.dynCall("vi", func2, [callback.arg]);
            }
          } else {
            func2(callback.arg === void 0 ? null : callback.arg);
          }
        }
      }
      var __ATPRERUN__ = [];
      var __ATINIT__ = [];
      var __ATMAIN__ = [];
      var __ATEXIT__ = [];
      var __ATPOSTRUN__ = [];
      var runtimeInitialized = false;
      var runtimeExited = false;
      function preRun() {
        if (Module["preRun"]) {
          if (typeof Module["preRun"] == "function") Module["preRun"] = [Module["preRun"]];
          while (Module["preRun"].length) {
            addOnPreRun(Module["preRun"].shift());
          }
        }
        callRuntimeCallbacks(__ATPRERUN__);
      }
      function ensureInitRuntime() {
        if (runtimeInitialized) return;
        runtimeInitialized = true;
        callRuntimeCallbacks(__ATINIT__);
      }
      function preMain() {
        callRuntimeCallbacks(__ATMAIN__);
      }
      function exitRuntime() {
        callRuntimeCallbacks(__ATEXIT__);
        runtimeExited = true;
      }
      function postRun() {
        if (Module["postRun"]) {
          if (typeof Module["postRun"] == "function") Module["postRun"] = [Module["postRun"]];
          while (Module["postRun"].length) {
            addOnPostRun(Module["postRun"].shift());
          }
        }
        callRuntimeCallbacks(__ATPOSTRUN__);
      }
      function addOnPreRun(cb) {
        __ATPRERUN__.unshift(cb);
      }
      Module["addOnPreRun"] = addOnPreRun;
      function addOnInit(cb) {
        __ATINIT__.unshift(cb);
      }
      Module["addOnInit"] = addOnInit;
      function addOnPreMain(cb) {
        __ATMAIN__.unshift(cb);
      }
      Module["addOnPreMain"] = addOnPreMain;
      function addOnExit(cb) {
        __ATEXIT__.unshift(cb);
      }
      Module["addOnExit"] = addOnExit;
      function addOnPostRun(cb) {
        __ATPOSTRUN__.unshift(cb);
      }
      Module["addOnPostRun"] = addOnPostRun;
      function intArrayFromString(stringy, dontAddNull, length) {
        var len = length > 0 ? length : lengthBytesUTF8(stringy) + 1;
        var u8array = new Array(len);
        var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);
        if (dontAddNull) u8array.length = numBytesWritten;
        return u8array;
      }
      Module["intArrayFromString"] = intArrayFromString;
      function intArrayToString(array) {
        var ret = [];
        for (var i2 = 0; i2 < array.length; i2++) {
          var chr = array[i2];
          if (chr > 255) {
            chr &= 255;
          }
          ret.push(String.fromCharCode(chr));
        }
        return ret.join("");
      }
      Module["intArrayToString"] = intArrayToString;
      function writeStringToMemory(string, buffer2, dontAddNull) {
        Runtime.warnOnce("writeStringToMemory is deprecated and should not be called! Use stringToUTF8() instead!");
        var lastChar, end;
        if (dontAddNull) {
          end = buffer2 + lengthBytesUTF8(string);
          lastChar = HEAP8[end];
        }
        stringToUTF8(string, buffer2, Infinity);
        if (dontAddNull) HEAP8[end] = lastChar;
      }
      Module["writeStringToMemory"] = writeStringToMemory;
      function writeArrayToMemory(array, buffer2) {
        HEAP8.set(array, buffer2);
      }
      Module["writeArrayToMemory"] = writeArrayToMemory;
      function writeAsciiToMemory(str, buffer2, dontAddNull) {
        for (var i2 = 0; i2 < str.length; ++i2) {
          HEAP8[buffer2++ >> 0] = str.charCodeAt(i2);
        }
        if (!dontAddNull) HEAP8[buffer2 >> 0] = 0;
      }
      Module["writeAsciiToMemory"] = writeAsciiToMemory;
      if (!Math["imul"] || Math["imul"](4294967295, 5) !== -5) Math["imul"] = function imul(a, b) {
        var ah = a >>> 16;
        var al = a & 65535;
        var bh = b >>> 16;
        var bl = b & 65535;
        return al * bl + (ah * bl + al * bh << 16) | 0;
      };
      Math.imul = Math["imul"];
      if (!Math["clz32"]) Math["clz32"] = (function(x) {
        x = x >>> 0;
        for (var i2 = 0; i2 < 32; i2++) {
          if (x & 1 << 31 - i2) return i2;
        }
        return 32;
      });
      Math.clz32 = Math["clz32"];
      if (!Math["trunc"]) Math["trunc"] = (function(x) {
        return x < 0 ? Math.ceil(x) : Math.floor(x);
      });
      Math.trunc = Math["trunc"];
      var Math_abs = Math.abs;
      var Math_cos = Math.cos;
      var Math_sin = Math.sin;
      var Math_tan = Math.tan;
      var Math_acos = Math.acos;
      var Math_asin = Math.asin;
      var Math_atan = Math.atan;
      var Math_atan2 = Math.atan2;
      var Math_exp = Math.exp;
      var Math_log = Math.log;
      var Math_sqrt = Math.sqrt;
      var Math_ceil = Math.ceil;
      var Math_floor = Math.floor;
      var Math_pow = Math.pow;
      var Math_imul = Math.imul;
      var Math_fround = Math.fround;
      var Math_min = Math.min;
      var Math_clz32 = Math.clz32;
      var Math_trunc = Math.trunc;
      var runDependencies = 0;
      var runDependencyWatcher = null;
      var dependenciesFulfilled = null;
      function getUniqueRunDependency(id) {
        return id;
      }
      function addRunDependency(id) {
        runDependencies++;
        if (Module["monitorRunDependencies"]) {
          Module["monitorRunDependencies"](runDependencies);
        }
      }
      Module["addRunDependency"] = addRunDependency;
      function removeRunDependency(id) {
        runDependencies--;
        if (Module["monitorRunDependencies"]) {
          Module["monitorRunDependencies"](runDependencies);
        }
        if (runDependencies == 0) {
          if (runDependencyWatcher !== null) {
            clearInterval(runDependencyWatcher);
            runDependencyWatcher = null;
          }
          if (dependenciesFulfilled) {
            var callback = dependenciesFulfilled;
            dependenciesFulfilled = null;
            callback();
          }
        }
      }
      Module["removeRunDependency"] = removeRunDependency;
      Module["preloadedImages"] = {};
      Module["preloadedAudios"] = {};
      var ASM_CONSTS = [];
      STATIC_BASE = 8;
      STATICTOP = STATIC_BASE + 19136;
      __ATINIT__.push();
      allocate([0, 0, 0, 0, 0, 0, 240, 191, 0, 0, 0, 0, 0, 0, 240, 63, 0, 0, 0, 0, 0, 0, 240, 63, 0, 0, 0, 0, 0, 0, 240, 191, 0, 0, 0, 0, 0, 0, 240, 63, 0, 0, 0, 0, 0, 0, 240, 63, 0, 0, 0, 0, 0, 0, 240, 63, 0, 0, 0, 0, 0, 0, 240, 63, 0, 0, 0, 0, 0, 0, 240, 63, 0, 0, 0, 0, 0, 0, 240, 63, 0, 0, 0, 0, 0, 0, 240, 63, 0, 0, 0, 0, 0, 0, 240, 191, 0, 0, 0, 0, 0, 0, 240, 63, 1, 0, 0, 0, 1, 0, 0, 0, 255, 255, 255, 255, 1, 0, 0, 0, 1, 0, 0, 0, 255, 255, 255, 255, 3, 0, 0, 0, 2, 0, 0, 0, 65, 0, 0, 0, 2, 0, 0, 0, 12, 0, 0, 0, 49, 0, 0, 0, 1, 0, 0, 0, 4, 0, 0, 0, 255, 255, 255, 255, 2, 0, 0, 0, 3, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0, 4, 0, 0, 0, 2, 0, 0, 0, 1, 0, 0, 0, 4, 0, 0, 0, 3, 0, 0, 0, 3, 0, 0, 0, 4, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 4, 0, 0, 0, 3, 0, 0, 0, 2, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 34, 6, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 13, 0, 0, 0, 15, 0, 0, 0, 255, 255, 255, 255, 12, 0, 0, 0, 14, 0, 0, 0, 16, 0, 0, 0, 1, 0, 0, 0, 3, 0, 0, 0, 1, 0, 0, 0, 255, 255, 255, 255, 1, 0, 0, 0, 1, 0, 0, 0, 255, 255, 255, 255, 1, 0, 0, 0, 12, 0, 0, 0, 13, 0, 0, 0, 15, 0, 0, 0, 255, 255, 255, 255, 12, 0, 0, 0, 14, 0, 0, 0, 16, 0, 0, 0, 1, 0, 0, 0, 3, 0, 0, 0, 3, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 4, 0, 0, 0, 1, 0, 0, 0, 3, 0, 0, 0, 4, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 1, 0, 0, 0, 4, 0, 0, 0, 3, 0, 0, 0, 4, 0, 0, 0, 3, 0, 0, 0, 2, 0, 0, 0, 1, 0, 0, 0, 16, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 255, 255, 255, 255, 1, 0, 0, 0, 255, 255, 255, 255, 3, 0, 0, 0, 2, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 1, 0, 0, 0, 255, 255, 255, 255, 2, 0, 0, 0, 1, 0, 0, 0, 255, 255, 255, 255, 65, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 53, 8, 0, 0, 69, 8, 0, 0, 89, 8, 0, 0, 114, 8, 0, 0, 141, 8, 0, 0, 163, 8, 0, 0, 189, 8, 0, 0, 210, 8, 0, 0, 225, 8, 0, 0, 241, 8, 0, 0, 4, 9, 0, 0, 22, 9, 0, 0, 51, 9, 0, 0, 79, 9, 0, 0, 241, 8, 0, 0, 97, 9, 0, 0, 123, 9, 0, 0, 147, 9, 0, 0, 165, 9, 0, 0, 183, 9, 0, 0, 208, 9, 0, 0, 222, 9, 0, 0, 247, 9, 0, 0, 21, 10, 0, 0, 43, 10, 0, 0, 67, 10, 0, 0, 91, 10, 0, 0, 107, 10, 0, 0, 124, 10, 0, 0, 142, 10, 0, 0, 163, 10, 0, 0, 190, 10, 0, 0, 3, 0, 0, 0, 1, 0, 0, 0, 0, 0, 128, 63, 141, 12, 0, 0, 144, 12, 0, 0, 146, 12, 0, 0, 149, 12, 0, 0, 151, 12, 0, 0, 155, 12, 0, 0, 144, 1, 0, 0, 252, 64, 0, 0, 216, 2, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 148, 66, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 76, 3, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 2, 0, 0, 0, 156, 70, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 192, 3, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 2, 0, 0, 0, 164, 70, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 192, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 68, 71, 69, 66, 65, 75, 0, 68, 71, 69, 66, 65, 76, 0, 68, 71, 69, 69, 86, 32, 0, 68, 71, 69, 72, 68, 50, 0, 68, 71, 69, 72, 82, 68, 0, 68, 71, 69, 77, 77, 32, 0, 68, 71, 69, 77, 86, 32, 0, 68, 71, 69, 82, 32, 32, 0, 68, 72, 83, 69, 81, 82, 0, 70, 117, 108, 108, 0, 77, 97, 120, 0, 78, 79, 32, 84, 82, 65, 78, 83, 80, 79, 83, 69, 0, 85, 78, 73, 84, 0, 78, 79, 78, 45, 85, 78, 73, 84, 0, 78, 111, 32, 84, 114, 97, 110, 115, 112, 111, 115, 101, 0, 82, 73, 71, 72, 84, 0, 40, 47, 47, 2, 32, 87, 65, 82, 78, 73, 78, 71, 46, 32, 84, 104, 101, 32, 118, 97, 108, 117, 101, 32, 69, 77, 73, 78, 32, 109, 97, 121, 32, 98, 101, 32, 105, 110, 99, 111, 114, 114, 101, 99, 116, 58, 45, 2, 44, 2, 32, 32, 69, 77, 73, 78, 32, 61, 32, 2, 44, 105, 56, 44, 47, 2, 32, 73, 102, 44, 32, 97, 102, 116, 101, 114, 32, 105, 110, 115, 112, 101, 99, 116, 105, 111, 110, 44, 32, 116, 104, 101, 32, 118, 97, 108, 117, 101, 32, 69, 77, 73, 78, 32, 108, 111, 111, 107, 115, 2, 44, 2, 32, 97, 99, 99, 101, 112, 116, 97, 98, 108, 101, 32, 112, 108, 101, 97, 115, 101, 32, 99, 111, 109, 109, 101, 110, 116, 32, 111, 117, 116, 32, 2, 44, 47, 2, 32, 116, 104, 101, 32, 73, 70, 32, 98, 108, 111, 99, 107, 32, 97, 115, 32, 109, 97, 114, 107, 101, 100, 32, 119, 105, 116, 104, 105, 110, 32, 116, 104, 101, 32, 99, 111, 100, 101, 32, 111, 102, 32, 114, 111, 117, 116, 105, 110, 101, 2, 44, 2, 32, 68, 76, 65, 77, 67, 50, 44, 2, 44, 47, 2, 32, 111, 116, 104, 101, 114, 119, 105, 115, 101, 32, 115, 117, 112, 112, 108, 121, 32, 69, 77, 73, 78, 32, 101, 120, 112, 108, 105, 99, 105, 116, 108, 121, 46, 2, 44, 47, 41, 0, 77, 0, 79, 0, 73, 0, 68, 76, 65, 81, 82, 48, 0, 68, 76, 65, 81, 82, 51, 0, 83, 86, 0, 68, 76, 65, 81, 82, 52, 0, 83, 65, 70, 69, 32, 77, 73, 78, 73, 77, 85, 77, 0, 80, 82, 69, 67, 73, 83, 73, 79, 78, 0, 65, 76, 76, 0, 82, 105, 103, 104, 116, 0, 85, 110, 105, 116, 0, 70, 0, 84, 114, 97, 110, 115, 112, 111, 115, 101, 0, 85, 112, 112, 101, 114, 0, 78, 111, 110, 45, 117, 110, 105, 116, 0, 76, 111, 119, 101, 114, 0, 69, 0, 71, 0, 72, 0, 81, 0, 90, 0, 68, 76, 65, 83, 67, 76, 0, 80, 0, 68, 79, 82, 71, 50, 82, 0, 68, 79, 82, 71, 72, 82, 0, 68, 79, 82, 71, 81, 82, 0, 32, 0, 76, 101, 102, 116, 0, 78, 111, 32, 116, 114, 97, 110, 115, 112, 111, 115, 101, 0, 68, 79, 82, 77, 50, 82, 0, 68, 79, 82, 77, 72, 82, 0, 68, 79, 82, 77, 81, 82, 0, 70, 111, 114, 119, 97, 114, 100, 0, 67, 111, 108, 117, 109, 110, 119, 105, 115, 101, 0, 66, 0, 65, 0, 83, 0, 68, 84, 82, 69, 86, 67, 0, 83, 97, 102, 101, 32, 109, 105, 110, 105, 109, 117, 109, 0, 80, 114, 101, 99, 105, 115, 105, 111, 110, 0, 86, 0, 68, 84, 82, 69, 88, 67, 0, 82, 0, 68, 84, 82, 77, 77, 32, 0, 85, 0, 76, 0, 78, 0, 84, 0, 67, 0, 68, 84, 82, 77, 86, 32, 0, 101, 110, 100, 102, 105, 108, 101, 0, 101, 114, 114, 111, 114, 32, 105, 110, 32, 102, 111, 114, 109, 97, 116, 0, 105, 108, 108, 101, 103, 97, 108, 32, 117, 110, 105, 116, 32, 110, 117, 109, 98, 101, 114, 0, 102, 111, 114, 109, 97, 116, 116, 101, 100, 32, 105, 111, 32, 110, 111, 116, 32, 97, 108, 108, 111, 119, 101, 100, 0, 117, 110, 102, 111, 114, 109, 97, 116, 116, 101, 100, 32, 105, 111, 32, 110, 111, 116, 32, 97, 108, 108, 111, 119, 101, 100, 0, 100, 105, 114, 101, 99, 116, 32, 105, 111, 32, 110, 111, 116, 32, 97, 108, 108, 111, 119, 101, 100, 0, 115, 101, 113, 117, 101, 110, 116, 105, 97, 108, 32, 105, 111, 32, 110, 111, 116, 32, 97, 108, 108, 111, 119, 101, 100, 0, 99, 97, 110, 39, 116, 32, 98, 97, 99, 107, 115, 112, 97, 99, 101, 32, 102, 105, 108, 101, 0, 110, 117, 108, 108, 32, 102, 105, 108, 101, 32, 110, 97, 109, 101, 0, 99, 97, 110, 39, 116, 32, 115, 116, 97, 116, 32, 102, 105, 108, 101, 0, 117, 110, 105, 116, 32, 110, 111, 116, 32, 99, 111, 110, 110, 101, 99, 116, 101, 100, 0, 111, 102, 102, 32, 101, 110, 100, 32, 111, 102, 32, 114, 101, 99, 111, 114, 100, 0, 116, 114, 117, 110, 99, 97, 116, 105, 111, 110, 32, 102, 97, 105, 108, 101, 100, 32, 105, 110, 32, 101, 110, 100, 102, 105, 108, 101, 0, 105, 110, 99, 111, 109, 112, 114, 101, 104, 101, 110, 115, 105, 98, 108, 101, 32, 108, 105, 115, 116, 32, 105, 110, 112, 117, 116, 0, 111, 117, 116, 32, 111, 102, 32, 102, 114, 101, 101, 32, 115, 112, 97, 99, 101, 0, 114, 101, 97, 100, 32, 117, 110, 101, 120, 112, 101, 99, 116, 101, 100, 32, 99, 104, 97, 114, 97, 99, 116, 101, 114, 0, 98, 97, 100, 32, 108, 111, 103, 105, 99, 97, 108, 32, 105, 110, 112, 117, 116, 32, 102, 105, 101, 108, 100, 0, 98, 97, 100, 32, 118, 97, 114, 105, 97, 98, 108, 101, 32, 116, 121, 112, 101, 0, 98, 97, 100, 32, 110, 97, 109, 101, 108, 105, 115, 116, 32, 110, 97, 109, 101, 0, 118, 97, 114, 105, 97, 98, 108, 101, 32, 110, 111, 116, 32, 105, 110, 32, 110, 97, 109, 101, 108, 105, 115, 116, 0, 110, 111, 32, 101, 110, 100, 32, 114, 101, 99, 111, 114, 100, 0, 118, 97, 114, 105, 97, 98, 108, 101, 32, 99, 111, 117, 110, 116, 32, 105, 110, 99, 111, 114, 114, 101, 99, 116, 0, 115, 117, 98, 115, 99, 114, 105, 112, 116, 32, 102, 111, 114, 32, 115, 99, 97, 108, 97, 114, 32, 118, 97, 114, 105, 97, 98, 108, 101, 0, 105, 110, 118, 97, 108, 105, 100, 32, 97, 114, 114, 97, 121, 32, 115, 101, 99, 116, 105, 111, 110, 0, 115, 117, 98, 115, 116, 114, 105, 110, 103, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 0, 115, 117, 98, 115, 99, 114, 105, 112, 116, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 0, 99, 97, 110, 39, 116, 32, 114, 101, 97, 100, 32, 102, 105, 108, 101, 0, 99, 97, 110, 39, 116, 32, 119, 114, 105, 116, 101, 32, 102, 105, 108, 101, 0, 39, 110, 101, 119, 39, 32, 102, 105, 108, 101, 32, 101, 120, 105, 115, 116, 115, 0, 99, 97, 110, 39, 116, 32, 97, 112, 112, 101, 110, 100, 32, 116, 111, 32, 102, 105, 108, 101, 0, 110, 111, 110, 45, 112, 111, 115, 105, 116, 105, 118, 101, 32, 114, 101, 99, 111, 114, 100, 32, 110, 117, 109, 98, 101, 114, 0, 110, 109, 76, 98, 117, 102, 32, 111, 118, 101, 114, 102, 108, 111, 119, 0, 37, 115, 58, 32, 105, 108, 108, 101, 103, 97, 108, 32, 101, 114, 114, 111, 114, 32, 110, 117, 109, 98, 101, 114, 32, 37, 100, 10, 0, 37, 115, 58, 32, 101, 110, 100, 32, 111, 102, 32, 102, 105, 108, 101, 10, 0, 37, 115, 58, 32, 37, 115, 10, 0, 97, 112, 112, 97, 114, 101, 110, 116, 32, 115, 116, 97, 116, 101, 58, 32, 117, 110, 105, 116, 32, 37, 100, 32, 0, 110, 97, 109, 101, 100, 32, 37, 115, 10, 0, 40, 117, 110, 110, 97, 109, 101, 100, 41, 10, 0, 97, 112, 112, 97, 114, 101, 110, 116, 32, 115, 116, 97, 116, 101, 58, 32, 105, 110, 116, 101, 114, 110, 97, 108, 32, 73, 47, 79, 10, 0, 108, 97, 115, 116, 32, 102, 111, 114, 109, 97, 116, 58, 32, 37, 115, 10, 0, 114, 101, 97, 100, 105, 110, 103, 0, 119, 114, 105, 116, 105, 110, 103, 0, 115, 101, 113, 117, 101, 110, 116, 105, 97, 108, 0, 100, 105, 114, 101, 99, 116, 0, 102, 111, 114, 109, 97, 116, 116, 101, 100, 0, 117, 110, 102, 111, 114, 109, 97, 116, 116, 101, 100, 0, 101, 120, 116, 101, 114, 110, 97, 108, 0, 105, 110, 116, 101, 114, 110, 97, 108, 0, 108, 97, 116, 101, 108, 121, 32, 37, 115, 32, 37, 115, 32, 37, 115, 32, 37, 115, 0, 32, 73, 79, 0, 109, 97, 108, 108, 111, 99, 40, 37, 117, 41, 32, 102, 97, 105, 108, 117, 114, 101, 32, 105, 110, 32, 37, 115, 10, 0, 102, 111, 114, 109, 97, 116, 32, 116, 111, 111, 32, 99, 111, 109, 112, 108, 105, 99, 97, 116, 101, 100, 58, 10, 0, 98, 97, 100, 32, 115, 116, 114, 105, 110, 103, 0, 117, 110, 107, 110, 111, 119, 110, 32, 99, 111, 100, 101, 32, 105, 110, 32, 100, 111, 95, 102, 105, 111, 58, 32, 37, 100, 10, 37, 115, 10, 0, 100, 111, 95, 102, 105, 111, 0, 102, 109, 116, 0, 71, 69, 0, 84, 82, 70, 0, 81, 82, 70, 0, 82, 81, 70, 0, 76, 81, 70, 0, 81, 76, 70, 0, 72, 82, 68, 0, 66, 82, 68, 0, 84, 82, 73, 0, 80, 79, 0, 83, 89, 0, 84, 82, 68, 0, 71, 83, 84, 0, 72, 69, 0, 79, 82, 0, 81, 82, 0, 82, 81, 0, 76, 81, 0, 81, 76, 0, 72, 82, 0, 84, 82, 0, 66, 82, 0, 85, 78, 0, 71, 66, 0, 80, 66, 0, 76, 65, 0, 85, 85, 77, 0, 83, 84, 0, 69, 66, 90, 0, 114, 98, 0, 114, 0, 119, 98, 0, 119, 0, 114, 43, 98, 0, 114, 43, 0, 109, 97, 108, 108, 111, 99, 32, 102, 97, 105, 108, 117, 114, 101, 0, 111, 112, 101, 110, 0, 102, 111, 114, 116, 46, 37, 108, 100, 0, 110, 111, 32, 115, 112, 97, 99, 101, 0, 115, 0, 100, 0, 102, 0, 117, 0, 115, 95, 99, 97, 116, 0, 115, 102, 101, 0, 37, 115, 10, 0, 37, 35, 46, 42, 69, 0, 37, 43, 46, 50, 100, 0, 37, 35, 46, 42, 102, 0, 119, 95, 101, 100, 44, 32, 117, 110, 101, 120, 112, 101, 99, 116, 101, 100, 32, 99, 111, 100, 101, 58, 32, 37, 100, 10, 0, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 65, 66, 67, 68, 69, 70, 0, 108, 101, 102, 116, 32, 111, 102, 102, 0, 114, 101, 99, 101, 110, 100, 0, 119, 95, 110, 101, 100, 44, 32, 117, 110, 101, 120, 112, 101, 99, 116, 101, 100, 32, 99, 111, 100, 101, 58, 32, 37, 100, 10, 0, 115, 116, 97, 114, 116, 105, 111, 0, 119, 114, 105, 116, 101, 32, 115, 116, 97, 114, 116, 0, 42, 42, 32, 79, 110, 32, 101, 110, 116, 114, 121, 32, 116, 111, 32, 37, 54, 115, 44, 32, 112, 97, 114, 97, 109, 101, 116, 101, 114, 32, 110, 117, 109, 98, 101, 114, 32, 37, 50, 105, 32, 104, 97, 100, 32, 97, 110, 32, 105, 108, 108, 101, 103, 97, 108, 32, 118, 97, 108, 117, 101, 10, 0, 47, 112, 114, 111, 99, 47, 115, 101, 108, 102, 47, 102, 100, 47, 0, 17, 0, 10, 0, 17, 17, 17, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 0, 17, 0, 15, 10, 17, 17, 17, 3, 10, 7, 0, 1, 19, 9, 11, 11, 0, 0, 9, 6, 11, 0, 0, 11, 0, 6, 17, 0, 0, 0, 17, 17, 17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 0, 17, 0, 10, 10, 17, 17, 17, 0, 10, 0, 0, 2, 0, 9, 11, 0, 0, 0, 9, 0, 11, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 12, 0, 0, 0, 0, 9, 12, 0, 0, 0, 0, 0, 12, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 13, 0, 0, 0, 4, 13, 0, 0, 0, 0, 9, 14, 0, 0, 0, 0, 0, 14, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 15, 0, 0, 0, 0, 9, 16, 0, 0, 0, 0, 0, 16, 0, 0, 16, 0, 0, 18, 0, 0, 0, 18, 18, 18, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 18, 0, 0, 0, 18, 18, 18, 0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 10, 0, 0, 0, 0, 9, 11, 0, 0, 0, 0, 0, 11, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 12, 0, 0, 0, 0, 9, 12, 0, 0, 0, 0, 0, 12, 0, 0, 12, 0, 0, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 65, 66, 67, 68, 69, 70, 45, 43, 32, 32, 32, 48, 88, 48, 120, 0, 40, 110, 117, 108, 108, 41, 0, 45, 48, 88, 43, 48, 88, 32, 48, 88, 45, 48, 120, 43, 48, 120, 32, 48, 120, 0, 105, 110, 102, 0, 73, 78, 70, 0, 110, 97, 110, 0, 78, 65, 78, 0, 46, 0, 84, 33, 34, 25, 13, 1, 2, 3, 17, 75, 28, 12, 16, 4, 11, 29, 18, 30, 39, 104, 110, 111, 112, 113, 98, 32, 5, 6, 15, 19, 20, 21, 26, 8, 22, 7, 40, 36, 23, 24, 9, 10, 14, 27, 31, 37, 35, 131, 130, 125, 38, 42, 43, 60, 61, 62, 63, 67, 71, 74, 77, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 114, 115, 116, 121, 122, 123, 124, 0, 73, 108, 108, 101, 103, 97, 108, 32, 98, 121, 116, 101, 32, 115, 101, 113, 117, 101, 110, 99, 101, 0, 68, 111, 109, 97, 105, 110, 32, 101, 114, 114, 111, 114, 0, 82, 101, 115, 117, 108, 116, 32, 110, 111, 116, 32, 114, 101, 112, 114, 101, 115, 101, 110, 116, 97, 98, 108, 101, 0, 78, 111, 116, 32, 97, 32, 116, 116, 121, 0, 80, 101, 114, 109, 105, 115, 115, 105, 111, 110, 32, 100, 101, 110, 105, 101, 100, 0, 79, 112, 101, 114, 97, 116, 105, 111, 110, 32, 110, 111, 116, 32, 112, 101, 114, 109, 105, 116, 116, 101, 100, 0, 78, 111, 32, 115, 117, 99, 104, 32, 102, 105, 108, 101, 32, 111, 114, 32, 100, 105, 114, 101, 99, 116, 111, 114, 121, 0, 78, 111, 32, 115, 117, 99, 104, 32, 112, 114, 111, 99, 101, 115, 115, 0, 70, 105, 108, 101, 32, 101, 120, 105, 115, 116, 115, 0, 86, 97, 108, 117, 101, 32, 116, 111, 111, 32, 108, 97, 114, 103, 101, 32, 102, 111, 114, 32, 100, 97, 116, 97, 32, 116, 121, 112, 101, 0, 78, 111, 32, 115, 112, 97, 99, 101, 32, 108, 101, 102, 116, 32, 111, 110, 32, 100, 101, 118, 105, 99, 101, 0, 79, 117, 116, 32, 111, 102, 32, 109, 101, 109, 111, 114, 121, 0, 82, 101, 115, 111, 117, 114, 99, 101, 32, 98, 117, 115, 121, 0, 73, 110, 116, 101, 114, 114, 117, 112, 116, 101, 100, 32, 115, 121, 115, 116, 101, 109, 32, 99, 97, 108, 108, 0, 82, 101, 115, 111, 117, 114, 99, 101, 32, 116, 101, 109, 112, 111, 114, 97, 114, 105, 108, 121, 32, 117, 110, 97, 118, 97, 105, 108, 97, 98, 108, 101, 0, 73, 110, 118, 97, 108, 105, 100, 32, 115, 101, 101, 107, 0, 67, 114, 111, 115, 115, 45, 100, 101, 118, 105, 99, 101, 32, 108, 105, 110, 107, 0, 82, 101, 97, 100, 45, 111, 110, 108, 121, 32, 102, 105, 108, 101, 32, 115, 121, 115, 116, 101, 109, 0, 68, 105, 114, 101, 99, 116, 111, 114, 121, 32, 110, 111, 116, 32, 101, 109, 112, 116, 121, 0, 67, 111, 110, 110, 101, 99, 116, 105, 111, 110, 32, 114, 101, 115, 101, 116, 32, 98, 121, 32, 112, 101, 101, 114, 0, 79, 112, 101, 114, 97, 116, 105, 111, 110, 32, 116, 105, 109, 101, 100, 32, 111, 117, 116, 0, 67, 111, 110, 110, 101, 99, 116, 105, 111, 110, 32, 114, 101, 102, 117, 115, 101, 100, 0, 72, 111, 115, 116, 32, 105, 115, 32, 100, 111, 119, 110, 0, 72, 111, 115, 116, 32, 105, 115, 32, 117, 110, 114, 101, 97, 99, 104, 97, 98, 108, 101, 0, 65, 100, 100, 114, 101, 115, 115, 32, 105, 110, 32, 117, 115, 101, 0, 66, 114, 111, 107, 101, 110, 32, 112, 105, 112, 101, 0, 73, 47, 79, 32, 101, 114, 114, 111, 114, 0, 78, 111, 32, 115, 117, 99, 104, 32, 100, 101, 118, 105, 99, 101, 32, 111, 114, 32, 97, 100, 100, 114, 101, 115, 115, 0, 66, 108, 111, 99, 107, 32, 100, 101, 118, 105, 99, 101, 32, 114, 101, 113, 117, 105, 114, 101, 100, 0, 78, 111, 32, 115, 117, 99, 104, 32, 100, 101, 118, 105, 99, 101, 0, 78, 111, 116, 32, 97, 32, 100, 105, 114, 101, 99, 116, 111, 114, 121, 0, 73, 115, 32, 97, 32, 100, 105, 114, 101, 99, 116, 111, 114, 121, 0, 84, 101, 120, 116, 32, 102, 105, 108, 101, 32, 98, 117, 115, 121, 0, 69, 120, 101, 99, 32, 102, 111, 114, 109, 97, 116, 32, 101, 114, 114, 111, 114, 0, 73, 110, 118, 97, 108, 105, 100, 32, 97, 114, 103, 117, 109, 101, 110, 116, 0, 65, 114, 103, 117, 109, 101, 110, 116, 32, 108, 105, 115, 116, 32, 116, 111, 111, 32, 108, 111, 110, 103, 0, 83, 121, 109, 98, 111, 108, 105, 99, 32, 108, 105, 110, 107, 32, 108, 111, 111, 112, 0, 70, 105, 108, 101, 110, 97, 109, 101, 32, 116, 111, 111, 32, 108, 111, 110, 103, 0, 84, 111, 111, 32, 109, 97, 110, 121, 32, 111, 112, 101, 110, 32, 102, 105, 108, 101, 115, 32, 105, 110, 32, 115, 121, 115, 116, 101, 109, 0, 78, 111, 32, 102, 105, 108, 101, 32, 100, 101, 115, 99, 114, 105, 112, 116, 111, 114, 115, 32, 97, 118, 97, 105, 108, 97, 98, 108, 101, 0, 66, 97, 100, 32, 102, 105, 108, 101, 32, 100, 101, 115, 99, 114, 105, 112, 116, 111, 114, 0, 78, 111, 32, 99, 104, 105, 108, 100, 32, 112, 114, 111, 99, 101, 115, 115, 0, 66, 97, 100, 32, 97, 100, 100, 114, 101, 115, 115, 0, 70, 105, 108, 101, 32, 116, 111, 111, 32, 108, 97, 114, 103, 101, 0, 84, 111, 111, 32, 109, 97, 110, 121, 32, 108, 105, 110, 107, 115, 0, 78, 111, 32, 108, 111, 99, 107, 115, 32, 97, 118, 97, 105, 108, 97, 98, 108, 101, 0, 82, 101, 115, 111, 117, 114, 99, 101, 32, 100, 101, 97, 100, 108, 111, 99, 107, 32, 119, 111, 117, 108, 100, 32, 111, 99, 99, 117, 114, 0, 83, 116, 97, 116, 101, 32, 110, 111, 116, 32, 114, 101, 99, 111, 118, 101, 114, 97, 98, 108, 101, 0, 80, 114, 101, 118, 105, 111, 117, 115, 32, 111, 119, 110, 101, 114, 32, 100, 105, 101, 100, 0, 79, 112, 101, 114, 97, 116, 105, 111, 110, 32, 99, 97, 110, 99, 101, 108, 101, 100, 0, 70, 117, 110, 99, 116, 105, 111, 110, 32, 110, 111, 116, 32, 105, 109, 112, 108, 101, 109, 101, 110, 116, 101, 100, 0, 78, 111, 32, 109, 101, 115, 115, 97, 103, 101, 32, 111, 102, 32, 100, 101, 115, 105, 114, 101, 100, 32, 116, 121, 112, 101, 0, 73, 100, 101, 110, 116, 105, 102, 105, 101, 114, 32, 114, 101, 109, 111, 118, 101, 100, 0, 68, 101, 118, 105, 99, 101, 32, 110, 111, 116, 32, 97, 32, 115, 116, 114, 101, 97, 109, 0, 78, 111, 32, 100, 97, 116, 97, 32, 97, 118, 97, 105, 108, 97, 98, 108, 101, 0, 68, 101, 118, 105, 99, 101, 32, 116, 105, 109, 101, 111, 117, 116, 0, 79, 117, 116, 32, 111, 102, 32, 115, 116, 114, 101, 97, 109, 115, 32, 114, 101, 115, 111, 117, 114, 99, 101, 115, 0, 76, 105, 110, 107, 32, 104, 97, 115, 32, 98, 101, 101, 110, 32, 115, 101, 118, 101, 114, 101, 100, 0, 80, 114, 111, 116, 111, 99, 111, 108, 32, 101, 114, 114, 111, 114, 0, 66, 97, 100, 32, 109, 101, 115, 115, 97, 103, 101, 0, 70, 105, 108, 101, 32, 100, 101, 115, 99, 114, 105, 112, 116, 111, 114, 32, 105, 110, 32, 98, 97, 100, 32, 115, 116, 97, 116, 101, 0, 78, 111, 116, 32, 97, 32, 115, 111, 99, 107, 101, 116, 0, 68, 101, 115, 116, 105, 110, 97, 116, 105, 111, 110, 32, 97, 100, 100, 114, 101, 115, 115, 32, 114, 101, 113, 117, 105, 114, 101, 100, 0, 77, 101, 115, 115, 97, 103, 101, 32, 116, 111, 111, 32, 108, 97, 114, 103, 101, 0, 80, 114, 111, 116, 111, 99, 111, 108, 32, 119, 114, 111, 110, 103, 32, 116, 121, 112, 101, 32, 102, 111, 114, 32, 115, 111, 99, 107, 101, 116, 0, 80, 114, 111, 116, 111, 99, 111, 108, 32, 110, 111, 116, 32, 97, 118, 97, 105, 108, 97, 98, 108, 101, 0, 80, 114, 111, 116, 111, 99, 111, 108, 32, 110, 111, 116, 32, 115, 117, 112, 112, 111, 114, 116, 101, 100, 0, 83, 111, 99, 107, 101, 116, 32, 116, 121, 112, 101, 32, 110, 111, 116, 32, 115, 117, 112, 112, 111, 114, 116, 101, 100, 0, 78, 111, 116, 32, 115, 117, 112, 112, 111, 114, 116, 101, 100, 0, 80, 114, 111, 116, 111, 99, 111, 108, 32, 102, 97, 109, 105, 108, 121, 32, 110, 111, 116, 32, 115, 117, 112, 112, 111, 114, 116, 101, 100, 0, 65, 100, 100, 114, 101, 115, 115, 32, 102, 97, 109, 105, 108, 121, 32, 110, 111, 116, 32, 115, 117, 112, 112, 111, 114, 116, 101, 100, 32, 98, 121, 32, 112, 114, 111, 116, 111, 99, 111, 108, 0, 65, 100, 100, 114, 101, 115, 115, 32, 110, 111, 116, 32, 97, 118, 97, 105, 108, 97, 98, 108, 101, 0, 78, 101, 116, 119, 111, 114, 107, 32, 105, 115, 32, 100, 111, 119, 110, 0, 78, 101, 116, 119, 111, 114, 107, 32, 117, 110, 114, 101, 97, 99, 104, 97, 98, 108, 101, 0, 67, 111, 110, 110, 101, 99, 116, 105, 111, 110, 32, 114, 101, 115, 101, 116, 32, 98, 121, 32, 110, 101, 116, 119, 111, 114, 107, 0, 67, 111, 110, 110, 101, 99, 116, 105, 111, 110, 32, 97, 98, 111, 114, 116, 101, 100, 0, 78, 111, 32, 98, 117, 102, 102, 101, 114, 32, 115, 112, 97, 99, 101, 32, 97, 118, 97, 105, 108, 97, 98, 108, 101, 0, 83, 111, 99, 107, 101, 116, 32, 105, 115, 32, 99, 111, 110, 110, 101, 99, 116, 101, 100, 0, 83, 111, 99, 107, 101, 116, 32, 110, 111, 116, 32, 99, 111, 110, 110, 101, 99, 116, 101, 100, 0, 67, 97, 110, 110, 111, 116, 32, 115, 101, 110, 100, 32, 97, 102, 116, 101, 114, 32, 115, 111, 99, 107, 101, 116, 32, 115, 104, 117, 116, 100, 111, 119, 110, 0, 79, 112, 101, 114, 97, 116, 105, 111, 110, 32, 97, 108, 114, 101, 97, 100, 121, 32, 105, 110, 32, 112, 114, 111, 103, 114, 101, 115, 115, 0, 79, 112, 101, 114, 97, 116, 105, 111, 110, 32, 105, 110, 32, 112, 114, 111, 103, 114, 101, 115, 115, 0, 83, 116, 97, 108, 101, 32, 102, 105, 108, 101, 32, 104, 97, 110, 100, 108, 101, 0, 82, 101, 109, 111, 116, 101, 32, 73, 47, 79, 32, 101, 114, 114, 111, 114, 0, 81, 117, 111, 116, 97, 32, 101, 120, 99, 101, 101, 100, 101, 100, 0, 78, 111, 32, 109, 101, 100, 105, 117, 109, 32, 102, 111, 117, 110, 100, 0, 87, 114, 111, 110, 103, 32, 109, 101, 100, 105, 117, 109, 32, 116, 121, 112, 101, 0, 78, 111, 32, 101, 114, 114, 111, 114, 32, 105, 110, 102, 111, 114, 109, 97, 116, 105, 111, 110, 0, 0, 114, 119, 97, 0, 47, 116, 109, 112, 0, 47, 116, 109, 112, 47, 116, 37, 120, 45, 37, 120, 0, 119, 43, 0], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE);
      var tempDoublePtr = STATICTOP;
      STATICTOP += 16;
      Module["_i64Subtract"] = _i64Subtract;
      Module["_i64Add"] = _i64Add;
      var ERRNO_CODES = {
        EPERM: 1,
        ENOENT: 2,
        ESRCH: 3,
        EINTR: 4,
        EIO: 5,
        ENXIO: 6,
        E2BIG: 7,
        ENOEXEC: 8,
        EBADF: 9,
        ECHILD: 10,
        EAGAIN: 11,
        EWOULDBLOCK: 11,
        ENOMEM: 12,
        EACCES: 13,
        EFAULT: 14,
        ENOTBLK: 15,
        EBUSY: 16,
        EEXIST: 17,
        EXDEV: 18,
        ENODEV: 19,
        ENOTDIR: 20,
        EISDIR: 21,
        EINVAL: 22,
        ENFILE: 23,
        EMFILE: 24,
        ENOTTY: 25,
        ETXTBSY: 26,
        EFBIG: 27,
        ENOSPC: 28,
        ESPIPE: 29,
        EROFS: 30,
        EMLINK: 31,
        EPIPE: 32,
        EDOM: 33,
        ERANGE: 34,
        ENOMSG: 42,
        EIDRM: 43,
        ECHRNG: 44,
        EL2NSYNC: 45,
        EL3HLT: 46,
        EL3RST: 47,
        ELNRNG: 48,
        EUNATCH: 49,
        ENOCSI: 50,
        EL2HLT: 51,
        EDEADLK: 35,
        ENOLCK: 37,
        EBADE: 52,
        EBADR: 53,
        EXFULL: 54,
        ENOANO: 55,
        EBADRQC: 56,
        EBADSLT: 57,
        EDEADLOCK: 35,
        EBFONT: 59,
        ENOSTR: 60,
        ENODATA: 61,
        ETIME: 62,
        ENOSR: 63,
        ENONET: 64,
        ENOPKG: 65,
        EREMOTE: 66,
        ENOLINK: 67,
        EADV: 68,
        ESRMNT: 69,
        ECOMM: 70,
        EPROTO: 71,
        EMULTIHOP: 72,
        EDOTDOT: 73,
        EBADMSG: 74,
        ENOTUNIQ: 76,
        EBADFD: 77,
        EREMCHG: 78,
        ELIBACC: 79,
        ELIBBAD: 80,
        ELIBSCN: 81,
        ELIBMAX: 82,
        ELIBEXEC: 83,
        ENOSYS: 38,
        ENOTEMPTY: 39,
        ENAMETOOLONG: 36,
        ELOOP: 40,
        EOPNOTSUPP: 95,
        EPFNOSUPPORT: 96,
        ECONNRESET: 104,
        ENOBUFS: 105,
        EAFNOSUPPORT: 97,
        EPROTOTYPE: 91,
        ENOTSOCK: 88,
        ENOPROTOOPT: 92,
        ESHUTDOWN: 108,
        ECONNREFUSED: 111,
        EADDRINUSE: 98,
        ECONNABORTED: 103,
        ENETUNREACH: 101,
        ENETDOWN: 100,
        ETIMEDOUT: 110,
        EHOSTDOWN: 112,
        EHOSTUNREACH: 113,
        EINPROGRESS: 115,
        EALREADY: 114,
        EDESTADDRREQ: 89,
        EMSGSIZE: 90,
        EPROTONOSUPPORT: 93,
        ESOCKTNOSUPPORT: 94,
        EADDRNOTAVAIL: 99,
        ENETRESET: 102,
        EISCONN: 106,
        ENOTCONN: 107,
        ETOOMANYREFS: 109,
        EUSERS: 87,
        EDQUOT: 122,
        ESTALE: 116,
        ENOTSUP: 95,
        ENOMEDIUM: 123,
        EILSEQ: 84,
        EOVERFLOW: 75,
        ECANCELED: 125,
        ENOTRECOVERABLE: 131,
        EOWNERDEAD: 130,
        ESTRPIPE: 86
      };
      var ERRNO_MESSAGES = {
        0: "Success",
        1: "Not super-user",
        2: "No such file or directory",
        3: "No such process",
        4: "Interrupted system call",
        5: "I/O error",
        6: "No such device or address",
        7: "Arg list too long",
        8: "Exec format error",
        9: "Bad file number",
        10: "No children",
        11: "No more processes",
        12: "Not enough core",
        13: "Permission denied",
        14: "Bad address",
        15: "Block device required",
        16: "Mount device busy",
        17: "File exists",
        18: "Cross-device link",
        19: "No such device",
        20: "Not a directory",
        21: "Is a directory",
        22: "Invalid argument",
        23: "Too many open files in system",
        24: "Too many open files",
        25: "Not a typewriter",
        26: "Text file busy",
        27: "File too large",
        28: "No space left on device",
        29: "Illegal seek",
        30: "Read only file system",
        31: "Too many links",
        32: "Broken pipe",
        33: "Math arg out of domain of func",
        34: "Math result not representable",
        35: "File locking deadlock error",
        36: "File or path name too long",
        37: "No record locks available",
        38: "Function not implemented",
        39: "Directory not empty",
        40: "Too many symbolic links",
        42: "No message of desired type",
        43: "Identifier removed",
        44: "Channel number out of range",
        45: "Level 2 not synchronized",
        46: "Level 3 halted",
        47: "Level 3 reset",
        48: "Link number out of range",
        49: "Protocol driver not attached",
        50: "No CSI structure available",
        51: "Level 2 halted",
        52: "Invalid exchange",
        53: "Invalid request descriptor",
        54: "Exchange full",
        55: "No anode",
        56: "Invalid request code",
        57: "Invalid slot",
        59: "Bad font file fmt",
        60: "Device not a stream",
        61: "No data (for no delay io)",
        62: "Timer expired",
        63: "Out of streams resources",
        64: "Machine is not on the network",
        65: "Package not installed",
        66: "The object is remote",
        67: "The link has been severed",
        68: "Advertise error",
        69: "Srmount error",
        70: "Communication error on send",
        71: "Protocol error",
        72: "Multihop attempted",
        73: "Cross mount point (not really error)",
        74: "Trying to read unreadable message",
        75: "Value too large for defined data type",
        76: "Given log. name not unique",
        77: "f.d. invalid for this operation",
        78: "Remote address changed",
        79: "Can   access a needed shared lib",
        80: "Accessing a corrupted shared lib",
        81: ".lib section in a.out corrupted",
        82: "Attempting to link in too many libs",
        83: "Attempting to exec a shared library",
        84: "Illegal byte sequence",
        86: "Streams pipe error",
        87: "Too many users",
        88: "Socket operation on non-socket",
        89: "Destination address required",
        90: "Message too long",
        91: "Protocol wrong type for socket",
        92: "Protocol not available",
        93: "Unknown protocol",
        94: "Socket type not supported",
        95: "Not supported",
        96: "Protocol family not supported",
        97: "Address family not supported by protocol family",
        98: "Address already in use",
        99: "Address not available",
        100: "Network interface is not configured",
        101: "Network is unreachable",
        102: "Connection reset by network",
        103: "Connection aborted",
        104: "Connection reset by peer",
        105: "No buffer space available",
        106: "Socket is already connected",
        107: "Socket is not connected",
        108: "Can't send after socket shutdown",
        109: "Too many references",
        110: "Connection timed out",
        111: "Connection refused",
        112: "Host is down",
        113: "Host is unreachable",
        114: "Socket already connected",
        115: "Connection already in progress",
        116: "Stale file handle",
        122: "Quota exceeded",
        123: "No medium (in tape drive)",
        125: "Operation canceled",
        130: "Previous owner died",
        131: "State not recoverable"
      };
      function ___setErrNo(value) {
        if (Module["___errno_location"]) HEAP32[Module["___errno_location"]() >> 2] = value;
        return value;
      }
      var PATH = {
        splitPath: (function(filename) {
          var splitPathRe = /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
          return splitPathRe.exec(filename).slice(1);
        }),
        normalizeArray: (function(parts, allowAboveRoot) {
          var up = 0;
          for (var i2 = parts.length - 1; i2 >= 0; i2--) {
            var last = parts[i2];
            if (last === ".") {
              parts.splice(i2, 1);
            } else if (last === "..") {
              parts.splice(i2, 1);
              up++;
            } else if (up) {
              parts.splice(i2, 1);
              up--;
            }
          }
          if (allowAboveRoot) {
            for (; up--; up) {
              parts.unshift("..");
            }
          }
          return parts;
        }),
        normalize: (function(path2) {
          var isAbsolute = path2.charAt(0) === "/", trailingSlash = path2.substr(-1) === "/";
          path2 = PATH.normalizeArray(path2.split("/").filter((function(p) {
            return !!p;
          })), !isAbsolute).join("/");
          if (!path2 && !isAbsolute) {
            path2 = ".";
          }
          if (path2 && trailingSlash) {
            path2 += "/";
          }
          return (isAbsolute ? "/" : "") + path2;
        }),
        dirname: (function(path2) {
          var result = PATH.splitPath(path2), root = result[0], dir = result[1];
          if (!root && !dir) {
            return ".";
          }
          if (dir) {
            dir = dir.substr(0, dir.length - 1);
          }
          return root + dir;
        }),
        basename: (function(path2) {
          if (path2 === "/") return "/";
          var lastSlash = path2.lastIndexOf("/");
          if (lastSlash === -1) return path2;
          return path2.substr(lastSlash + 1);
        }),
        extname: (function(path2) {
          return PATH.splitPath(path2)[3];
        }),
        join: (function() {
          var paths = Array.prototype.slice.call(arguments, 0);
          return PATH.normalize(paths.join("/"));
        }),
        join2: (function(l, r) {
          return PATH.normalize(l + "/" + r);
        }),
        resolve: (function() {
          var resolvedPath = "", resolvedAbsolute = false;
          for (var i2 = arguments.length - 1; i2 >= -1 && !resolvedAbsolute; i2--) {
            var path2 = i2 >= 0 ? arguments[i2] : FS.cwd();
            if (typeof path2 !== "string") {
              throw new TypeError("Arguments to path.resolve must be strings");
            } else if (!path2) {
              return "";
            }
            resolvedPath = path2 + "/" + resolvedPath;
            resolvedAbsolute = path2.charAt(0) === "/";
          }
          resolvedPath = PATH.normalizeArray(resolvedPath.split("/").filter((function(p) {
            return !!p;
          })), !resolvedAbsolute).join("/");
          return (resolvedAbsolute ? "/" : "") + resolvedPath || ".";
        }),
        relative: (function(from, to) {
          from = PATH.resolve(from).substr(1);
          to = PATH.resolve(to).substr(1);
          function trim(arr) {
            var start = 0;
            for (; start < arr.length; start++) {
              if (arr[start] !== "") break;
            }
            var end = arr.length - 1;
            for (; end >= 0; end--) {
              if (arr[end] !== "") break;
            }
            if (start > end) return [];
            return arr.slice(start, end - start + 1);
          }
          var fromParts = trim(from.split("/"));
          var toParts = trim(to.split("/"));
          var length = Math.min(fromParts.length, toParts.length);
          var samePartsLength = length;
          for (var i2 = 0; i2 < length; i2++) {
            if (fromParts[i2] !== toParts[i2]) {
              samePartsLength = i2;
              break;
            }
          }
          var outputParts = [];
          for (var i2 = samePartsLength; i2 < fromParts.length; i2++) {
            outputParts.push("..");
          }
          outputParts = outputParts.concat(toParts.slice(samePartsLength));
          return outputParts.join("/");
        })
      };
      var TTY = {
        ttys: [],
        init: (function() {
        }),
        shutdown: (function() {
        }),
        register: (function(dev, ops) {
          TTY.ttys[dev] = {
            input: [],
            output: [],
            ops
          };
          FS.registerDevice(dev, TTY.stream_ops);
        }),
        stream_ops: {
          open: (function(stream) {
            var tty = TTY.ttys[stream.node.rdev];
            if (!tty) {
              throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
            }
            stream.tty = tty;
            stream.seekable = false;
          }),
          close: (function(stream) {
            stream.tty.ops.flush(stream.tty);
          }),
          flush: (function(stream) {
            stream.tty.ops.flush(stream.tty);
          }),
          read: (function(stream, buffer2, offset, length, pos) {
            if (!stream.tty || !stream.tty.ops.get_char) {
              throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
            }
            var bytesRead = 0;
            for (var i2 = 0; i2 < length; i2++) {
              var result;
              try {
                result = stream.tty.ops.get_char(stream.tty);
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES.EIO);
              }
              if (result === void 0 && bytesRead === 0) {
                throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
              }
              if (result === null || result === void 0) break;
              bytesRead++;
              buffer2[offset + i2] = result;
            }
            if (bytesRead) {
              stream.node.timestamp = Date.now();
            }
            return bytesRead;
          }),
          write: (function(stream, buffer2, offset, length, pos) {
            if (!stream.tty || !stream.tty.ops.put_char) {
              throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
            }
            for (var i2 = 0; i2 < length; i2++) {
              try {
                stream.tty.ops.put_char(stream.tty, buffer2[offset + i2]);
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES.EIO);
              }
            }
            if (length) {
              stream.node.timestamp = Date.now();
            }
            return i2;
          })
        },
        default_tty_ops: {
          get_char: (function(tty) {
            if (!tty.input.length) {
              var result = null;
              if (ENVIRONMENT_IS_NODE) {
                var BUFSIZE = 256;
                var buf = new Buffer(BUFSIZE);
                var bytesRead = 0;
                var isPosixPlatform = process.platform != "win32";
                var fd = process.stdin.fd;
                if (isPosixPlatform) {
                  var usingDevice = false;
                  try {
                    fd = fs.openSync("/dev/stdin", "r");
                    usingDevice = true;
                  } catch (e) {
                  }
                }
                try {
                  bytesRead = fs.readSync(fd, buf, 0, BUFSIZE, null);
                } catch (e) {
                  if (e.toString().indexOf("EOF") != -1) bytesRead = 0;
                  else throw e;
                }
                if (usingDevice) {
                  fs.closeSync(fd);
                }
                if (bytesRead > 0) {
                  result = buf.slice(0, bytesRead).toString("utf-8");
                } else {
                  result = null;
                }
              } else if (typeof window != "undefined" && typeof window.prompt == "function") {
                result = window.prompt("Input: ");
                if (result !== null) {
                  result += "\n";
                }
              } else if (typeof readline == "function") {
                result = readline();
                if (result !== null) {
                  result += "\n";
                }
              }
              if (!result) {
                return null;
              }
              tty.input = intArrayFromString(result, true);
            }
            return tty.input.shift();
          }),
          put_char: (function(tty, val) {
            if (val === null || val === 10) {
              Module["print"](UTF8ArrayToString(tty.output, 0));
              tty.output = [];
            } else {
              if (val != 0) tty.output.push(val);
            }
          }),
          flush: (function(tty) {
            if (tty.output && tty.output.length > 0) {
              Module["print"](UTF8ArrayToString(tty.output, 0));
              tty.output = [];
            }
          })
        },
        default_tty1_ops: {
          put_char: (function(tty, val) {
            if (val === null || val === 10) {
              Module["printErr"](UTF8ArrayToString(tty.output, 0));
              tty.output = [];
            } else {
              if (val != 0) tty.output.push(val);
            }
          }),
          flush: (function(tty) {
            if (tty.output && tty.output.length > 0) {
              Module["printErr"](UTF8ArrayToString(tty.output, 0));
              tty.output = [];
            }
          })
        }
      };
      var MEMFS = {
        ops_table: null,
        mount: (function(mount) {
          return MEMFS.createNode(null, "/", 16384 | 511, 0);
        }),
        createNode: (function(parent, name, mode, dev) {
          if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.EPERM);
          }
          if (!MEMFS.ops_table) {
            MEMFS.ops_table = {
              dir: {
                node: {
                  getattr: MEMFS.node_ops.getattr,
                  setattr: MEMFS.node_ops.setattr,
                  lookup: MEMFS.node_ops.lookup,
                  mknod: MEMFS.node_ops.mknod,
                  rename: MEMFS.node_ops.rename,
                  unlink: MEMFS.node_ops.unlink,
                  rmdir: MEMFS.node_ops.rmdir,
                  readdir: MEMFS.node_ops.readdir,
                  symlink: MEMFS.node_ops.symlink
                },
                stream: {
                  llseek: MEMFS.stream_ops.llseek
                }
              },
              file: {
                node: {
                  getattr: MEMFS.node_ops.getattr,
                  setattr: MEMFS.node_ops.setattr
                },
                stream: {
                  llseek: MEMFS.stream_ops.llseek,
                  read: MEMFS.stream_ops.read,
                  write: MEMFS.stream_ops.write,
                  allocate: MEMFS.stream_ops.allocate,
                  mmap: MEMFS.stream_ops.mmap,
                  msync: MEMFS.stream_ops.msync
                }
              },
              link: {
                node: {
                  getattr: MEMFS.node_ops.getattr,
                  setattr: MEMFS.node_ops.setattr,
                  readlink: MEMFS.node_ops.readlink
                },
                stream: {}
              },
              chrdev: {
                node: {
                  getattr: MEMFS.node_ops.getattr,
                  setattr: MEMFS.node_ops.setattr
                },
                stream: FS.chrdev_stream_ops
              }
            };
          }
          var node2 = FS.createNode(parent, name, mode, dev);
          if (FS.isDir(node2.mode)) {
            node2.node_ops = MEMFS.ops_table.dir.node;
            node2.stream_ops = MEMFS.ops_table.dir.stream;
            node2.contents = {};
          } else if (FS.isFile(node2.mode)) {
            node2.node_ops = MEMFS.ops_table.file.node;
            node2.stream_ops = MEMFS.ops_table.file.stream;
            node2.usedBytes = 0;
            node2.contents = null;
          } else if (FS.isLink(node2.mode)) {
            node2.node_ops = MEMFS.ops_table.link.node;
            node2.stream_ops = MEMFS.ops_table.link.stream;
          } else if (FS.isChrdev(node2.mode)) {
            node2.node_ops = MEMFS.ops_table.chrdev.node;
            node2.stream_ops = MEMFS.ops_table.chrdev.stream;
          }
          node2.timestamp = Date.now();
          if (parent) {
            parent.contents[name] = node2;
          }
          return node2;
        }),
        getFileDataAsRegularArray: (function(node2) {
          if (node2.contents && node2.contents.subarray) {
            var arr = [];
            for (var i2 = 0; i2 < node2.usedBytes; ++i2) arr.push(node2.contents[i2]);
            return arr;
          }
          return node2.contents;
        }),
        getFileDataAsTypedArray: (function(node2) {
          if (!node2.contents) return new Uint8Array();
          if (node2.contents.subarray) return node2.contents.subarray(0, node2.usedBytes);
          return new Uint8Array(node2.contents);
        }),
        expandFileStorage: (function(node2, newCapacity) {
          if (node2.contents && node2.contents.subarray && newCapacity > node2.contents.length) {
            node2.contents = MEMFS.getFileDataAsRegularArray(node2);
            node2.usedBytes = node2.contents.length;
          }
          if (!node2.contents || node2.contents.subarray) {
            var prevCapacity = node2.contents ? node2.contents.buffer.byteLength : 0;
            if (prevCapacity >= newCapacity) return;
            var CAPACITY_DOUBLING_MAX = 1024 * 1024;
            newCapacity = Math.max(newCapacity, prevCapacity * (prevCapacity < CAPACITY_DOUBLING_MAX ? 2 : 1.125) | 0);
            if (prevCapacity != 0) newCapacity = Math.max(newCapacity, 256);
            var oldContents = node2.contents;
            node2.contents = new Uint8Array(newCapacity);
            if (node2.usedBytes > 0) node2.contents.set(oldContents.subarray(0, node2.usedBytes), 0);
            return;
          }
          if (!node2.contents && newCapacity > 0) node2.contents = [];
          while (node2.contents.length < newCapacity) node2.contents.push(0);
        }),
        resizeFileStorage: (function(node2, newSize) {
          if (node2.usedBytes == newSize) return;
          if (newSize == 0) {
            node2.contents = null;
            node2.usedBytes = 0;
            return;
          }
          if (!node2.contents || node2.contents.subarray) {
            var oldContents = node2.contents;
            node2.contents = new Uint8Array(new ArrayBuffer(newSize));
            if (oldContents) {
              node2.contents.set(oldContents.subarray(0, Math.min(newSize, node2.usedBytes)));
            }
            node2.usedBytes = newSize;
            return;
          }
          if (!node2.contents) node2.contents = [];
          if (node2.contents.length > newSize) node2.contents.length = newSize;
          else
            while (node2.contents.length < newSize) node2.contents.push(0);
          node2.usedBytes = newSize;
        }),
        node_ops: {
          getattr: (function(node2) {
            var attr = {};
            attr.dev = FS.isChrdev(node2.mode) ? node2.id : 1;
            attr.ino = node2.id;
            attr.mode = node2.mode;
            attr.nlink = 1;
            attr.uid = 0;
            attr.gid = 0;
            attr.rdev = node2.rdev;
            if (FS.isDir(node2.mode)) {
              attr.size = 4096;
            } else if (FS.isFile(node2.mode)) {
              attr.size = node2.usedBytes;
            } else if (FS.isLink(node2.mode)) {
              attr.size = node2.link.length;
            } else {
              attr.size = 0;
            }
            attr.atime = new Date(node2.timestamp);
            attr.mtime = new Date(node2.timestamp);
            attr.ctime = new Date(node2.timestamp);
            attr.blksize = 4096;
            attr.blocks = Math.ceil(attr.size / attr.blksize);
            return attr;
          }),
          setattr: (function(node2, attr) {
            if (attr.mode !== void 0) {
              node2.mode = attr.mode;
            }
            if (attr.timestamp !== void 0) {
              node2.timestamp = attr.timestamp;
            }
            if (attr.size !== void 0) {
              MEMFS.resizeFileStorage(node2, attr.size);
            }
          }),
          lookup: (function(parent, name) {
            throw FS.genericErrors[ERRNO_CODES.ENOENT];
          }),
          mknod: (function(parent, name, mode, dev) {
            return MEMFS.createNode(parent, name, mode, dev);
          }),
          rename: (function(old_node, new_dir, new_name) {
            if (FS.isDir(old_node.mode)) {
              var new_node;
              try {
                new_node = FS.lookupNode(new_dir, new_name);
              } catch (e) {
              }
              if (new_node) {
                for (var i2 in new_node.contents) {
                  throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
                }
              }
            }
            delete old_node.parent.contents[old_node.name];
            old_node.name = new_name;
            new_dir.contents[new_name] = old_node;
            old_node.parent = new_dir;
          }),
          unlink: (function(parent, name) {
            delete parent.contents[name];
          }),
          rmdir: (function(parent, name) {
            var node2 = FS.lookupNode(parent, name);
            for (var i2 in node2.contents) {
              throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
            }
            delete parent.contents[name];
          }),
          readdir: (function(node2) {
            var entries = [".", ".."];
            for (var key2 in node2.contents) {
              if (!node2.contents.hasOwnProperty(key2)) {
                continue;
              }
              entries.push(key2);
            }
            return entries;
          }),
          symlink: (function(parent, newname, oldpath) {
            var node2 = MEMFS.createNode(parent, newname, 511 | 40960, 0);
            node2.link = oldpath;
            return node2;
          }),
          readlink: (function(node2) {
            if (!FS.isLink(node2.mode)) {
              throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
            }
            return node2.link;
          })
        },
        stream_ops: {
          read: (function(stream, buffer2, offset, length, position) {
            var contents = stream.node.contents;
            if (position >= stream.node.usedBytes) return 0;
            var size = Math.min(stream.node.usedBytes - position, length);
            assert(size >= 0);
            if (size > 8 && contents.subarray) {
              buffer2.set(contents.subarray(position, position + size), offset);
            } else {
              for (var i2 = 0; i2 < size; i2++) buffer2[offset + i2] = contents[position + i2];
            }
            return size;
          }),
          write: (function(stream, buffer2, offset, length, position, canOwn) {
            if (!length) return 0;
            var node2 = stream.node;
            node2.timestamp = Date.now();
            if (buffer2.subarray && (!node2.contents || node2.contents.subarray)) {
              if (canOwn) {
                node2.contents = buffer2.subarray(offset, offset + length);
                node2.usedBytes = length;
                return length;
              } else if (node2.usedBytes === 0 && position === 0) {
                node2.contents = new Uint8Array(buffer2.subarray(offset, offset + length));
                node2.usedBytes = length;
                return length;
              } else if (position + length <= node2.usedBytes) {
                node2.contents.set(buffer2.subarray(offset, offset + length), position);
                return length;
              }
            }
            MEMFS.expandFileStorage(node2, position + length);
            if (node2.contents.subarray && buffer2.subarray) node2.contents.set(buffer2.subarray(offset, offset + length), position);
            else {
              for (var i2 = 0; i2 < length; i2++) {
                node2.contents[position + i2] = buffer2[offset + i2];
              }
            }
            node2.usedBytes = Math.max(node2.usedBytes, position + length);
            return length;
          }),
          llseek: (function(stream, offset, whence) {
            var position = offset;
            if (whence === 1) {
              position += stream.position;
            } else if (whence === 2) {
              if (FS.isFile(stream.node.mode)) {
                position += stream.node.usedBytes;
              }
            }
            if (position < 0) {
              throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
            }
            return position;
          }),
          allocate: (function(stream, offset, length) {
            MEMFS.expandFileStorage(stream.node, offset + length);
            stream.node.usedBytes = Math.max(stream.node.usedBytes, offset + length);
          }),
          mmap: (function(stream, buffer2, offset, length, position, prot, flags) {
            if (!FS.isFile(stream.node.mode)) {
              throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
            }
            var ptr;
            var allocated;
            var contents = stream.node.contents;
            if (!(flags & 2) && (contents.buffer === buffer2 || contents.buffer === buffer2.buffer)) {
              allocated = false;
              ptr = contents.byteOffset;
            } else {
              if (position > 0 || position + length < stream.node.usedBytes) {
                if (contents.subarray) {
                  contents = contents.subarray(position, position + length);
                } else {
                  contents = Array.prototype.slice.call(contents, position, position + length);
                }
              }
              allocated = true;
              ptr = _malloc(length);
              if (!ptr) {
                throw new FS.ErrnoError(ERRNO_CODES.ENOMEM);
              }
              buffer2.set(contents, ptr);
            }
            return {
              ptr,
              allocated
            };
          }),
          msync: (function(stream, buffer2, offset, length, mmapFlags) {
            if (!FS.isFile(stream.node.mode)) {
              throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
            }
            if (mmapFlags & 2) {
              return 0;
            }
            var bytesWritten = MEMFS.stream_ops.write(stream, buffer2, 0, length, offset, false);
            return 0;
          })
        }
      };
      var IDBFS = {
        dbs: {},
        indexedDB: (function() {
          if (typeof indexedDB !== "undefined") return indexedDB;
          var ret = null;
          if (typeof window === "object") ret = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
          assert(ret, "IDBFS used, but indexedDB not supported");
          return ret;
        }),
        DB_VERSION: 21,
        DB_STORE_NAME: "FILE_DATA",
        mount: (function(mount) {
          return MEMFS.mount.apply(null, arguments);
        }),
        syncfs: (function(mount, populate, callback) {
          IDBFS.getLocalSet(mount, (function(err, local) {
            if (err) return callback(err);
            IDBFS.getRemoteSet(mount, (function(err2, remote) {
              if (err2) return callback(err2);
              var src = populate ? remote : local;
              var dst = populate ? local : remote;
              IDBFS.reconcile(src, dst, callback);
            }));
          }));
        }),
        getDB: (function(name, callback) {
          var db = IDBFS.dbs[name];
          if (db) {
            return callback(null, db);
          }
          var req;
          try {
            req = IDBFS.indexedDB().open(name, IDBFS.DB_VERSION);
          } catch (e) {
            return callback(e);
          }
          if (!req) {
            return callback("Unable to connect to IndexedDB");
          }
          req.onupgradeneeded = (function(e) {
            var db2 = e.target.result;
            var transaction = e.target.transaction;
            var fileStore;
            if (db2.objectStoreNames.contains(IDBFS.DB_STORE_NAME)) {
              fileStore = transaction.objectStore(IDBFS.DB_STORE_NAME);
            } else {
              fileStore = db2.createObjectStore(IDBFS.DB_STORE_NAME);
            }
            if (!fileStore.indexNames.contains("timestamp")) {
              fileStore.createIndex("timestamp", "timestamp", {
                unique: false
              });
            }
          });
          req.onsuccess = (function() {
            db = req.result;
            IDBFS.dbs[name] = db;
            callback(null, db);
          });
          req.onerror = (function(e) {
            callback(this.error);
            e.preventDefault();
          });
        }),
        getLocalSet: (function(mount, callback) {
          var entries = {};
          function isRealDir(p) {
            return p !== "." && p !== "..";
          }
          function toAbsolute(root) {
            return (function(p) {
              return PATH.join2(root, p);
            });
          }
          var check = FS.readdir(mount.mountpoint).filter(isRealDir).map(toAbsolute(mount.mountpoint));
          while (check.length) {
            var path2 = check.pop();
            var stat;
            try {
              stat = FS.stat(path2);
            } catch (e) {
              return callback(e);
            }
            if (FS.isDir(stat.mode)) {
              check.push.apply(check, FS.readdir(path2).filter(isRealDir).map(toAbsolute(path2)));
            }
            entries[path2] = {
              timestamp: stat.mtime
            };
          }
          return callback(null, {
            type: "local",
            entries
          });
        }),
        getRemoteSet: (function(mount, callback) {
          var entries = {};
          IDBFS.getDB(mount.mountpoint, (function(err, db) {
            if (err) return callback(err);
            var transaction = db.transaction([IDBFS.DB_STORE_NAME], "readonly");
            transaction.onerror = (function(e) {
              callback(this.error);
              e.preventDefault();
            });
            var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
            var index = store.index("timestamp");
            index.openKeyCursor().onsuccess = (function(event) {
              var cursor = event.target.result;
              if (!cursor) {
                return callback(null, {
                  type: "remote",
                  db,
                  entries
                });
              }
              entries[cursor.primaryKey] = {
                timestamp: cursor.key
              };
              cursor.continue();
            });
          }));
        }),
        loadLocalEntry: (function(path2, callback) {
          var stat, node2;
          try {
            var lookup = FS.lookupPath(path2);
            node2 = lookup.node;
            stat = FS.stat(path2);
          } catch (e) {
            return callback(e);
          }
          if (FS.isDir(stat.mode)) {
            return callback(null, {
              timestamp: stat.mtime,
              mode: stat.mode
            });
          } else if (FS.isFile(stat.mode)) {
            node2.contents = MEMFS.getFileDataAsTypedArray(node2);
            return callback(null, {
              timestamp: stat.mtime,
              mode: stat.mode,
              contents: node2.contents
            });
          } else {
            return callback(new Error("node type not supported"));
          }
        }),
        storeLocalEntry: (function(path2, entry, callback) {
          try {
            if (FS.isDir(entry.mode)) {
              FS.mkdir(path2, entry.mode);
            } else if (FS.isFile(entry.mode)) {
              FS.writeFile(path2, entry.contents, {
                encoding: "binary",
                canOwn: true
              });
            } else {
              return callback(new Error("node type not supported"));
            }
            FS.chmod(path2, entry.mode);
            FS.utime(path2, entry.timestamp, entry.timestamp);
          } catch (e) {
            return callback(e);
          }
          callback(null);
        }),
        removeLocalEntry: (function(path2, callback) {
          try {
            var lookup = FS.lookupPath(path2);
            var stat = FS.stat(path2);
            if (FS.isDir(stat.mode)) {
              FS.rmdir(path2);
            } else if (FS.isFile(stat.mode)) {
              FS.unlink(path2);
            }
          } catch (e) {
            return callback(e);
          }
          callback(null);
        }),
        loadRemoteEntry: (function(store, path2, callback) {
          var req = store.get(path2);
          req.onsuccess = (function(event) {
            callback(null, event.target.result);
          });
          req.onerror = (function(e) {
            callback(this.error);
            e.preventDefault();
          });
        }),
        storeRemoteEntry: (function(store, path2, entry, callback) {
          var req = store.put(entry, path2);
          req.onsuccess = (function() {
            callback(null);
          });
          req.onerror = (function(e) {
            callback(this.error);
            e.preventDefault();
          });
        }),
        removeRemoteEntry: (function(store, path2, callback) {
          var req = store.delete(path2);
          req.onsuccess = (function() {
            callback(null);
          });
          req.onerror = (function(e) {
            callback(this.error);
            e.preventDefault();
          });
        }),
        reconcile: (function(src, dst, callback) {
          var total = 0;
          var create = [];
          Object.keys(src.entries).forEach((function(key2) {
            var e = src.entries[key2];
            var e2 = dst.entries[key2];
            if (!e2 || e.timestamp > e2.timestamp) {
              create.push(key2);
              total++;
            }
          }));
          var remove = [];
          Object.keys(dst.entries).forEach((function(key2) {
            var e = dst.entries[key2];
            var e2 = src.entries[key2];
            if (!e2) {
              remove.push(key2);
              total++;
            }
          }));
          if (!total) {
            return callback(null);
          }
          var completed = 0;
          var db = src.type === "remote" ? src.db : dst.db;
          var transaction = db.transaction([IDBFS.DB_STORE_NAME], "readwrite");
          var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
          function done(err) {
            if (err) {
              if (!done.errored) {
                done.errored = true;
                return callback(err);
              }
              return;
            }
            if (++completed >= total) {
              return callback(null);
            }
          }
          transaction.onerror = (function(e) {
            done(this.error);
            e.preventDefault();
          });
          create.sort().forEach((function(path2) {
            if (dst.type === "local") {
              IDBFS.loadRemoteEntry(store, path2, (function(err, entry) {
                if (err) return done(err);
                IDBFS.storeLocalEntry(path2, entry, done);
              }));
            } else {
              IDBFS.loadLocalEntry(path2, (function(err, entry) {
                if (err) return done(err);
                IDBFS.storeRemoteEntry(store, path2, entry, done);
              }));
            }
          }));
          remove.sort().reverse().forEach((function(path2) {
            if (dst.type === "local") {
              IDBFS.removeLocalEntry(path2, done);
            } else {
              IDBFS.removeRemoteEntry(store, path2, done);
            }
          }));
        })
      };
      var NODEFS = {
        isWindows: false,
        staticInit: (function() {
          NODEFS.isWindows = !!process.platform.match(/^win/);
        }),
        mount: (function(mount) {
          assert(ENVIRONMENT_IS_NODE);
          return NODEFS.createNode(null, "/", NODEFS.getMode(mount.opts.root), 0);
        }),
        createNode: (function(parent, name, mode, dev) {
          if (!FS.isDir(mode) && !FS.isFile(mode) && !FS.isLink(mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          var node2 = FS.createNode(parent, name, mode);
          node2.node_ops = NODEFS.node_ops;
          node2.stream_ops = NODEFS.stream_ops;
          return node2;
        }),
        getMode: (function(path2) {
          var stat;
          try {
            stat = fs.lstatSync(path2);
            if (NODEFS.isWindows) {
              stat.mode = stat.mode | (stat.mode & 146) >> 1;
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          return stat.mode;
        }),
        realPath: (function(node2) {
          var parts = [];
          while (node2.parent !== node2) {
            parts.push(node2.name);
            node2 = node2.parent;
          }
          parts.push(node2.mount.opts.root);
          parts.reverse();
          return PATH.join.apply(null, parts);
        }),
        flagsToPermissionStringMap: {
          0: "r",
          1: "r+",
          2: "r+",
          64: "r",
          65: "r+",
          66: "r+",
          129: "rx+",
          193: "rx+",
          514: "w+",
          577: "w",
          578: "w+",
          705: "wx",
          706: "wx+",
          1024: "a",
          1025: "a",
          1026: "a+",
          1089: "a",
          1090: "a+",
          1153: "ax",
          1154: "ax+",
          1217: "ax",
          1218: "ax+",
          4096: "rs",
          4098: "rs+"
        },
        flagsToPermissionString: (function(flags) {
          flags &= ~2097152;
          flags &= ~2048;
          flags &= ~32768;
          flags &= ~524288;
          if (flags in NODEFS.flagsToPermissionStringMap) {
            return NODEFS.flagsToPermissionStringMap[flags];
          } else {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
        }),
        node_ops: {
          getattr: (function(node2) {
            var path2 = NODEFS.realPath(node2);
            var stat;
            try {
              stat = fs.lstatSync(path2);
            } catch (e) {
              if (!e.code) throw e;
              throw new FS.ErrnoError(ERRNO_CODES[e.code]);
            }
            if (NODEFS.isWindows && !stat.blksize) {
              stat.blksize = 4096;
            }
            if (NODEFS.isWindows && !stat.blocks) {
              stat.blocks = (stat.size + stat.blksize - 1) / stat.blksize | 0;
            }
            return {
              dev: stat.dev,
              ino: stat.ino,
              mode: stat.mode,
              nlink: stat.nlink,
              uid: stat.uid,
              gid: stat.gid,
              rdev: stat.rdev,
              size: stat.size,
              atime: stat.atime,
              mtime: stat.mtime,
              ctime: stat.ctime,
              blksize: stat.blksize,
              blocks: stat.blocks
            };
          }),
          setattr: (function(node2, attr) {
            var path2 = NODEFS.realPath(node2);
            try {
              if (attr.mode !== void 0) {
                fs.chmodSync(path2, attr.mode);
                node2.mode = attr.mode;
              }
              if (attr.timestamp !== void 0) {
                var date = new Date(attr.timestamp);
                fs.utimesSync(path2, date, date);
              }
              if (attr.size !== void 0) {
                fs.truncateSync(path2, attr.size);
              }
            } catch (e) {
              if (!e.code) throw e;
              throw new FS.ErrnoError(ERRNO_CODES[e.code]);
            }
          }),
          lookup: (function(parent, name) {
            var path2 = PATH.join2(NODEFS.realPath(parent), name);
            var mode = NODEFS.getMode(path2);
            return NODEFS.createNode(parent, name, mode);
          }),
          mknod: (function(parent, name, mode, dev) {
            var node2 = NODEFS.createNode(parent, name, mode, dev);
            var path2 = NODEFS.realPath(node2);
            try {
              if (FS.isDir(node2.mode)) {
                fs.mkdirSync(path2, node2.mode);
              } else {
                fs.writeFileSync(path2, "", {
                  mode: node2.mode
                });
              }
            } catch (e) {
              if (!e.code) throw e;
              throw new FS.ErrnoError(ERRNO_CODES[e.code]);
            }
            return node2;
          }),
          rename: (function(oldNode, newDir, newName) {
            var oldPath = NODEFS.realPath(oldNode);
            var newPath = PATH.join2(NODEFS.realPath(newDir), newName);
            try {
              fs.renameSync(oldPath, newPath);
            } catch (e) {
              if (!e.code) throw e;
              throw new FS.ErrnoError(ERRNO_CODES[e.code]);
            }
          }),
          unlink: (function(parent, name) {
            var path2 = PATH.join2(NODEFS.realPath(parent), name);
            try {
              fs.unlinkSync(path2);
            } catch (e) {
              if (!e.code) throw e;
              throw new FS.ErrnoError(ERRNO_CODES[e.code]);
            }
          }),
          rmdir: (function(parent, name) {
            var path2 = PATH.join2(NODEFS.realPath(parent), name);
            try {
              fs.rmdirSync(path2);
            } catch (e) {
              if (!e.code) throw e;
              throw new FS.ErrnoError(ERRNO_CODES[e.code]);
            }
          }),
          readdir: (function(node2) {
            var path2 = NODEFS.realPath(node2);
            try {
              return fs.readdirSync(path2);
            } catch (e) {
              if (!e.code) throw e;
              throw new FS.ErrnoError(ERRNO_CODES[e.code]);
            }
          }),
          symlink: (function(parent, newName, oldPath) {
            var newPath = PATH.join2(NODEFS.realPath(parent), newName);
            try {
              fs.symlinkSync(oldPath, newPath);
            } catch (e) {
              if (!e.code) throw e;
              throw new FS.ErrnoError(ERRNO_CODES[e.code]);
            }
          }),
          readlink: (function(node2) {
            var path2 = NODEFS.realPath(node2);
            try {
              path2 = fs.readlinkSync(path2);
              path2 = NODEJS_PATH.relative(NODEJS_PATH.resolve(node2.mount.opts.root), path2);
              return path2;
            } catch (e) {
              if (!e.code) throw e;
              throw new FS.ErrnoError(ERRNO_CODES[e.code]);
            }
          })
        },
        stream_ops: {
          open: (function(stream) {
            var path2 = NODEFS.realPath(stream.node);
            try {
              if (FS.isFile(stream.node.mode)) {
                stream.nfd = fs.openSync(path2, NODEFS.flagsToPermissionString(stream.flags));
              }
            } catch (e) {
              if (!e.code) throw e;
              throw new FS.ErrnoError(ERRNO_CODES[e.code]);
            }
          }),
          close: (function(stream) {
            try {
              if (FS.isFile(stream.node.mode) && stream.nfd) {
                fs.closeSync(stream.nfd);
              }
            } catch (e) {
              if (!e.code) throw e;
              throw new FS.ErrnoError(ERRNO_CODES[e.code]);
            }
          }),
          read: (function(stream, buffer2, offset, length, position) {
            if (length === 0) return 0;
            var nbuffer = new Buffer(length);
            var res;
            try {
              res = fs.readSync(stream.nfd, nbuffer, 0, length, position);
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES[e.code]);
            }
            if (res > 0) {
              for (var i2 = 0; i2 < res; i2++) {
                buffer2[offset + i2] = nbuffer[i2];
              }
            }
            return res;
          }),
          write: (function(stream, buffer2, offset, length, position) {
            var nbuffer = new Buffer(buffer2.subarray(offset, offset + length));
            var res;
            try {
              res = fs.writeSync(stream.nfd, nbuffer, 0, length, position);
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES[e.code]);
            }
            return res;
          }),
          llseek: (function(stream, offset, whence) {
            var position = offset;
            if (whence === 1) {
              position += stream.position;
            } else if (whence === 2) {
              if (FS.isFile(stream.node.mode)) {
                try {
                  var stat = fs.fstatSync(stream.nfd);
                  position += stat.size;
                } catch (e) {
                  throw new FS.ErrnoError(ERRNO_CODES[e.code]);
                }
              }
            }
            if (position < 0) {
              throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
            }
            return position;
          })
        }
      };
      var WORKERFS = {
        DIR_MODE: 16895,
        FILE_MODE: 33279,
        reader: null,
        mount: (function(mount) {
          assert(ENVIRONMENT_IS_WORKER);
          if (!WORKERFS.reader) WORKERFS.reader = new FileReaderSync();
          var root = WORKERFS.createNode(null, "/", WORKERFS.DIR_MODE, 0);
          var createdParents = {};
          function ensureParent(path2) {
            var parts = path2.split("/");
            var parent = root;
            for (var i2 = 0; i2 < parts.length - 1; i2++) {
              var curr = parts.slice(0, i2 + 1).join("/");
              if (!createdParents[curr]) {
                createdParents[curr] = WORKERFS.createNode(parent, parts[i2], WORKERFS.DIR_MODE, 0);
              }
              parent = createdParents[curr];
            }
            return parent;
          }
          function base(path2) {
            var parts = path2.split("/");
            return parts[parts.length - 1];
          }
          Array.prototype.forEach.call(mount.opts["files"] || [], (function(file) {
            WORKERFS.createNode(ensureParent(file.name), base(file.name), WORKERFS.FILE_MODE, 0, file, file.lastModifiedDate);
          }));
          (mount.opts["blobs"] || []).forEach((function(obj) {
            WORKERFS.createNode(ensureParent(obj["name"]), base(obj["name"]), WORKERFS.FILE_MODE, 0, obj["data"]);
          }));
          (mount.opts["packages"] || []).forEach((function(pack) {
            pack["metadata"].files.forEach((function(file) {
              var name = file.filename.substr(1);
              WORKERFS.createNode(ensureParent(name), base(name), WORKERFS.FILE_MODE, 0, pack["blob"].slice(file.start, file.end));
            }));
          }));
          return root;
        }),
        createNode: (function(parent, name, mode, dev, contents, mtime) {
          var node2 = FS.createNode(parent, name, mode);
          node2.mode = mode;
          node2.node_ops = WORKERFS.node_ops;
          node2.stream_ops = WORKERFS.stream_ops;
          node2.timestamp = (mtime || /* @__PURE__ */ new Date()).getTime();
          assert(WORKERFS.FILE_MODE !== WORKERFS.DIR_MODE);
          if (mode === WORKERFS.FILE_MODE) {
            node2.size = contents.size;
            node2.contents = contents;
          } else {
            node2.size = 4096;
            node2.contents = {};
          }
          if (parent) {
            parent.contents[name] = node2;
          }
          return node2;
        }),
        node_ops: {
          getattr: (function(node2) {
            return {
              dev: 1,
              ino: void 0,
              mode: node2.mode,
              nlink: 1,
              uid: 0,
              gid: 0,
              rdev: void 0,
              size: node2.size,
              atime: new Date(node2.timestamp),
              mtime: new Date(node2.timestamp),
              ctime: new Date(node2.timestamp),
              blksize: 4096,
              blocks: Math.ceil(node2.size / 4096)
            };
          }),
          setattr: (function(node2, attr) {
            if (attr.mode !== void 0) {
              node2.mode = attr.mode;
            }
            if (attr.timestamp !== void 0) {
              node2.timestamp = attr.timestamp;
            }
          }),
          lookup: (function(parent, name) {
            throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
          }),
          mknod: (function(parent, name, mode, dev) {
            throw new FS.ErrnoError(ERRNO_CODES.EPERM);
          }),
          rename: (function(oldNode, newDir, newName) {
            throw new FS.ErrnoError(ERRNO_CODES.EPERM);
          }),
          unlink: (function(parent, name) {
            throw new FS.ErrnoError(ERRNO_CODES.EPERM);
          }),
          rmdir: (function(parent, name) {
            throw new FS.ErrnoError(ERRNO_CODES.EPERM);
          }),
          readdir: (function(node2) {
            throw new FS.ErrnoError(ERRNO_CODES.EPERM);
          }),
          symlink: (function(parent, newName, oldPath) {
            throw new FS.ErrnoError(ERRNO_CODES.EPERM);
          }),
          readlink: (function(node2) {
            throw new FS.ErrnoError(ERRNO_CODES.EPERM);
          })
        },
        stream_ops: {
          read: (function(stream, buffer2, offset, length, position) {
            if (position >= stream.node.size) return 0;
            var chunk = stream.node.contents.slice(position, position + length);
            var ab = WORKERFS.reader.readAsArrayBuffer(chunk);
            buffer2.set(new Uint8Array(ab), offset);
            return chunk.size;
          }),
          write: (function(stream, buffer2, offset, length, position) {
            throw new FS.ErrnoError(ERRNO_CODES.EIO);
          }),
          llseek: (function(stream, offset, whence) {
            var position = offset;
            if (whence === 1) {
              position += stream.position;
            } else if (whence === 2) {
              if (FS.isFile(stream.node.mode)) {
                position += stream.node.size;
              }
            }
            if (position < 0) {
              throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
            }
            return position;
          })
        }
      };
      STATICTOP += 16;
      STATICTOP += 16;
      STATICTOP += 16;
      let crypto$1;
      if (false) {
        crypto$1 = await null;
      }
      var FS = {
        root: null,
        mounts: [],
        devices: [null],
        streams: [],
        nextInode: 1,
        nameTable: null,
        currentPath: "/",
        initialized: false,
        ignorePermissions: true,
        trackingDelegate: {},
        tracking: {
          openFlags: {
            READ: 1,
            WRITE: 2
          }
        },
        ErrnoError: null,
        genericErrors: {},
        filesystems: null,
        syncFSRequests: 0,
        handleFSError: (function(e) {
          if (!(e instanceof FS.ErrnoError)) throw e + " : " + stackTrace();
          return ___setErrNo(e.errno);
        }),
        lookupPath: (function(path2, opts) {
          path2 = PATH.resolve(FS.cwd(), path2);
          opts = opts || {};
          if (!path2) return {
            path: "",
            node: null
          };
          var defaults = {
            follow_mount: true,
            recurse_count: 0
          };
          for (var key2 in defaults) {
            if (opts[key2] === void 0) {
              opts[key2] = defaults[key2];
            }
          }
          if (opts.recurse_count > 8) {
            throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
          }
          var parts = PATH.normalizeArray(path2.split("/").filter((function(p) {
            return !!p;
          })), false);
          var current = FS.root;
          var current_path = "/";
          for (var i2 = 0; i2 < parts.length; i2++) {
            var islast = i2 === parts.length - 1;
            if (islast && opts.parent) {
              break;
            }
            current = FS.lookupNode(current, parts[i2]);
            current_path = PATH.join2(current_path, parts[i2]);
            if (FS.isMountpoint(current)) {
              if (!islast || islast && opts.follow_mount) {
                current = current.mounted.root;
              }
            }
            if (!islast || opts.follow) {
              var count = 0;
              while (FS.isLink(current.mode)) {
                var link = FS.readlink(current_path);
                current_path = PATH.resolve(PATH.dirname(current_path), link);
                var lookup = FS.lookupPath(current_path, {
                  recurse_count: opts.recurse_count
                });
                current = lookup.node;
                if (count++ > 40) {
                  throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
                }
              }
            }
          }
          return {
            path: current_path,
            node: current
          };
        }),
        getPath: (function(node2) {
          var path2;
          while (true) {
            if (FS.isRoot(node2)) {
              var mount = node2.mount.mountpoint;
              if (!path2) return mount;
              return mount[mount.length - 1] !== "/" ? mount + "/" + path2 : mount + path2;
            }
            path2 = path2 ? node2.name + "/" + path2 : node2.name;
            node2 = node2.parent;
          }
        }),
        hashName: (function(parentid, name) {
          var hash = 0;
          for (var i2 = 0; i2 < name.length; i2++) {
            hash = (hash << 5) - hash + name.charCodeAt(i2) | 0;
          }
          return (parentid + hash >>> 0) % FS.nameTable.length;
        }),
        hashAddNode: (function(node2) {
          var hash = FS.hashName(node2.parent.id, node2.name);
          node2.name_next = FS.nameTable[hash];
          FS.nameTable[hash] = node2;
        }),
        hashRemoveNode: (function(node2) {
          var hash = FS.hashName(node2.parent.id, node2.name);
          if (FS.nameTable[hash] === node2) {
            FS.nameTable[hash] = node2.name_next;
          } else {
            var current = FS.nameTable[hash];
            while (current) {
              if (current.name_next === node2) {
                current.name_next = node2.name_next;
                break;
              }
              current = current.name_next;
            }
          }
        }),
        lookupNode: (function(parent, name) {
          var err = FS.mayLookup(parent);
          if (err) {
            throw new FS.ErrnoError(err, parent);
          }
          var hash = FS.hashName(parent.id, name);
          for (var node2 = FS.nameTable[hash]; node2; node2 = node2.name_next) {
            var nodeName = node2.name;
            if (node2.parent.id === parent.id && nodeName === name) {
              return node2;
            }
          }
          return FS.lookup(parent, name);
        }),
        createNode: (function(parent, name, mode, rdev) {
          if (!FS.FSNode) {
            FS.FSNode = (function(parent2, name2, mode2, rdev2) {
              if (!parent2) {
                parent2 = this;
              }
              this.parent = parent2;
              this.mount = parent2.mount;
              this.mounted = null;
              this.id = FS.nextInode++;
              this.name = name2;
              this.mode = mode2;
              this.node_ops = {};
              this.stream_ops = {};
              this.rdev = rdev2;
            });
            FS.FSNode.prototype = {};
            var readMode = 292 | 73;
            var writeMode = 146;
            Object.defineProperties(FS.FSNode.prototype, {
              read: {
                get: (function() {
                  return (this.mode & readMode) === readMode;
                }),
                set: (function(val) {
                  val ? this.mode |= readMode : this.mode &= ~readMode;
                })
              },
              write: {
                get: (function() {
                  return (this.mode & writeMode) === writeMode;
                }),
                set: (function(val) {
                  val ? this.mode |= writeMode : this.mode &= ~writeMode;
                })
              },
              isFolder: {
                get: (function() {
                  return FS.isDir(this.mode);
                })
              },
              isDevice: {
                get: (function() {
                  return FS.isChrdev(this.mode);
                })
              }
            });
          }
          var node2 = new FS.FSNode(parent, name, mode, rdev);
          FS.hashAddNode(node2);
          return node2;
        }),
        destroyNode: (function(node2) {
          FS.hashRemoveNode(node2);
        }),
        isRoot: (function(node2) {
          return node2 === node2.parent;
        }),
        isMountpoint: (function(node2) {
          return !!node2.mounted;
        }),
        isFile: (function(mode) {
          return (mode & 61440) === 32768;
        }),
        isDir: (function(mode) {
          return (mode & 61440) === 16384;
        }),
        isLink: (function(mode) {
          return (mode & 61440) === 40960;
        }),
        isChrdev: (function(mode) {
          return (mode & 61440) === 8192;
        }),
        isBlkdev: (function(mode) {
          return (mode & 61440) === 24576;
        }),
        isFIFO: (function(mode) {
          return (mode & 61440) === 4096;
        }),
        isSocket: (function(mode) {
          return (mode & 49152) === 49152;
        }),
        flagModes: {
          "r": 0,
          "rs": 1052672,
          "r+": 2,
          "w": 577,
          "wx": 705,
          "xw": 705,
          "w+": 578,
          "wx+": 706,
          "xw+": 706,
          "a": 1089,
          "ax": 1217,
          "xa": 1217,
          "a+": 1090,
          "ax+": 1218,
          "xa+": 1218
        },
        modeStringToFlags: (function(str) {
          var flags = FS.flagModes[str];
          if (typeof flags === "undefined") {
            throw new Error("Unknown file open mode: " + str);
          }
          return flags;
        }),
        flagsToPermissionString: (function(flag) {
          var perms = ["r", "w", "rw"][flag & 3];
          if (flag & 512) {
            perms += "w";
          }
          return perms;
        }),
        nodePermissions: (function(node2, perms) {
          if (FS.ignorePermissions) {
            return 0;
          }
          if (perms.indexOf("r") !== -1 && !(node2.mode & 292)) {
            return ERRNO_CODES.EACCES;
          } else if (perms.indexOf("w") !== -1 && !(node2.mode & 146)) {
            return ERRNO_CODES.EACCES;
          } else if (perms.indexOf("x") !== -1 && !(node2.mode & 73)) {
            return ERRNO_CODES.EACCES;
          }
          return 0;
        }),
        mayLookup: (function(dir) {
          var err = FS.nodePermissions(dir, "x");
          if (err) return err;
          if (!dir.node_ops.lookup) return ERRNO_CODES.EACCES;
          return 0;
        }),
        mayCreate: (function(dir, name) {
          try {
            var node2 = FS.lookupNode(dir, name);
            return ERRNO_CODES.EEXIST;
          } catch (e) {
          }
          return FS.nodePermissions(dir, "wx");
        }),
        mayDelete: (function(dir, name, isdir) {
          var node2;
          try {
            node2 = FS.lookupNode(dir, name);
          } catch (e) {
            return e.errno;
          }
          var err = FS.nodePermissions(dir, "wx");
          if (err) {
            return err;
          }
          if (isdir) {
            if (!FS.isDir(node2.mode)) {
              return ERRNO_CODES.ENOTDIR;
            }
            if (FS.isRoot(node2) || FS.getPath(node2) === FS.cwd()) {
              return ERRNO_CODES.EBUSY;
            }
          } else {
            if (FS.isDir(node2.mode)) {
              return ERRNO_CODES.EISDIR;
            }
          }
          return 0;
        }),
        mayOpen: (function(node2, flags) {
          if (!node2) {
            return ERRNO_CODES.ENOENT;
          }
          if (FS.isLink(node2.mode)) {
            return ERRNO_CODES.ELOOP;
          } else if (FS.isDir(node2.mode)) {
            if (FS.flagsToPermissionString(flags) !== "r" || flags & 512) {
              return ERRNO_CODES.EISDIR;
            }
          }
          return FS.nodePermissions(node2, FS.flagsToPermissionString(flags));
        }),
        MAX_OPEN_FDS: 4096,
        nextfd: (function(fd_start, fd_end) {
          fd_start = fd_start || 0;
          fd_end = fd_end || FS.MAX_OPEN_FDS;
          for (var fd = fd_start; fd <= fd_end; fd++) {
            if (!FS.streams[fd]) {
              return fd;
            }
          }
          throw new FS.ErrnoError(ERRNO_CODES.EMFILE);
        }),
        getStream: (function(fd) {
          return FS.streams[fd];
        }),
        createStream: (function(stream, fd_start, fd_end) {
          if (!FS.FSStream) {
            FS.FSStream = (function() {
            });
            FS.FSStream.prototype = {};
            Object.defineProperties(FS.FSStream.prototype, {
              object: {
                get: (function() {
                  return this.node;
                }),
                set: (function(val) {
                  this.node = val;
                })
              },
              isRead: {
                get: (function() {
                  return (this.flags & 2097155) !== 1;
                })
              },
              isWrite: {
                get: (function() {
                  return (this.flags & 2097155) !== 0;
                })
              },
              isAppend: {
                get: (function() {
                  return this.flags & 1024;
                })
              }
            });
          }
          var newStream = new FS.FSStream();
          for (var p in stream) {
            newStream[p] = stream[p];
          }
          stream = newStream;
          var fd = FS.nextfd(fd_start, fd_end);
          stream.fd = fd;
          FS.streams[fd] = stream;
          return stream;
        }),
        closeStream: (function(fd) {
          FS.streams[fd] = null;
        }),
        chrdev_stream_ops: {
          open: (function(stream) {
            var device = FS.getDevice(stream.node.rdev);
            stream.stream_ops = device.stream_ops;
            if (stream.stream_ops.open) {
              stream.stream_ops.open(stream);
            }
          }),
          llseek: (function() {
            throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
          })
        },
        major: (function(dev) {
          return dev >> 8;
        }),
        minor: (function(dev) {
          return dev & 255;
        }),
        makedev: (function(ma, mi) {
          return ma << 8 | mi;
        }),
        registerDevice: (function(dev, ops) {
          FS.devices[dev] = {
            stream_ops: ops
          };
        }),
        getDevice: (function(dev) {
          return FS.devices[dev];
        }),
        getMounts: (function(mount) {
          var mounts = [];
          var check = [mount];
          while (check.length) {
            var m = check.pop();
            mounts.push(m);
            check.push.apply(check, m.mounts);
          }
          return mounts;
        }),
        syncfs: (function(populate, callback) {
          if (typeof populate === "function") {
            callback = populate;
            populate = false;
          }
          FS.syncFSRequests++;
          if (FS.syncFSRequests > 1) {
            console.log("warning: " + FS.syncFSRequests + " FS.syncfs operations in flight at once, probably just doing extra work");
          }
          var mounts = FS.getMounts(FS.root.mount);
          var completed = 0;
          function doCallback(err) {
            assert(FS.syncFSRequests > 0);
            FS.syncFSRequests--;
            return callback(err);
          }
          function done(err) {
            if (err) {
              if (!done.errored) {
                done.errored = true;
                return doCallback(err);
              }
              return;
            }
            if (++completed >= mounts.length) {
              doCallback(null);
            }
          }
          mounts.forEach((function(mount) {
            if (!mount.type.syncfs) {
              return done(null);
            }
            mount.type.syncfs(mount, populate, done);
          }));
        }),
        mount: (function(type2, opts, mountpoint) {
          var root = mountpoint === "/";
          var pseudo = !mountpoint;
          var node2;
          if (root && FS.root) {
            throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
          } else if (!root && !pseudo) {
            var lookup = FS.lookupPath(mountpoint, {
              follow_mount: false
            });
            mountpoint = lookup.path;
            node2 = lookup.node;
            if (FS.isMountpoint(node2)) {
              throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
            }
            if (!FS.isDir(node2.mode)) {
              throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
            }
          }
          var mount = {
            type: type2,
            opts,
            mountpoint,
            mounts: []
          };
          var mountRoot = type2.mount(mount);
          mountRoot.mount = mount;
          mount.root = mountRoot;
          if (root) {
            FS.root = mountRoot;
          } else if (node2) {
            node2.mounted = mount;
            if (node2.mount) {
              node2.mount.mounts.push(mount);
            }
          }
          return mountRoot;
        }),
        unmount: (function(mountpoint) {
          var lookup = FS.lookupPath(mountpoint, {
            follow_mount: false
          });
          if (!FS.isMountpoint(lookup.node)) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          var node2 = lookup.node;
          var mount = node2.mounted;
          var mounts = FS.getMounts(mount);
          Object.keys(FS.nameTable).forEach((function(hash) {
            var current = FS.nameTable[hash];
            while (current) {
              var next = current.name_next;
              if (mounts.indexOf(current.mount) !== -1) {
                FS.destroyNode(current);
              }
              current = next;
            }
          }));
          node2.mounted = null;
          var idx = node2.mount.mounts.indexOf(mount);
          assert(idx !== -1);
          node2.mount.mounts.splice(idx, 1);
        }),
        lookup: (function(parent, name) {
          return parent.node_ops.lookup(parent, name);
        }),
        mknod: (function(path2, mode, dev) {
          var lookup = FS.lookupPath(path2, {
            parent: true
          });
          var parent = lookup.node;
          var name = PATH.basename(path2);
          if (!name || name === "." || name === "..") {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          var err = FS.mayCreate(parent, name);
          if (err) {
            throw new FS.ErrnoError(err);
          }
          if (!parent.node_ops.mknod) {
            throw new FS.ErrnoError(ERRNO_CODES.EPERM);
          }
          return parent.node_ops.mknod(parent, name, mode, dev);
        }),
        create: (function(path2, mode) {
          mode = mode !== void 0 ? mode : 438;
          mode &= 4095;
          mode |= 32768;
          return FS.mknod(path2, mode, 0);
        }),
        mkdir: (function(path2, mode) {
          mode = mode !== void 0 ? mode : 511;
          mode &= 511 | 512;
          mode |= 16384;
          return FS.mknod(path2, mode, 0);
        }),
        mkdev: (function(path2, mode, dev) {
          if (typeof dev === "undefined") {
            dev = mode;
            mode = 438;
          }
          mode |= 8192;
          return FS.mknod(path2, mode, dev);
        }),
        symlink: (function(oldpath, newpath) {
          if (!PATH.resolve(oldpath)) {
            throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
          }
          var lookup = FS.lookupPath(newpath, {
            parent: true
          });
          var parent = lookup.node;
          if (!parent) {
            throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
          }
          var newname = PATH.basename(newpath);
          var err = FS.mayCreate(parent, newname);
          if (err) {
            throw new FS.ErrnoError(err);
          }
          if (!parent.node_ops.symlink) {
            throw new FS.ErrnoError(ERRNO_CODES.EPERM);
          }
          return parent.node_ops.symlink(parent, newname, oldpath);
        }),
        rename: (function(old_path, new_path) {
          var old_dirname = PATH.dirname(old_path);
          var new_dirname = PATH.dirname(new_path);
          var old_name = PATH.basename(old_path);
          var new_name = PATH.basename(new_path);
          var lookup, old_dir, new_dir;
          try {
            lookup = FS.lookupPath(old_path, {
              parent: true
            });
            old_dir = lookup.node;
            lookup = FS.lookupPath(new_path, {
              parent: true
            });
            new_dir = lookup.node;
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
          }
          if (!old_dir || !new_dir) throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
          if (old_dir.mount !== new_dir.mount) {
            throw new FS.ErrnoError(ERRNO_CODES.EXDEV);
          }
          var old_node = FS.lookupNode(old_dir, old_name);
          var relative = PATH.relative(old_path, new_dirname);
          if (relative.charAt(0) !== ".") {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          relative = PATH.relative(new_path, old_dirname);
          if (relative.charAt(0) !== ".") {
            throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
          }
          var new_node;
          try {
            new_node = FS.lookupNode(new_dir, new_name);
          } catch (e) {
          }
          if (old_node === new_node) {
            return;
          }
          var isdir = FS.isDir(old_node.mode);
          var err = FS.mayDelete(old_dir, old_name, isdir);
          if (err) {
            throw new FS.ErrnoError(err);
          }
          err = new_node ? FS.mayDelete(new_dir, new_name, isdir) : FS.mayCreate(new_dir, new_name);
          if (err) {
            throw new FS.ErrnoError(err);
          }
          if (!old_dir.node_ops.rename) {
            throw new FS.ErrnoError(ERRNO_CODES.EPERM);
          }
          if (FS.isMountpoint(old_node) || new_node && FS.isMountpoint(new_node)) {
            throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
          }
          if (new_dir !== old_dir) {
            err = FS.nodePermissions(old_dir, "w");
            if (err) {
              throw new FS.ErrnoError(err);
            }
          }
          try {
            if (FS.trackingDelegate["willMovePath"]) {
              FS.trackingDelegate["willMovePath"](old_path, new_path);
            }
          } catch (e) {
            console.log("FS.trackingDelegate['willMovePath']('" + old_path + "', '" + new_path + "') threw an exception: " + e.message);
          }
          FS.hashRemoveNode(old_node);
          try {
            old_dir.node_ops.rename(old_node, new_dir, new_name);
          } catch (e) {
            throw e;
          } finally {
            FS.hashAddNode(old_node);
          }
          try {
            if (FS.trackingDelegate["onMovePath"]) FS.trackingDelegate["onMovePath"](old_path, new_path);
          } catch (e) {
            console.log("FS.trackingDelegate['onMovePath']('" + old_path + "', '" + new_path + "') threw an exception: " + e.message);
          }
        }),
        rmdir: (function(path2) {
          var lookup = FS.lookupPath(path2, {
            parent: true
          });
          var parent = lookup.node;
          var name = PATH.basename(path2);
          var node2 = FS.lookupNode(parent, name);
          var err = FS.mayDelete(parent, name, true);
          if (err) {
            throw new FS.ErrnoError(err);
          }
          if (!parent.node_ops.rmdir) {
            throw new FS.ErrnoError(ERRNO_CODES.EPERM);
          }
          if (FS.isMountpoint(node2)) {
            throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
          }
          try {
            if (FS.trackingDelegate["willDeletePath"]) {
              FS.trackingDelegate["willDeletePath"](path2);
            }
          } catch (e) {
            console.log("FS.trackingDelegate['willDeletePath']('" + path2 + "') threw an exception: " + e.message);
          }
          parent.node_ops.rmdir(parent, name);
          FS.destroyNode(node2);
          try {
            if (FS.trackingDelegate["onDeletePath"]) FS.trackingDelegate["onDeletePath"](path2);
          } catch (e) {
            console.log("FS.trackingDelegate['onDeletePath']('" + path2 + "') threw an exception: " + e.message);
          }
        }),
        readdir: (function(path2) {
          var lookup = FS.lookupPath(path2, {
            follow: true
          });
          var node2 = lookup.node;
          if (!node2.node_ops.readdir) {
            throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
          }
          return node2.node_ops.readdir(node2);
        }),
        unlink: (function(path2) {
          var lookup = FS.lookupPath(path2, {
            parent: true
          });
          var parent = lookup.node;
          var name = PATH.basename(path2);
          var node2 = FS.lookupNode(parent, name);
          var err = FS.mayDelete(parent, name, false);
          if (err) {
            throw new FS.ErrnoError(err);
          }
          if (!parent.node_ops.unlink) {
            throw new FS.ErrnoError(ERRNO_CODES.EPERM);
          }
          if (FS.isMountpoint(node2)) {
            throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
          }
          try {
            if (FS.trackingDelegate["willDeletePath"]) {
              FS.trackingDelegate["willDeletePath"](path2);
            }
          } catch (e) {
            console.log("FS.trackingDelegate['willDeletePath']('" + path2 + "') threw an exception: " + e.message);
          }
          parent.node_ops.unlink(parent, name);
          FS.destroyNode(node2);
          try {
            if (FS.trackingDelegate["onDeletePath"]) FS.trackingDelegate["onDeletePath"](path2);
          } catch (e) {
            console.log("FS.trackingDelegate['onDeletePath']('" + path2 + "') threw an exception: " + e.message);
          }
        }),
        readlink: (function(path2) {
          var lookup = FS.lookupPath(path2);
          var link = lookup.node;
          if (!link) {
            throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
          }
          if (!link.node_ops.readlink) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          return PATH.resolve(FS.getPath(link.parent), link.node_ops.readlink(link));
        }),
        stat: (function(path2, dontFollow) {
          var lookup = FS.lookupPath(path2, {
            follow: !dontFollow
          });
          var node2 = lookup.node;
          if (!node2) {
            throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
          }
          if (!node2.node_ops.getattr) {
            throw new FS.ErrnoError(ERRNO_CODES.EPERM);
          }
          return node2.node_ops.getattr(node2);
        }),
        lstat: (function(path2) {
          return FS.stat(path2, true);
        }),
        chmod: (function(path2, mode, dontFollow) {
          var node2;
          if (typeof path2 === "string") {
            var lookup = FS.lookupPath(path2, {
              follow: !dontFollow
            });
            node2 = lookup.node;
          } else {
            node2 = path2;
          }
          if (!node2.node_ops.setattr) {
            throw new FS.ErrnoError(ERRNO_CODES.EPERM);
          }
          node2.node_ops.setattr(node2, {
            mode: mode & 4095 | node2.mode & ~4095,
            timestamp: Date.now()
          });
        }),
        lchmod: (function(path2, mode) {
          FS.chmod(path2, mode, true);
        }),
        fchmod: (function(fd, mode) {
          var stream = FS.getStream(fd);
          if (!stream) {
            throw new FS.ErrnoError(ERRNO_CODES.EBADF);
          }
          FS.chmod(stream.node, mode);
        }),
        chown: (function(path2, uid, gid, dontFollow) {
          var node2;
          if (typeof path2 === "string") {
            var lookup = FS.lookupPath(path2, {
              follow: !dontFollow
            });
            node2 = lookup.node;
          } else {
            node2 = path2;
          }
          if (!node2.node_ops.setattr) {
            throw new FS.ErrnoError(ERRNO_CODES.EPERM);
          }
          node2.node_ops.setattr(node2, {
            timestamp: Date.now()
          });
        }),
        lchown: (function(path2, uid, gid) {
          FS.chown(path2, uid, gid, true);
        }),
        fchown: (function(fd, uid, gid) {
          var stream = FS.getStream(fd);
          if (!stream) {
            throw new FS.ErrnoError(ERRNO_CODES.EBADF);
          }
          FS.chown(stream.node, uid, gid);
        }),
        truncate: (function(path2, len) {
          if (len < 0) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          var node2;
          if (typeof path2 === "string") {
            var lookup = FS.lookupPath(path2, {
              follow: true
            });
            node2 = lookup.node;
          } else {
            node2 = path2;
          }
          if (!node2.node_ops.setattr) {
            throw new FS.ErrnoError(ERRNO_CODES.EPERM);
          }
          if (FS.isDir(node2.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
          }
          if (!FS.isFile(node2.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          var err = FS.nodePermissions(node2, "w");
          if (err) {
            throw new FS.ErrnoError(err);
          }
          node2.node_ops.setattr(node2, {
            size: len,
            timestamp: Date.now()
          });
        }),
        ftruncate: (function(fd, len) {
          var stream = FS.getStream(fd);
          if (!stream) {
            throw new FS.ErrnoError(ERRNO_CODES.EBADF);
          }
          if ((stream.flags & 2097155) === 0) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          FS.truncate(stream.node, len);
        }),
        utime: (function(path2, atime, mtime) {
          var lookup = FS.lookupPath(path2, {
            follow: true
          });
          var node2 = lookup.node;
          node2.node_ops.setattr(node2, {
            timestamp: Math.max(atime, mtime)
          });
        }),
        open: (function(path2, flags, mode, fd_start, fd_end) {
          if (path2 === "") {
            throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
          }
          flags = typeof flags === "string" ? FS.modeStringToFlags(flags) : flags;
          mode = typeof mode === "undefined" ? 438 : mode;
          if (flags & 64) {
            mode = mode & 4095 | 32768;
          } else {
            mode = 0;
          }
          var node2;
          if (typeof path2 === "object") {
            node2 = path2;
          } else {
            path2 = PATH.normalize(path2);
            try {
              var lookup = FS.lookupPath(path2, {
                follow: !(flags & 131072)
              });
              node2 = lookup.node;
            } catch (e) {
            }
          }
          var created = false;
          if (flags & 64) {
            if (node2) {
              if (flags & 128) {
                throw new FS.ErrnoError(ERRNO_CODES.EEXIST);
              }
            } else {
              node2 = FS.mknod(path2, mode, 0);
              created = true;
            }
          }
          if (!node2) {
            throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
          }
          if (FS.isChrdev(node2.mode)) {
            flags &= ~512;
          }
          if (flags & 65536 && !FS.isDir(node2.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
          }
          if (!created) {
            var err = FS.mayOpen(node2, flags);
            if (err) {
              throw new FS.ErrnoError(err);
            }
          }
          if (flags & 512) {
            FS.truncate(node2, 0);
          }
          flags &= ~(128 | 512);
          var stream = FS.createStream({
            node: node2,
            path: FS.getPath(node2),
            flags,
            seekable: true,
            position: 0,
            stream_ops: node2.stream_ops,
            ungotten: [],
            error: false
          }, fd_start, fd_end);
          if (stream.stream_ops.open) {
            stream.stream_ops.open(stream);
          }
          if (Module["logReadFiles"] && !(flags & 1)) {
            if (!FS.readFiles) FS.readFiles = {};
            if (!(path2 in FS.readFiles)) {
              FS.readFiles[path2] = 1;
              Module["printErr"]("read file: " + path2);
            }
          }
          try {
            if (FS.trackingDelegate["onOpenFile"]) {
              var trackingFlags = 0;
              if ((flags & 2097155) !== 1) {
                trackingFlags |= FS.tracking.openFlags.READ;
              }
              if ((flags & 2097155) !== 0) {
                trackingFlags |= FS.tracking.openFlags.WRITE;
              }
              FS.trackingDelegate["onOpenFile"](path2, trackingFlags);
            }
          } catch (e) {
            console.log("FS.trackingDelegate['onOpenFile']('" + path2 + "', flags) threw an exception: " + e.message);
          }
          return stream;
        }),
        close: (function(stream) {
          if (stream.getdents) stream.getdents = null;
          try {
            if (stream.stream_ops.close) {
              stream.stream_ops.close(stream);
            }
          } catch (e) {
            throw e;
          } finally {
            FS.closeStream(stream.fd);
          }
        }),
        llseek: (function(stream, offset, whence) {
          if (!stream.seekable || !stream.stream_ops.llseek) {
            throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
          }
          stream.position = stream.stream_ops.llseek(stream, offset, whence);
          stream.ungotten = [];
          return stream.position;
        }),
        read: (function(stream, buffer2, offset, length, position) {
          if (length < 0 || position < 0) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          if ((stream.flags & 2097155) === 1) {
            throw new FS.ErrnoError(ERRNO_CODES.EBADF);
          }
          if (FS.isDir(stream.node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
          }
          if (!stream.stream_ops.read) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          var seeking = true;
          if (typeof position === "undefined") {
            position = stream.position;
            seeking = false;
          } else if (!stream.seekable) {
            throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
          }
          var bytesRead = stream.stream_ops.read(stream, buffer2, offset, length, position);
          if (!seeking) stream.position += bytesRead;
          return bytesRead;
        }),
        write: (function(stream, buffer2, offset, length, position, canOwn) {
          if (length < 0 || position < 0) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          if ((stream.flags & 2097155) === 0) {
            throw new FS.ErrnoError(ERRNO_CODES.EBADF);
          }
          if (FS.isDir(stream.node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
          }
          if (!stream.stream_ops.write) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          if (stream.flags & 1024) {
            FS.llseek(stream, 0, 2);
          }
          var seeking = true;
          if (typeof position === "undefined") {
            position = stream.position;
            seeking = false;
          } else if (!stream.seekable) {
            throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
          }
          var bytesWritten = stream.stream_ops.write(stream, buffer2, offset, length, position, canOwn);
          if (!seeking) stream.position += bytesWritten;
          try {
            if (stream.path && FS.trackingDelegate["onWriteToFile"]) FS.trackingDelegate["onWriteToFile"](stream.path);
          } catch (e) {
            console.log("FS.trackingDelegate['onWriteToFile']('" + path + "') threw an exception: " + e.message);
          }
          return bytesWritten;
        }),
        allocate: (function(stream, offset, length) {
          if (offset < 0 || length <= 0) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          if ((stream.flags & 2097155) === 0) {
            throw new FS.ErrnoError(ERRNO_CODES.EBADF);
          }
          if (!FS.isFile(stream.node.mode) && !FS.isDir(node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
          }
          if (!stream.stream_ops.allocate) {
            throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP);
          }
          stream.stream_ops.allocate(stream, offset, length);
        }),
        mmap: (function(stream, buffer2, offset, length, position, prot, flags) {
          if ((stream.flags & 2097155) === 1) {
            throw new FS.ErrnoError(ERRNO_CODES.EACCES);
          }
          if (!stream.stream_ops.mmap) {
            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
          }
          return stream.stream_ops.mmap(stream, buffer2, offset, length, position, prot, flags);
        }),
        msync: (function(stream, buffer2, offset, length, mmapFlags) {
          if (!stream || !stream.stream_ops.msync) {
            return 0;
          }
          return stream.stream_ops.msync(stream, buffer2, offset, length, mmapFlags);
        }),
        munmap: (function(stream) {
          return 0;
        }),
        ioctl: (function(stream, cmd, arg2) {
          if (!stream.stream_ops.ioctl) {
            throw new FS.ErrnoError(ERRNO_CODES.ENOTTY);
          }
          return stream.stream_ops.ioctl(stream, cmd, arg2);
        }),
        readFile: (function(path2, opts) {
          opts = opts || {};
          opts.flags = opts.flags || "r";
          opts.encoding = opts.encoding || "binary";
          if (opts.encoding !== "utf8" && opts.encoding !== "binary") {
            throw new Error('Invalid encoding type "' + opts.encoding + '"');
          }
          var ret;
          var stream = FS.open(path2, opts.flags);
          var stat = FS.stat(path2);
          var length = stat.size;
          var buf = new Uint8Array(length);
          FS.read(stream, buf, 0, length, 0);
          if (opts.encoding === "utf8") {
            ret = UTF8ArrayToString(buf, 0);
          } else if (opts.encoding === "binary") {
            ret = buf;
          }
          FS.close(stream);
          return ret;
        }),
        writeFile: (function(path2, data, opts) {
          opts = opts || {};
          opts.flags = opts.flags || "w";
          opts.encoding = opts.encoding || "utf8";
          if (opts.encoding !== "utf8" && opts.encoding !== "binary") {
            throw new Error('Invalid encoding type "' + opts.encoding + '"');
          }
          var stream = FS.open(path2, opts.flags, opts.mode);
          if (opts.encoding === "utf8") {
            var buf = new Uint8Array(lengthBytesUTF8(data) + 1);
            var actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);
            FS.write(stream, buf, 0, actualNumBytes, 0, opts.canOwn);
          } else if (opts.encoding === "binary") {
            FS.write(stream, data, 0, data.length, 0, opts.canOwn);
          }
          FS.close(stream);
        }),
        cwd: (function() {
          return FS.currentPath;
        }),
        chdir: (function(path2) {
          var lookup = FS.lookupPath(path2, {
            follow: true
          });
          if (!FS.isDir(lookup.node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
          }
          var err = FS.nodePermissions(lookup.node, "x");
          if (err) {
            throw new FS.ErrnoError(err);
          }
          FS.currentPath = lookup.path;
        }),
        createDefaultDirectories: (function() {
          FS.mkdir("/tmp");
          FS.mkdir("/home");
          FS.mkdir("/home/web_user");
        }),
        createDefaultDevices: (function() {
          FS.mkdir("/dev");
          FS.registerDevice(FS.makedev(1, 3), {
            read: (function() {
              return 0;
            }),
            write: (function(stream, buffer2, offset, length, pos) {
              return length;
            })
          });
          FS.mkdev("/dev/null", FS.makedev(1, 3));
          TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);
          TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);
          FS.mkdev("/dev/tty", FS.makedev(5, 0));
          FS.mkdev("/dev/tty1", FS.makedev(6, 0));
          var random_device;
          if (typeof crypto !== "undefined") {
            var randomBuffer = new Uint8Array(1);
            random_device = (function() {
              crypto.getRandomValues(randomBuffer);
              return randomBuffer[0];
            });
          } else if (ENVIRONMENT_IS_NODE) {
            random_device = (function() {
              return crypto$1.randomBytes(1)[0];
            });
          } else {
            random_device = (function() {
              return Math.random() * 256 | 0;
            });
          }
          FS.createDevice("/dev", "random", random_device);
          FS.createDevice("/dev", "urandom", random_device);
          FS.mkdir("/dev/shm");
          FS.mkdir("/dev/shm/tmp");
        }),
        createSpecialDirectories: (function() {
          FS.mkdir("/proc");
          FS.mkdir("/proc/self");
          FS.mkdir("/proc/self/fd");
          FS.mount({
            mount: (function() {
              var node2 = FS.createNode("/proc/self", "fd", 16384 | 511, 73);
              node2.node_ops = {
                lookup: (function(parent, name) {
                  var fd = +name;
                  var stream = FS.getStream(fd);
                  if (!stream) throw new FS.ErrnoError(ERRNO_CODES.EBADF);
                  var ret = {
                    parent: null,
                    mount: {
                      mountpoint: "fake"
                    },
                    node_ops: {
                      readlink: (function() {
                        return stream.path;
                      })
                    }
                  };
                  ret.parent = ret;
                  return ret;
                })
              };
              return node2;
            })
          }, {}, "/proc/self/fd");
        }),
        createStandardStreams: (function() {
          if (Module["stdin"]) {
            FS.createDevice("/dev", "stdin", Module["stdin"]);
          } else {
            FS.symlink("/dev/tty", "/dev/stdin");
          }
          if (Module["stdout"]) {
            FS.createDevice("/dev", "stdout", null, Module["stdout"]);
          } else {
            FS.symlink("/dev/tty", "/dev/stdout");
          }
          if (Module["stderr"]) {
            FS.createDevice("/dev", "stderr", null, Module["stderr"]);
          } else {
            FS.symlink("/dev/tty1", "/dev/stderr");
          }
          var stdin = FS.open("/dev/stdin", "r");
          assert(stdin.fd === 0, "invalid handle for stdin (" + stdin.fd + ")");
          var stdout = FS.open("/dev/stdout", "w");
          assert(stdout.fd === 1, "invalid handle for stdout (" + stdout.fd + ")");
          var stderr = FS.open("/dev/stderr", "w");
          assert(stderr.fd === 2, "invalid handle for stderr (" + stderr.fd + ")");
        }),
        ensureErrnoError: (function() {
          if (FS.ErrnoError) return;
          FS.ErrnoError = function ErrnoError(errno, node2) {
            this.node = node2;
            this.setErrno = (function(errno2) {
              this.errno = errno2;
              for (var key2 in ERRNO_CODES) {
                if (ERRNO_CODES[key2] === errno2) {
                  this.code = key2;
                  break;
                }
              }
            });
            this.setErrno(errno);
            this.message = ERRNO_MESSAGES[errno];
          };
          FS.ErrnoError.prototype = new Error();
          FS.ErrnoError.prototype.constructor = FS.ErrnoError;
          [ERRNO_CODES.ENOENT].forEach((function(code) {
            FS.genericErrors[code] = new FS.ErrnoError(code);
            FS.genericErrors[code].stack = "<generic error, no stack>";
          }));
        }),
        staticInit: (function() {
          FS.ensureErrnoError();
          FS.nameTable = new Array(4096);
          FS.mount(MEMFS, {}, "/");
          FS.createDefaultDirectories();
          FS.createDefaultDevices();
          FS.createSpecialDirectories();
          FS.filesystems = {
            "MEMFS": MEMFS,
            "IDBFS": IDBFS,
            "NODEFS": NODEFS,
            "WORKERFS": WORKERFS
          };
        }),
        init: (function(input, output, error) {
          assert(!FS.init.initialized, "FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)");
          FS.init.initialized = true;
          FS.ensureErrnoError();
          Module["stdin"] = input || Module["stdin"];
          Module["stdout"] = output || Module["stdout"];
          Module["stderr"] = error || Module["stderr"];
          FS.createStandardStreams();
        }),
        quit: (function() {
          FS.init.initialized = false;
          var fflush = Module["_fflush"];
          if (fflush) fflush(0);
          for (var i2 = 0; i2 < FS.streams.length; i2++) {
            var stream = FS.streams[i2];
            if (!stream) {
              continue;
            }
            FS.close(stream);
          }
        }),
        getMode: (function(canRead, canWrite) {
          var mode = 0;
          if (canRead) mode |= 292 | 73;
          if (canWrite) mode |= 146;
          return mode;
        }),
        joinPath: (function(parts, forceRelative) {
          var path2 = PATH.join.apply(null, parts);
          if (forceRelative && path2[0] == "/") path2 = path2.substr(1);
          return path2;
        }),
        absolutePath: (function(relative, base) {
          return PATH.resolve(base, relative);
        }),
        standardizePath: (function(path2) {
          return PATH.normalize(path2);
        }),
        findObject: (function(path2, dontResolveLastLink) {
          var ret = FS.analyzePath(path2, dontResolveLastLink);
          if (ret.exists) {
            return ret.object;
          } else {
            ___setErrNo(ret.error);
            return null;
          }
        }),
        analyzePath: (function(path2, dontResolveLastLink) {
          try {
            var lookup = FS.lookupPath(path2, {
              follow: !dontResolveLastLink
            });
            path2 = lookup.path;
          } catch (e) {
          }
          var ret = {
            isRoot: false,
            exists: false,
            error: 0,
            name: null,
            path: null,
            object: null,
            parentExists: false,
            parentPath: null,
            parentObject: null
          };
          try {
            var lookup = FS.lookupPath(path2, {
              parent: true
            });
            ret.parentExists = true;
            ret.parentPath = lookup.path;
            ret.parentObject = lookup.node;
            ret.name = PATH.basename(path2);
            lookup = FS.lookupPath(path2, {
              follow: !dontResolveLastLink
            });
            ret.exists = true;
            ret.path = lookup.path;
            ret.object = lookup.node;
            ret.name = lookup.node.name;
            ret.isRoot = lookup.path === "/";
          } catch (e) {
            ret.error = e.errno;
          }
          return ret;
        }),
        createFolder: (function(parent, name, canRead, canWrite) {
          var path2 = PATH.join2(typeof parent === "string" ? parent : FS.getPath(parent), name);
          var mode = FS.getMode(canRead, canWrite);
          return FS.mkdir(path2, mode);
        }),
        createPath: (function(parent, path2, canRead, canWrite) {
          parent = typeof parent === "string" ? parent : FS.getPath(parent);
          var parts = path2.split("/").reverse();
          while (parts.length) {
            var part = parts.pop();
            if (!part) continue;
            var current = PATH.join2(parent, part);
            try {
              FS.mkdir(current);
            } catch (e) {
            }
            parent = current;
          }
          return current;
        }),
        createFile: (function(parent, name, properties, canRead, canWrite) {
          var path2 = PATH.join2(typeof parent === "string" ? parent : FS.getPath(parent), name);
          var mode = FS.getMode(canRead, canWrite);
          return FS.create(path2, mode);
        }),
        createDataFile: (function(parent, name, data, canRead, canWrite, canOwn) {
          var path2 = name ? PATH.join2(typeof parent === "string" ? parent : FS.getPath(parent), name) : parent;
          var mode = FS.getMode(canRead, canWrite);
          var node2 = FS.create(path2, mode);
          if (data) {
            if (typeof data === "string") {
              var arr = new Array(data.length);
              for (var i2 = 0, len = data.length; i2 < len; ++i2) arr[i2] = data.charCodeAt(i2);
              data = arr;
            }
            FS.chmod(node2, mode | 146);
            var stream = FS.open(node2, "w");
            FS.write(stream, data, 0, data.length, 0, canOwn);
            FS.close(stream);
            FS.chmod(node2, mode);
          }
          return node2;
        }),
        createDevice: (function(parent, name, input, output) {
          var path2 = PATH.join2(typeof parent === "string" ? parent : FS.getPath(parent), name);
          var mode = FS.getMode(!!input, !!output);
          if (!FS.createDevice.major) FS.createDevice.major = 64;
          var dev = FS.makedev(FS.createDevice.major++, 0);
          FS.registerDevice(dev, {
            open: (function(stream) {
              stream.seekable = false;
            }),
            close: (function(stream) {
              if (output && output.buffer && output.buffer.length) {
                output(10);
              }
            }),
            read: (function(stream, buffer2, offset, length, pos) {
              var bytesRead = 0;
              for (var i2 = 0; i2 < length; i2++) {
                var result;
                try {
                  result = input();
                } catch (e) {
                  throw new FS.ErrnoError(ERRNO_CODES.EIO);
                }
                if (result === void 0 && bytesRead === 0) {
                  throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
                }
                if (result === null || result === void 0) break;
                bytesRead++;
                buffer2[offset + i2] = result;
              }
              if (bytesRead) {
                stream.node.timestamp = Date.now();
              }
              return bytesRead;
            }),
            write: (function(stream, buffer2, offset, length, pos) {
              for (var i2 = 0; i2 < length; i2++) {
                try {
                  output(buffer2[offset + i2]);
                } catch (e) {
                  throw new FS.ErrnoError(ERRNO_CODES.EIO);
                }
              }
              if (length) {
                stream.node.timestamp = Date.now();
              }
              return i2;
            })
          });
          return FS.mkdev(path2, mode, dev);
        }),
        createLink: (function(parent, name, target, canRead, canWrite) {
          var path2 = PATH.join2(typeof parent === "string" ? parent : FS.getPath(parent), name);
          return FS.symlink(target, path2);
        }),
        forceLoadFile: (function(obj) {
          if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;
          var success = true;
          if (typeof XMLHttpRequest !== "undefined") {
            throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");
          } else if (Module["read"]) {
            try {
              obj.contents = intArrayFromString(Module["read"](obj.url), true);
              obj.usedBytes = obj.contents.length;
            } catch (e) {
              success = false;
            }
          } else {
            throw new Error("Cannot load without read() or XMLHttpRequest.");
          }
          if (!success) ___setErrNo(ERRNO_CODES.EIO);
          return success;
        }),
        createLazyFile: (function(parent, name, url, canRead, canWrite) {
          function LazyUint8Array() {
            this.lengthKnown = false;
            this.chunks = [];
          }
          LazyUint8Array.prototype.get = function LazyUint8Array_get(idx) {
            if (idx > this.length - 1 || idx < 0) {
              return void 0;
            }
            var chunkOffset = idx % this.chunkSize;
            var chunkNum = idx / this.chunkSize | 0;
            return this.getter(chunkNum)[chunkOffset];
          };
          LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {
            this.getter = getter;
          };
          LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {
            var xhr = new XMLHttpRequest();
            xhr.open("HEAD", url, false);
            xhr.send(null);
            if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
            var datalength = Number(xhr.getResponseHeader("Content-length"));
            var header;
            var hasByteServing = (header = xhr.getResponseHeader("Accept-Ranges")) && header === "bytes";
            var usesGzip = (header = xhr.getResponseHeader("Content-Encoding")) && header === "gzip";
            var chunkSize = 1024 * 1024;
            if (!hasByteServing) chunkSize = datalength;
            var doXHR = (function(from, to) {
              if (from > to) throw new Error("invalid range (" + from + ", " + to + ") or no bytes requested!");
              if (to > datalength - 1) throw new Error("only " + datalength + " bytes available! programmer error!");
              var xhr2 = new XMLHttpRequest();
              xhr2.open("GET", url, false);
              if (datalength !== chunkSize) xhr2.setRequestHeader("Range", "bytes=" + from + "-" + to);
              if (typeof Uint8Array != "undefined") xhr2.responseType = "arraybuffer";
              if (xhr2.overrideMimeType) {
                xhr2.overrideMimeType("text/plain; charset=x-user-defined");
              }
              xhr2.send(null);
              if (!(xhr2.status >= 200 && xhr2.status < 300 || xhr2.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr2.status);
              if (xhr2.response !== void 0) {
                return new Uint8Array(xhr2.response || []);
              } else {
                return intArrayFromString(xhr2.responseText || "", true);
              }
            });
            var lazyArray2 = this;
            lazyArray2.setDataGetter((function(chunkNum) {
              var start = chunkNum * chunkSize;
              var end = (chunkNum + 1) * chunkSize - 1;
              end = Math.min(end, datalength - 1);
              if (typeof lazyArray2.chunks[chunkNum] === "undefined") {
                lazyArray2.chunks[chunkNum] = doXHR(start, end);
              }
              if (typeof lazyArray2.chunks[chunkNum] === "undefined") throw new Error("doXHR failed!");
              return lazyArray2.chunks[chunkNum];
            }));
            if (usesGzip || !datalength) {
              chunkSize = datalength = 1;
              datalength = this.getter(0).length;
              chunkSize = datalength;
              console.log("LazyFiles on gzip forces download of the whole file when length is accessed");
            }
            this._length = datalength;
            this._chunkSize = chunkSize;
            this.lengthKnown = true;
          };
          if (typeof XMLHttpRequest !== "undefined") {
            if (!ENVIRONMENT_IS_WORKER) throw "Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc";
            var lazyArray = new LazyUint8Array();
            Object.defineProperties(lazyArray, {
              length: {
                get: (function() {
                  if (!this.lengthKnown) {
                    this.cacheLength();
                  }
                  return this._length;
                })
              },
              chunkSize: {
                get: (function() {
                  if (!this.lengthKnown) {
                    this.cacheLength();
                  }
                  return this._chunkSize;
                })
              }
            });
            var properties = {
              isDevice: false,
              contents: lazyArray
            };
          } else {
            var properties = {
              isDevice: false,
              url
            };
          }
          var node2 = FS.createFile(parent, name, properties, canRead, canWrite);
          if (properties.contents) {
            node2.contents = properties.contents;
          } else if (properties.url) {
            node2.contents = null;
            node2.url = properties.url;
          }
          Object.defineProperties(node2, {
            usedBytes: {
              get: (function() {
                return this.contents.length;
              })
            }
          });
          var stream_ops = {};
          var keys = Object.keys(node2.stream_ops);
          keys.forEach((function(key2) {
            var fn = node2.stream_ops[key2];
            stream_ops[key2] = function forceLoadLazyFile() {
              if (!FS.forceLoadFile(node2)) {
                throw new FS.ErrnoError(ERRNO_CODES.EIO);
              }
              return fn.apply(null, arguments);
            };
          }));
          stream_ops.read = function stream_ops_read(stream, buffer2, offset, length, position) {
            if (!FS.forceLoadFile(node2)) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
            var contents = stream.node.contents;
            if (position >= contents.length) return 0;
            var size = Math.min(contents.length - position, length);
            assert(size >= 0);
            if (contents.slice) {
              for (var i2 = 0; i2 < size; i2++) {
                buffer2[offset + i2] = contents[position + i2];
              }
            } else {
              for (var i2 = 0; i2 < size; i2++) {
                buffer2[offset + i2] = contents.get(position + i2);
              }
            }
            return size;
          };
          node2.stream_ops = stream_ops;
          return node2;
        }),
        createPreloadedFile: (function(parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn, preFinish) {
          Browser.init();
          var fullname = name ? PATH.resolve(PATH.join2(parent, name)) : parent;
          var dep = getUniqueRunDependency("cp " + fullname);
          function processData(byteArray) {
            function finish(byteArray2) {
              if (preFinish) preFinish();
              if (!dontCreateFile) {
                FS.createDataFile(parent, name, byteArray2, canRead, canWrite, canOwn);
              }
              if (onload) onload();
              removeRunDependency(dep);
            }
            var handled = false;
            Module["preloadPlugins"].forEach((function(plugin) {
              if (handled) return;
              if (plugin["canHandle"](fullname)) {
                plugin["handle"](byteArray, fullname, finish, (function() {
                  if (onerror) onerror();
                  removeRunDependency(dep);
                }));
                handled = true;
              }
            }));
            if (!handled) finish(byteArray);
          }
          addRunDependency(dep);
          if (typeof url == "string") {
            Browser.asyncLoad(url, (function(byteArray) {
              processData(byteArray);
            }), onerror);
          } else {
            processData(url);
          }
        }),
        indexedDB: (function() {
          return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
        }),
        DB_NAME: (function() {
          return "EM_FS_" + window.location.pathname;
        }),
        DB_VERSION: 20,
        DB_STORE_NAME: "FILE_DATA",
        saveFilesToDB: (function(paths, onload, onerror) {
          onload = onload || (function() {
          });
          onerror = onerror || (function() {
          });
          var indexedDB2 = FS.indexedDB();
          try {
            var openRequest = indexedDB2.open(FS.DB_NAME(), FS.DB_VERSION);
          } catch (e) {
            return onerror(e);
          }
          openRequest.onupgradeneeded = function openRequest_onupgradeneeded() {
            console.log("creating db");
            var db = openRequest.result;
            db.createObjectStore(FS.DB_STORE_NAME);
          };
          openRequest.onsuccess = function openRequest_onsuccess() {
            var db = openRequest.result;
            var transaction = db.transaction([FS.DB_STORE_NAME], "readwrite");
            var files = transaction.objectStore(FS.DB_STORE_NAME);
            var ok = 0, fail = 0, total = paths.length;
            function finish() {
              if (fail == 0) onload();
              else onerror();
            }
            paths.forEach((function(path2) {
              var putRequest = files.put(FS.analyzePath(path2).object.contents, path2);
              putRequest.onsuccess = function putRequest_onsuccess() {
                ok++;
                if (ok + fail == total) finish();
              };
              putRequest.onerror = function putRequest_onerror() {
                fail++;
                if (ok + fail == total) finish();
              };
            }));
            transaction.onerror = onerror;
          };
          openRequest.onerror = onerror;
        }),
        loadFilesFromDB: (function(paths, onload, onerror) {
          onload = onload || (function() {
          });
          onerror = onerror || (function() {
          });
          var indexedDB2 = FS.indexedDB();
          try {
            var openRequest = indexedDB2.open(FS.DB_NAME(), FS.DB_VERSION);
          } catch (e) {
            return onerror(e);
          }
          openRequest.onupgradeneeded = onerror;
          openRequest.onsuccess = function openRequest_onsuccess() {
            var db = openRequest.result;
            try {
              var transaction = db.transaction([FS.DB_STORE_NAME], "readonly");
            } catch (e) {
              onerror(e);
              return;
            }
            var files = transaction.objectStore(FS.DB_STORE_NAME);
            var ok = 0, fail = 0, total = paths.length;
            function finish() {
              if (fail == 0) onload();
              else onerror();
            }
            paths.forEach((function(path2) {
              var getRequest = files.get(path2);
              getRequest.onsuccess = function getRequest_onsuccess() {
                if (FS.analyzePath(path2).exists) {
                  FS.unlink(path2);
                }
                FS.createDataFile(PATH.dirname(path2), PATH.basename(path2), getRequest.result, true, true, true);
                ok++;
                if (ok + fail == total) finish();
              };
              getRequest.onerror = function getRequest_onerror() {
                fail++;
                if (ok + fail == total) finish();
              };
            }));
            transaction.onerror = onerror;
          };
          openRequest.onerror = onerror;
        })
      };
      var SYSCALLS = {
        DEFAULT_POLLMASK: 5,
        mappings: {},
        umask: 511,
        calculateAt: (function(dirfd, path2) {
          if (path2[0] !== "/") {
            var dir;
            if (dirfd === -100) {
              dir = FS.cwd();
            } else {
              var dirstream = FS.getStream(dirfd);
              if (!dirstream) throw new FS.ErrnoError(ERRNO_CODES.EBADF);
              dir = dirstream.path;
            }
            path2 = PATH.join2(dir, path2);
          }
          return path2;
        }),
        doStat: (function(func2, path2, buf) {
          try {
            var stat = func2(path2);
          } catch (e) {
            if (e && e.node && PATH.normalize(path2) !== PATH.normalize(FS.getPath(e.node))) {
              return -ERRNO_CODES.ENOTDIR;
            }
            throw e;
          }
          HEAP32[buf >> 2] = stat.dev;
          HEAP32[buf + 4 >> 2] = 0;
          HEAP32[buf + 8 >> 2] = stat.ino;
          HEAP32[buf + 12 >> 2] = stat.mode;
          HEAP32[buf + 16 >> 2] = stat.nlink;
          HEAP32[buf + 20 >> 2] = stat.uid;
          HEAP32[buf + 24 >> 2] = stat.gid;
          HEAP32[buf + 28 >> 2] = stat.rdev;
          HEAP32[buf + 32 >> 2] = 0;
          HEAP32[buf + 36 >> 2] = stat.size;
          HEAP32[buf + 40 >> 2] = 4096;
          HEAP32[buf + 44 >> 2] = stat.blocks;
          HEAP32[buf + 48 >> 2] = stat.atime.getTime() / 1e3 | 0;
          HEAP32[buf + 52 >> 2] = 0;
          HEAP32[buf + 56 >> 2] = stat.mtime.getTime() / 1e3 | 0;
          HEAP32[buf + 60 >> 2] = 0;
          HEAP32[buf + 64 >> 2] = stat.ctime.getTime() / 1e3 | 0;
          HEAP32[buf + 68 >> 2] = 0;
          HEAP32[buf + 72 >> 2] = stat.ino;
          return 0;
        }),
        doMsync: (function(addr, stream, len, flags) {
          var buffer2 = new Uint8Array(HEAPU8.subarray(addr, addr + len));
          FS.msync(stream, buffer2, 0, len, flags);
        }),
        doMkdir: (function(path2, mode) {
          path2 = PATH.normalize(path2);
          if (path2[path2.length - 1] === "/") path2 = path2.substr(0, path2.length - 1);
          FS.mkdir(path2, mode, 0);
          return 0;
        }),
        doMknod: (function(path2, mode, dev) {
          switch (mode & 61440) {
            case 32768:
            case 8192:
            case 24576:
            case 4096:
            case 49152:
              break;
            default:
              return -ERRNO_CODES.EINVAL;
          }
          FS.mknod(path2, mode, dev);
          return 0;
        }),
        doReadlink: (function(path2, buf, bufsize) {
          if (bufsize <= 0) return -ERRNO_CODES.EINVAL;
          var ret = FS.readlink(path2);
          var len = Math.min(bufsize, lengthBytesUTF8(ret));
          var endChar = HEAP8[buf + len];
          stringToUTF8(ret, buf, bufsize + 1);
          HEAP8[buf + len] = endChar;
          return len;
        }),
        doAccess: (function(path2, amode) {
          if (amode & ~7) {
            return -ERRNO_CODES.EINVAL;
          }
          var node2;
          var lookup = FS.lookupPath(path2, {
            follow: true
          });
          node2 = lookup.node;
          var perms = "";
          if (amode & 4) perms += "r";
          if (amode & 2) perms += "w";
          if (amode & 1) perms += "x";
          if (perms && FS.nodePermissions(node2, perms)) {
            return -ERRNO_CODES.EACCES;
          }
          return 0;
        }),
        doDup: (function(path2, flags, suggestFD) {
          var suggest = FS.getStream(suggestFD);
          if (suggest) FS.close(suggest);
          return FS.open(path2, flags, 0, suggestFD, suggestFD).fd;
        }),
        doReadv: (function(stream, iov, iovcnt, offset) {
          var ret = 0;
          for (var i2 = 0; i2 < iovcnt; i2++) {
            var ptr = HEAP32[iov + i2 * 8 >> 2];
            var len = HEAP32[iov + (i2 * 8 + 4) >> 2];
            var curr = FS.read(stream, HEAP8, ptr, len, offset);
            if (curr < 0) return -1;
            ret += curr;
            if (curr < len) break;
          }
          return ret;
        }),
        doWritev: (function(stream, iov, iovcnt, offset) {
          var ret = 0;
          for (var i2 = 0; i2 < iovcnt; i2++) {
            var ptr = HEAP32[iov + i2 * 8 >> 2];
            var len = HEAP32[iov + (i2 * 8 + 4) >> 2];
            var curr = FS.write(stream, HEAP8, ptr, len, offset);
            if (curr < 0) return -1;
            ret += curr;
          }
          return ret;
        }),
        varargs: 0,
        get: (function(varargs) {
          SYSCALLS.varargs += 4;
          var ret = HEAP32[SYSCALLS.varargs - 4 >> 2];
          return ret;
        }),
        getStr: (function() {
          var ret = Pointer_stringify(SYSCALLS.get());
          return ret;
        }),
        getStreamFromFD: (function() {
          var stream = FS.getStream(SYSCALLS.get());
          if (!stream) throw new FS.ErrnoError(ERRNO_CODES.EBADF);
          return stream;
        }),
        getSocketFromFD: (function() {
          var socket = SOCKFS.getSocket(SYSCALLS.get());
          if (!socket) throw new FS.ErrnoError(ERRNO_CODES.EBADF);
          return socket;
        }),
        getSocketAddress: (function(allowNull) {
          var addrp = SYSCALLS.get(), addrlen = SYSCALLS.get();
          if (allowNull && addrp === 0) return null;
          var info = __read_sockaddr(addrp, addrlen);
          if (info.errno) throw new FS.ErrnoError(info.errno);
          info.addr = DNS.lookup_addr(info.addr) || info.addr;
          return info;
        }),
        get64: (function() {
          var low = SYSCALLS.get(), high = SYSCALLS.get();
          if (low >= 0) assert(high === 0);
          else assert(high === -1);
          return low;
        }),
        getZero: (function() {
          assert(SYSCALLS.get() === 0);
        })
      };
      function ___syscall63(which, varargs) {
        SYSCALLS.varargs = varargs;
        try {
          var old = SYSCALLS.getStreamFromFD(), suggestFD = SYSCALLS.get();
          if (old.fd === suggestFD) return suggestFD;
          return SYSCALLS.doDup(old.path, old.flags, suggestFD);
        } catch (e) {
          if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
          return -e.errno;
        }
      }
      Module["_memset"] = _memset;
      Module["_bitshift64Shl"] = _bitshift64Shl;
      function _abort() {
        Module["abort"]();
      }
      function ___syscall195(which, varargs) {
        SYSCALLS.varargs = varargs;
        try {
          var path2 = SYSCALLS.getStr(), buf = SYSCALLS.get();
          return SYSCALLS.doStat(FS.stat, path2, buf);
        } catch (e) {
          if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
          return -e.errno;
        }
      }
      function ___syscall194(which, varargs) {
        SYSCALLS.varargs = varargs;
        try {
          var fd = SYSCALLS.get(), zero = SYSCALLS.getZero(), length = SYSCALLS.get64();
          FS.ftruncate(fd, length);
          return 0;
        } catch (e) {
          if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
          return -e.errno;
        }
      }
      function ___syscall197(which, varargs) {
        SYSCALLS.varargs = varargs;
        try {
          var stream = SYSCALLS.getStreamFromFD(), buf = SYSCALLS.get();
          return SYSCALLS.doStat(FS.stat, stream.path, buf);
        } catch (e) {
          if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
          return -e.errno;
        }
      }
      function ___lock() {
      }
      function ___unlock() {
      }
      function __exit(status) {
        Module["exit"](status);
      }
      function _exit(status) {
        __exit(status);
      }
      function ___syscall330(which, varargs) {
        SYSCALLS.varargs = varargs;
        try {
          var old = SYSCALLS.getStreamFromFD(), suggestFD = SYSCALLS.get(), flags = SYSCALLS.get();
          assert(!flags);
          if (old.fd === suggestFD) return -ERRNO_CODES.EINVAL;
          return SYSCALLS.doDup(old.path, old.flags, suggestFD);
        } catch (e) {
          if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
          return -e.errno;
        }
      }
      function ___syscall54(which, varargs) {
        SYSCALLS.varargs = varargs;
        try {
          var stream = SYSCALLS.getStreamFromFD(), op = SYSCALLS.get();
          switch (op) {
            case 21505:
              {
                if (!stream.tty) return -ERRNO_CODES.ENOTTY;
                return 0;
              }
              ;
            case 21506:
              {
                if (!stream.tty) return -ERRNO_CODES.ENOTTY;
                return 0;
              }
              ;
            case 21519:
              {
                if (!stream.tty) return -ERRNO_CODES.ENOTTY;
                var argp = SYSCALLS.get();
                HEAP32[argp >> 2] = 0;
                return 0;
              }
              ;
            case 21520:
              {
                if (!stream.tty) return -ERRNO_CODES.ENOTTY;
                return -ERRNO_CODES.EINVAL;
              }
              ;
            case 21531:
              {
                var argp = SYSCALLS.get();
                return FS.ioctl(stream, op, argp);
              }
              ;
            default:
              abort("bad ioctl syscall " + op);
          }
        } catch (e) {
          if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
          return -e.errno;
        }
      }
      Module["_bitshift64Lshr"] = _bitshift64Lshr;
      function ___syscall33(which, varargs) {
        SYSCALLS.varargs = varargs;
        try {
          var path2 = SYSCALLS.getStr(), amode = SYSCALLS.get();
          return SYSCALLS.doAccess(path2, amode);
        } catch (e) {
          if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
          return -e.errno;
        }
      }
      function _pthread_cleanup_push(routine, arg2) {
        __ATEXIT__.push((function() {
          Runtime.dynCall("vi", routine, [arg2]);
        }));
        _pthread_cleanup_push.level = __ATEXIT__.length;
      }
      function ___syscall10(which, varargs) {
        SYSCALLS.varargs = varargs;
        try {
          var path2 = SYSCALLS.getStr();
          FS.unlink(path2);
          return 0;
        } catch (e) {
          if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
          return -e.errno;
        }
      }
      function _pthread_cleanup_pop() {
        assert(_pthread_cleanup_push.level == __ATEXIT__.length, "cannot pop if something else added meanwhile!");
        __ATEXIT__.pop();
        _pthread_cleanup_push.level = __ATEXIT__.length;
      }
      function ___syscall5(which, varargs) {
        SYSCALLS.varargs = varargs;
        try {
          var pathname = SYSCALLS.getStr(), flags = SYSCALLS.get(), mode = SYSCALLS.get();
          var stream = FS.open(pathname, flags, mode);
          return stream.fd;
        } catch (e) {
          if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
          return -e.errno;
        }
      }
      function _emscripten_memcpy_big(dest, src, num) {
        HEAPU8.set(HEAPU8.subarray(src, src + num), dest);
        return dest;
      }
      Module["_memcpy"] = _memcpy;
      function ___syscall6(which, varargs) {
        SYSCALLS.varargs = varargs;
        try {
          var stream = SYSCALLS.getStreamFromFD();
          FS.close(stream);
          return 0;
        } catch (e) {
          if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
          return -e.errno;
        }
      }
      var cttz_i8 = allocate([8, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 5, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 6, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 5, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 7, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 5, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 6, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 5, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0], "i8", ALLOC_STATIC);
      Module["_llvm_cttz_i32"] = _llvm_cttz_i32;
      Module["___udivmoddi4"] = ___udivmoddi4;
      Module["___udivdi3"] = ___udivdi3;
      Module["_sbrk"] = _sbrk;
      var __sigalrm_handler = 0;
      function _signal(sig, func2) {
        if (sig == 14) {
          __sigalrm_handler = func2;
        } else {
        }
        return 0;
      }
      Module["___uremdi3"] = ___uremdi3;
      function ___syscall265(which, varargs) {
        SYSCALLS.varargs = varargs;
        try {
          return 0;
        } catch (e) {
          if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
          return -e.errno;
        }
      }
      Module["_pthread_self"] = _pthread_self;
      function ___syscall140(which, varargs) {
        SYSCALLS.varargs = varargs;
        try {
          var stream = SYSCALLS.getStreamFromFD(), offset_high = SYSCALLS.get(), offset_low = SYSCALLS.get(), result = SYSCALLS.get(), whence = SYSCALLS.get();
          var offset = offset_low;
          assert(offset_high === 0);
          FS.llseek(stream, offset, whence);
          HEAP32[result >> 2] = stream.position;
          if (stream.getdents && offset === 0 && whence === 0) stream.getdents = null;
          return 0;
        } catch (e) {
          if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
          return -e.errno;
        }
      }
      function ___syscall146(which, varargs) {
        SYSCALLS.varargs = varargs;
        try {
          var stream = SYSCALLS.getStreamFromFD(), iov = SYSCALLS.get(), iovcnt = SYSCALLS.get();
          return SYSCALLS.doWritev(stream, iov, iovcnt);
        } catch (e) {
          if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
          return -e.errno;
        }
      }
      function ___syscall221(which, varargs) {
        SYSCALLS.varargs = varargs;
        try {
          var stream = SYSCALLS.getStreamFromFD(), cmd = SYSCALLS.get();
          switch (cmd) {
            case 0:
              {
                var arg2 = SYSCALLS.get();
                if (arg2 < 0) {
                  return -ERRNO_CODES.EINVAL;
                }
                var newStream;
                newStream = FS.open(stream.path, stream.flags, 0, arg2);
                return newStream.fd;
              }
              ;
            case 1:
            case 2:
              return 0;
            case 3:
              return stream.flags;
            case 4:
              {
                var arg2 = SYSCALLS.get();
                stream.flags |= arg2;
                return 0;
              }
              ;
            case 12:
            case 12:
              {
                var arg2 = SYSCALLS.get();
                var offset = 0;
                HEAP16[arg2 + offset >> 1] = 2;
                return 0;
              }
              ;
            case 13:
            case 14:
            case 13:
            case 14:
              return 0;
            case 16:
            case 8:
              return -ERRNO_CODES.EINVAL;
            case 9:
              ___setErrNo(ERRNO_CODES.EINVAL);
              return -1;
            default: {
              return -ERRNO_CODES.EINVAL;
            }
          }
        } catch (e) {
          if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
          return -e.errno;
        }
      }
      function ___syscall145(which, varargs) {
        SYSCALLS.varargs = varargs;
        try {
          var stream = SYSCALLS.getStreamFromFD(), iov = SYSCALLS.get(), iovcnt = SYSCALLS.get();
          return SYSCALLS.doReadv(stream, iov, iovcnt);
        } catch (e) {
          if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
          return -e.errno;
        }
      }
      FS.staticInit();
      __ATINIT__.unshift((function() {
        if (!Module["noFSInit"] && !FS.init.initialized) FS.init();
      }));
      __ATMAIN__.push((function() {
        FS.ignorePermissions = false;
      }));
      __ATEXIT__.push((function() {
        FS.quit();
      }));
      Module["FS_createFolder"] = FS.createFolder;
      Module["FS_createPath"] = FS.createPath;
      Module["FS_createDataFile"] = FS.createDataFile;
      Module["FS_createPreloadedFile"] = FS.createPreloadedFile;
      Module["FS_createLazyFile"] = FS.createLazyFile;
      Module["FS_createLink"] = FS.createLink;
      Module["FS_createDevice"] = FS.createDevice;
      Module["FS_unlink"] = FS.unlink;
      __ATINIT__.unshift((function() {
        TTY.init();
      }));
      __ATEXIT__.push((function() {
        TTY.shutdown();
      }));
      if (ENVIRONMENT_IS_NODE) {
        var fs = await import("node:fs");
        var NODEJS_PATH = await import("node:path");
        NODEFS.staticInit();
      }
      DYNAMICTOP_PTR = allocate(1, "i32", ALLOC_STATIC);
      STACK_BASE = STACKTOP = Runtime.alignMemory(STATICTOP);
      STACK_MAX = STACK_BASE + TOTAL_STACK;
      DYNAMIC_BASE = Runtime.alignMemory(STACK_MAX);
      HEAP32[DYNAMICTOP_PTR >> 2] = DYNAMIC_BASE;
      staticSealed = true;
      function invoke_i(index) {
        try {
          return Module["dynCall_i"](index);
        } catch (e) {
          if (typeof e !== "number" && e !== "longjmp") throw e;
          asm["setThrew"](1, 0);
        }
      }
      function invoke_ii(index, a1) {
        try {
          return Module["dynCall_ii"](index, a1);
        } catch (e) {
          if (typeof e !== "number" && e !== "longjmp") throw e;
          asm["setThrew"](1, 0);
        }
      }
      function invoke_iiii(index, a1, a2, a3) {
        try {
          return Module["dynCall_iiii"](index, a1, a2, a3);
        } catch (e) {
          if (typeof e !== "number" && e !== "longjmp") throw e;
          asm["setThrew"](1, 0);
        }
      }
      function invoke_vi(index, a1) {
        try {
          Module["dynCall_vi"](index, a1);
        } catch (e) {
          if (typeof e !== "number" && e !== "longjmp") throw e;
          asm["setThrew"](1, 0);
        }
      }
      Module.asmGlobalArg = {
        "Math": Math,
        "Int8Array": Int8Array,
        "Int16Array": Int16Array,
        "Int32Array": Int32Array,
        "Uint8Array": Uint8Array,
        "Uint16Array": Uint16Array,
        "Uint32Array": Uint32Array,
        "Float32Array": Float32Array,
        "Float64Array": Float64Array,
        "NaN": NaN,
        "Infinity": Infinity
      };
      Module.asmLibraryArg = {
        "abort": abort,
        "assert": assert,
        "enlargeMemory": enlargeMemory,
        "getTotalMemory": getTotalMemory,
        "abortOnCannotGrowMemory": abortOnCannotGrowMemory,
        "invoke_i": invoke_i,
        "invoke_ii": invoke_ii,
        "invoke_iiii": invoke_iiii,
        "invoke_vi": invoke_vi,
        "_pthread_cleanup_pop": _pthread_cleanup_pop,
        "___syscall221": ___syscall221,
        "___syscall265": ___syscall265,
        "___syscall63": ___syscall63,
        "_abort": _abort,
        "_pthread_cleanup_push": _pthread_cleanup_push,
        "_signal": _signal,
        "___setErrNo": ___setErrNo,
        "___syscall330": ___syscall330,
        "___syscall197": ___syscall197,
        "_emscripten_memcpy_big": _emscripten_memcpy_big,
        "___syscall194": ___syscall194,
        "__exit": __exit,
        "___syscall195": ___syscall195,
        "___syscall33": ___syscall33,
        "___syscall54": ___syscall54,
        "___unlock": ___unlock,
        "___syscall10": ___syscall10,
        "___lock": ___lock,
        "___syscall6": ___syscall6,
        "___syscall5": ___syscall5,
        "___syscall140": ___syscall140,
        "_exit": _exit,
        "___syscall145": ___syscall145,
        "___syscall146": ___syscall146,
        "STACKTOP": STACKTOP,
        "STACK_MAX": STACK_MAX,
        "DYNAMICTOP_PTR": DYNAMICTOP_PTR,
        "tempDoublePtr": tempDoublePtr,
        "ABORT": ABORT,
        "cttz_i8": cttz_i8
      };
      var asm = (function(global, env, buffer2) {
        ;
        var a = new global.Int8Array(buffer2);
        var b = new global.Int16Array(buffer2);
        var c = new global.Int32Array(buffer2);
        var d = new global.Uint8Array(buffer2);
        var e = new global.Uint16Array(buffer2);
        var f = new global.Uint32Array(buffer2);
        var g = new global.Float32Array(buffer2);
        var h = new global.Float64Array(buffer2);
        var i2 = env.STACKTOP | 0;
        var j = env.STACK_MAX | 0;
        var k = env.DYNAMICTOP_PTR | 0;
        var l = env.tempDoublePtr | 0;
        var m = env.ABORT | 0;
        var n = env.cttz_i8 | 0;
        var o = 0;
        var p = 0;
        var q = 0;
        var r = 0;
        var s = global.NaN, t = global.Infinity;
        var u = 0, v = 0, w = 0, x = 0, y = 0, z = 0, A = 0, B = 0, C = 0;
        var D = 0;
        var E = global.Math.floor;
        var F = global.Math.abs;
        var G = global.Math.sqrt;
        var H = global.Math.pow;
        var I = global.Math.cos;
        var J = global.Math.sin;
        var K = global.Math.tan;
        var L = global.Math.acos;
        var M = global.Math.asin;
        var N = global.Math.atan;
        var O = global.Math.atan2;
        var P = global.Math.exp;
        var Q = global.Math.log;
        var R = global.Math.ceil;
        var S = global.Math.imul;
        var T = global.Math.min;
        var U = global.Math.max;
        var V = global.Math.clz32;
        var W = env.abort;
        var X = env.assert;
        var Y = env.enlargeMemory;
        var Z = env.getTotalMemory;
        var _ = env.abortOnCannotGrowMemory;
        var $ = env.invoke_i;
        var aa = env.invoke_ii;
        var ba = env.invoke_iiii;
        var ca = env.invoke_vi;
        var da = env._pthread_cleanup_pop;
        var ea = env.___syscall221;
        var fa = env.___syscall265;
        var ga = env.___syscall63;
        var ha = env._abort;
        var ia = env._pthread_cleanup_push;
        var ja = env._signal;
        var ka = env.___setErrNo;
        var la = env.___syscall330;
        var ma = env.___syscall197;
        var na = env._emscripten_memcpy_big;
        var oa = env.___syscall194;
        var pa = env.__exit;
        var qa = env.___syscall195;
        var ra = env.___syscall33;
        var sa = env.___syscall54;
        var ta = env.___unlock;
        var ua = env.___syscall10;
        var va = env.___lock;
        var wa = env.___syscall6;
        var xa = env.___syscall5;
        var ya = env.___syscall140;
        var za = env._exit;
        var Aa = env.___syscall145;
        var Ba = env.___syscall146;
        var Ca = 0;
        function Ha(a2) {
          a2 = a2 | 0;
          var b2 = 0;
          b2 = i2;
          i2 = i2 + a2 | 0;
          i2 = i2 + 15 & -16;
          return b2 | 0;
        }
        function Ia() {
          return i2 | 0;
        }
        function Ja(a2) {
          a2 = a2 | 0;
          i2 = a2;
        }
        function Ka(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          i2 = a2;
          j = b2;
        }
        function La(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          if (!o) {
            o = a2;
            p = b2;
          }
        }
        function Ma(a2) {
          a2 = a2 | 0;
          D = a2;
        }
        function Na() {
          return D | 0;
        }
        function Oa(b2) {
          b2 = b2 | 0;
          var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0;
          d2 = c[b2 + 4 >> 2] | 0;
          if ((d2 | 0) > 99) return 0;
          e2 = 6260 + (d2 * 48 | 0) | 0;
          f2 = c[e2 >> 2] | 0;
          if (f2 | 0) {
            a: do
              if ((c[6260 + (d2 * 48 | 0) + 44 >> 2] | 0) != 1) {
                g2 = c[b2 + 8 >> 2] | 0;
                if (g2 | 0) switch (a[g2 >> 0] | 0) {
                  case 100:
                  case 68: {
                    h2 = 10;
                    break a;
                    break;
                  }
                  default: {
                  }
                }
                if ((c[6260 + (d2 * 48 | 0) + 40 >> 2] | 0) == 1) Ub(b2) | 0;
                g2 = 6260 + (d2 * 48 | 0) + 4 | 0;
                if (c[g2 >> 2] | 0) {
                  Bd(c[e2 >> 2] | 0) | 0;
                  fe(c[g2 >> 2] | 0);
                }
              } else h2 = 10;
            while (0);
            if ((h2 | 0) == 10 ? (Bd(f2) | 0, f2 = 6260 + (d2 * 48 | 0) + 4 | 0, h2 = c[f2 >> 2] | 0, h2 | 0) : 0) {
              ed(h2) | 0;
              fe(c[f2 >> 2] | 0);
            }
            c[e2 >> 2] = 0;
          }
          c[6260 + (d2 * 48 | 0) + 36 >> 2] = 0;
          c[6260 + (d2 * 48 | 0) + 4 >> 2] = 0;
          return 0;
        }
        function Pa() {
          var a2 = 0;
          if (c[1546] | 0) return;
          c[1546] = 1;
          c[1548] = 0;
          a2 = 0;
          do {
            c[1547] = a2;
            Oa(6184) | 0;
            a2 = a2 + 1 | 0;
          } while ((a2 | 0) != 100);
          return;
        }
        function Qa(a2) {
          a2 = a2 | 0;
          return +(+Q(+ +h[a2 >> 3]) * 0.4342944819032518);
        }
        function Ra(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          var c2 = 0, d2 = 0;
          c2 = +h[a2 >> 3];
          d2 = c2 >= 0 ? c2 : -c2;
          return +(+h[b2 >> 3] >= 0 ? d2 : -d2);
        }
        function Sa(a2, b2, d2, e2, f2, g2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          g2 = g2 | 0;
          var i3 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0;
          i3 = f2 + -8 | 0;
          j2 = d2 + -8 | 0;
          k2 = c[a2 >> 2] | 0;
          if ((k2 | 0) < 1) return 0;
          l2 = +h[b2 >> 3];
          if (l2 == 0) return 0;
          a2 = c[e2 >> 2] | 0;
          if ((a2 | 0) == 1) {
            e2 = c[g2 >> 2] | 0;
            if ((e2 | 0) == 1) {
              m2 = k2 & 3;
              if (!m2) {
                if ((m2 | 0) >= (k2 | 0)) return 0;
              } else {
                h[f2 >> 3] = +h[f2 >> 3] + l2 * +h[d2 >> 3];
                if ((m2 | 0) != 1) {
                  d2 = 1;
                  do {
                    d2 = d2 + 1 | 0;
                    f2 = i3 + (d2 << 3) | 0;
                    h[f2 >> 3] = +h[f2 >> 3] + +h[b2 >> 3] * +h[j2 + (d2 << 3) >> 3];
                  } while ((d2 | 0) != (m2 | 0));
                }
                if (!((k2 | 0) > 3 & (m2 | 0) < (k2 | 0))) return 0;
              }
              d2 = m2 + 1 | 0;
              do {
                m2 = i3 + (d2 << 3) | 0;
                h[m2 >> 3] = +h[m2 >> 3] + +h[b2 >> 3] * +h[j2 + (d2 << 3) >> 3];
                m2 = d2 + 1 | 0;
                f2 = i3 + (m2 << 3) | 0;
                h[f2 >> 3] = +h[f2 >> 3] + +h[b2 >> 3] * +h[j2 + (m2 << 3) >> 3];
                m2 = d2 + 2 | 0;
                f2 = i3 + (m2 << 3) | 0;
                h[f2 >> 3] = +h[f2 >> 3] + +h[b2 >> 3] * +h[j2 + (m2 << 3) >> 3];
                m2 = d2 + 3 | 0;
                f2 = i3 + (m2 << 3) | 0;
                h[f2 >> 3] = +h[f2 >> 3] + +h[b2 >> 3] * +h[j2 + (m2 << 3) >> 3];
                d2 = d2 + 4 | 0;
              } while ((d2 | 0) <= (k2 | 0));
              return 0;
            } else {
              n2 = 1;
              o2 = e2;
            }
          } else {
            if ((a2 | 0) < 0) p2 = (S(1 - k2 | 0, a2) | 0) + 1 | 0;
            else p2 = 1;
            n2 = p2;
            o2 = c[g2 >> 2] | 0;
          }
          if ((o2 | 0) < 0) q2 = (S(1 - k2 | 0, o2) | 0) + 1 | 0;
          else q2 = 1;
          g2 = i3 + (q2 << 3) | 0;
          h[g2 >> 3] = +h[g2 >> 3] + l2 * +h[j2 + (n2 << 3) >> 3];
          if ((k2 | 0) == 1) return 0;
          else {
            r2 = 1;
            s2 = n2;
            t2 = q2;
          }
          do {
            r2 = r2 + 1 | 0;
            t2 = o2 + t2 | 0;
            s2 = a2 + s2 | 0;
            q2 = i3 + (t2 << 3) | 0;
            h[q2 >> 3] = +h[q2 >> 3] + +h[b2 >> 3] * +h[j2 + (s2 << 3) >> 3];
          } while ((r2 | 0) != (k2 | 0));
          return 0;
        }
        function Ta(a2, b2, d2, e2, f2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          var g2 = 0, i3 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0;
          g2 = e2 + -8 | 0;
          e2 = b2 + -8 | 0;
          b2 = c[a2 >> 2] | 0;
          if ((b2 | 0) < 1) return 0;
          a2 = c[d2 >> 2] | 0;
          if ((a2 | 0) == 1) {
            d2 = c[f2 >> 2] | 0;
            if ((d2 | 0) == 1) {
              i3 = (b2 >>> 0) % 7 | 0;
              if (!i3) {
                if ((i3 | 0) >= (b2 | 0)) return 0;
              } else {
                j2 = 1;
                while (1) {
                  h[g2 + (j2 << 3) >> 3] = +h[e2 + (j2 << 3) >> 3];
                  if ((j2 | 0) < (i3 | 0)) j2 = j2 + 1 | 0;
                  else break;
                }
                if (!((b2 | 0) > 6 & (i3 | 0) < (b2 | 0))) return 0;
              }
              j2 = i3 + 1 | 0;
              do {
                h[g2 + (j2 << 3) >> 3] = +h[e2 + (j2 << 3) >> 3];
                i3 = j2 + 1 | 0;
                h[g2 + (i3 << 3) >> 3] = +h[e2 + (i3 << 3) >> 3];
                i3 = j2 + 2 | 0;
                h[g2 + (i3 << 3) >> 3] = +h[e2 + (i3 << 3) >> 3];
                i3 = j2 + 3 | 0;
                h[g2 + (i3 << 3) >> 3] = +h[e2 + (i3 << 3) >> 3];
                i3 = j2 + 4 | 0;
                h[g2 + (i3 << 3) >> 3] = +h[e2 + (i3 << 3) >> 3];
                i3 = j2 + 5 | 0;
                h[g2 + (i3 << 3) >> 3] = +h[e2 + (i3 << 3) >> 3];
                i3 = j2 + 6 | 0;
                h[g2 + (i3 << 3) >> 3] = +h[e2 + (i3 << 3) >> 3];
                j2 = j2 + 7 | 0;
              } while ((j2 | 0) <= (b2 | 0));
              return 0;
            } else {
              k2 = 1;
              l2 = d2;
            }
          } else {
            if ((a2 | 0) < 0) m2 = (S(1 - b2 | 0, a2) | 0) + 1 | 0;
            else m2 = 1;
            k2 = m2;
            l2 = c[f2 >> 2] | 0;
          }
          if ((l2 | 0) < 0) {
            n2 = 1;
            o2 = k2;
            p2 = (S(1 - b2 | 0, l2) | 0) + 1 | 0;
          } else {
            n2 = 1;
            o2 = k2;
            p2 = 1;
          }
          while (1) {
            h[g2 + (p2 << 3) >> 3] = +h[e2 + (o2 << 3) >> 3];
            if ((n2 | 0) == (b2 | 0)) break;
            else {
              n2 = n2 + 1 | 0;
              o2 = a2 + o2 | 0;
              p2 = l2 + p2 | 0;
            }
          }
          return 0;
        }
        function Ua(a2, b2, d2, e2, f2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          var g2 = 0, i3 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0;
          g2 = e2 + -8 | 0;
          e2 = b2 + -8 | 0;
          b2 = c[a2 >> 2] | 0;
          if ((b2 | 0) < 1) {
            i3 = 0;
            return +i3;
          }
          a2 = c[d2 >> 2] | 0;
          if ((a2 | 0) == 1) {
            d2 = c[f2 >> 2] | 0;
            if ((d2 | 0) == 1) {
              j2 = (b2 >>> 0) % 5 | 0;
              if (j2) {
                k2 = 1;
                l2 = 0;
                while (1) {
                  l2 = l2 + +h[e2 + (k2 << 3) >> 3] * +h[g2 + (k2 << 3) >> 3];
                  if ((k2 | 0) >= (j2 | 0)) break;
                  else k2 = k2 + 1 | 0;
                }
                if ((b2 | 0) < 5) {
                  i3 = l2;
                  return +i3;
                } else m2 = l2;
              } else m2 = 0;
              if ((j2 | 0) >= (b2 | 0)) {
                i3 = m2;
                return +i3;
              }
              k2 = j2 + 1 | 0;
              l2 = m2;
              while (1) {
                j2 = k2 + 1 | 0;
                n2 = k2 + 2 | 0;
                o2 = k2 + 3 | 0;
                p2 = k2 + 4 | 0;
                m2 = l2 + +h[e2 + (k2 << 3) >> 3] * +h[g2 + (k2 << 3) >> 3] + +h[e2 + (j2 << 3) >> 3] * +h[g2 + (j2 << 3) >> 3] + +h[e2 + (n2 << 3) >> 3] * +h[g2 + (n2 << 3) >> 3] + +h[e2 + (o2 << 3) >> 3] * +h[g2 + (o2 << 3) >> 3] + +h[e2 + (p2 << 3) >> 3] * +h[g2 + (p2 << 3) >> 3];
                k2 = k2 + 5 | 0;
                if ((k2 | 0) > (b2 | 0)) {
                  i3 = m2;
                  break;
                } else l2 = m2;
              }
              return +i3;
            } else {
              q2 = 1;
              r2 = d2;
            }
          } else {
            if ((a2 | 0) < 0) s2 = (S(1 - b2 | 0, a2) | 0) + 1 | 0;
            else s2 = 1;
            q2 = s2;
            r2 = c[f2 >> 2] | 0;
          }
          if ((r2 | 0) < 0) {
            t2 = 0;
            u2 = 1;
            v2 = (S(1 - b2 | 0, r2) | 0) + 1 | 0;
            w2 = q2;
          } else {
            t2 = 0;
            u2 = 1;
            v2 = 1;
            w2 = q2;
          }
          while (1) {
            l2 = t2 + +h[e2 + (w2 << 3) >> 3] * +h[g2 + (v2 << 3) >> 3];
            if ((u2 | 0) == (b2 | 0)) {
              i3 = l2;
              break;
            } else {
              t2 = l2;
              u2 = u2 + 1 | 0;
              v2 = r2 + v2 | 0;
              w2 = a2 + w2 | 0;
            }
          }
          return +i3;
        }
        function Va(a2, b2, d2, e2, f2, g2, j2, k2, l2, m2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          g2 = g2 | 0;
          j2 = j2 | 0;
          k2 = k2 | 0;
          l2 = l2 | 0;
          m2 = m2 | 0;
          var n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0;
          n2 = i2;
          i2 = i2 + 16 | 0;
          o2 = n2 + 8 | 0;
          p2 = n2;
          q2 = g2 + -8 | 0;
          g2 = c[l2 >> 2] | 0;
          r2 = k2 + (~g2 << 3) | 0;
          k2 = nc(b2, 2067) | 0;
          s2 = nc(b2, 2078) | 0;
          c[m2 >> 2] = 0;
          if ((((nc(a2, 2080) | 0) == 0 ? (nc(a2, 1939) | 0) == 0 : 0) ? (nc(a2, 2026) | 0) == 0 : 0) ? (nc(a2, 2022) | 0) == 0 : 0) {
            c[m2 >> 2] = -1;
            t2 = -1;
          } else u2 = 6;
          do
            if ((u2 | 0) == 6) {
              if (!(s2 | k2)) {
                c[m2 >> 2] = -2;
                t2 = -2;
                break;
              }
              b2 = c[d2 >> 2] | 0;
              if ((b2 | 0) < 0) {
                c[m2 >> 2] = -3;
                t2 = -3;
                break;
              }
              v2 = c[e2 >> 2] | 0;
              if ((v2 | 0) >= 1 ? (w2 = (b2 | 0) > 1 ? b2 : 1, (v2 | 0) <= (w2 | 0)) : 0) {
                x2 = c[f2 >> 2] | 0;
                if ((x2 | 0) > (b2 | 0) ? 1 : (x2 | 0) < (((v2 | 0) > (b2 | 0) ? b2 : v2) | 0)) {
                  c[m2 >> 2] = -5;
                  t2 = -5;
                  break;
                }
                v2 = c[j2 >> 2] | 0;
                if ((v2 | 0) < 0) {
                  c[m2 >> 2] = -7;
                  t2 = -7;
                  break;
                }
                if ((c[l2 >> 2] | 0) < (w2 | 0)) {
                  c[m2 >> 2] = -9;
                  t2 = -9;
                  break;
                }
                w2 = c[m2 >> 2] | 0;
                if (w2 | 0) {
                  t2 = w2;
                  break;
                }
                if ((b2 | 0) == 0 | (v2 | 0) == 0) {
                  i2 = n2;
                  return 0;
                }
                if (nc(a2, 2080) | 0) {
                  i2 = n2;
                  return 0;
                }
                do
                  if ((c[e2 >> 2] | 0) != (c[f2 >> 2] | 0)) {
                    if ((nc(a2, 2026) | 0) == 0 ? (nc(a2, 2022) | 0) == 0 : 0) break;
                    if (k2 | 0 ? (v2 = c[f2 >> 2] | 0, c[o2 >> 2] = v2, b2 = c[e2 >> 2] | 0, (b2 | 0) <= (v2 | 0)) : 0) {
                      v2 = b2;
                      while (1) {
                        h[p2 >> 3] = +h[q2 + (v2 << 3) >> 3];
                        Ob(j2, p2, r2 + (v2 + g2 << 3) | 0, l2) | 0;
                        if ((v2 | 0) < (c[o2 >> 2] | 0)) v2 = v2 + 1 | 0;
                        else break;
                      }
                    }
                    if (s2 | 0 ? (v2 = c[f2 >> 2] | 0, c[o2 >> 2] = v2, b2 = c[e2 >> 2] | 0, (b2 | 0) <= (v2 | 0)) : 0) {
                      v2 = b2;
                      while (1) {
                        h[p2 >> 3] = 1 / +h[q2 + (v2 << 3) >> 3];
                        Ob(j2, p2, r2 + (v2 + g2 << 3) | 0, l2) | 0;
                        if ((v2 | 0) < (c[o2 >> 2] | 0)) v2 = v2 + 1 | 0;
                        else break;
                      }
                    }
                  }
                while (0);
                if ((nc(a2, 1939) | 0) == 0 ? (nc(a2, 2022) | 0) == 0 : 0) {
                  i2 = n2;
                  return 0;
                }
                if (k2 | 0 ? (v2 = c[d2 >> 2] | 0, c[o2 >> 2] = v2, (v2 | 0) >= 1) : 0) {
                  b2 = 1;
                  w2 = v2;
                  while (1) {
                    v2 = c[e2 >> 2] | 0;
                    x2 = (v2 | 0) > (b2 | 0);
                    if (!x2 ? (b2 | 0) <= (c[f2 >> 2] | 0) : 0) y2 = w2;
                    else u2 = 38;
                    do
                      if ((u2 | 0) == 38) {
                        u2 = 0;
                        z2 = x2 ? v2 - b2 | 0 : b2;
                        A2 = ~~+h[q2 + (z2 << 3) >> 3];
                        if ((A2 | 0) == (z2 | 0)) {
                          y2 = w2;
                          break;
                        }
                        Pb(j2, r2 + (z2 + g2 << 3) | 0, l2, r2 + (A2 + g2 << 3) | 0, l2) | 0;
                        y2 = c[o2 >> 2] | 0;
                      }
                    while (0);
                    if ((b2 | 0) < (y2 | 0)) {
                      b2 = b2 + 1 | 0;
                      w2 = y2;
                    } else break;
                  }
                }
                if (!s2) {
                  i2 = n2;
                  return 0;
                }
                w2 = c[d2 >> 2] | 0;
                c[o2 >> 2] = w2;
                if ((w2 | 0) < 1) {
                  i2 = n2;
                  return 0;
                } else {
                  B2 = 1;
                  C2 = w2;
                }
                while (1) {
                  w2 = c[e2 >> 2] | 0;
                  b2 = (w2 | 0) > (B2 | 0);
                  if (!b2 ? (B2 | 0) <= (c[f2 >> 2] | 0) : 0) D2 = C2;
                  else u2 = 45;
                  do
                    if ((u2 | 0) == 45) {
                      u2 = 0;
                      v2 = b2 ? w2 - B2 | 0 : B2;
                      x2 = ~~+h[q2 + (v2 << 3) >> 3];
                      if ((x2 | 0) == (v2 | 0)) {
                        D2 = C2;
                        break;
                      }
                      Pb(j2, r2 + (v2 + g2 << 3) | 0, l2, r2 + (x2 + g2 << 3) | 0, l2) | 0;
                      D2 = c[o2 >> 2] | 0;
                    }
                  while (0);
                  if ((B2 | 0) < (D2 | 0)) {
                    B2 = B2 + 1 | 0;
                    C2 = D2;
                  } else break;
                }
                i2 = n2;
                return 0;
              }
              c[m2 >> 2] = -4;
              t2 = -4;
            }
          while (0);
          c[o2 >> 2] = 0 - t2;
          Oc(1452, o2) | 0;
          i2 = n2;
          return 0;
        }
        function Wa(a2, b2, d2, e2, f2, g2, j2, k2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          g2 = g2 | 0;
          j2 = j2 | 0;
          k2 = k2 | 0;
          var l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0, O2 = 0, P2 = 0, Q2 = 0, R2 = 0, T2 = 0, U2 = 0, V2 = 0, W2 = 0, X2 = 0, Y2 = 0, Z2 = 0, _2 = 0, $2 = 0, aa2 = 0, ba2 = 0, ca2 = 0, da2 = 0, ea2 = 0, fa2 = 0, ga2 = 0, ha2 = 0, ia2 = 0, ja2 = 0, ka2 = 0, la2 = 0, ma2 = 0, na2 = 0, oa2 = 0, pa2 = 0, qa2 = 0, ra2 = 0, sa2 = 0, ta2 = 0, ua2 = 0, va2 = 0, wa2 = 0, xa2 = 0, ya2 = 0, za2 = 0, Aa2 = 0;
          l2 = i2;
          i2 = i2 + 32 | 0;
          m2 = l2 + 24 | 0;
          n2 = l2 + 20 | 0;
          o2 = l2 + 8 | 0;
          p2 = l2;
          q2 = l2 + 16 | 0;
          r2 = c[e2 >> 2] | 0;
          s2 = d2 + (~r2 << 3) | 0;
          d2 = j2 + -8 | 0;
          c[k2 >> 2] = 0;
          if ((((nc(a2, 2080) | 0) == 0 ? (nc(a2, 1939) | 0) == 0 : 0) ? (nc(a2, 2026) | 0) == 0 : 0) ? (nc(a2, 2022) | 0) == 0 : 0) {
            c[k2 >> 2] = -1;
            t2 = -1;
          } else u2 = 6;
          do
            if ((u2 | 0) == 6) {
              j2 = c[b2 >> 2] | 0;
              if ((j2 | 0) < 0) {
                c[k2 >> 2] = -2;
                t2 = -2;
                break;
              }
              if ((c[e2 >> 2] | 0) < (((j2 | 0) > 1 ? j2 : 1) | 0)) {
                c[k2 >> 2] = -4;
                t2 = -4;
                break;
              }
              v2 = c[k2 >> 2] | 0;
              if (!v2) {
                c[q2 >> 2] = j2;
                a: do
                  if (j2) {
                    if (nc(a2, 2080) | 0) {
                      w2 = c[b2 >> 2] | 0;
                      c[m2 >> 2] = w2;
                      if ((w2 | 0) < 1) {
                        x2 = 1;
                        break;
                      } else y2 = 1;
                      while (1) {
                        h[d2 + (y2 << 3) >> 3] = 1;
                        if ((y2 | 0) < (w2 | 0)) y2 = y2 + 1 | 0;
                        else {
                          x2 = 1;
                          break a;
                        }
                      }
                    }
                    b: do
                      if (!(nc(a2, 2026) | 0)) {
                        w2 = 1;
                        z2 = j2;
                        c: while (1) {
                          do
                            if ((z2 | 0) > 0) {
                              A2 = z2;
                              d: while (1) {
                                B2 = 1;
                                while (1) {
                                  if ((B2 | 0) != (A2 | 0) ? +h[s2 + ((S(B2, r2) | 0) + A2 << 3) >> 3] != 0 : 0) break;
                                  if ((B2 | 0) < (z2 | 0)) B2 = B2 + 1 | 0;
                                  else {
                                    u2 = 28;
                                    break d;
                                  }
                                }
                                if ((A2 | 0) > 1) A2 = A2 + -1 | 0;
                                else {
                                  u2 = 31;
                                  break;
                                }
                              }
                              if ((u2 | 0) == 28) {
                                u2 = 0;
                                c[m2 >> 2] = z2;
                                C2 = 1;
                                D2 = A2;
                                E2 = z2;
                                F2 = w2;
                                u2 = 18;
                                break;
                              } else if ((u2 | 0) == 31) {
                                u2 = 0;
                                c[m2 >> 2] = z2;
                                G2 = w2;
                                H2 = z2;
                                break;
                              }
                            } else {
                              G2 = w2;
                              H2 = z2;
                            }
                          while (0);
                          while (1) {
                            if ((u2 | 0) == 18) {
                              u2 = 0;
                              h[d2 + (E2 << 3) >> 3] = +(D2 | 0);
                              if ((D2 | 0) != (E2 | 0)) {
                                Pb(q2, s2 + ((S(D2, r2) | 0) + 1 << 3) | 0, 112, s2 + ((S(E2, r2) | 0) + 1 << 3) | 0, 112) | 0;
                                c[m2 >> 2] = 1 - F2 + (c[b2 >> 2] | 0);
                                B2 = S(F2, r2) | 0;
                                Pb(m2, s2 + (D2 + B2 << 3) | 0, e2, s2 + (E2 + B2 << 3) | 0, e2) | 0;
                              }
                              if ((C2 | 0) != 2) break;
                              G2 = F2 + 1 | 0;
                              H2 = c[q2 >> 2] | 0;
                            }
                            c[m2 >> 2] = H2;
                            if ((G2 | 0) > (H2 | 0)) {
                              I2 = G2;
                              J2 = H2;
                              break b;
                            } else K2 = G2;
                            e: while (1) {
                              B2 = S(K2, r2) | 0;
                              L2 = G2;
                              while (1) {
                                if ((L2 | 0) != (K2 | 0) ? +h[s2 + (L2 + B2 << 3) >> 3] != 0 : 0) break;
                                if ((L2 | 0) < (H2 | 0)) L2 = L2 + 1 | 0;
                                else break e;
                              }
                              if ((K2 | 0) < (H2 | 0)) K2 = K2 + 1 | 0;
                              else break c;
                            }
                            c[n2 >> 2] = H2;
                            C2 = 2;
                            D2 = K2;
                            E2 = G2;
                            F2 = G2;
                            u2 = 18;
                          }
                          A2 = c[q2 >> 2] | 0;
                          if ((A2 | 0) == 1) {
                            x2 = F2;
                            break a;
                          }
                          L2 = A2 + -1 | 0;
                          c[q2 >> 2] = L2;
                          w2 = F2;
                          z2 = L2;
                        }
                        c[n2 >> 2] = H2;
                        I2 = G2;
                        J2 = H2;
                      } else {
                        I2 = 1;
                        J2 = j2;
                      }
                    while (0);
                    c[m2 >> 2] = J2;
                    if ((I2 | 0) <= (J2 | 0)) {
                      z2 = I2;
                      while (1) {
                        h[d2 + (z2 << 3) >> 3] = 1;
                        if ((z2 | 0) < (J2 | 0)) z2 = z2 + 1 | 0;
                        else break;
                      }
                    }
                    if (!(nc(a2, 1939) | 0)) {
                      M2 = +lb(2026);
                      N2 = M2 / +lb(1939);
                      M2 = 1 / N2;
                      O2 = N2 * 2;
                      P2 = 1 / O2;
                      z2 = 1 - I2 | 0;
                      w2 = S(I2, r2) | 0;
                      L2 = I2 + -1 | 0;
                      while (1) {
                        A2 = c[q2 >> 2] | 0;
                        c[m2 >> 2] = A2;
                        if ((I2 | 0) > (A2 | 0)) {
                          x2 = I2;
                          break a;
                        } else {
                          Q2 = 0;
                          R2 = I2;
                          T2 = A2;
                        }
                        while (1) {
                          c[n2 >> 2] = T2;
                          A2 = S(R2, r2) | 0;
                          if ((I2 | 0) > (T2 | 0)) {
                            U2 = 0;
                            V2 = 0;
                          } else {
                            W2 = 0;
                            X2 = 0;
                            B2 = I2;
                            while (1) {
                              if ((B2 | 0) == (R2 | 0)) {
                                Y2 = W2;
                                Z2 = X2;
                              } else {
                                _2 = +h[s2 + (B2 + A2 << 3) >> 3];
                                $2 = +h[s2 + ((S(B2, r2) | 0) + R2 << 3) >> 3];
                                Y2 = W2 + (_2 >= 0 ? _2 : -_2);
                                Z2 = X2 + ($2 >= 0 ? $2 : -$2);
                              }
                              if ((B2 | 0) < (T2 | 0)) {
                                W2 = Y2;
                                X2 = Z2;
                                B2 = B2 + 1 | 0;
                              } else {
                                U2 = Y2;
                                V2 = Z2;
                                break;
                              }
                            }
                          }
                          B2 = s2 + (A2 + 1 << 3) | 0;
                          X2 = +h[s2 + ((hc(q2, B2, 112) | 0) + A2 << 3) >> 3];
                          c[n2 >> 2] = z2 + (c[b2 >> 2] | 0);
                          aa2 = s2 + (R2 + w2 << 3) | 0;
                          W2 = +h[s2 + ((S(L2 + (hc(n2, aa2, e2) | 0) | 0, r2) | 0) + R2 << 3) >> 3];
                          do
                            if (!(V2 == 0 | U2 == 0)) {
                              $2 = W2 >= 0 ? W2 : -W2;
                              _2 = X2 >= 0 ? X2 : -X2;
                              ba2 = V2 * 0.5;
                              h[p2 >> 3] = ba2;
                              h[o2 >> 3] = 1;
                              ca2 = V2 + U2;
                              f: do
                                if (!(U2 >= ba2)) {
                                  da2 = $2;
                                  ea2 = _2;
                                  fa2 = V2;
                                  ga2 = U2;
                                  ha2 = U2 <= 1 ? 1 : U2;
                                  ia2 = V2 <= ba2 ? V2 : ba2;
                                  ja2 = 1;
                                  ka2 = ba2;
                                  while (1) {
                                    if ((ha2 >= ea2 ? ha2 : ea2) >= P2) {
                                      la2 = da2;
                                      ma2 = ea2;
                                      na2 = ga2;
                                      oa2 = fa2;
                                      pa2 = ja2;
                                      break f;
                                    }
                                    if ((ia2 <= da2 ? ia2 : da2) <= O2) {
                                      la2 = da2;
                                      ma2 = ea2;
                                      na2 = ga2;
                                      oa2 = fa2;
                                      pa2 = ja2;
                                      break f;
                                    }
                                    qa2 = ja2 * 2;
                                    h[o2 >> 3] = qa2;
                                    ra2 = ga2 * 2;
                                    sa2 = ea2 * 2;
                                    ta2 = fa2 * 0.5;
                                    ua2 = ka2 * 0.5;
                                    h[p2 >> 3] = ua2;
                                    va2 = da2 * 0.5;
                                    if (!(ra2 >= ua2)) {
                                      da2 = va2;
                                      ea2 = sa2;
                                      fa2 = ta2;
                                      ga2 = ra2;
                                      ha2 = qa2 >= ra2 ? qa2 : ra2;
                                      ia2 = ta2 <= ua2 ? ta2 : ua2;
                                      ja2 = qa2;
                                      ka2 = ua2;
                                    } else {
                                      la2 = va2;
                                      ma2 = sa2;
                                      na2 = ra2;
                                      oa2 = ta2;
                                      pa2 = qa2;
                                      break;
                                    }
                                  }
                                } else {
                                  la2 = $2;
                                  ma2 = _2;
                                  na2 = U2;
                                  oa2 = V2;
                                  pa2 = 1;
                                }
                              while (0);
                              _2 = na2 * 0.5;
                              h[p2 >> 3] = _2;
                              $2 = pa2 <= na2 ? pa2 : na2;
                              g: do
                                if (_2 < oa2) {
                                  wa2 = na2;
                                  xa2 = oa2;
                                  ya2 = pa2;
                                } else {
                                  ba2 = la2;
                                  ka2 = ma2;
                                  ja2 = oa2;
                                  ia2 = na2;
                                  ha2 = $2 <= _2 ? $2 : _2;
                                  ga2 = pa2;
                                  fa2 = _2;
                                  while (1) {
                                    if ((ja2 >= ba2 ? ja2 : ba2) >= P2) {
                                      wa2 = ia2;
                                      xa2 = ja2;
                                      ya2 = ga2;
                                      break g;
                                    }
                                    if ((ha2 <= ka2 ? ha2 : ka2) <= O2) {
                                      wa2 = ia2;
                                      xa2 = ja2;
                                      ya2 = ga2;
                                      break g;
                                    }
                                    ea2 = ga2 * 0.5;
                                    h[o2 >> 3] = ea2;
                                    da2 = ia2 * 0.5;
                                    qa2 = fa2 * 0.5;
                                    h[p2 >> 3] = qa2;
                                    ta2 = ja2 * 2;
                                    ra2 = ea2 <= da2 ? ea2 : da2;
                                    if (qa2 < ta2) {
                                      wa2 = da2;
                                      xa2 = ta2;
                                      ya2 = ea2;
                                      break;
                                    } else {
                                      ba2 = ba2 * 2;
                                      ka2 = ka2 * 0.5;
                                      ja2 = ta2;
                                      ia2 = da2;
                                      ha2 = ra2 <= qa2 ? ra2 : qa2;
                                      ga2 = ea2;
                                      fa2 = qa2;
                                    }
                                  }
                                }
                              while (0);
                              if (!(xa2 + wa2 >= ca2 * 0.95)) {
                                if (ya2 < 1 ? (_2 = +h[d2 + (R2 << 3) >> 3], !(!(_2 < 1) | !(ya2 * _2 <= N2))) : 0) {
                                  za2 = Q2;
                                  break;
                                }
                                Aa2 = d2 + (R2 << 3) | 0;
                                _2 = +h[Aa2 >> 3];
                                if (ya2 > 1 ? !(_2 > 1 ? !(_2 >= M2 / ya2) : 1) : 0) {
                                  za2 = Q2;
                                  break;
                                }
                                h[p2 >> 3] = 1 / ya2;
                                h[Aa2 >> 3] = ya2 * _2;
                                c[n2 >> 2] = z2 + (c[b2 >> 2] | 0);
                                Ob(n2, p2, aa2, e2) | 0;
                                Ob(q2, o2, B2, 112) | 0;
                                za2 = 1;
                              } else za2 = Q2;
                            } else za2 = Q2;
                          while (0);
                          if ((R2 | 0) >= (c[m2 >> 2] | 0)) break;
                          Q2 = za2;
                          R2 = R2 + 1 | 0;
                          T2 = c[q2 >> 2] | 0;
                        }
                        if (!za2) {
                          x2 = I2;
                          break;
                        }
                      }
                    } else x2 = I2;
                  } else x2 = 1;
                while (0);
                c[f2 >> 2] = x2;
                c[g2 >> 2] = c[q2 >> 2];
                i2 = l2;
                return 0;
              } else t2 = v2;
            }
          while (0);
          c[m2 >> 2] = 0 - t2;
          Oc(1459, m2) | 0;
          i2 = l2;
          return 0;
        }
        function Xa(b2, d2, e2, f2, g2, j2, k2, l2, m2, n2, o2, p2, q2, r2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          g2 = g2 | 0;
          j2 = j2 | 0;
          k2 = k2 | 0;
          l2 = l2 | 0;
          m2 = m2 | 0;
          n2 = n2 | 0;
          o2 = o2 | 0;
          p2 = p2 | 0;
          q2 = q2 | 0;
          r2 = r2 | 0;
          var s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0, O2 = 0, P2 = 0, Q2 = 0, R2 = 0, T2 = 0, U2 = 0, V2 = 0, W2 = 0, X2 = 0, Y2 = 0, Z2 = 0, _2 = 0, $2 = 0, aa2 = 0, ba2 = 0, ca2 = 0, da2 = 0, ea2 = 0, fa2 = 0, ga2 = 0, ha2 = 0, ia2 = 0, ja2 = 0, ka2 = 0, la2 = 0, ma2 = 0, na2 = 0, oa2 = 0, pa2 = 0, qa2 = 0, ra2 = 0, sa2 = 0, ta2 = 0, ua2 = 0, va2 = 0, wa2 = 0, xa2 = 0, ya2 = 0, za2 = 0, Aa2 = 0, Ba2 = 0, Ca2 = 0;
          s2 = i2;
          i2 = i2 + 128 | 0;
          t2 = s2 + 112 | 0;
          u2 = s2 + 108 | 0;
          v2 = s2 + 80 | 0;
          w2 = s2 + 72 | 0;
          x2 = s2 + 64 | 0;
          y2 = s2 + 56 | 0;
          z2 = s2 + 48 | 0;
          A2 = s2 + 104 | 0;
          B2 = s2 + 40 | 0;
          C2 = s2 + 100 | 0;
          D2 = s2 + 32 | 0;
          E2 = s2 + 116 | 0;
          F2 = s2 + 24 | 0;
          H2 = s2 + 96 | 0;
          I2 = s2 + 92 | 0;
          J2 = s2 + 16 | 0;
          K2 = s2 + 88 | 0;
          L2 = s2 + 8 | 0;
          M2 = s2;
          N2 = c[g2 >> 2] | 0;
          O2 = N2 + 1 | 0;
          P2 = f2 + (~N2 << 3) | 0;
          N2 = j2 + -8 | 0;
          f2 = k2 + -8 | 0;
          Q2 = c[m2 >> 2] | 0;
          R2 = Q2 + 1 | 0;
          T2 = l2 + (~Q2 << 3) | 0;
          l2 = c[o2 >> 2] | 0;
          U2 = l2 + 1 | 0;
          V2 = n2 + (~l2 << 3) | 0;
          n2 = p2 + -8 | 0;
          c[r2 >> 2] = 0;
          W2 = (c[q2 >> 2] | 0) == -1;
          X2 = nc(b2, 2058) | 0;
          Y2 = nc(d2, 2058) | 0;
          Z2 = (X2 | 0) != 0;
          if (!Z2 ? (nc(b2, 2080) | 0) == 0 : 0) {
            c[r2 >> 2] = -1;
            _2 = -1;
          } else $2 = 4;
          do
            if (($2 | 0) == 4) {
              b2 = (Y2 | 0) != 0;
              if (!b2 ? (nc(d2, 2080) | 0) == 0 : 0) {
                c[r2 >> 2] = -2;
                _2 = -2;
                break;
              }
              aa2 = c[e2 >> 2] | 0;
              if ((aa2 | 0) < 0) {
                c[r2 >> 2] = -3;
                _2 = -3;
                break;
              }
              if ((c[g2 >> 2] | 0) < (((aa2 | 0) > 1 ? aa2 : 1) | 0)) {
                c[r2 >> 2] = -5;
                _2 = -5;
                break;
              }
              ba2 = c[m2 >> 2] | 0;
              if ((ba2 | 0) < 1 | Z2 & (ba2 | 0) < (aa2 | 0)) {
                c[r2 >> 2] = -9;
                _2 = -9;
                break;
              }
              ba2 = c[o2 >> 2] | 0;
              if ((ba2 | 0) < 1 | b2 & (ba2 | 0) < (aa2 | 0)) {
                c[r2 >> 2] = -11;
                _2 = -11;
                break;
              }
              ba2 = c[r2 >> 2] | 0;
              if (!ba2) {
                if (!aa2) {
                  ca2 = 1;
                  da2 = 1;
                  ea2 = 0;
                } else {
                  b2 = S((lc(116, 1480, 1962, e2, 116, e2, 6196) | 0) + 2 | 0, aa2) | 0;
                  do
                    if (!Z2) {
                      aa2 = c[e2 >> 2] | 0;
                      if (!Y2) {
                        bb(1922, 2080, e2, 116, e2, P2 + (O2 << 3) | 0, g2, j2, k2, V2 + (U2 << 3) | 0, o2, p2, 120, r2) | 0;
                        fa2 = ~~+h[p2 >> 3];
                        ga2 = c[e2 >> 2] | 0;
                        ha2 = ga2 + 1 | 0;
                        ia2 = (b2 | 0) >= (ha2 | 0) ? b2 : ha2;
                        c[t2 >> 2] = ia2;
                        ha2 = ga2 + fa2 | 0;
                        c[u2 >> 2] = ha2;
                        ja2 = (ia2 | 0) >= (ha2 | 0) ? ia2 : ha2;
                        ka2 = aa2 * 3 | 0;
                        la2 = ga2;
                        break;
                      } else {
                        ga2 = (S(aa2 + -1 | 0, lc(116, 1948, 1962, e2, 116, e2, 120) | 0) | 0) + (aa2 << 1) | 0;
                        ha2 = (b2 | 0) >= (ga2 | 0) ? b2 : ga2;
                        bb(2026, 2058, e2, 116, e2, P2 + (O2 << 3) | 0, g2, j2, k2, V2 + (U2 << 3) | 0, o2, p2, 120, r2) | 0;
                        ga2 = c[e2 >> 2] | 0;
                        ia2 = ga2 + 1 | 0;
                        fa2 = (ha2 | 0) >= (ia2 | 0) ? ha2 : ia2;
                        ia2 = ga2 + ~~+h[p2 >> 3] | 0;
                        ha2 = (fa2 | 0) >= (ia2 | 0) ? fa2 : ia2;
                        c[t2 >> 2] = ha2;
                        ia2 = ga2 << 2;
                        c[u2 >> 2] = ia2;
                        ja2 = (ha2 | 0) >= (ia2 | 0) ? ha2 : ia2;
                        ka2 = aa2 << 2;
                        la2 = ga2;
                        break;
                      }
                    } else {
                      ga2 = c[e2 >> 2] | 0;
                      aa2 = (S(lc(116, 1948, 1962, e2, 116, e2, 120) | 0, ga2 + -1 | 0) | 0) + (ga2 << 1) | 0;
                      ia2 = (b2 | 0) >= (aa2 | 0) ? b2 : aa2;
                      bb(2026, 2058, e2, 116, e2, P2 + (O2 << 3) | 0, g2, j2, k2, T2 + (R2 << 3) | 0, m2, p2, 120, r2) | 0;
                      aa2 = c[e2 >> 2] | 0;
                      ha2 = aa2 + 1 | 0;
                      fa2 = (ia2 | 0) >= (ha2 | 0) ? ia2 : ha2;
                      ha2 = aa2 + ~~+h[p2 >> 3] | 0;
                      ia2 = (fa2 | 0) >= (ha2 | 0) ? fa2 : ha2;
                      c[t2 >> 2] = ia2;
                      ha2 = aa2 << 2;
                      c[u2 >> 2] = ha2;
                      ja2 = (ia2 | 0) >= (ha2 | 0) ? ia2 : ha2;
                      ka2 = ga2 << 2;
                      la2 = aa2;
                    }
                  while (0);
                  ca2 = +(((ja2 | 0) >= (ka2 | 0) ? ja2 : ka2) | 0);
                  da2 = ka2;
                  ea2 = la2;
                }
                h[p2 >> 3] = ca2;
                if (!(W2 | (c[q2 >> 2] | 0) >= (da2 | 0))) {
                  c[r2 >> 2] = -13;
                  _2 = -13;
                  break;
                }
                b2 = c[r2 >> 2] | 0;
                if (!b2) {
                  if (W2 | (ea2 | 0) == 0) {
                    i2 = s2;
                    return 0;
                  }
                  ma2 = +lb(1939);
                  na2 = +lb(2026);
                  h[M2 >> 3] = na2;
                  h[L2 >> 3] = 1 / na2;
                  db(M2, L2) | 0;
                  na2 = +G(+ +h[M2 >> 3]) / ma2;
                  h[M2 >> 3] = na2;
                  h[L2 >> 3] = 1 / na2;
                  aa2 = P2 + (O2 << 3) | 0;
                  na2 = +nb(1821, e2, e2, aa2, g2, D2);
                  h[F2 >> 3] = na2;
                  if (na2 > 0 ? (ma2 = +h[M2 >> 3], na2 < ma2) : 0) {
                    oa2 = ma2;
                    $2 = 31;
                  } else {
                    ma2 = +h[L2 >> 3];
                    if (na2 > ma2) {
                      oa2 = ma2;
                      $2 = 31;
                    } else pa2 = 0;
                  }
                  if (($2 | 0) == 31) {
                    h[J2 >> 3] = oa2;
                    Cb(1924, 6196, 6196, F2, J2, e2, e2, aa2, g2, H2) | 0;
                    pa2 = 1;
                  }
                  Wa(2022, e2, aa2, g2, C2, A2, p2, H2) | 0;
                  ga2 = c[e2 >> 2] | 0;
                  ha2 = ga2 + 1 | 0;
                  ia2 = ha2 + ga2 | 0;
                  c[t2 >> 2] = (c[q2 >> 2] | 0) + 1 - ia2;
                  fa2 = n2 + (ha2 << 3) | 0;
                  ha2 = n2 + (ia2 << 3) | 0;
                  Za(e2, C2, A2, aa2, g2, fa2, ha2, t2, H2) | 0;
                  do
                    if (Z2) {
                      a[E2 >> 0] = 76;
                      qa2 = T2 + (R2 << 3) | 0;
                      eb(2078, e2, e2, aa2, g2, qa2, m2) | 0;
                      c[t2 >> 2] = 1 - ia2 + (c[q2 >> 2] | 0);
                      Ib(e2, C2, A2, qa2, m2, fa2, ha2, t2, H2) | 0;
                      c[t2 >> 2] = (c[q2 >> 2] | 0) - ga2;
                      bb(2026, 2058, e2, C2, A2, aa2, g2, j2, k2, qa2, m2, fa2, t2, r2) | 0;
                      if (Y2 | 0) {
                        a[E2 >> 0] = 66;
                        eb(1889, e2, e2, qa2, m2, V2 + (U2 << 3) | 0, o2) | 0;
                      }
                    } else if (!Y2) {
                      c[t2 >> 2] = (c[q2 >> 2] | 0) - ga2;
                      bb(1922, 2080, e2, C2, A2, aa2, g2, j2, k2, V2 + (U2 << 3) | 0, o2, fa2, t2, r2) | 0;
                      break;
                    } else {
                      a[E2 >> 0] = 82;
                      qa2 = V2 + (U2 << 3) | 0;
                      eb(2078, e2, e2, aa2, g2, qa2, o2) | 0;
                      c[t2 >> 2] = 1 - ia2 + (c[q2 >> 2] | 0);
                      Ib(e2, C2, A2, qa2, o2, fa2, ha2, t2, H2) | 0;
                      c[t2 >> 2] = (c[q2 >> 2] | 0) - ga2;
                      bb(2026, 2058, e2, C2, A2, aa2, g2, j2, k2, qa2, o2, fa2, t2, r2) | 0;
                      break;
                    }
                  while (0);
                  if ((c[r2 >> 2] | 0) <= 0) {
                    ha2 = (Y2 | 0) == 0;
                    if (Y2 | X2 | 0) Qb(E2, 2022, K2, e2, aa2, g2, T2 + (R2 << 3) | 0, m2, V2 + (U2 << 3) | 0, o2, e2, I2, fa2, H2) | 0;
                    if (Z2 ? (Va(2022, 2078, e2, C2, A2, p2, e2, T2 + (R2 << 3) | 0, m2, H2) | 0, ia2 = c[e2 >> 2] | 0, c[t2 >> 2] = ia2, (ia2 | 0) >= 1) : 0) {
                      ia2 = 1;
                      while (1) {
                        ma2 = +h[f2 + (ia2 << 3) >> 3];
                        do
                          if (ma2 == 0) {
                            qa2 = T2 + ((S(ia2, Q2) | 0) + 1 << 3) | 0;
                            h[B2 >> 3] = 1 / +Gb(e2, qa2, 116);
                            Ob(e2, B2, qa2, 116) | 0;
                          } else {
                            if (!(ma2 > 0)) break;
                            qa2 = S(ia2, Q2) | 0;
                            ra2 = T2 + (qa2 + 1 << 3) | 0;
                            h[v2 >> 3] = +Gb(e2, ra2, 116);
                            sa2 = S(ia2 + 1 | 0, Q2) | 0;
                            ta2 = T2 + (sa2 + 1 << 3) | 0;
                            h[w2 >> 3] = +Gb(e2, ta2, 116);
                            h[B2 >> 3] = 1 / +pb(v2, w2);
                            Ob(e2, B2, ra2, 116) | 0;
                            Ob(e2, B2, ta2, 116) | 0;
                            ua2 = c[e2 >> 2] | 0;
                            c[u2 >> 2] = ua2;
                            if ((ua2 | 0) >= 1) {
                              va2 = 1;
                              while (1) {
                                wa2 = +h[T2 + (va2 + qa2 << 3) >> 3];
                                xa2 = +h[T2 + (va2 + sa2 << 3) >> 3];
                                h[n2 + (va2 + ga2 << 3) >> 3] = wa2 * wa2 + xa2 * xa2;
                                if ((va2 | 0) < (ua2 | 0)) va2 = va2 + 1 | 0;
                                else break;
                              }
                              h[v2 >> 3] = wa2;
                              h[w2 >> 3] = xa2;
                            }
                            va2 = hc(e2, fa2, 116) | 0;
                            ua2 = T2 + (va2 + sa2 << 3) | 0;
                            Bb(T2 + (va2 + qa2 << 3) | 0, ua2, y2, z2, x2) | 0;
                            Nb(e2, ra2, 116, ta2, 116, y2, z2) | 0;
                            h[ua2 >> 3] = 0;
                          }
                        while (0);
                        if ((ia2 | 0) < (c[t2 >> 2] | 0)) ia2 = ia2 + 1 | 0;
                        else break;
                      }
                    }
                    if (!ha2 ? (Va(2022, 2067, e2, C2, A2, p2, e2, V2 + (U2 << 3) | 0, o2, H2) | 0, ia2 = c[e2 >> 2] | 0, c[t2 >> 2] = ia2, (ia2 | 0) >= 1) : 0) {
                      ia2 = 1;
                      while (1) {
                        ma2 = +h[f2 + (ia2 << 3) >> 3];
                        do
                          if (ma2 == 0) {
                            aa2 = V2 + ((S(ia2, l2) | 0) + 1 << 3) | 0;
                            h[B2 >> 3] = 1 / +Gb(e2, aa2, 116);
                            Ob(e2, B2, aa2, 116) | 0;
                          } else {
                            if (!(ma2 > 0)) break;
                            aa2 = S(ia2, l2) | 0;
                            ua2 = V2 + (aa2 + 1 << 3) | 0;
                            h[v2 >> 3] = +Gb(e2, ua2, 116);
                            va2 = S(ia2 + 1 | 0, l2) | 0;
                            ya2 = V2 + (va2 + 1 << 3) | 0;
                            h[w2 >> 3] = +Gb(e2, ya2, 116);
                            h[B2 >> 3] = 1 / +pb(v2, w2);
                            Ob(e2, B2, ua2, 116) | 0;
                            Ob(e2, B2, ya2, 116) | 0;
                            za2 = c[e2 >> 2] | 0;
                            c[u2 >> 2] = za2;
                            if ((za2 | 0) >= 1) {
                              Aa2 = 1;
                              while (1) {
                                Ba2 = +h[V2 + (Aa2 + aa2 << 3) >> 3];
                                Ca2 = +h[V2 + (Aa2 + va2 << 3) >> 3];
                                h[n2 + (Aa2 + ga2 << 3) >> 3] = Ba2 * Ba2 + Ca2 * Ca2;
                                if ((Aa2 | 0) < (za2 | 0)) Aa2 = Aa2 + 1 | 0;
                                else break;
                              }
                              h[v2 >> 3] = Ba2;
                              h[w2 >> 3] = Ca2;
                            }
                            Aa2 = hc(e2, fa2, 116) | 0;
                            za2 = V2 + (Aa2 + va2 << 3) | 0;
                            Bb(V2 + (Aa2 + aa2 << 3) | 0, za2, y2, z2, x2) | 0;
                            Nb(e2, ua2, 116, ya2, 116, y2, z2) | 0;
                            h[za2 >> 3] = 0;
                          }
                        while (0);
                        if ((ia2 | 0) < (c[t2 >> 2] | 0)) ia2 = ia2 + 1 | 0;
                        else break;
                      }
                    }
                  }
                  if (pa2 ? (ia2 = c[r2 >> 2] | 0, fa2 = (c[e2 >> 2] | 0) - ia2 | 0, c[t2 >> 2] = fa2, c[u2 >> 2] = (fa2 | 0) < 1 ? 1 : fa2, Cb(1924, 6196, 6196, J2, F2, t2, 116, N2 + (ia2 + 1 << 3) | 0, u2, H2) | 0, ia2 = c[r2 >> 2] | 0, fa2 = (c[e2 >> 2] | 0) - ia2 | 0, c[t2 >> 2] = fa2, c[u2 >> 2] = (fa2 | 0) < 1 ? 1 : fa2, Cb(1924, 6196, 6196, J2, F2, t2, 116, f2 + (ia2 + 1 << 3) | 0, u2, H2) | 0, (c[r2 >> 2] | 0) > 0) : 0) {
                    c[t2 >> 2] = (c[C2 >> 2] | 0) + -1;
                    Cb(1924, 6196, 6196, J2, F2, t2, 116, j2, e2, H2) | 0;
                    c[t2 >> 2] = (c[C2 >> 2] | 0) + -1;
                    Cb(1924, 6196, 6196, J2, F2, t2, 116, k2, e2, H2) | 0;
                  }
                  h[p2 >> 3] = ca2;
                  i2 = s2;
                  return 0;
                } else _2 = b2;
              } else _2 = ba2;
            }
          while (0);
          c[t2 >> 2] = 0 - _2;
          Oc(1466, t2) | 0;
          i2 = s2;
          return 0;
        }
        function Ya(a2, b2, d2, e2, f2, g2, j2, k2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          g2 = g2 | 0;
          j2 = j2 | 0;
          k2 = k2 | 0;
          var l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0;
          l2 = i2;
          i2 = i2 + 16 | 0;
          m2 = l2 + 8 | 0;
          n2 = l2 + 4 | 0;
          o2 = l2;
          p2 = c[f2 >> 2] | 0;
          q2 = e2 + (~p2 << 3) | 0;
          e2 = g2 + -8 | 0;
          c[k2 >> 2] = 0;
          g2 = c[a2 >> 2] | 0;
          do
            if ((g2 | 0) < 0) {
              c[k2 >> 2] = -1;
              r2 = -1;
            } else {
              s2 = c[b2 >> 2] | 0;
              if ((s2 | 0) >= 1 ? (t2 = (g2 | 0) > 1 ? g2 : 1, (s2 | 0) <= (t2 | 0)) : 0) {
                u2 = c[d2 >> 2] | 0;
                if ((u2 | 0) > (g2 | 0) ? 1 : (u2 | 0) < (((s2 | 0) > (g2 | 0) ? g2 : s2) | 0)) {
                  c[k2 >> 2] = -3;
                  r2 = -3;
                  break;
                }
                if ((c[f2 >> 2] | 0) < (t2 | 0)) {
                  c[k2 >> 2] = -5;
                  r2 = -5;
                  break;
                }
                c[m2 >> 2] = u2 + -1;
                if ((s2 | 0) < (u2 | 0)) {
                  v2 = s2;
                  w2 = u2;
                  x2 = g2;
                } else {
                  i2 = l2;
                  return 0;
                }
                while (1) {
                  c[n2 >> 2] = w2 - v2;
                  u2 = v2 + 2 | 0;
                  c[o2 >> 2] = u2;
                  s2 = v2 + 1 | 0;
                  t2 = S(v2, p2) | 0;
                  y2 = q2 + (s2 + t2 << 3) | 0;
                  z2 = e2 + (v2 << 3) | 0;
                  yb(n2, y2, q2 + (((u2 | 0) > (x2 | 0) ? x2 : u2) + t2 << 3) | 0, 124, z2) | 0;
                  A2 = +h[y2 >> 3];
                  h[y2 >> 3] = 1;
                  c[n2 >> 2] = (c[d2 >> 2] | 0) - v2;
                  t2 = S(s2, p2) | 0;
                  wb(1878, d2, n2, y2, 124, z2, q2 + (t2 + 1 << 3) | 0, f2, j2) | 0;
                  c[n2 >> 2] = (c[d2 >> 2] | 0) - v2;
                  c[o2 >> 2] = (c[a2 >> 2] | 0) - v2;
                  wb(1964, n2, o2, y2, 124, z2, q2 + (t2 + s2 << 3) | 0, f2, j2) | 0;
                  h[y2 >> 3] = A2;
                  if ((v2 | 0) >= (c[m2 >> 2] | 0)) break;
                  v2 = s2;
                  w2 = c[d2 >> 2] | 0;
                  x2 = c[a2 >> 2] | 0;
                }
                i2 = l2;
                return 0;
              }
              c[k2 >> 2] = -2;
              r2 = -2;
            }
          while (0);
          c[m2 >> 2] = 0 - r2;
          Oc(1473, m2) | 0;
          i2 = l2;
          return 0;
        }
        function Za(a2, b2, d2, e2, f2, g2, j2, k2, l2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          g2 = g2 | 0;
          j2 = j2 | 0;
          k2 = k2 | 0;
          l2 = l2 | 0;
          var m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0, O2 = 0, P2 = 0, Q2 = 0, R2 = 0, T2 = 0, U2 = 0;
          m2 = i2;
          i2 = i2 + 33312 | 0;
          n2 = m2 + 33304 | 0;
          o2 = m2 + 33300 | 0;
          p2 = m2 + 33296 | 0;
          q2 = m2 + 33292 | 0;
          r2 = m2;
          s2 = m2 + 33288 | 0;
          t2 = m2 + 33284 | 0;
          u2 = m2 + 33280 | 0;
          v2 = c[f2 >> 2] | 0;
          w2 = v2 + 1 | 0;
          x2 = e2 + (~v2 << 3) | 0;
          e2 = g2 + -8 | 0;
          y2 = j2 + -8 | 0;
          c[l2 >> 2] = 0;
          c[n2 >> 2] = 64;
          z2 = lc(128, 1480, 1962, a2, b2, d2, 132) | 0;
          A2 = c[a2 >> 2] | 0;
          h[j2 >> 3] = +(S((z2 | 0) < 64 ? z2 : 64, A2) | 0);
          z2 = c[k2 >> 2] | 0;
          B2 = (z2 | 0) == -1;
          do
            if ((A2 | 0) < 0) {
              c[l2 >> 2] = -1;
              C2 = -1;
            } else {
              D2 = c[b2 >> 2] | 0;
              if ((D2 | 0) >= 1 ? (E2 = (A2 | 0) > 1 ? A2 : 1, (D2 | 0) <= (E2 | 0)) : 0) {
                F2 = c[d2 >> 2] | 0;
                if ((F2 | 0) > (A2 | 0) ? 1 : (F2 | 0) < (((D2 | 0) > (A2 | 0) ? A2 : D2) | 0)) {
                  c[l2 >> 2] = -3;
                  C2 = -3;
                  break;
                }
                if ((c[f2 >> 2] | 0) < (E2 | 0)) {
                  c[l2 >> 2] = -5;
                  C2 = -5;
                  break;
                }
                if (!(B2 | (z2 | 0) >= (E2 | 0))) {
                  c[l2 >> 2] = -8;
                  C2 = -8;
                  break;
                }
                E2 = c[l2 >> 2] | 0;
                if (E2 | 0) {
                  C2 = E2;
                  break;
                }
                if (B2) {
                  i2 = m2;
                  return 0;
                }
                E2 = D2 + -1 | 0;
                c[n2 >> 2] = E2;
                c[q2 >> 2] = 1;
                if ((D2 | 0) >= 2) {
                  G2 = 1;
                  do {
                    h[e2 + (G2 << 3) >> 3] = 0;
                    H2 = G2;
                    G2 = G2 + 1 | 0;
                  } while ((H2 | 0) < (E2 | 0));
                  c[q2 >> 2] = G2;
                }
                E2 = A2 + -1 | 0;
                c[n2 >> 2] = E2;
                H2 = (F2 | 0) > 1 ? F2 : 1;
                c[q2 >> 2] = H2;
                if ((H2 | 0) < (A2 | 0)) {
                  I2 = H2;
                  do {
                    h[e2 + (I2 << 3) >> 3] = 0;
                    H2 = I2;
                    I2 = I2 + 1 | 0;
                  } while ((H2 | 0) < (E2 | 0));
                  c[q2 >> 2] = I2;
                }
                E2 = F2 - D2 | 0;
                if ((E2 + 1 | 0) < 2) {
                  h[j2 >> 3] = 1;
                  i2 = m2;
                  return 0;
                }
                c[n2 >> 2] = 64;
                G2 = lc(128, 1480, 1962, a2, b2, d2, 132) | 0;
                H2 = (G2 | 0) < 64 ? G2 : 64;
                if (!((H2 | 0) < 2 | (H2 | 0) > (E2 | 0))) {
                  c[n2 >> 2] = H2;
                  G2 = lc(136, 1480, 1962, a2, b2, d2, 132) | 0;
                  J2 = (H2 | 0) >= (G2 | 0) ? H2 : G2;
                  if ((J2 | 0) <= (E2 | 0)) {
                    G2 = S(c[a2 >> 2] | 0, H2) | 0;
                    if ((c[k2 >> 2] | 0) < (G2 | 0)) {
                      c[n2 >> 2] = 2;
                      K2 = lc(140, 1480, 1962, a2, b2, d2, 132) | 0;
                      L2 = (K2 | 0) > 2 ? K2 : 2;
                      K2 = c[k2 >> 2] | 0;
                      M2 = c[a2 >> 2] | 0;
                      if ((K2 | 0) < (S(M2, L2) | 0)) {
                        N2 = L2;
                        O2 = G2;
                        P2 = J2;
                        Q2 = 1;
                      } else {
                        N2 = L2;
                        O2 = G2;
                        P2 = J2;
                        Q2 = (K2 | 0) / (M2 | 0) | 0;
                      }
                    } else {
                      N2 = 2;
                      O2 = G2;
                      P2 = J2;
                      Q2 = H2;
                    }
                  } else {
                    N2 = 2;
                    O2 = 1;
                    P2 = J2;
                    Q2 = H2;
                  }
                } else {
                  N2 = 2;
                  O2 = 1;
                  P2 = 0;
                  Q2 = H2;
                }
                c[u2 >> 2] = c[a2 >> 2];
                a: do
                  if (!((Q2 | 0) > (E2 | 0) | (Q2 | 0) < (N2 | 0))) {
                    H2 = c[d2 >> 2] | 0;
                    J2 = H2 + ~P2 | 0;
                    c[n2 >> 2] = J2;
                    G2 = c[b2 >> 2] | 0;
                    c[q2 >> 2] = G2;
                    M2 = (Q2 | 0) < 0;
                    if (M2 ? (G2 | 0) >= (J2 | 0) : (G2 | 0) <= (J2 | 0)) {
                      J2 = G2;
                      G2 = H2;
                      while (1) {
                        c[o2 >> 2] = Q2;
                        H2 = G2 - J2 | 0;
                        c[p2 >> 2] = H2;
                        c[s2 >> 2] = (Q2 | 0) <= (H2 | 0) ? Q2 : H2;
                        ib(d2, q2, s2, x2 + ((S(J2, v2) | 0) + 1 << 3) | 0, f2, e2 + (J2 << 3) | 0, r2, 144, j2, u2) | 0;
                        H2 = c[q2 >> 2] | 0;
                        K2 = c[s2 >> 2] | 0;
                        L2 = K2 + H2 | 0;
                        R2 = x2 + ((S(L2 + -1 | 0, v2) | 0) + L2 << 3) | 0;
                        T2 = +h[R2 >> 3];
                        h[R2 >> 3] = 1;
                        c[o2 >> 2] = (c[d2 >> 2] | 0) + 1 - H2 - K2;
                        _a(1969, 1891, d2, o2, s2, 8, j2, u2, x2 + (L2 + (S(H2, v2) | 0) << 3) | 0, f2, 16, x2 + ((S(L2, v2) | 0) + 1 << 3) | 0, f2) | 0;
                        L2 = c[q2 >> 2] | 0;
                        H2 = c[s2 >> 2] | 0;
                        K2 = H2 + L2 | 0;
                        h[x2 + ((S(K2 + -1 | 0, v2) | 0) + K2 << 3) >> 3] = T2;
                        c[o2 >> 2] = H2 + -1;
                        Sb(1878, 1916, 1891, 1884, q2, o2, 16, x2 + (L2 + 1 + (S(L2, v2) | 0) << 3) | 0, f2, j2, u2) | 0;
                        L2 = c[s2 >> 2] | 0;
                        c[o2 >> 2] = L2 + -2;
                        if ((L2 | 0) < 2) U2 = L2;
                        else {
                          L2 = 0;
                          do {
                            H2 = y2 + ((S(c[u2 >> 2] | 0, L2) | 0) + 1 << 3) | 0;
                            K2 = L2;
                            L2 = L2 + 1 | 0;
                            Sa(q2, 8, H2, 128, x2 + ((S(L2 + (c[q2 >> 2] | 0) | 0, v2) | 0) + 1 << 3) | 0, 128) | 0;
                          } while ((K2 | 0) < (c[o2 >> 2] | 0));
                          U2 = c[s2 >> 2] | 0;
                        }
                        L2 = c[q2 >> 2] | 0;
                        c[o2 >> 2] = (c[d2 >> 2] | 0) - L2;
                        c[p2 >> 2] = 1 - L2 + (c[a2 >> 2] | 0) - U2;
                        K2 = L2 + 1 | 0;
                        xb(1964, 1891, 2003, 2011, o2, p2, s2, x2 + (K2 + (S(L2, v2) | 0) << 3) | 0, f2, r2, 144, x2 + ((S(U2 + L2 | 0, v2) | 0) + K2 << 3) | 0, f2, j2, u2) | 0;
                        K2 = (c[q2 >> 2] | 0) + Q2 | 0;
                        c[q2 >> 2] = K2;
                        L2 = c[n2 >> 2] | 0;
                        if (!(M2 ? (K2 | 0) >= (L2 | 0) : (K2 | 0) <= (L2 | 0))) break a;
                        J2 = K2;
                        G2 = c[d2 >> 2] | 0;
                      }
                    }
                  } else c[q2 >> 2] = c[b2 >> 2];
                while (0);
                Ya(a2, q2, d2, x2 + (w2 << 3) | 0, f2, g2, j2, t2) | 0;
                h[j2 >> 3] = +(O2 | 0);
                i2 = m2;
                return 0;
              }
              c[l2 >> 2] = -2;
              C2 = -2;
            }
          while (0);
          c[n2 >> 2] = 0 - C2;
          Oc(1480, n2) | 0;
          i2 = m2;
          return 0;
        }
        function _a(a2, b2, d2, e2, f2, g2, j2, k2, l2, m2, n2, o2, p2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          g2 = g2 | 0;
          j2 = j2 | 0;
          k2 = k2 | 0;
          l2 = l2 | 0;
          m2 = m2 | 0;
          n2 = n2 | 0;
          o2 = o2 | 0;
          p2 = p2 | 0;
          var q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0, O2 = 0, P2 = 0, Q2 = 0, R2 = 0, T2 = 0, U2 = 0, V2 = 0;
          q2 = i2;
          i2 = i2 + 16 | 0;
          r2 = q2;
          s2 = c[k2 >> 2] | 0;
          t2 = j2 + (~s2 << 3) | 0;
          j2 = c[m2 >> 2] | 0;
          u2 = l2 + (~j2 << 3) | 0;
          l2 = c[p2 >> 2] | 0;
          v2 = o2 + (~l2 << 3) | 0;
          w2 = nc(a2, 2080) | 0;
          x2 = nc(b2, 2080) | 0;
          y2 = (w2 | 0) != 0;
          w2 = c[(y2 ? d2 : f2) >> 2] | 0;
          z2 = (x2 | 0) != 0;
          x2 = c[(z2 ? f2 : e2) >> 2] | 0;
          c[r2 >> 2] = 0;
          if ((!y2 ? (nc(a2, 2084) | 0) == 0 : 0) ? (nc(a2, 2082) | 0) == 0 : 0) c[r2 >> 2] = 1;
          else A2 = 5;
          do
            if ((A2 | 0) == 5) {
              if ((!z2 ? (nc(b2, 2084) | 0) == 0 : 0) ? (nc(b2, 2082) | 0) == 0 : 0) {
                c[r2 >> 2] = 2;
                break;
              }
              a2 = c[d2 >> 2] | 0;
              if ((a2 | 0) < 0) {
                c[r2 >> 2] = 3;
                break;
              }
              B2 = c[e2 >> 2] | 0;
              if ((B2 | 0) < 0) {
                c[r2 >> 2] = 4;
                break;
              }
              C2 = c[f2 >> 2] | 0;
              if ((C2 | 0) < 0) {
                c[r2 >> 2] = 5;
                break;
              }
              if ((c[k2 >> 2] | 0) < (((w2 | 0) > 1 ? w2 : 1) | 0)) {
                c[r2 >> 2] = 8;
                break;
              }
              if ((c[m2 >> 2] | 0) < (((x2 | 0) > 1 ? x2 : 1) | 0)) {
                c[r2 >> 2] = 10;
                break;
              }
              if ((c[p2 >> 2] | 0) < (((a2 | 0) > 1 ? a2 : 1) | 0)) {
                c[r2 >> 2] = 13;
                break;
              }
              if ((a2 | 0) == 0 | (B2 | 0) == 0) {
                i2 = q2;
                return 0;
              }
              D2 = +h[g2 >> 3] == 0;
              if (D2 | (C2 | 0) == 0) {
                if (+h[n2 >> 3] == 1) {
                  i2 = q2;
                  return 0;
                }
                if (D2) {
                  if (+h[n2 >> 3] == 0) {
                    D2 = a2 << 3;
                    E2 = 0;
                    do {
                      je(o2 + ((S(l2, E2) | 0) << 3) | 0, 0, D2 | 0) | 0;
                      E2 = E2 + 1 | 0;
                    } while ((E2 | 0) != (B2 | 0));
                    i2 = q2;
                    return 0;
                  } else F2 = 1;
                  while (1) {
                    E2 = S(F2, l2) | 0;
                    D2 = 1;
                    while (1) {
                      G2 = v2 + (D2 + E2 << 3) | 0;
                      h[G2 >> 3] = +h[n2 >> 3] * +h[G2 >> 3];
                      if ((D2 | 0) == (a2 | 0)) break;
                      else D2 = D2 + 1 | 0;
                    }
                    if ((F2 | 0) == (B2 | 0)) break;
                    else F2 = F2 + 1 | 0;
                  }
                  i2 = q2;
                  return 0;
                }
              }
              if (z2) {
                if (!y2) {
                  D2 = a2 + 1 | 0;
                  E2 = (C2 | 0) < 1;
                  G2 = 1;
                  while (1) {
                    H2 = S(G2, l2) | 0;
                    I2 = S(G2, j2) | 0;
                    if (E2) {
                      J2 = 1;
                      do {
                        K2 = +h[n2 >> 3];
                        L2 = +h[g2 >> 3] * 0;
                        M2 = v2 + (J2 + H2 << 3) | 0;
                        if (K2 == 0) N2 = L2;
                        else N2 = L2 + K2 * +h[M2 >> 3];
                        h[M2 >> 3] = N2;
                        J2 = J2 + 1 | 0;
                      } while ((J2 | 0) != (D2 | 0));
                    } else {
                      J2 = 1;
                      do {
                        M2 = S(J2, s2) | 0;
                        K2 = 0;
                        O2 = 1;
                        while (1) {
                          K2 = K2 + +h[t2 + (O2 + M2 << 3) >> 3] * +h[u2 + (O2 + I2 << 3) >> 3];
                          if ((O2 | 0) == (C2 | 0)) break;
                          else O2 = O2 + 1 | 0;
                        }
                        L2 = +h[n2 >> 3];
                        P2 = K2 * +h[g2 >> 3];
                        O2 = v2 + (J2 + H2 << 3) | 0;
                        if (L2 == 0) Q2 = P2;
                        else Q2 = P2 + L2 * +h[O2 >> 3];
                        h[O2 >> 3] = Q2;
                        J2 = J2 + 1 | 0;
                      } while ((J2 | 0) != (D2 | 0));
                    }
                    if ((G2 | 0) == (B2 | 0)) break;
                    else G2 = G2 + 1 | 0;
                  }
                  i2 = q2;
                  return 0;
                }
                G2 = (C2 | 0) < 1;
                D2 = 1;
                E2 = 0;
                while (1) {
                  J2 = o2 + ((S(l2, E2) | 0) << 3) | 0;
                  L2 = +h[n2 >> 3];
                  if (L2 == 0) {
                    H2 = c[d2 >> 2] | 0;
                    if ((H2 | 0) >= 1) je(J2 | 0, 0, H2 << 3 | 0) | 0;
                  } else if ((L2 != 1 ? (H2 = c[d2 >> 2] | 0, (H2 | 0) >= 1) : 0) ? (J2 = S(D2, l2) | 0, I2 = v2 + (J2 + 1 << 3) | 0, h[I2 >> 3] = L2 * +h[I2 >> 3], (H2 | 0) != 1) : 0) {
                    I2 = 1;
                    do {
                      I2 = I2 + 1 | 0;
                      O2 = v2 + (I2 + J2 << 3) | 0;
                      h[O2 >> 3] = +h[n2 >> 3] * +h[O2 >> 3];
                    } while ((I2 | 0) != (H2 | 0));
                  }
                  if (!G2) {
                    H2 = S(D2, j2) | 0;
                    I2 = S(D2, l2) | 0;
                    J2 = 1;
                    while (1) {
                      L2 = +h[u2 + (J2 + H2 << 3) >> 3];
                      do
                        if (L2 != 0) {
                          P2 = L2 * +h[g2 >> 3];
                          O2 = c[d2 >> 2] | 0;
                          if ((O2 | 0) < 1) break;
                          M2 = S(J2, s2) | 0;
                          R2 = 1;
                          while (1) {
                            T2 = v2 + (R2 + I2 << 3) | 0;
                            h[T2 >> 3] = +h[T2 >> 3] + P2 * +h[t2 + (R2 + M2 << 3) >> 3];
                            if ((R2 | 0) == (O2 | 0)) break;
                            else R2 = R2 + 1 | 0;
                          }
                        }
                      while (0);
                      if ((J2 | 0) == (C2 | 0)) break;
                      else J2 = J2 + 1 | 0;
                    }
                  }
                  E2 = E2 + 1 | 0;
                  if ((E2 | 0) == (B2 | 0)) break;
                  else D2 = D2 + 1 | 0;
                }
                i2 = q2;
                return 0;
              } else {
                if (!y2) {
                  D2 = a2 + 1 | 0;
                  E2 = (C2 | 0) < 1;
                  G2 = 1;
                  while (1) {
                    J2 = S(G2, l2) | 0;
                    if (E2) {
                      I2 = 1;
                      do {
                        L2 = +h[n2 >> 3];
                        K2 = +h[g2 >> 3] * 0;
                        H2 = v2 + (I2 + J2 << 3) | 0;
                        if (L2 == 0) U2 = K2;
                        else U2 = K2 + L2 * +h[H2 >> 3];
                        h[H2 >> 3] = U2;
                        I2 = I2 + 1 | 0;
                      } while ((I2 | 0) != (D2 | 0));
                    } else {
                      I2 = 1;
                      do {
                        H2 = S(I2, s2) | 0;
                        L2 = 0;
                        R2 = 1;
                        while (1) {
                          L2 = L2 + +h[t2 + (R2 + H2 << 3) >> 3] * +h[u2 + ((S(R2, j2) | 0) + G2 << 3) >> 3];
                          if ((R2 | 0) == (C2 | 0)) break;
                          else R2 = R2 + 1 | 0;
                        }
                        K2 = +h[n2 >> 3];
                        P2 = L2 * +h[g2 >> 3];
                        R2 = v2 + (I2 + J2 << 3) | 0;
                        if (K2 == 0) V2 = P2;
                        else V2 = P2 + K2 * +h[R2 >> 3];
                        h[R2 >> 3] = V2;
                        I2 = I2 + 1 | 0;
                      } while ((I2 | 0) != (D2 | 0));
                    }
                    if ((G2 | 0) == (B2 | 0)) break;
                    else G2 = G2 + 1 | 0;
                  }
                  i2 = q2;
                  return 0;
                }
                G2 = (C2 | 0) < 1;
                D2 = 1;
                E2 = 0;
                while (1) {
                  a2 = o2 + ((S(l2, E2) | 0) << 3) | 0;
                  K2 = +h[n2 >> 3];
                  if (K2 == 0) {
                    I2 = c[d2 >> 2] | 0;
                    if ((I2 | 0) >= 1) je(a2 | 0, 0, I2 << 3 | 0) | 0;
                  } else if ((K2 != 1 ? (I2 = c[d2 >> 2] | 0, (I2 | 0) >= 1) : 0) ? (a2 = S(D2, l2) | 0, J2 = v2 + (a2 + 1 << 3) | 0, h[J2 >> 3] = K2 * +h[J2 >> 3], (I2 | 0) != 1) : 0) {
                    J2 = 1;
                    do {
                      J2 = J2 + 1 | 0;
                      R2 = v2 + (J2 + a2 << 3) | 0;
                      h[R2 >> 3] = +h[n2 >> 3] * +h[R2 >> 3];
                    } while ((J2 | 0) != (I2 | 0));
                  }
                  if (!G2) {
                    I2 = S(D2, l2) | 0;
                    J2 = 1;
                    while (1) {
                      K2 = +h[u2 + ((S(J2, j2) | 0) + D2 << 3) >> 3];
                      do
                        if (K2 != 0) {
                          P2 = K2 * +h[g2 >> 3];
                          a2 = c[d2 >> 2] | 0;
                          if ((a2 | 0) < 1) break;
                          R2 = S(J2, s2) | 0;
                          H2 = 1;
                          while (1) {
                            O2 = v2 + (H2 + I2 << 3) | 0;
                            h[O2 >> 3] = +h[O2 >> 3] + P2 * +h[t2 + (H2 + R2 << 3) >> 3];
                            if ((H2 | 0) == (a2 | 0)) break;
                            else H2 = H2 + 1 | 0;
                          }
                        }
                      while (0);
                      if ((J2 | 0) == (C2 | 0)) break;
                      else J2 = J2 + 1 | 0;
                    }
                  }
                  E2 = E2 + 1 | 0;
                  if ((E2 | 0) == (B2 | 0)) break;
                  else D2 = D2 + 1 | 0;
                }
                i2 = q2;
                return 0;
              }
            }
          while (0);
          Oc(1487, r2) | 0;
          i2 = q2;
          return 0;
        }
        function $a(a2, b2, d2, e2, f2, g2, j2, k2, l2, m2, n2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          g2 = g2 | 0;
          j2 = j2 | 0;
          k2 = k2 | 0;
          l2 = l2 | 0;
          m2 = m2 | 0;
          n2 = n2 | 0;
          var o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0, O2 = 0, P2 = 0, Q2 = 0, R2 = 0;
          o2 = i2;
          i2 = i2 + 16 | 0;
          p2 = o2;
          q2 = c[g2 >> 2] | 0;
          r2 = f2 + (~q2 << 3) | 0;
          f2 = j2 + -8 | 0;
          j2 = m2 + -8 | 0;
          c[p2 >> 2] = 0;
          if (((nc(a2, 2080) | 0) == 0 ? (nc(a2, 2082) | 0) == 0 : 0) ? (nc(a2, 2084) | 0) == 0 : 0) c[p2 >> 2] = 1;
          else s2 = 5;
          do
            if ((s2 | 0) == 5) {
              t2 = c[b2 >> 2] | 0;
              if ((t2 | 0) < 0) {
                c[p2 >> 2] = 2;
                break;
              }
              u2 = c[d2 >> 2] | 0;
              if ((u2 | 0) < 0) {
                c[p2 >> 2] = 3;
                break;
              }
              if ((c[g2 >> 2] | 0) < (((t2 | 0) > 1 ? t2 : 1) | 0)) {
                c[p2 >> 2] = 6;
                break;
              }
              if (!(c[k2 >> 2] | 0)) {
                c[p2 >> 2] = 8;
                break;
              }
              if (!(c[n2 >> 2] | 0)) {
                c[p2 >> 2] = 11;
                break;
              }
              if ((t2 | 0) == 0 | (u2 | 0) == 0) {
                i2 = o2;
                return 0;
              }
              if (+h[e2 >> 3] == 0 ? +h[l2 >> 3] == 1 : 0) {
                i2 = o2;
                return 0;
              }
              u2 = (nc(a2, 2080) | 0) == 0;
              t2 = c[(u2 ? d2 : b2) >> 2] | 0;
              v2 = c[k2 >> 2] | 0;
              if ((v2 | 0) > 0) w2 = 1;
              else w2 = 1 - (S((c[(u2 ? b2 : d2) >> 2] | 0) + -1 | 0, v2) | 0) | 0;
              v2 = c[n2 >> 2] | 0;
              u2 = 1 - (S(v2, t2 + -1 | 0) | 0) | 0;
              x2 = (v2 | 0) > 0 ? 1 : u2;
              y2 = +h[l2 >> 3];
              a: do
                if (y2 != 1) {
                  u2 = y2 == 0;
                  z2 = (t2 | 0) < 1;
                  if ((v2 | 0) == 1) {
                    if (u2) {
                      if (z2) break;
                      je(m2 | 0, 0, t2 << 3 | 0) | 0;
                      break;
                    }
                    if (z2) break;
                    h[m2 >> 3] = y2 * +h[m2 >> 3];
                    if ((t2 | 0) == 1) break;
                    else A2 = 1;
                    do {
                      A2 = A2 + 1 | 0;
                      B2 = j2 + (A2 << 3) | 0;
                      h[B2 >> 3] = +h[l2 >> 3] * +h[B2 >> 3];
                    } while ((A2 | 0) != (t2 | 0));
                  } else {
                    if (u2) {
                      if (z2) break;
                      else {
                        C2 = x2;
                        D2 = 1;
                      }
                      while (1) {
                        h[j2 + (C2 << 3) >> 3] = 0;
                        if ((D2 | 0) == (t2 | 0)) break a;
                        else {
                          C2 = v2 + C2 | 0;
                          D2 = D2 + 1 | 0;
                        }
                      }
                    }
                    if (z2) break;
                    u2 = j2 + (x2 << 3) | 0;
                    h[u2 >> 3] = y2 * +h[u2 >> 3];
                    if ((t2 | 0) == 1) break;
                    else {
                      E2 = x2;
                      F2 = 1;
                    }
                    do {
                      F2 = F2 + 1 | 0;
                      E2 = v2 + E2 | 0;
                      u2 = j2 + (E2 << 3) | 0;
                      h[u2 >> 3] = +h[l2 >> 3] * +h[u2 >> 3];
                    } while ((F2 | 0) != (t2 | 0));
                  }
                }
              while (0);
              if (+h[e2 >> 3] == 0) {
                i2 = o2;
                return 0;
              }
              if (!(nc(a2, 2080) | 0)) {
                t2 = c[k2 >> 2] | 0;
                v2 = c[d2 >> 2] | 0;
                z2 = (v2 | 0) < 1;
                if ((t2 | 0) == 1) {
                  if (z2) {
                    i2 = o2;
                    return 0;
                  }
                  u2 = c[b2 >> 2] | 0;
                  B2 = c[n2 >> 2] | 0;
                  if ((u2 | 0) < 1) {
                    G2 = x2;
                    H2 = 1;
                    while (1) {
                      I2 = j2 + (G2 << 3) | 0;
                      h[I2 >> 3] = +h[I2 >> 3] + +h[e2 >> 3] * 0;
                      if ((H2 | 0) == (v2 | 0)) break;
                      else {
                        G2 = B2 + G2 | 0;
                        H2 = H2 + 1 | 0;
                      }
                    }
                    i2 = o2;
                    return 0;
                  } else {
                    J2 = x2;
                    K2 = 1;
                  }
                  while (1) {
                    H2 = S(K2, q2) | 0;
                    y2 = 0;
                    G2 = 1;
                    while (1) {
                      y2 = y2 + +h[r2 + (G2 + H2 << 3) >> 3] * +h[f2 + (G2 << 3) >> 3];
                      if ((G2 | 0) == (u2 | 0)) break;
                      else G2 = G2 + 1 | 0;
                    }
                    G2 = j2 + (J2 << 3) | 0;
                    h[G2 >> 3] = +h[G2 >> 3] + y2 * +h[e2 >> 3];
                    if ((K2 | 0) == (v2 | 0)) break;
                    else {
                      J2 = B2 + J2 | 0;
                      K2 = K2 + 1 | 0;
                    }
                  }
                  i2 = o2;
                  return 0;
                } else {
                  if (z2) {
                    i2 = o2;
                    return 0;
                  }
                  B2 = c[b2 >> 2] | 0;
                  u2 = c[n2 >> 2] | 0;
                  if ((B2 | 0) < 1) {
                    G2 = x2;
                    H2 = 1;
                    while (1) {
                      I2 = j2 + (G2 << 3) | 0;
                      h[I2 >> 3] = +h[I2 >> 3] + +h[e2 >> 3] * 0;
                      if ((H2 | 0) == (v2 | 0)) break;
                      else {
                        G2 = u2 + G2 | 0;
                        H2 = H2 + 1 | 0;
                      }
                    }
                    i2 = o2;
                    return 0;
                  } else {
                    L2 = x2;
                    M2 = 1;
                  }
                  while (1) {
                    H2 = S(M2, q2) | 0;
                    G2 = w2;
                    N2 = 0;
                    z2 = 1;
                    while (1) {
                      N2 = N2 + +h[r2 + (z2 + H2 << 3) >> 3] * +h[f2 + (G2 << 3) >> 3];
                      if ((z2 | 0) == (B2 | 0)) break;
                      else {
                        G2 = t2 + G2 | 0;
                        z2 = z2 + 1 | 0;
                      }
                    }
                    z2 = j2 + (L2 << 3) | 0;
                    h[z2 >> 3] = +h[z2 >> 3] + N2 * +h[e2 >> 3];
                    if ((M2 | 0) == (v2 | 0)) break;
                    else {
                      L2 = u2 + L2 | 0;
                      M2 = M2 + 1 | 0;
                    }
                  }
                  i2 = o2;
                  return 0;
                }
              } else {
                u2 = c[n2 >> 2] | 0;
                v2 = c[d2 >> 2] | 0;
                t2 = (v2 | 0) < 1;
                if ((u2 | 0) == 1) {
                  if (t2) {
                    i2 = o2;
                    return 0;
                  }
                  B2 = c[k2 >> 2] | 0;
                  z2 = w2;
                  G2 = 1;
                  while (1) {
                    y2 = +h[f2 + (z2 << 3) >> 3];
                    do
                      if (y2 != 0) {
                        O2 = y2 * +h[e2 >> 3];
                        H2 = c[b2 >> 2] | 0;
                        if ((H2 | 0) < 1) break;
                        I2 = S(G2, q2) | 0;
                        P2 = 1;
                        while (1) {
                          Q2 = j2 + (P2 << 3) | 0;
                          h[Q2 >> 3] = +h[Q2 >> 3] + O2 * +h[r2 + (P2 + I2 << 3) >> 3];
                          if ((P2 | 0) == (H2 | 0)) break;
                          else P2 = P2 + 1 | 0;
                        }
                      }
                    while (0);
                    if ((G2 | 0) == (v2 | 0)) break;
                    else {
                      z2 = B2 + z2 | 0;
                      G2 = G2 + 1 | 0;
                    }
                  }
                  i2 = o2;
                  return 0;
                } else {
                  if (t2) {
                    i2 = o2;
                    return 0;
                  }
                  G2 = c[k2 >> 2] | 0;
                  z2 = w2;
                  B2 = 1;
                  while (1) {
                    y2 = +h[f2 + (z2 << 3) >> 3];
                    do
                      if (y2 != 0) {
                        N2 = y2 * +h[e2 >> 3];
                        P2 = c[b2 >> 2] | 0;
                        if ((P2 | 0) < 1) break;
                        H2 = S(B2, q2) | 0;
                        I2 = x2;
                        Q2 = 1;
                        while (1) {
                          R2 = j2 + (I2 << 3) | 0;
                          h[R2 >> 3] = +h[R2 >> 3] + N2 * +h[r2 + (Q2 + H2 << 3) >> 3];
                          if ((Q2 | 0) == (P2 | 0)) break;
                          else {
                            I2 = u2 + I2 | 0;
                            Q2 = Q2 + 1 | 0;
                          }
                        }
                      }
                    while (0);
                    if ((B2 | 0) == (v2 | 0)) break;
                    else {
                      z2 = G2 + z2 | 0;
                      B2 = B2 + 1 | 0;
                    }
                  }
                  i2 = o2;
                  return 0;
                }
              }
            }
          while (0);
          Oc(1494, p2) | 0;
          i2 = o2;
          return 0;
        }
        function ab(a2, b2, d2, e2, f2, g2, j2, k2, l2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          g2 = g2 | 0;
          j2 = j2 | 0;
          k2 = k2 | 0;
          l2 = l2 | 0;
          var m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0;
          m2 = i2;
          i2 = i2 + 16 | 0;
          n2 = m2;
          o2 = e2 + -8 | 0;
          e2 = g2 + -8 | 0;
          g2 = c[l2 >> 2] | 0;
          l2 = k2 + (~g2 << 3) | 0;
          c[n2 >> 2] = 0;
          k2 = c[a2 >> 2] | 0;
          do
            if ((k2 | 0) < 0) c[n2 >> 2] = 1;
            else {
              a2 = c[b2 >> 2] | 0;
              if ((a2 | 0) < 0) {
                c[n2 >> 2] = 2;
                break;
              }
              p2 = c[f2 >> 2] | 0;
              if (!p2) {
                c[n2 >> 2] = 5;
                break;
              }
              q2 = c[j2 >> 2] | 0;
              if (!q2) {
                c[n2 >> 2] = 7;
                break;
              }
              if ((g2 | 0) < (((k2 | 0) > 1 ? k2 : 1) | 0)) {
                c[n2 >> 2] = 9;
                break;
              }
              if ((k2 | 0) == 0 | (a2 | 0) == 0) {
                i2 = m2;
                return 0;
              }
              if (+h[d2 >> 3] == 0) {
                i2 = m2;
                return 0;
              }
              r2 = 1 - (S(q2, a2 + -1 | 0) | 0) | 0;
              s2 = (q2 | 0) > 0 ? 1 : r2;
              if ((p2 | 0) == 1) {
                r2 = (k2 | 0) < 1;
                t2 = 1;
                u2 = s2;
                while (1) {
                  v2 = +h[e2 + (u2 << 3) >> 3];
                  if (v2 != 0 ? (w2 = v2 * +h[d2 >> 3], !r2) : 0) {
                    x2 = S(t2, g2) | 0;
                    y2 = 1;
                    while (1) {
                      z2 = l2 + (y2 + x2 << 3) | 0;
                      h[z2 >> 3] = +h[z2 >> 3] + w2 * +h[o2 + (y2 << 3) >> 3];
                      if ((y2 | 0) == (k2 | 0)) break;
                      else y2 = y2 + 1 | 0;
                    }
                  }
                  if ((t2 | 0) == (a2 | 0)) break;
                  else {
                    t2 = t2 + 1 | 0;
                    u2 = q2 + u2 | 0;
                  }
                }
                i2 = m2;
                return 0;
              }
              if ((p2 | 0) > 0) A2 = 1;
              else A2 = 1 - (S(k2 + -1 | 0, p2) | 0) | 0;
              u2 = (k2 | 0) < 1;
              t2 = 1;
              r2 = s2;
              while (1) {
                w2 = +h[e2 + (r2 << 3) >> 3];
                if (w2 != 0 ? (v2 = w2 * +h[d2 >> 3], !u2) : 0) {
                  y2 = S(t2, g2) | 0;
                  x2 = A2;
                  z2 = 1;
                  while (1) {
                    B2 = l2 + (z2 + y2 << 3) | 0;
                    h[B2 >> 3] = +h[B2 >> 3] + v2 * +h[o2 + (x2 << 3) >> 3];
                    if ((z2 | 0) == (k2 | 0)) break;
                    else {
                      x2 = p2 + x2 | 0;
                      z2 = z2 + 1 | 0;
                    }
                  }
                }
                if ((t2 | 0) == (a2 | 0)) break;
                else {
                  t2 = t2 + 1 | 0;
                  r2 = q2 + r2 | 0;
                }
              }
              i2 = m2;
              return 0;
            }
          while (0);
          Oc(1501, n2) | 0;
          i2 = m2;
          return 0;
        }
        function bb(a2, b2, d2, e2, f2, g2, j2, k2, l2, m2, n2, o2, p2, q2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          g2 = g2 | 0;
          j2 = j2 | 0;
          k2 = k2 | 0;
          l2 = l2 | 0;
          m2 = m2 | 0;
          n2 = n2 | 0;
          o2 = o2 | 0;
          p2 = p2 | 0;
          q2 = q2 | 0;
          var r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0, O2 = 0, P2 = 0, Q2 = 0, R2 = 0, T2 = 0, U2 = 0, V2 = 0, W2 = 0, X2 = 0, Y2 = 0, Z2 = 0;
          r2 = i2;
          i2 = i2 + 19648 | 0;
          s2 = r2 + 19632 | 0;
          t2 = r2 + 19624 | 0;
          u2 = r2 + 19616 | 0;
          v2 = r2 + 19612 | 0;
          w2 = r2 + 19640 | 0;
          x2 = r2 + 392 | 0;
          y2 = r2 + 19608 | 0;
          z2 = r2;
          A2 = r2 + 19604 | 0;
          B2 = r2 + 19600 | 0;
          C2 = c[j2 >> 2] | 0;
          D2 = C2 + 1 | 0;
          E2 = g2 + (~C2 << 3) | 0;
          g2 = k2 + -8 | 0;
          F2 = l2 + -8 | 0;
          G2 = c[n2 >> 2] | 0;
          H2 = G2 + 1 | 0;
          I2 = m2 + (~G2 << 3) | 0;
          G2 = nc(a2, 2026) | 0;
          c[A2 >> 2] = G2;
          m2 = (nc(b2, 1825) | 0) != 0;
          if (m2) J2 = 1;
          else J2 = (nc(b2, 2058) | 0) != 0;
          K2 = J2 & 1;
          c[B2 >> 2] = K2;
          L2 = c[d2 >> 2] | 0;
          h[o2 >> 3] = +(((L2 | 0) > 1 ? L2 : 1) | 0);
          L2 = (c[p2 >> 2] | 0) == -1;
          c[q2 >> 2] = 0;
          do
            if (!(G2 | (nc(a2, 1922) | 0))) {
              c[q2 >> 2] = -1;
              M2 = -1;
            } else {
              if (!(K2 | (nc(b2, 2080) | 0))) {
                c[q2 >> 2] = -2;
                M2 = -2;
                break;
              }
              N2 = c[d2 >> 2] | 0;
              if ((N2 | 0) < 0) {
                c[q2 >> 2] = -3;
                M2 = -3;
                break;
              }
              O2 = c[e2 >> 2] | 0;
              if ((O2 | 0) >= 1 ? (P2 = (N2 | 0) > 1 ? N2 : 1, (O2 | 0) <= (P2 | 0)) : 0) {
                Q2 = c[f2 >> 2] | 0;
                if ((Q2 | 0) > (N2 | 0) ? 1 : (Q2 | 0) < (((O2 | 0) > (N2 | 0) ? N2 : O2) | 0)) {
                  c[q2 >> 2] = -5;
                  M2 = -5;
                  break;
                }
                if ((c[j2 >> 2] | 0) < (P2 | 0)) {
                  c[q2 >> 2] = -7;
                  M2 = -7;
                  break;
                }
                R2 = c[n2 >> 2] | 0;
                if ((R2 | 0) < 1 | J2 & (R2 | 0) < (P2 | 0)) {
                  c[q2 >> 2] = -11;
                  M2 = -11;
                  break;
                }
                if (!(L2 | (c[p2 >> 2] | 0) >= (P2 | 0))) {
                  c[q2 >> 2] = -13;
                  M2 = -13;
                  break;
                }
                P2 = c[q2 >> 2] | 0;
                if (P2 | 0) {
                  M2 = P2;
                  break;
                }
                if (!N2) {
                  i2 = r2;
                  return 0;
                }
                if (L2) {
                  qb(A2, B2, d2, e2, f2, E2 + (D2 << 3) | 0, j2, k2, l2, e2, f2, I2 + (H2 << 3) | 0, n2, o2, p2, q2) | 0;
                  P2 = c[d2 >> 2] | 0;
                  T2 = (P2 | 0) < 2 ? 1 : +(P2 | 0);
                  U2 = +h[o2 >> 3];
                  h[o2 >> 3] = T2 >= U2 ? T2 : U2;
                  i2 = r2;
                  return 0;
                }
                P2 = O2 + -1 | 0;
                c[t2 >> 2] = P2;
                if ((O2 | 0) >= 2) {
                  R2 = 1;
                  while (1) {
                    h[g2 + (R2 << 3) >> 3] = +h[E2 + ((S(R2, C2) | 0) + R2 << 3) >> 3];
                    h[F2 + (R2 << 3) >> 3] = 0;
                    if ((R2 | 0) < (P2 | 0)) R2 = R2 + 1 | 0;
                    else break;
                  }
                }
                c[t2 >> 2] = N2;
                if ((Q2 | 0) < (N2 | 0)) {
                  R2 = Q2;
                  do {
                    R2 = R2 + 1 | 0;
                    h[g2 + (R2 << 3) >> 3] = +h[E2 + ((S(R2, C2) | 0) + R2 << 3) >> 3];
                    h[F2 + (R2 << 3) >> 3] = 0;
                  } while ((R2 | 0) < (N2 | 0));
                }
                if (m2) {
                  Db(2024, d2, d2, 5944, 24, I2 + (H2 << 3) | 0, n2) | 0;
                  V2 = c[f2 >> 2] | 0;
                  W2 = c[e2 >> 2] | 0;
                } else {
                  V2 = Q2;
                  W2 = O2;
                }
                if ((W2 | 0) == (V2 | 0)) {
                  h[g2 + (V2 << 3) >> 3] = +h[E2 + ((S(V2, C2) | 0) + V2 << 3) >> 3];
                  h[F2 + (V2 << 3) >> 3] = 0;
                  i2 = r2;
                  return 0;
                }
                c[u2 >> 2] = 1;
                c[s2 >> 2] = a2;
                c[u2 + 4 >> 2] = 1;
                c[s2 + 4 >> 2] = b2;
                uc(w2, s2, u2, 148, 2);
                N2 = lc(152, 1508, w2, d2, e2, f2, p2) | 0;
                R2 = E2 + (D2 << 3) | 0;
                P2 = I2 + (H2 << 3) | 0;
                do
                  if ((c[d2 >> 2] | 0) > (((N2 | 0) > 11 ? N2 : 11) | 0)) qb(A2, B2, d2, e2, f2, R2, j2, k2, l2, e2, f2, P2, n2, o2, p2, q2) | 0;
                  else {
                    hb(A2, B2, d2, e2, f2, R2, j2, k2, l2, e2, f2, P2, n2, q2) | 0;
                    X2 = c[q2 >> 2] | 0;
                    if ((X2 | 0) <= 0) break;
                    c[y2 >> 2] = X2;
                    if ((c[d2 >> 2] | 0) > 48) {
                      qb(A2, B2, d2, e2, y2, R2, j2, k2, l2, e2, f2, P2, n2, o2, p2, q2) | 0;
                      break;
                    }
                    eb(2024, d2, d2, R2, j2, x2, 156) | 0;
                    X2 = c[d2 >> 2] | 0;
                    Y2 = X2 * 49 | 0;
                    h[x2 + (X2 + -49 + Y2 << 3) >> 3] = 0;
                    c[t2 >> 2] = 49 - X2;
                    Db(2024, 156, t2, 5944, 5944, x2 + (Y2 << 3) | 0, 156) | 0;
                    qb(A2, B2, 156, e2, y2, x2, 156, k2, l2, e2, f2, P2, n2, z2, 156, q2) | 0;
                    if ((c[A2 >> 2] | 0) == 0 ? (c[q2 >> 2] | 0) == 0 : 0) break;
                    eb(2024, d2, d2, x2, 156, R2, j2) | 0;
                  }
                while (0);
                if (!((c[A2 >> 2] | 0) == 0 ? !(c[q2 >> 2] | 0) : 0)) Z2 = 43;
                do
                  if ((Z2 | 0) == 43) {
                    R2 = c[d2 >> 2] | 0;
                    if ((R2 | 0) <= 2) break;
                    P2 = R2 + -2 | 0;
                    c[t2 >> 2] = P2;
                    c[v2 >> 2] = P2;
                    Db(2078, t2, v2, 5944, 5944, E2 + (C2 + 3 << 3) | 0, j2) | 0;
                  }
                while (0);
                P2 = c[d2 >> 2] | 0;
                U2 = (P2 | 0) < 2 ? 1 : +(P2 | 0);
                T2 = +h[o2 >> 3];
                h[o2 >> 3] = U2 >= T2 ? U2 : T2;
                i2 = r2;
                return 0;
              }
              c[q2 >> 2] = -4;
              M2 = -4;
            }
          while (0);
          c[t2 >> 2] = 0 - M2;
          Oc(1508, t2) | 0;
          i2 = r2;
          return 0;
        }
        function cb(a2) {
          a2 = a2 | 0;
          return jb(a2, a2) | 0;
        }
        function db(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          if (!(+Qa(b2) > 2e3)) return 0;
          h[a2 >> 3] = +G(+ +h[a2 >> 3]);
          h[b2 >> 3] = +G(+ +h[b2 >> 3]);
          return 0;
        }
        function eb(a2, b2, d2, e2, f2, g2, i3) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          g2 = g2 | 0;
          i3 = i3 | 0;
          var j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0;
          j2 = c[f2 >> 2] | 0;
          f2 = e2 + (~j2 << 3) | 0;
          e2 = c[i3 >> 2] | 0;
          i3 = g2 + (~e2 << 3) | 0;
          if (nc(a2, 2076) | 0) {
            g2 = c[d2 >> 2] | 0;
            if ((g2 | 0) < 1) return 0;
            k2 = c[b2 >> 2] | 0;
            l2 = 1;
            while (1) {
              m2 = (l2 | 0) > (k2 | 0) ? k2 : l2;
              if ((m2 | 0) >= 1) {
                n2 = S(l2, j2) | 0;
                o2 = S(l2, e2) | 0;
                p2 = 1;
                while (1) {
                  h[i3 + (p2 + o2 << 3) >> 3] = +h[f2 + (p2 + n2 << 3) >> 3];
                  if ((p2 | 0) < (m2 | 0)) p2 = p2 + 1 | 0;
                  else break;
                }
              }
              if ((l2 | 0) == (g2 | 0)) break;
              else l2 = l2 + 1 | 0;
            }
            return 0;
          }
          l2 = (nc(a2, 2078) | 0) == 0;
          a2 = c[d2 >> 2] | 0;
          d2 = (a2 | 0) < 1;
          if (l2) {
            if (d2) return 0;
            l2 = c[b2 >> 2] | 0;
            if ((l2 | 0) < 1) return 0;
            else q2 = 1;
            while (1) {
              g2 = S(q2, j2) | 0;
              k2 = S(q2, e2) | 0;
              p2 = 1;
              while (1) {
                h[i3 + (p2 + k2 << 3) >> 3] = +h[f2 + (p2 + g2 << 3) >> 3];
                if ((p2 | 0) == (l2 | 0)) break;
                else p2 = p2 + 1 | 0;
              }
              if ((q2 | 0) == (a2 | 0)) break;
              else q2 = q2 + 1 | 0;
            }
            return 0;
          } else {
            if (d2) return 0;
            d2 = c[b2 >> 2] | 0;
            b2 = 1;
            while (1) {
              if ((b2 | 0) <= (d2 | 0)) {
                q2 = S(b2, j2) | 0;
                l2 = S(b2, e2) | 0;
                p2 = b2;
                while (1) {
                  h[i3 + (p2 + l2 << 3) >> 3] = +h[f2 + (p2 + q2 << 3) >> 3];
                  if ((p2 | 0) == (d2 | 0)) break;
                  else p2 = p2 + 1 | 0;
                }
              }
              if ((b2 | 0) == (a2 | 0)) break;
              else b2 = b2 + 1 | 0;
            }
            return 0;
          }
          return 0;
        }
        function fb(a2, b2, c2, d2, e2, f2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          var g2 = 0, i3 = 0, j2 = 0, k2 = 0, l2 = 0;
          g2 = +h[d2 >> 3];
          i3 = +h[c2 >> 3];
          if ((g2 >= 0 ? g2 : -g2) < (i3 >= 0 ? i3 : -i3)) {
            j2 = g2 / i3;
            k2 = i3 + g2 * j2;
            h[e2 >> 3] = (+h[a2 >> 3] + j2 * +h[b2 >> 3]) / k2;
            l2 = (+h[b2 >> 3] - j2 * +h[a2 >> 3]) / k2;
            h[f2 >> 3] = l2;
            return 0;
          } else {
            k2 = i3 / g2;
            j2 = g2 + i3 * k2;
            h[e2 >> 3] = (+h[b2 >> 3] + k2 * +h[a2 >> 3]) / j2;
            l2 = (k2 * +h[b2 >> 3] - +h[a2 >> 3]) / j2;
            h[f2 >> 3] = l2;
            return 0;
          }
          return 0;
        }
        function gb(a2, b2, d2, e2, f2, g2, j2, k2, l2, m2, n2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          g2 = g2 | 0;
          j2 = j2 | 0;
          k2 = k2 | 0;
          l2 = l2 | 0;
          m2 = m2 | 0;
          n2 = n2 | 0;
          var o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0, O2 = 0, P2 = 0, Q2 = 0, R2 = 0, T2 = 0, U2 = 0, V2 = 0, W2 = 0, X2 = 0, Y2 = 0, Z2 = 0, _2 = 0, $2 = 0, aa2 = 0, ba2 = 0;
          o2 = i2;
          i2 = i2 + 368 | 0;
          p2 = o2 + 356 | 0;
          q2 = o2 + 328 | 0;
          r2 = o2 + 200 | 0;
          s2 = o2 + 176 | 0;
          t2 = o2 + 144 | 0;
          u2 = o2 + 352 | 0;
          v2 = o2 + 348 | 0;
          w2 = o2 + 344 | 0;
          x2 = o2 + 120 | 0;
          y2 = o2 + 96 | 0;
          z2 = o2 + 340 | 0;
          A2 = o2 + 88 | 0;
          B2 = o2 + 80 | 0;
          C2 = o2 + 72 | 0;
          D2 = o2 + 64 | 0;
          E2 = o2 + 56 | 0;
          F2 = o2 + 48 | 0;
          G2 = o2 + 40 | 0;
          H2 = o2 + 32 | 0;
          I2 = o2 + 24 | 0;
          J2 = o2 + 336 | 0;
          K2 = o2 + 16 | 0;
          L2 = o2 + 8 | 0;
          M2 = o2;
          N2 = c[e2 >> 2] | 0;
          O2 = d2 + (~N2 << 3) | 0;
          d2 = c[g2 >> 2] | 0;
          P2 = f2 + (~d2 << 3) | 0;
          c[n2 >> 2] = 0;
          f2 = c[b2 >> 2] | 0;
          if (!f2) {
            i2 = o2;
            return 0;
          }
          Q2 = c[k2 >> 2] | 0;
          if (!Q2) {
            i2 = o2;
            return 0;
          }
          R2 = c[l2 >> 2] | 0;
          if (!R2) {
            i2 = o2;
            return 0;
          }
          T2 = c[j2 >> 2] | 0;
          if ((T2 + Q2 | 0) > (f2 | 0)) {
            i2 = o2;
            return 0;
          }
          f2 = T2 + 1 | 0;
          c[u2 >> 2] = f2;
          U2 = T2 + 2 | 0;
          c[v2 >> 2] = U2;
          c[w2 >> 2] = T2 + 3;
          if ((Q2 | 0) == 1 & (R2 | 0) == 1) {
            V2 = +h[O2 + ((S(T2, N2) | 0) + T2 << 3) >> 3];
            W2 = S(f2, N2) | 0;
            X2 = +h[O2 + (W2 + f2 << 3) >> 3];
            h[q2 >> 3] = X2 - V2;
            Bb(O2 + (W2 + T2 << 3) | 0, q2, A2, B2, K2) | 0;
            W2 = c[v2 >> 2] | 0;
            f2 = c[b2 >> 2] | 0;
            if ((W2 | 0) <= (f2 | 0)) {
              Y2 = c[j2 >> 2] | 0;
              c[p2 >> 2] = f2 + -1 - Y2;
              f2 = S(W2, N2) | 0;
              Nb(p2, O2 + (f2 + Y2 << 3) | 0, e2, O2 + ((c[u2 >> 2] | 0) + f2 << 3) | 0, e2, A2, B2) | 0;
            }
            f2 = c[j2 >> 2] | 0;
            c[p2 >> 2] = f2 + -1;
            Y2 = O2 + ((S(f2, N2) | 0) + 1 << 3) | 0;
            Nb(p2, Y2, 160, O2 + ((S(c[u2 >> 2] | 0, N2) | 0) + 1 << 3) | 0, 160, A2, B2) | 0;
            Y2 = c[j2 >> 2] | 0;
            h[O2 + ((S(Y2, N2) | 0) + Y2 << 3) >> 3] = X2;
            f2 = c[u2 >> 2] | 0;
            h[O2 + ((S(f2, N2) | 0) + f2 << 3) >> 3] = V2;
            if (!(c[a2 >> 2] | 0)) {
              i2 = o2;
              return 0;
            }
            Nb(b2, P2 + ((S(Y2, d2) | 0) + 1 << 3) | 0, 160, P2 + ((S(f2, d2) | 0) + 1 << 3) | 0, 160, A2, B2) | 0;
            i2 = o2;
            return 0;
          }
          c[z2 >> 2] = R2 + Q2;
          eb(1515, z2, z2, O2 + ((S(T2, N2) | 0) + T2 << 3) | 0, e2, r2, 164) | 0;
          V2 = +nb(1520, z2, z2, r2, 164, m2);
          X2 = +lb(1939);
          Z2 = +lb(2026) / X2;
          _2 = V2 * (X2 * 10);
          h[q2 >> 3] = _2;
          X2 = _2 >= Z2 ? _2 : Z2;
          z2 = (c[k2 >> 2] | 0) + 1 | 0;
          Fb(6200, 6200, 168, k2, l2, r2, 164, r2 + ((z2 * 5 | 0) + -5 << 3) | 0, 164, r2 + ((z2 << 2) + -4 << 3) | 0, 164, L2, t2, 172, M2, J2) | 0;
          switch ((c[k2 >> 2] << 1) + (c[l2 >> 2] | 0) | 0) {
            case 6: {
              h[x2 >> 3] = -+h[t2 >> 3];
              J2 = x2 + 8 | 0;
              h[J2 >> 3] = -+h[t2 + 8 >> 3];
              M2 = x2 + 16 | 0;
              h[M2 >> 3] = +h[L2 >> 3];
              yb(176, x2, J2, 160, H2) | 0;
              h[x2 >> 3] = 1;
              Z2 = +h[J2 >> 3];
              _2 = +h[t2 + 24 >> 3];
              V2 = +h[H2 >> 3] * (+h[t2 + 16 >> 3] + Z2 * _2);
              $2 = -V2;
              h[K2 >> 3] = $2;
              h[y2 >> 3] = Z2 * V2 - _2;
              K2 = y2 + 8 | 0;
              h[K2 >> 3] = -(+h[M2 >> 3] * $2);
              h[y2 + 16 >> 3] = +h[L2 >> 3];
              yb(176, y2, K2, 160, I2) | 0;
              h[y2 >> 3] = 1;
              Ab(2078, 176, 164, x2, H2, r2, 164, m2) | 0;
              Ab(2067, 164, 176, x2, H2, r2, 164, m2) | 0;
              Ab(2078, 176, 164, y2, I2, r2 + 8 | 0, 164, m2) | 0;
              Ab(2067, 164, 176, y2, I2, r2 + 32 | 0, 164, m2) | 0;
              $2 = +h[r2 + 16 >> 3];
              _2 = $2 >= 0 ? $2 : -$2;
              $2 = +h[r2 + 48 >> 3];
              V2 = $2 >= 0 ? $2 : -$2;
              $2 = _2 >= V2 ? _2 : V2;
              V2 = +h[r2 + 24 >> 3];
              _2 = V2 >= 0 ? V2 : -V2;
              V2 = $2 >= _2 ? $2 : _2;
              h[q2 >> 3] = V2;
              _2 = +h[r2 + 56 >> 3];
              $2 = _2 >= 0 ? _2 : -_2;
              if (!((V2 >= $2 ? V2 : $2) > X2)) {
                K2 = c[j2 >> 2] | 0;
                c[p2 >> 2] = (c[b2 >> 2] | 0) + 1 - K2;
                Ab(2078, 176, p2, x2, H2, O2 + ((S(K2, N2) | 0) + K2 << 3) | 0, e2, m2) | 0;
                Ab(2067, w2, 176, x2, H2, O2 + ((S(c[j2 >> 2] | 0, N2) | 0) + 1 << 3) | 0, e2, m2) | 0;
                K2 = c[j2 >> 2] | 0;
                c[p2 >> 2] = (c[b2 >> 2] | 0) + 1 - K2;
                Ab(2078, 176, p2, y2, I2, O2 + ((c[u2 >> 2] | 0) + (S(K2, N2) | 0) << 3) | 0, e2, m2) | 0;
                Ab(2067, w2, 176, y2, I2, O2 + ((S(c[u2 >> 2] | 0, N2) | 0) + 1 << 3) | 0, e2, m2) | 0;
                K2 = c[v2 >> 2] | 0;
                M2 = c[j2 >> 2] | 0;
                J2 = S(M2, N2) | 0;
                h[O2 + (J2 + K2 << 3) >> 3] = 0;
                z2 = S(c[u2 >> 2] | 0, N2) | 0;
                h[O2 + (z2 + K2 << 3) >> 3] = 0;
                K2 = c[w2 >> 2] | 0;
                h[O2 + (J2 + K2 << 3) >> 3] = 0;
                h[O2 + (z2 + K2 << 3) >> 3] = 0;
                if (c[a2 >> 2] | 0) {
                  Ab(2067, b2, 176, x2, H2, P2 + ((S(M2, d2) | 0) + 1 << 3) | 0, g2, m2) | 0;
                  Ab(2067, b2, 176, y2, I2, P2 + ((S(c[u2 >> 2] | 0, d2) | 0) + 1 << 3) | 0, g2, m2) | 0;
                }
              } else aa2 = 28;
              break;
            }
            case 5: {
              h[s2 >> 3] = -+h[t2 >> 3];
              I2 = s2 + 8 | 0;
              h[I2 >> 3] = -+h[t2 + 8 >> 3];
              h[s2 + 16 >> 3] = +h[L2 >> 3];
              yb(176, s2, I2, 160, G2) | 0;
              h[s2 >> 3] = 1;
              $2 = +h[O2 + ((S(U2, N2) | 0) + U2 << 3) >> 3];
              Ab(2078, 176, 176, s2, G2, r2, 164, m2) | 0;
              Ab(2067, 176, 176, s2, G2, r2, 164, m2) | 0;
              V2 = +h[r2 + 8 >> 3];
              _2 = V2 >= 0 ? V2 : -V2;
              V2 = +h[r2 + 16 >> 3];
              Z2 = V2 >= 0 ? V2 : -V2;
              V2 = _2 >= Z2 ? _2 : Z2;
              Z2 = +h[r2 >> 3] - $2;
              h[q2 >> 3] = Z2;
              _2 = Z2 >= 0 ? Z2 : -Z2;
              if (!((V2 >= _2 ? V2 : _2) > X2)) {
                Ab(2067, v2, 176, s2, G2, O2 + ((S(c[j2 >> 2] | 0, N2) | 0) + 1 << 3) | 0, e2, m2) | 0;
                U2 = c[j2 >> 2] | 0;
                c[p2 >> 2] = (c[b2 >> 2] | 0) - U2;
                Ab(2078, 176, p2, s2, G2, O2 + ((S(c[u2 >> 2] | 0, N2) | 0) + U2 << 3) | 0, e2, m2) | 0;
                U2 = c[j2 >> 2] | 0;
                I2 = S(U2, N2) | 0;
                h[O2 + (I2 + U2 << 3) >> 3] = $2;
                h[O2 + (I2 + (c[u2 >> 2] | 0) << 3) >> 3] = 0;
                h[O2 + (I2 + (c[v2 >> 2] | 0) << 3) >> 3] = 0;
                if (c[a2 >> 2] | 0) Ab(2067, b2, 176, s2, G2, P2 + ((S(U2, d2) | 0) + 1 << 3) | 0, g2, m2) | 0;
              } else aa2 = 28;
              break;
            }
            default: {
              h[s2 >> 3] = +h[L2 >> 3];
              h[s2 + 8 >> 3] = +h[t2 >> 3];
              L2 = s2 + 16 | 0;
              h[L2 >> 3] = +h[t2 + 16 >> 3];
              yb(176, L2, s2, 160, G2) | 0;
              h[L2 >> 3] = 1;
              L2 = c[j2 >> 2] | 0;
              $2 = +h[O2 + ((S(L2, N2) | 0) + L2 << 3) >> 3];
              Ab(2078, 176, 176, s2, G2, r2, 164, m2) | 0;
              Ab(2067, 176, 176, s2, G2, r2, 164, m2) | 0;
              _2 = +h[r2 + 16 >> 3];
              V2 = _2 >= 0 ? _2 : -_2;
              _2 = +h[r2 + 48 >> 3];
              Z2 = _2 >= 0 ? _2 : -_2;
              _2 = V2 >= Z2 ? V2 : Z2;
              Z2 = +h[r2 + 80 >> 3] - $2;
              h[q2 >> 3] = Z2;
              V2 = Z2 >= 0 ? Z2 : -Z2;
              if (!((_2 >= V2 ? _2 : V2) > X2)) {
                q2 = c[j2 >> 2] | 0;
                c[p2 >> 2] = (c[b2 >> 2] | 0) + 1 - q2;
                Ab(2078, 176, p2, s2, G2, O2 + ((S(q2, N2) | 0) + q2 << 3) | 0, e2, m2) | 0;
                Ab(2067, u2, 176, s2, G2, O2 + ((S(c[j2 >> 2] | 0, N2) | 0) + 1 << 3) | 0, e2, m2) | 0;
                q2 = c[v2 >> 2] | 0;
                r2 = c[j2 >> 2] | 0;
                h[O2 + ((S(r2, N2) | 0) + q2 << 3) >> 3] = 0;
                h[O2 + ((S(c[u2 >> 2] | 0, N2) | 0) + q2 << 3) >> 3] = 0;
                h[O2 + ((S(q2, N2) | 0) + q2 << 3) >> 3] = $2;
                if (c[a2 >> 2] | 0) Ab(2067, b2, 176, s2, G2, P2 + ((S(r2, d2) | 0) + 1 << 3) | 0, g2, m2) | 0;
              } else aa2 = 28;
            }
          }
          if ((aa2 | 0) == 28) {
            c[n2 >> 2] = 1;
            i2 = o2;
            return 0;
          }
          if ((c[l2 >> 2] | 0) == 2 ? (n2 = c[j2 >> 2] | 0, aa2 = S(n2, N2) | 0, m2 = c[u2 >> 2] | 0, g2 = S(m2, N2) | 0, ob(O2 + (aa2 + n2 << 3) | 0, O2 + (g2 + n2 << 3) | 0, O2 + (m2 + aa2 << 3) | 0, O2 + (g2 + m2 << 3) | 0, E2, C2, F2, D2, A2, B2) | 0, m2 = c[j2 >> 2] | 0, c[p2 >> 2] = (c[b2 >> 2] | 0) + -1 - m2, g2 = S(m2 + 2 | 0, N2) | 0, Nb(p2, O2 + (g2 + m2 << 3) | 0, e2, O2 + ((c[u2 >> 2] | 0) + g2 << 3) | 0, e2, A2, B2) | 0, g2 = c[j2 >> 2] | 0, c[p2 >> 2] = g2 + -1, m2 = O2 + ((S(g2, N2) | 0) + 1 << 3) | 0, Nb(p2, m2, 160, O2 + ((S(c[u2 >> 2] | 0, N2) | 0) + 1 << 3) | 0, 160, A2, B2) | 0, c[a2 >> 2] | 0) : 0) {
            m2 = P2 + ((S(c[j2 >> 2] | 0, d2) | 0) + 1 << 3) | 0;
            Nb(b2, m2, 160, P2 + ((S(c[u2 >> 2] | 0, d2) | 0) + 1 << 3) | 0, 160, A2, B2) | 0;
          }
          if ((c[k2 >> 2] | 0) != 2) {
            i2 = o2;
            return 0;
          }
          k2 = (c[l2 >> 2] | 0) + (c[j2 >> 2] | 0) | 0;
          c[v2 >> 2] = k2;
          j2 = k2 + 1 | 0;
          c[w2 >> 2] = j2;
          l2 = S(k2, N2) | 0;
          u2 = S(j2, N2) | 0;
          ob(O2 + (l2 + k2 << 3) | 0, O2 + (u2 + k2 << 3) | 0, O2 + (j2 + l2 << 3) | 0, O2 + (u2 + j2 << 3) | 0, E2, C2, F2, D2, A2, B2) | 0;
          D2 = c[v2 >> 2] | 0;
          F2 = D2 + 2 | 0;
          C2 = c[b2 >> 2] | 0;
          if ((F2 | 0) > (C2 | 0)) ba2 = D2;
          else {
            c[p2 >> 2] = C2 + ~D2;
            C2 = S(F2, N2) | 0;
            Nb(p2, O2 + (C2 + D2 << 3) | 0, e2, O2 + (C2 + (c[w2 >> 2] | 0) << 3) | 0, e2, A2, B2) | 0;
            ba2 = c[v2 >> 2] | 0;
          }
          c[p2 >> 2] = ba2 + -1;
          e2 = O2 + ((S(ba2, N2) | 0) + 1 << 3) | 0;
          Nb(p2, e2, 160, O2 + ((S(c[w2 >> 2] | 0, N2) | 0) + 1 << 3) | 0, 160, A2, B2) | 0;
          if (!(c[a2 >> 2] | 0)) {
            i2 = o2;
            return 0;
          }
          a2 = P2 + ((S(c[v2 >> 2] | 0, d2) | 0) + 1 << 3) | 0;
          Nb(b2, a2, 160, P2 + ((S(c[w2 >> 2] | 0, d2) | 0) + 1 << 3) | 0, 160, A2, B2) | 0;
          i2 = o2;
          return 0;
        }
        function hb(a2, b2, d2, e2, f2, g2, j2, k2, l2, m2, n2, o2, p2, q2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          g2 = g2 | 0;
          j2 = j2 | 0;
          k2 = k2 | 0;
          l2 = l2 | 0;
          m2 = m2 | 0;
          n2 = n2 | 0;
          o2 = o2 | 0;
          p2 = p2 | 0;
          q2 = q2 | 0;
          var r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0, O2 = 0, P2 = 0, Q2 = 0, R2 = 0, T2 = 0, U2 = 0, V2 = 0, W2 = 0, X2 = 0, Y2 = 0, Z2 = 0, _2 = 0, $2 = 0, aa2 = 0, ba2 = 0, ca2 = 0, da2 = 0, ea2 = 0, fa2 = 0, ga2 = 0, ha2 = 0, ia2 = 0, ja2 = 0, ka2 = 0, la2 = 0, ma2 = 0, na2 = 0, oa2 = 0, pa2 = 0, qa2 = 0, ra2 = 0, sa2 = 0, ta2 = 0, ua2 = 0, va2 = 0, wa2 = 0, xa2 = 0, ya2 = 0, za2 = 0, Aa2 = 0, Ba2 = 0, Ca2 = 0, Da2 = 0, Ea2 = 0, Fa2 = 0, Ga2 = 0, Ha2 = 0, Ia2 = 0;
          r2 = i2;
          i2 = i2 + 80 | 0;
          s2 = r2 + 72 | 0;
          t2 = r2 + 40 | 0;
          u2 = r2 + 32 | 0;
          v2 = r2 + 24 | 0;
          w2 = r2 + 16 | 0;
          x2 = r2 + 68 | 0;
          y2 = r2 + 64 | 0;
          z2 = r2 + 8 | 0;
          A2 = r2;
          B2 = c[j2 >> 2] | 0;
          C2 = g2 + (~B2 << 3) | 0;
          D2 = k2 + -8 | 0;
          k2 = l2 + -8 | 0;
          l2 = c[p2 >> 2] | 0;
          p2 = o2 + (~l2 << 3) | 0;
          c[q2 >> 2] = 0;
          if (!(c[d2 >> 2] | 0)) {
            i2 = r2;
            return 0;
          }
          o2 = c[e2 >> 2] | 0;
          E2 = c[f2 >> 2] | 0;
          if ((o2 | 0) == (E2 | 0)) {
            h[D2 + (o2 << 3) >> 3] = +h[C2 + ((S(o2, B2) | 0) + o2 << 3) >> 3];
            h[k2 + (o2 << 3) >> 3] = 0;
            i2 = r2;
            return 0;
          }
          F2 = E2 + -3 | 0;
          c[s2 >> 2] = F2;
          if ((o2 | 0) <= (F2 | 0)) {
            H2 = o2;
            while (1) {
              I2 = S(H2, B2) | 0;
              h[C2 + (H2 + 2 + I2 << 3) >> 3] = 0;
              h[C2 + (H2 + 3 + I2 << 3) >> 3] = 0;
              if ((H2 | 0) < (F2 | 0)) H2 = H2 + 1 | 0;
              else break;
            }
          }
          H2 = E2 + -2 | 0;
          if ((o2 | 0) <= (H2 | 0)) h[C2 + ((S(H2, B2) | 0) + E2 << 3) >> 3] = 0;
          c[y2 >> 2] = (c[n2 >> 2] | 0) + 1 - (c[m2 >> 2] | 0);
          J2 = +lb(1851);
          h[z2 >> 3] = J2;
          h[A2 >> 3] = 1 / J2;
          db(z2, A2) | 0;
          J2 = +lb(1864);
          K2 = +h[z2 >> 3] * (+(E2 + 1 - o2 | 0) / J2);
          if (!(c[a2 >> 2] | 0)) L2 = 0;
          else L2 = c[d2 >> 2] | 0;
          d2 = c[f2 >> 2] | 0;
          o2 = c[e2 >> 2] | 0;
          if ((d2 | 0) < (o2 | 0)) {
            i2 = r2;
            return 0;
          }
          E2 = t2 + 8 | 0;
          z2 = t2 + 16 | 0;
          A2 = (B2 | 0) == 1;
          H2 = (B2 | 0) == 1;
          F2 = d2;
          d2 = L2;
          L2 = 1;
          I2 = o2;
          a: while (1) {
            o2 = F2 + -1 | 0;
            M2 = S(o2, B2) | 0;
            N2 = C2 + (M2 + o2 << 3) | 0;
            O2 = C2 + (M2 + F2 << 3) | 0;
            P2 = S(F2, B2) | 0;
            Q2 = C2 + (o2 + P2 << 3) | 0;
            R2 = C2 + (P2 + F2 << 3) | 0;
            T2 = F2 + -2 | 0;
            U2 = C2 + ((S(T2, B2) | 0) + o2 << 3) | 0;
            V2 = 0;
            W2 = I2;
            X2 = d2;
            Y2 = L2;
            while (1) {
              Z2 = W2 + 1 | 0;
              c[s2 >> 2] = Z2;
              b: do
                if ((F2 | 0) > (W2 | 0)) {
                  _2 = F2;
                  while (1) {
                    $2 = _2 + -1 | 0;
                    aa2 = S($2, B2) | 0;
                    ba2 = +h[C2 + (aa2 + _2 << 3) >> 3];
                    ca2 = ba2 >= 0 ? ba2 : -ba2;
                    if (ca2 <= K2) {
                      da2 = _2;
                      break b;
                    }
                    ba2 = +h[C2 + (aa2 + $2 << 3) >> 3];
                    aa2 = S(_2, B2) | 0;
                    ea2 = +h[C2 + (aa2 + _2 << 3) >> 3];
                    fa2 = ea2 >= 0 ? ea2 : -ea2;
                    ga2 = (ba2 >= 0 ? ba2 : -ba2) + fa2;
                    if (ga2 == 0) {
                      ha2 = _2 + -2 | 0;
                      if ((ha2 | 0) < (c[e2 >> 2] | 0)) ia2 = ga2;
                      else {
                        ja2 = +h[C2 + ((S(ha2, B2) | 0) + $2 << 3) >> 3];
                        ia2 = ga2 + (ja2 >= 0 ? ja2 : -ja2);
                      }
                      if ((_2 | 0) < (c[f2 >> 2] | 0)) {
                        ja2 = +h[C2 + (_2 + 1 + aa2 << 3) >> 3];
                        ka2 = ia2 + (ja2 >= 0 ? ja2 : -ja2);
                      } else ka2 = ia2;
                    } else ka2 = ga2;
                    if (ca2 <= J2 * ka2 ? (ga2 = +h[C2 + ($2 + aa2 << 3) >> 3], ja2 = ga2 >= 0 ? ga2 : -ga2, ga2 = ca2 >= ja2 ? ca2 : ja2, la2 = ba2 - ea2, ea2 = la2 >= 0 ? la2 : -la2, la2 = fa2 >= ea2 ? fa2 : ea2, ba2 = ga2 + la2, ma2 = J2 * ((fa2 <= ea2 ? fa2 : ea2) * (la2 / ba2)), (ca2 <= ja2 ? ca2 : ja2) * (ga2 / ba2) <= (K2 >= ma2 ? K2 : ma2)) : 0) {
                      da2 = _2;
                      break b;
                    }
                    if ((_2 | 0) > (Z2 | 0)) _2 = $2;
                    else {
                      da2 = $2;
                      break;
                    }
                  }
                } else da2 = F2;
              while (0);
              if ((da2 | 0) > (c[e2 >> 2] | 0)) h[C2 + ((S(da2 + -1 | 0, B2) | 0) + da2 << 3) >> 3] = 0;
              if ((da2 | 0) >= (o2 | 0)) break;
              Z2 = (c[a2 >> 2] | 0) == 0;
              _2 = Z2 ? da2 : Y2;
              $2 = Z2 ? F2 : X2;
              switch (V2 | 0) {
                case 10: {
                  Z2 = da2 + 1 | 0;
                  aa2 = S(da2, B2) | 0;
                  ma2 = +h[C2 + (Z2 + aa2 << 3) >> 3];
                  ba2 = +h[C2 + (da2 + 2 + (S(Z2, B2) | 0) << 3) >> 3];
                  ga2 = (ma2 >= 0 ? ma2 : -ma2) + (ba2 >= 0 ? ba2 : -ba2);
                  ba2 = +h[C2 + (aa2 + da2 << 3) >> 3] + ga2 * 0.75;
                  na2 = ba2;
                  oa2 = ga2;
                  pa2 = ga2 * -0.4375;
                  qa2 = ba2;
                  break;
                }
                case 20: {
                  ba2 = +h[O2 >> 3];
                  ga2 = +h[U2 >> 3];
                  ma2 = (ba2 >= 0 ? ba2 : -ba2) + (ga2 >= 0 ? ga2 : -ga2);
                  ga2 = +h[R2 >> 3] + ma2 * 0.75;
                  na2 = ga2;
                  oa2 = ma2;
                  pa2 = ma2 * -0.4375;
                  qa2 = ga2;
                  break;
                }
                default: {
                  na2 = +h[R2 >> 3];
                  oa2 = +h[O2 >> 3];
                  pa2 = +h[Q2 >> 3];
                  qa2 = +h[N2 >> 3];
                }
              }
              ga2 = (qa2 >= 0 ? qa2 : -qa2) + (pa2 >= 0 ? pa2 : -pa2) + (oa2 >= 0 ? oa2 : -oa2) + (na2 >= 0 ? na2 : -na2);
              do
                if (!(ga2 == 0)) {
                  ma2 = qa2 / ga2;
                  ba2 = na2 / ga2;
                  ja2 = (ma2 + ba2) * 0.5;
                  ca2 = (ma2 - ja2) * (ba2 - ja2) - pa2 / ga2 * (oa2 / ga2);
                  aa2 = ca2 >= 0;
                  ma2 = +G(+(aa2 ? ca2 : -ca2));
                  if (aa2) {
                    ca2 = ga2 * ma2;
                    ra2 = -ca2;
                    sa2 = ca2;
                    ta2 = ga2 * ja2;
                    break;
                  } else {
                    ca2 = ja2 + ma2;
                    la2 = ja2 - ma2;
                    ma2 = ca2 - ba2;
                    ja2 = la2 - ba2;
                    ra2 = 0;
                    sa2 = 0;
                    ta2 = ga2 * (!((ma2 >= 0 ? ma2 : -ma2) <= (ja2 >= 0 ? ja2 : -ja2)) ? la2 : ca2);
                    break;
                  }
                } else {
                  ra2 = 0;
                  sa2 = 0;
                  ta2 = 0;
                }
              while (0);
              c[s2 >> 2] = da2;
              ga2 = ra2 >= 0 ? ra2 : -ra2;
              aa2 = T2;
              while (1) {
                if ((aa2 | 0) < (da2 | 0)) {
                  ua2 = aa2;
                  break;
                }
                Z2 = aa2 + 1 | 0;
                ha2 = S(aa2, B2) | 0;
                ca2 = +h[C2 + (Z2 + ha2 << 3) >> 3];
                la2 = +h[C2 + (ha2 + aa2 << 3) >> 3];
                ja2 = la2 - ta2;
                ma2 = (ca2 >= 0 ? ca2 : -ca2) + (ga2 + (ja2 >= 0 ? ja2 : -ja2));
                ba2 = ca2 / ma2;
                ha2 = S(Z2, B2) | 0;
                ca2 = +h[C2 + (ha2 + aa2 << 3) >> 3] * ba2 + ja2 * (ja2 / ma2) - sa2 * (ra2 / ma2);
                ma2 = +h[C2 + (ha2 + Z2 << 3) >> 3];
                ja2 = ba2 * (la2 + ma2 - ta2 - ta2);
                ea2 = ba2 * +h[C2 + (aa2 + 2 + ha2 << 3) >> 3];
                ba2 = (ea2 >= 0 ? ea2 : -ea2) + ((ca2 >= 0 ? ca2 : -ca2) + (ja2 >= 0 ? ja2 : -ja2));
                fa2 = ca2 / ba2;
                h[t2 >> 3] = fa2;
                ca2 = ja2 / ba2;
                h[E2 >> 3] = ca2;
                ja2 = ea2 / ba2;
                h[z2 >> 3] = ja2;
                if ((aa2 | 0) == (da2 | 0)) {
                  ua2 = da2;
                  break;
                }
                ha2 = aa2 + -1 | 0;
                Z2 = S(ha2, B2) | 0;
                ba2 = +h[C2 + (Z2 + aa2 << 3) >> 3];
                ea2 = +h[C2 + (Z2 + ha2 << 3) >> 3];
                if (!((ba2 >= 0 ? ba2 : -ba2) * ((ja2 >= 0 ? ja2 : -ja2) + (ca2 >= 0 ? ca2 : -ca2)) <= J2 * (fa2 >= 0 ? fa2 : -fa2) * ((ea2 >= 0 ? ea2 : -ea2) + (la2 >= 0 ? la2 : -la2) + (ma2 >= 0 ? ma2 : -ma2)))) aa2 = ha2;
                else {
                  ua2 = aa2;
                  break;
                }
              }
              c[s2 >> 2] = o2;
              c: do
                if ((ua2 | 0) < (F2 | 0)) {
                  aa2 = (_2 | 0) > (F2 | 0);
                  ha2 = (ua2 | 0) > (da2 | 0);
                  Z2 = ua2 << 1;
                  va2 = Z2 + -2 | 0;
                  wa2 = Z2 + -1 | 0;
                  Z2 = ua2;
                  xa2 = 0;
                  while (1) {
                    ya2 = g2 + (wa2 + (xa2 << 1) << 3) | 0;
                    za2 = g2 + (va2 + (xa2 << 1) << 3) | 0;
                    Aa2 = F2 - Z2 | 0;
                    c[x2 >> 2] = (Aa2 | 0) > 1 ? 3 : Aa2 + 1 | 0;
                    if ((Z2 | 0) > (ua2 | 0)) {
                      Aa2 = S(Z2 + -1 | 0, B2) | 0;
                      Ba2 = C2 + (Aa2 + Z2 << 3) | 0;
                      Ta(x2, Ba2, 180, t2, 180) | 0;
                      yb(x2, t2, E2, 180, u2) | 0;
                      h[Ba2 >> 3] = +h[t2 >> 3];
                      h[C2 + (Z2 + 1 + Aa2 << 3) >> 3] = 0;
                      if ((Z2 | 0) < (o2 | 0)) h[C2 + (Z2 + 2 + Aa2 << 3) >> 3] = 0;
                    } else {
                      yb(x2, t2, E2, 180, u2) | 0;
                      if (ha2) {
                        Aa2 = C2 + ((S(Z2 + -1 | 0, B2) | 0) + Z2 << 3) | 0;
                        h[Aa2 >> 3] = +h[Aa2 >> 3] * (1 - +h[u2 >> 3]);
                      }
                    }
                    ga2 = +h[E2 >> 3];
                    ma2 = +h[u2 >> 3];
                    la2 = ga2 * ma2;
                    d: do
                      switch (c[x2 >> 2] | 0) {
                        case 3: {
                          ea2 = +h[z2 >> 3];
                          fa2 = ma2 * ea2;
                          e: do
                            if ((Z2 | 0) <= ($2 | 0)) {
                              Aa2 = Z2 + 1 | 0;
                              Ba2 = Z2 + 2 | 0;
                              if (!A2) {
                                Ca2 = Z2;
                                while (1) {
                                  Da2 = S(Ca2, B2) | 0;
                                  Ea2 = C2 + (Da2 + Z2 << 3) | 0;
                                  ca2 = +h[Ea2 >> 3];
                                  Fa2 = C2 + (Aa2 + Da2 << 3) | 0;
                                  Ga2 = C2 + (Ba2 + Da2 << 3) | 0;
                                  ja2 = ca2 + ga2 * +h[Fa2 >> 3] + ea2 * +h[Ga2 >> 3];
                                  h[Ea2 >> 3] = ca2 - ma2 * ja2;
                                  h[Fa2 >> 3] = +h[Fa2 >> 3] - la2 * ja2;
                                  h[Ga2 >> 3] = +h[Ga2 >> 3] - fa2 * ja2;
                                  if ((Ca2 | 0) < ($2 | 0)) Ca2 = Ca2 + 1 | 0;
                                  else break e;
                                }
                              }
                              Ca2 = Z2;
                              ja2 = +h[ya2 >> 3];
                              while (1) {
                                Ga2 = S(Ca2, B2) | 0;
                                Fa2 = C2 + (Ga2 + Z2 << 3) | 0;
                                ca2 = +h[Fa2 >> 3];
                                Ea2 = C2 + (Ba2 + Ga2 << 3) | 0;
                                ba2 = ca2 + ga2 * ja2 + ea2 * +h[Ea2 >> 3];
                                h[Fa2 >> 3] = ca2 - ma2 * ba2;
                                h[C2 + (Aa2 + Ga2 << 3) >> 3] = ja2 - la2 * ba2;
                                ja2 = +h[Ea2 >> 3] - fa2 * ba2;
                                h[Ea2 >> 3] = ja2;
                                if ((Ca2 | 0) >= ($2 | 0)) break;
                                else Ca2 = Ca2 + 1 | 0;
                              }
                            }
                          while (0);
                          Ca2 = Z2 + 3 | 0;
                          Aa2 = (Ca2 | 0) <= (F2 | 0) ? Ca2 : F2;
                          if ((_2 | 0) <= (Aa2 | 0)) {
                            Ca2 = S(Z2, B2) | 0;
                            Ba2 = S(Z2 + 1 | 0, B2) | 0;
                            Ea2 = S(Z2 + 2 | 0, B2) | 0;
                            Ga2 = _2;
                            while (1) {
                              Fa2 = C2 + (Ga2 + Ca2 << 3) | 0;
                              ja2 = +h[Fa2 >> 3];
                              Da2 = C2 + (Ga2 + Ba2 << 3) | 0;
                              Ha2 = C2 + (Ga2 + Ea2 << 3) | 0;
                              ba2 = ja2 + ga2 * +h[Da2 >> 3] + ea2 * +h[Ha2 >> 3];
                              h[Fa2 >> 3] = ja2 - ma2 * ba2;
                              h[Da2 >> 3] = +h[Da2 >> 3] - la2 * ba2;
                              h[Ha2 >> 3] = +h[Ha2 >> 3] - fa2 * ba2;
                              if ((Ga2 | 0) < (Aa2 | 0)) Ga2 = Ga2 + 1 | 0;
                              else break;
                            }
                          }
                          if (c[b2 >> 2] | 0) {
                            Ga2 = c[n2 >> 2] | 0;
                            Aa2 = c[m2 >> 2] | 0;
                            if ((Aa2 | 0) > (Ga2 | 0)) break d;
                            Ea2 = S(Z2, l2) | 0;
                            Ba2 = S(Z2 + 1 | 0, l2) | 0;
                            Ca2 = S(Z2 + 2 | 0, l2) | 0;
                            Ha2 = Aa2;
                            while (1) {
                              Aa2 = p2 + (Ha2 + Ea2 << 3) | 0;
                              ba2 = +h[Aa2 >> 3];
                              Da2 = p2 + (Ha2 + Ba2 << 3) | 0;
                              Fa2 = p2 + (Ha2 + Ca2 << 3) | 0;
                              ja2 = ba2 + ga2 * +h[Da2 >> 3] + ea2 * +h[Fa2 >> 3];
                              h[Aa2 >> 3] = ba2 - ma2 * ja2;
                              h[Da2 >> 3] = +h[Da2 >> 3] - la2 * ja2;
                              h[Fa2 >> 3] = +h[Fa2 >> 3] - fa2 * ja2;
                              if ((Ha2 | 0) < (Ga2 | 0)) Ha2 = Ha2 + 1 | 0;
                              else break;
                            }
                          }
                          break;
                        }
                        case 2: {
                          f: do
                            if ((Z2 | 0) <= ($2 | 0)) {
                              Ha2 = Z2 + 1 | 0;
                              if (!H2) {
                                Ga2 = Z2;
                                while (1) {
                                  Ca2 = S(Ga2, B2) | 0;
                                  Ba2 = C2 + (Ca2 + Z2 << 3) | 0;
                                  fa2 = +h[Ba2 >> 3];
                                  Ea2 = C2 + (Ha2 + Ca2 << 3) | 0;
                                  ea2 = fa2 + ga2 * +h[Ea2 >> 3];
                                  h[Ba2 >> 3] = fa2 - ma2 * ea2;
                                  h[Ea2 >> 3] = +h[Ea2 >> 3] - la2 * ea2;
                                  if ((Ga2 | 0) < ($2 | 0)) Ga2 = Ga2 + 1 | 0;
                                  else break f;
                                }
                              }
                              Ga2 = Z2;
                              ea2 = +h[za2 >> 3];
                              while (1) {
                                Ea2 = S(Ga2, B2) | 0;
                                Ba2 = C2 + (Ha2 + Ea2 << 3) | 0;
                                fa2 = ea2 + ga2 * +h[Ba2 >> 3];
                                h[C2 + (Ea2 + Z2 << 3) >> 3] = ea2 - ma2 * fa2;
                                ea2 = +h[Ba2 >> 3] - la2 * fa2;
                                h[Ba2 >> 3] = ea2;
                                if ((Ga2 | 0) >= ($2 | 0)) break;
                                else Ga2 = Ga2 + 1 | 0;
                              }
                            }
                          while (0);
                          if (!aa2) {
                            Ga2 = S(Z2, B2) | 0;
                            Ha2 = S(Z2 + 1 | 0, B2) | 0;
                            Ba2 = _2;
                            while (1) {
                              Ea2 = C2 + (Ba2 + Ga2 << 3) | 0;
                              ea2 = +h[Ea2 >> 3];
                              Ca2 = C2 + (Ba2 + Ha2 << 3) | 0;
                              fa2 = ea2 + ga2 * +h[Ca2 >> 3];
                              h[Ea2 >> 3] = ea2 - ma2 * fa2;
                              h[Ca2 >> 3] = +h[Ca2 >> 3] - la2 * fa2;
                              if ((Ba2 | 0) < (F2 | 0)) Ba2 = Ba2 + 1 | 0;
                              else break;
                            }
                          }
                          if (c[b2 >> 2] | 0) {
                            Ba2 = c[n2 >> 2] | 0;
                            Ha2 = c[m2 >> 2] | 0;
                            if ((Ha2 | 0) > (Ba2 | 0)) break d;
                            Ga2 = S(Z2, l2) | 0;
                            Ca2 = S(Z2 + 1 | 0, l2) | 0;
                            Ea2 = Ha2;
                            while (1) {
                              Ha2 = p2 + (Ea2 + Ga2 << 3) | 0;
                              fa2 = +h[Ha2 >> 3];
                              Fa2 = p2 + (Ea2 + Ca2 << 3) | 0;
                              ea2 = fa2 + ga2 * +h[Fa2 >> 3];
                              h[Ha2 >> 3] = fa2 - ma2 * ea2;
                              h[Fa2 >> 3] = +h[Fa2 >> 3] - la2 * ea2;
                              if ((Ea2 | 0) < (Ba2 | 0)) Ea2 = Ea2 + 1 | 0;
                              else break;
                            }
                          }
                          break;
                        }
                        default: {
                        }
                      }
                    while (0);
                    if ((Z2 | 0) < (c[s2 >> 2] | 0)) {
                      Z2 = Z2 + 1 | 0;
                      xa2 = xa2 + 1 | 0;
                    } else break c;
                  }
                }
              while (0);
              V2 = V2 + 1 | 0;
              if ((V2 | 0) >= 31) break a;
              else {
                W2 = da2;
                X2 = $2;
                Y2 = _2;
              }
            }
            if ((da2 | 0) != (F2 | 0)) {
              if ((da2 | 0) == (o2 | 0)) {
                ob(N2, Q2, O2, R2, D2 + (o2 << 3) | 0, k2 + (o2 << 3) | 0, D2 + (F2 << 3) | 0, k2 + (F2 << 3) | 0, v2, w2) | 0;
                if (c[a2 >> 2] | 0) {
                  W2 = S(F2 + 1 | 0, B2) | 0;
                  if ((X2 | 0) > (F2 | 0)) {
                    c[s2 >> 2] = X2 - F2;
                    Nb(s2, C2 + (W2 + o2 << 3) | 0, j2, C2 + (W2 + F2 << 3) | 0, j2, v2, w2) | 0;
                  }
                  c[s2 >> 2] = o2 - Y2;
                  Nb(s2, C2 + (Y2 + M2 << 3) | 0, 180, C2 + (Y2 + P2 << 3) | 0, 180, v2, w2) | 0;
                }
                if (c[b2 >> 2] | 0) {
                  W2 = c[m2 >> 2] | 0;
                  Nb(y2, p2 + (W2 + (S(o2, l2) | 0) << 3) | 0, 180, p2 + (W2 + (S(F2, l2) | 0) << 3) | 0, 180, v2, w2) | 0;
                }
              }
            } else {
              h[D2 + (F2 << 3) >> 3] = +h[R2 >> 3];
              h[k2 + (F2 << 3) >> 3] = 0;
            }
            I2 = c[e2 >> 2] | 0;
            if ((da2 | 0) <= (I2 | 0)) {
              Ia2 = 83;
              break;
            } else {
              F2 = da2 + -1 | 0;
              d2 = X2;
              L2 = Y2;
            }
          }
          if ((Ia2 | 0) == 83) {
            i2 = r2;
            return 0;
          }
          c[q2 >> 2] = F2;
          i2 = r2;
          return 0;
        }
        function ib(a2, b2, d2, e2, f2, g2, j2, k2, l2, m2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          g2 = g2 | 0;
          j2 = j2 | 0;
          k2 = k2 | 0;
          l2 = l2 | 0;
          m2 = m2 | 0;
          var n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0, O2 = 0, P2 = 0, Q2 = 0;
          n2 = i2;
          i2 = i2 + 32 | 0;
          o2 = n2 + 16 | 0;
          p2 = n2 + 12 | 0;
          q2 = n2 + 8 | 0;
          r2 = n2;
          s2 = g2 + -8 | 0;
          g2 = c[f2 >> 2] | 0;
          t2 = e2 + (~g2 << 3) | 0;
          e2 = c[k2 >> 2] | 0;
          u2 = e2 + 1 | 0;
          v2 = j2 + (~e2 << 3) | 0;
          j2 = c[m2 >> 2] | 0;
          w2 = j2 + 1 | 0;
          x2 = l2 + (~j2 << 3) | 0;
          if ((c[a2 >> 2] | 0) < 2) {
            i2 = n2;
            return 0;
          }
          l2 = c[d2 >> 2] | 0;
          c[o2 >> 2] = l2;
          if ((l2 | 0) < 1) {
            y2 = 0;
            z2 = g2 + 1 | 0;
            A2 = l2;
          } else {
            l2 = g2 + -1 | 0;
            B2 = g2 + 1 | 0;
            C2 = v2 + (u2 << 3) | 0;
            D2 = -1;
            E2 = 1;
            F2 = 0;
            while (1) {
              if ((E2 | 0) > 1) {
                G2 = c[b2 >> 2] | 0;
                c[p2 >> 2] = (c[a2 >> 2] | 0) - G2;
                H2 = E2 + -1 | 0;
                c[q2 >> 2] = H2;
                I2 = G2 + 1 | 0;
                J2 = S(E2, g2) | 0;
                $a(1524, p2, q2, 32, x2 + (I2 + j2 << 3) | 0, m2, t2 + (l2 + E2 + G2 << 3) | 0, f2, 40, t2 + (I2 + J2 << 3) | 0, 184) | 0;
                c[p2 >> 2] = H2;
                I2 = J2 + 1 | 0;
                Ta(p2, t2 + (I2 + (c[b2 >> 2] | 0) << 3) | 0, 184, v2 + ((S(c[d2 >> 2] | 0, e2) | 0) + 1 << 3) | 0, 184) | 0;
                c[p2 >> 2] = H2;
                Tb(1916, 1891, 1537, p2, t2 + (B2 + (c[b2 >> 2] | 0) << 3) | 0, f2, v2 + ((S(c[d2 >> 2] | 0, e2) | 0) + 1 << 3) | 0, 184) | 0;
                G2 = c[b2 >> 2] | 0;
                K2 = D2 + 1 | 0;
                c[p2 >> 2] = K2 + (c[a2 >> 2] | 0) - G2;
                c[q2 >> 2] = H2;
                L2 = G2 + E2 | 0;
                $a(1891, p2, q2, 40, t2 + (L2 + g2 << 3) | 0, f2, t2 + (L2 + J2 << 3) | 0, 184, 40, v2 + ((S(c[d2 >> 2] | 0, e2) | 0) + 1 << 3) | 0, 184) | 0;
                c[p2 >> 2] = H2;
                Tb(1901, 1891, 1542, p2, C2, k2, v2 + ((S(c[d2 >> 2] | 0, e2) | 0) + 1 << 3) | 0, 184) | 0;
                L2 = c[b2 >> 2] | 0;
                c[p2 >> 2] = K2 + (c[a2 >> 2] | 0) - L2;
                c[q2 >> 2] = H2;
                G2 = L2 + E2 | 0;
                $a(1524, p2, q2, 32, t2 + (G2 + g2 << 3) | 0, f2, v2 + ((S(c[d2 >> 2] | 0, e2) | 0) + 1 << 3) | 0, 184, 40, t2 + (G2 + J2 << 3) | 0, 184) | 0;
                c[p2 >> 2] = H2;
                Tb(1916, 1524, 1537, p2, t2 + (B2 + (c[b2 >> 2] | 0) << 3) | 0, f2, v2 + ((S(c[d2 >> 2] | 0, e2) | 0) + 1 << 3) | 0, 184) | 0;
                c[p2 >> 2] = H2;
                G2 = v2 + ((S(c[d2 >> 2] | 0, e2) | 0) + 1 << 3) | 0;
                Sa(p2, 32, G2, 184, t2 + (I2 + (c[b2 >> 2] | 0) << 3) | 0, 184) | 0;
                I2 = c[b2 >> 2] | 0;
                h[t2 + (H2 + (S(H2, g2) | 0) + I2 << 3) >> 3] = F2;
                M2 = J2;
                N2 = H2;
                O2 = K2;
                P2 = I2;
              } else {
                M2 = S(E2, g2) | 0;
                N2 = E2 + -1 | 0;
                O2 = D2 + 1 | 0;
                P2 = c[b2 >> 2] | 0;
              }
              I2 = c[a2 >> 2] | 0;
              c[p2 >> 2] = O2 + I2 - P2;
              K2 = P2 + E2 | 0;
              H2 = K2 + 1 | 0;
              c[q2 >> 2] = H2;
              J2 = M2 + E2 | 0;
              G2 = s2 + (E2 << 3) | 0;
              yb(p2, t2 + (J2 + P2 << 3) | 0, t2 + (((K2 | 0) < (I2 | 0) ? H2 : I2) + M2 << 3) | 0, 184, G2) | 0;
              I2 = c[b2 >> 2] | 0;
              H2 = t2 + (J2 + I2 << 3) | 0;
              F2 = +h[H2 >> 3];
              h[H2 >> 3] = 1;
              J2 = (c[a2 >> 2] | 0) - I2 | 0;
              c[p2 >> 2] = J2;
              c[q2 >> 2] = O2 + J2;
              J2 = I2 + 1 | 0;
              I2 = E2 + 1 | 0;
              K2 = S(E2, j2) | 0;
              $a(1524, p2, q2, 40, t2 + (J2 + (S(I2, g2) | 0) << 3) | 0, f2, H2, 184, 5952, x2 + (J2 + K2 << 3) | 0, 184) | 0;
              J2 = c[b2 >> 2] | 0;
              c[p2 >> 2] = O2 + (c[a2 >> 2] | 0) - J2;
              c[q2 >> 2] = N2;
              H2 = J2 + E2 | 0;
              J2 = S(E2, e2) | 0;
              L2 = v2 + (J2 + 1 << 3) | 0;
              $a(1891, p2, q2, 40, t2 + (H2 + g2 << 3) | 0, f2, t2 + (H2 + M2 << 3) | 0, 184, 5952, L2, 184) | 0;
              H2 = c[b2 >> 2] | 0;
              c[p2 >> 2] = (c[a2 >> 2] | 0) - H2;
              c[q2 >> 2] = N2;
              Q2 = H2 + 1 | 0;
              $a(1524, p2, q2, 32, x2 + (Q2 + j2 << 3) | 0, m2, L2, 184, 40, x2 + (Q2 + K2 << 3) | 0, 184) | 0;
              Q2 = c[b2 >> 2] | 0;
              c[p2 >> 2] = (c[a2 >> 2] | 0) - Q2;
              Ob(p2, G2, x2 + (K2 + 1 + Q2 << 3) | 0, 184) | 0;
              c[p2 >> 2] = N2;
              h[r2 >> 3] = -+h[G2 >> 3];
              Ob(p2, r2, L2, 184) | 0;
              c[p2 >> 2] = N2;
              Tb(1901, 1551, 1542, p2, C2, k2, L2, 184) | 0;
              h[v2 + (J2 + E2 << 3) >> 3] = +h[G2 >> 3];
              if ((E2 | 0) >= (c[o2 >> 2] | 0)) break;
              else {
                D2 = ~E2;
                E2 = I2;
              }
            }
            y2 = F2;
            z2 = B2;
            A2 = c[d2 >> 2] | 0;
          }
          h[t2 + (A2 + (c[b2 >> 2] | 0) + (S(A2, g2) | 0) << 3) >> 3] = y2;
          A2 = x2 + (w2 << 3) | 0;
          eb(1874, b2, d2, t2 + ((g2 << 1 | 1) << 3) | 0, f2, A2, m2) | 0;
          Sb(1564, 1916, 1524, 1537, b2, d2, 40, t2 + (z2 + (c[b2 >> 2] | 0) << 3) | 0, f2, A2, m2) | 0;
          w2 = c[a2 >> 2] | 0;
          a2 = c[b2 >> 2] | 0;
          x2 = c[d2 >> 2] | 0;
          if ((w2 | 0) > (x2 + a2 | 0)) {
            c[o2 >> 2] = w2 - a2 - x2;
            _a(1524, 1524, b2, d2, o2, 40, t2 + ((S(x2 + 2 | 0, g2) | 0) + 1 << 3) | 0, f2, t2 + (z2 + x2 + a2 << 3) | 0, f2, 40, A2, m2) | 0;
          }
          Sb(1564, 1901, 1524, 1542, b2, d2, 40, v2 + (u2 << 3) | 0, k2, A2, m2) | 0;
          i2 = n2;
          return 0;
        }
        function jb(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          return +h[a2 >> 3] != +h[b2 >> 3] | 0;
        }
        function kb(a2, b2, d2, e2, f2, g2, j2, k2, l2, m2, n2, o2, p2, q2, r2, s2, t2, u2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          g2 = g2 | 0;
          j2 = j2 | 0;
          k2 = k2 | 0;
          l2 = l2 | 0;
          m2 = m2 | 0;
          n2 = n2 | 0;
          o2 = o2 | 0;
          p2 = p2 | 0;
          q2 = q2 | 0;
          r2 = r2 | 0;
          s2 = s2 | 0;
          t2 = t2 | 0;
          u2 = u2 | 0;
          var v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0, O2 = 0, P2 = 0, Q2 = 0, R2 = 0, S2 = 0, T2 = 0, U2 = 0, V2 = 0, W2 = 0, X2 = 0, Y2 = 0, Z2 = 0, _2 = 0, $2 = 0, aa2 = 0, ba2 = 0, ca2 = 0, da2 = 0, ea2 = 0, fa2 = 0, ga2 = 0, ha2 = 0, ia2 = 0, ja2 = 0, ka2 = 0, la2 = 0, ma2 = 0, na2 = 0, oa2 = 0, pa2 = 0, qa2 = 0, ra2 = 0, sa2 = 0;
          v2 = i2;
          i2 = i2 + 80 | 0;
          w2 = v2 + 72 | 0;
          x2 = v2 + 64 | 0;
          y2 = v2 + 56 | 0;
          z2 = v2 + 48 | 0;
          A2 = v2 + 40 | 0;
          B2 = v2 + 32 | 0;
          C2 = v2 + 24 | 0;
          D2 = v2 + 16 | 0;
          E2 = v2 + 8 | 0;
          F2 = v2;
          G2 = c[j2 >> 2] | 0;
          j2 = G2 + 1 | 0;
          H2 = g2 + (~G2 << 3) | 0;
          g2 = c[n2 >> 2] | 0;
          n2 = g2 + 1 | 0;
          I2 = m2 + (~g2 << 3) | 0;
          m2 = c[r2 >> 2] | 0;
          r2 = m2 + 1 | 0;
          J2 = q2 + (~m2 << 3) | 0;
          K2 = +lb(2035) * 2;
          L2 = 1 / K2;
          M2 = +h[e2 >> 3];
          N2 = M2 >= K2 ? M2 : K2;
          c[u2 >> 2] = 0;
          h[s2 >> 3] = 1;
          if ((c[b2 >> 2] | 0) == 1) {
            b2 = (c[d2 >> 2] | 0) == 1;
            K2 = +h[k2 >> 3];
            M2 = +h[f2 >> 3] * +h[H2 + (j2 << 3) >> 3] - +h[o2 >> 3] * K2;
            h[E2 >> 3] = M2;
            if (b2) {
              O2 = M2 >= 0 ? M2 : -M2;
              if (O2 < N2) {
                h[E2 >> 3] = N2;
                c[u2 >> 2] = 1;
                P2 = N2;
                Q2 = N2;
              } else {
                P2 = O2;
                Q2 = M2;
              }
              b2 = I2 + (n2 << 3) | 0;
              O2 = +h[b2 >> 3];
              h[w2 >> 3] = O2;
              R2 = O2 >= 0 ? O2 : -O2;
              if (R2 > L2 * P2 & (P2 < 1 & R2 > 1)) {
                P2 = 1 / R2;
                h[s2 >> 3] = P2;
                S2 = P2;
                T2 = +h[b2 >> 3];
              } else {
                S2 = 1;
                T2 = O2;
              }
              O2 = T2 * S2 / Q2;
              h[J2 + (r2 << 3) >> 3] = O2;
              h[w2 >> 3] = O2;
              h[t2 >> 3] = O2 >= 0 ? O2 : -O2;
              i2 = v2;
              return 0;
            } else {
              O2 = +h[p2 >> 3] * K2;
              K2 = -O2;
              h[C2 >> 3] = K2;
              Q2 = (O2 <= -0 ? K2 : O2) + (M2 >= 0 ? M2 : -M2);
              if (Q2 < N2) {
                h[E2 >> 3] = N2;
                h[C2 >> 3] = 0;
                c[u2 >> 2] = 1;
                U2 = N2;
              } else U2 = Q2;
              b2 = I2 + (n2 << 3) | 0;
              Q2 = +h[b2 >> 3];
              h[w2 >> 3] = Q2;
              e2 = I2 + ((g2 << 1 | 1) << 3) | 0;
              M2 = +h[e2 >> 3];
              h[x2 >> 3] = M2;
              O2 = (Q2 >= 0 ? Q2 : -Q2) + (M2 >= 0 ? M2 : -M2);
              if (O2 > L2 * U2 & (U2 < 1 & O2 > 1)) {
                U2 = 1 / O2;
                h[s2 >> 3] = U2;
                V2 = +h[b2 >> 3];
                W2 = U2;
                X2 = +h[e2 >> 3];
              } else {
                V2 = Q2;
                W2 = 1;
                X2 = M2;
              }
              h[w2 >> 3] = W2 * V2;
              h[x2 >> 3] = W2 * X2;
              e2 = J2 + (r2 << 3) | 0;
              b2 = J2 + ((m2 << 1 | 1) << 3) | 0;
              fb(w2, x2, E2, C2, e2, b2) | 0;
              X2 = +h[e2 >> 3];
              h[w2 >> 3] = X2;
              W2 = +h[b2 >> 3];
              h[x2 >> 3] = W2;
              h[t2 >> 3] = (X2 >= 0 ? X2 : -X2) + (W2 >= 0 ? W2 : -W2);
              i2 = v2;
              return 0;
            }
          }
          W2 = +h[f2 >> 3];
          X2 = +h[o2 >> 3];
          V2 = +h[k2 >> 3];
          M2 = W2 * +h[H2 + (j2 << 3) >> 3] - X2 * V2;
          h[745] = M2;
          j2 = G2 << 1;
          Q2 = +h[l2 >> 3];
          U2 = W2 * +h[H2 + (j2 + 2 << 3) >> 3] - X2 * Q2;
          h[748] = U2;
          X2 = W2 * +h[H2 + (G2 + 2 << 3) >> 3];
          if (!(c[a2 >> 2] | 0)) {
            h[746] = X2;
            O2 = W2 * +h[H2 + ((j2 | 1) << 3) >> 3];
            h[747] = O2;
            Y2 = X2;
            Z2 = O2;
          } else {
            h[747] = X2;
            O2 = W2 * +h[H2 + ((j2 | 1) << 3) >> 3];
            h[746] = O2;
            Y2 = O2;
            Z2 = X2;
          }
          if ((c[d2 >> 2] | 0) == 1) {
            X2 = M2 >= 0 ? M2 : -M2;
            d2 = X2 > 0;
            O2 = d2 ? X2 : 0;
            X2 = Y2 >= 0 ? Y2 : -Y2;
            j2 = X2 > O2;
            W2 = j2 ? X2 : O2;
            O2 = Z2 >= 0 ? Z2 : -Z2;
            H2 = O2 > W2;
            X2 = H2 ? O2 : W2;
            W2 = U2 >= 0 ? U2 : -U2;
            a2 = W2 > X2;
            O2 = a2 ? W2 : X2;
            G2 = a2 ? 4 : H2 ? 3 : j2 ? 2 : d2 & 1;
            h[w2 >> 3] = U2;
            if (O2 < N2) {
              d2 = I2 + (n2 << 3) | 0;
              X2 = +h[d2 >> 3];
              h[w2 >> 3] = X2;
              W2 = X2 >= 0 ? X2 : -X2;
              j2 = I2 + (g2 + 2 << 3) | 0;
              K2 = +h[j2 >> 3];
              h[x2 >> 3] = K2;
              S2 = K2 >= 0 ? K2 : -K2;
              K2 = W2 >= S2 ? W2 : S2;
              if (K2 > L2 * N2 & (N2 < 1 & K2 > 1)) {
                S2 = 1 / K2;
                h[s2 >> 3] = S2;
                _2 = S2;
                $2 = +h[d2 >> 3];
              } else {
                _2 = 1;
                $2 = X2;
              }
              X2 = _2 / N2;
              h[J2 + (r2 << 3) >> 3] = X2 * $2;
              h[J2 + (m2 + 2 << 3) >> 3] = X2 * +h[j2 >> 3];
              h[t2 >> 3] = K2 * X2;
              c[u2 >> 2] = 1;
              i2 = v2;
              return 0;
            }
            j2 = G2 + -1 | 0;
            d2 = G2 << 2;
            X2 = +h[5960 + ((c[188 + (d2 + -2 << 2) >> 2] | 0) + -1 << 3) >> 3];
            K2 = 1 / +h[5960 + (j2 << 3) >> 3];
            $2 = K2 * +h[5960 + ((c[188 + (d2 + -3 << 2) >> 2] | 0) + -1 << 3) >> 3];
            _2 = +h[5960 + ((c[188 + (d2 + -1 << 2) >> 2] | 0) + -1 << 3) >> 3] - $2 * X2;
            h[F2 >> 3] = _2;
            if ((_2 >= 0 ? _2 : -_2) < N2) {
              h[F2 >> 3] = N2;
              c[u2 >> 2] = 1;
              aa2 = N2;
            } else aa2 = _2;
            d2 = (j2 | 2 | 0) == 3;
            G2 = g2 + 2 | 0;
            _2 = +h[I2 + ((d2 ? G2 : n2) << 3) >> 3];
            S2 = +h[I2 + ((d2 ? n2 : G2) << 3) >> 3] - $2 * _2;
            h[z2 >> 3] = S2;
            $2 = _2 * (K2 * aa2);
            h[w2 >> 3] = $2;
            W2 = $2 >= 0 ? $2 : -$2;
            h[x2 >> 3] = W2;
            $2 = S2 >= 0 ? S2 : -S2;
            T2 = W2 >= $2 ? W2 : $2;
            if (T2 > 1 ? ($2 = aa2 >= 0 ? aa2 : -aa2, !(!($2 < 1) | !(T2 >= L2 * $2))) : 0) {
              $2 = 1 / T2;
              h[s2 >> 3] = $2;
              ba2 = $2;
            } else ba2 = 1;
            $2 = S2 * ba2 / aa2;
            h[B2 >> 3] = $2;
            aa2 = K2 * (_2 * ba2) - K2 * X2 * $2;
            G2 = J2 + (r2 << 3) | 0;
            if ((j2 | 1 | 0) == 3) {
              h[G2 >> 3] = $2;
              h[J2 + (m2 + 2 << 3) >> 3] = aa2;
            } else {
              h[G2 >> 3] = aa2;
              h[J2 + (m2 + 2 << 3) >> 3] = $2;
            }
            X2 = aa2 >= 0 ? aa2 : -aa2;
            h[w2 >> 3] = X2;
            aa2 = $2 >= 0 ? $2 : -$2;
            h[x2 >> 3] = aa2;
            $2 = X2 >= aa2 ? X2 : aa2;
            h[t2 >> 3] = $2;
            if (!($2 > L2 / O2 & (O2 > 1 & $2 > 1))) {
              i2 = v2;
              return 0;
            }
            $2 = O2 / L2;
            h[G2 >> 3] = $2 * +h[G2 >> 3];
            G2 = J2 + (m2 + 2 << 3) | 0;
            h[G2 >> 3] = $2 * +h[G2 >> 3];
            h[t2 >> 3] = $2 * +h[t2 >> 3];
            h[s2 >> 3] = $2 * +h[s2 >> 3];
            i2 = v2;
            return 0;
          }
          $2 = +h[p2 >> 3];
          O2 = $2 * V2;
          V2 = -O2;
          h[749] = V2;
          aa2 = $2 * Q2;
          Q2 = -aa2;
          c[1500] = 0;
          c[1501] = 0;
          c[1502] = 0;
          c[1503] = 0;
          h[752] = Q2;
          $2 = (M2 >= 0 ? M2 : -M2) + (O2 <= -0 ? V2 : O2);
          p2 = $2 > 0;
          O2 = p2 ? $2 : 0;
          $2 = (Y2 >= 0 ? Y2 : -Y2) + 0;
          G2 = $2 > O2;
          Y2 = G2 ? $2 : O2;
          O2 = (Z2 >= 0 ? Z2 : -Z2) + 0;
          j2 = O2 > Y2;
          Z2 = j2 ? O2 : Y2;
          Y2 = (U2 >= 0 ? U2 : -U2) + (aa2 <= -0 ? Q2 : aa2);
          d2 = Y2 > Z2;
          aa2 = d2 ? Y2 : Z2;
          H2 = d2 ? 4 : j2 ? 3 : G2 ? 2 : p2 & 1;
          h[w2 >> 3] = U2;
          h[x2 >> 3] = Q2;
          if (aa2 < N2) {
            p2 = I2 + (n2 << 3) | 0;
            Q2 = +h[p2 >> 3];
            h[w2 >> 3] = Q2;
            G2 = g2 << 1;
            j2 = I2 + ((G2 | 1) << 3) | 0;
            U2 = +h[j2 >> 3];
            h[x2 >> 3] = U2;
            Z2 = (Q2 >= 0 ? Q2 : -Q2) + (U2 >= 0 ? U2 : -U2);
            d2 = I2 + (g2 + 2 << 3) | 0;
            U2 = +h[d2 >> 3];
            a2 = I2 + (G2 + 2 << 3) | 0;
            Y2 = +h[a2 >> 3];
            O2 = (U2 >= 0 ? U2 : -U2) + (Y2 >= 0 ? Y2 : -Y2);
            Y2 = Z2 >= O2 ? Z2 : O2;
            if (Y2 > L2 * N2 & (N2 < 1 & Y2 > 1)) {
              O2 = 1 / Y2;
              h[s2 >> 3] = O2;
              ca2 = O2;
              da2 = +h[p2 >> 3];
            } else {
              ca2 = 1;
              da2 = Q2;
            }
            Q2 = ca2 / N2;
            h[J2 + (r2 << 3) >> 3] = Q2 * da2;
            h[J2 + (m2 + 2 << 3) >> 3] = Q2 * +h[d2 >> 3];
            d2 = m2 << 1;
            h[J2 + ((d2 | 1) << 3) >> 3] = Q2 * +h[j2 >> 3];
            h[J2 + (d2 + 2 << 3) >> 3] = Q2 * +h[a2 >> 3];
            h[t2 >> 3] = Y2 * Q2;
            c[u2 >> 2] = 1;
            i2 = v2;
            return 0;
          }
          a2 = H2 + -1 | 0;
          Q2 = +h[5960 + (a2 << 3) >> 3];
          Y2 = +h[5992 + (a2 << 3) >> 3];
          d2 = H2 << 2;
          j2 = (c[188 + (d2 + -3 << 2) >> 2] | 0) + -1 | 0;
          da2 = +h[5960 + (j2 << 3) >> 3];
          p2 = (c[188 + (d2 + -2 << 2) >> 2] | 0) + -1 | 0;
          ca2 = +h[5960 + (p2 << 3) >> 3];
          O2 = +h[5992 + (p2 << 3) >> 3];
          p2 = (c[188 + (d2 + -1 << 2) >> 2] | 0) + -1 | 0;
          Z2 = +h[5960 + (p2 << 3) >> 3];
          U2 = +h[5992 + (p2 << 3) >> 3];
          switch (H2 & 7) {
            case 1:
            case 4: {
              if ((Q2 >= 0 ? Q2 : -Q2) > (Y2 >= 0 ? Y2 : -Y2)) {
                $2 = Y2 / Q2;
                h[w2 >> 3] = $2;
                V2 = 1 / (Q2 * ($2 * $2 + 1));
                ea2 = V2;
                fa2 = -($2 * V2);
              } else {
                V2 = Q2 / Y2;
                h[w2 >> 3] = V2;
                $2 = -1 / (Y2 * (V2 * V2 + 1));
                ea2 = -(V2 * $2);
                fa2 = $2;
              }
              $2 = da2 * ea2;
              V2 = da2 * fa2;
              Y2 = Z2 - ca2 * $2;
              h[F2 >> 3] = Y2;
              ga2 = ca2 * fa2;
              ha2 = $2;
              ia2 = V2;
              ja2 = ea2;
              ka2 = fa2;
              la2 = Y2;
              ma2 = U2 - ca2 * V2;
              break;
            }
            default: {
              V2 = 1 / Q2;
              Q2 = V2 * da2;
              da2 = V2 * +h[5992 + (j2 << 3) >> 3];
              U2 = Z2 - Q2 * ca2 + O2 * da2;
              h[F2 >> 3] = U2;
              ga2 = V2 * O2;
              ha2 = Q2;
              ia2 = da2;
              ja2 = V2;
              ka2 = 0;
              la2 = U2;
              ma2 = -(ca2 * da2) - Q2 * O2;
            }
          }
          O2 = ca2 * ja2;
          h[D2 >> 3] = ma2;
          ca2 = (ma2 >= 0 ? ma2 : -ma2) + (la2 >= 0 ? la2 : -la2);
          if (ca2 < N2) {
            h[F2 >> 3] = N2;
            h[D2 >> 3] = 0;
            c[u2 >> 2] = 1;
          }
          N2 = +h[I2 + (n2 << 3) >> 3];
          if ((a2 | 2 | 0) == 3) {
            h[z2 >> 3] = N2;
            la2 = +h[I2 + (g2 + 2 << 3) >> 3];
            n2 = g2 << 1;
            ma2 = +h[I2 + ((n2 | 1) << 3) >> 3];
            h[y2 >> 3] = ma2;
            na2 = +h[I2 + (n2 + 2 << 3) >> 3];
            oa2 = la2;
            pa2 = N2;
            qa2 = ma2;
          } else {
            ma2 = +h[I2 + (g2 + 2 << 3) >> 3];
            h[z2 >> 3] = ma2;
            n2 = g2 << 1;
            la2 = +h[I2 + ((n2 | 1) << 3) >> 3];
            Q2 = +h[I2 + (n2 + 2 << 3) >> 3];
            h[y2 >> 3] = Q2;
            na2 = la2;
            oa2 = N2;
            pa2 = ma2;
            qa2 = Q2;
          }
          Q2 = ia2 * na2 + (pa2 - ha2 * oa2);
          h[z2 >> 3] = Q2;
          pa2 = qa2 - ia2 * oa2 - ha2 * na2;
          h[y2 >> 3] = pa2;
          ha2 = ((ka2 >= 0 ? ka2 : -ka2) + (ja2 >= 0 ? ja2 : -ja2)) * ca2 * ((oa2 >= 0 ? oa2 : -oa2) + (na2 >= 0 ? na2 : -na2));
          h[w2 >> 3] = ha2;
          ia2 = (Q2 >= 0 ? Q2 : -Q2) + (pa2 >= 0 ? pa2 : -pa2);
          h[x2 >> 3] = ia2;
          qa2 = ha2 >= ia2 ? ha2 : ia2;
          if (!(qa2 >= L2 * ca2) | (!(ca2 < 1) | !(qa2 > 1))) {
            ra2 = na2;
            sa2 = oa2;
          } else {
            ca2 = 1 / qa2;
            h[s2 >> 3] = ca2;
            h[z2 >> 3] = ca2 * Q2;
            h[y2 >> 3] = ca2 * pa2;
            ra2 = na2 * ca2;
            sa2 = oa2 * ca2;
          }
          fb(z2, y2, F2, D2, B2, A2) | 0;
          ca2 = +h[B2 >> 3];
          oa2 = +h[A2 >> 3];
          na2 = ja2 * sa2 - ka2 * ra2 - O2 * ca2 + ga2 * oa2;
          pa2 = ka2 * sa2 + ja2 * ra2 - ga2 * ca2 - O2 * oa2;
          A2 = J2 + (r2 << 3) | 0;
          if ((a2 | 1 | 0) == 3) {
            h[A2 >> 3] = ca2;
            h[J2 + (m2 + 2 << 3) >> 3] = na2;
            a2 = m2 << 1;
            h[J2 + ((a2 | 1) << 3) >> 3] = oa2;
            h[J2 + (a2 + 2 << 3) >> 3] = pa2;
          } else {
            h[A2 >> 3] = na2;
            h[J2 + (m2 + 2 << 3) >> 3] = ca2;
            a2 = m2 << 1;
            h[J2 + ((a2 | 1) << 3) >> 3] = pa2;
            h[J2 + (a2 + 2 << 3) >> 3] = oa2;
          }
          O2 = (na2 >= 0 ? na2 : -na2) + (pa2 >= 0 ? pa2 : -pa2);
          h[w2 >> 3] = O2;
          pa2 = (ca2 >= 0 ? ca2 : -ca2) + (oa2 >= 0 ? oa2 : -oa2);
          h[x2 >> 3] = pa2;
          oa2 = O2 >= pa2 ? O2 : pa2;
          h[t2 >> 3] = oa2;
          if (!(oa2 > L2 / aa2 & (aa2 > 1 & oa2 > 1))) {
            i2 = v2;
            return 0;
          }
          oa2 = aa2 / L2;
          h[A2 >> 3] = oa2 * +h[A2 >> 3];
          A2 = J2 + (m2 + 2 << 3) | 0;
          h[A2 >> 3] = oa2 * +h[A2 >> 3];
          A2 = m2 << 1;
          m2 = J2 + ((A2 | 1) << 3) | 0;
          h[m2 >> 3] = oa2 * +h[m2 >> 3];
          m2 = J2 + (A2 + 2 << 3) | 0;
          h[m2 >> 3] = oa2 * +h[m2 >> 3];
          h[t2 >> 3] = oa2 * +h[t2 >> 3];
          h[s2 >> 3] = oa2 * +h[s2 >> 3];
          i2 = v2;
          return 0;
        }
        function lb(a2) {
          a2 = a2 | 0;
          var b2 = 0, d2 = 0, e2 = 0, f2 = 0, g2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0;
          b2 = i2;
          i2 = i2 + 32 | 0;
          d2 = b2 + 20 | 0;
          e2 = b2 + 16 | 0;
          f2 = b2 + 12 | 0;
          g2 = b2 + 8 | 0;
          j2 = b2 + 4 | 0;
          k2 = b2;
          if (c[63] | 0) {
            mb(f2, e2, k2, 6024, g2, 6032, j2, 6040) | 0;
            h[756] = +(c[f2 >> 2] | 0);
            f2 = c[e2 >> 2] | 0;
            h[757] = +(f2 | 0);
            if (!(c[k2 >> 2] | 0)) {
              h[758] = 0;
              c[d2 >> 2] = 1 - f2;
              l2 = +tc(6048, d2);
            } else {
              h[758] = 1;
              c[d2 >> 2] = 1 - f2;
              l2 = +tc(6048, d2) * 0.5;
            }
            h[753] = l2;
            h[759] = l2 * +h[756];
            h[760] = +(c[g2 >> 2] | 0);
            h[761] = +(c[j2 >> 2] | 0);
            m2 = +h[754];
            h[762] = m2;
            n2 = 1 / +h[755];
            if (n2 >= m2) h[762] = n2 * (l2 + 1);
          }
          if (!(nc(a2, 1922) | 0))
            if (!(nc(a2, 2026) | 0))
              if (!(nc(a2, 2022) | 0))
                if (!(nc(a2, 1939) | 0))
                  if (!(nc(a2, 2080) | 0))
                    if (!(nc(a2, 2067) | 0))
                      if (!(nc(a2, 1821) | 0))
                        if (!(nc(a2, 2076) | 0))
                          if (!(nc(a2, 2078) | 0)) o2 = 6040;
                          else o2 = 6088;
                        else o2 = 6032;
                      else o2 = 6080;
                    else o2 = 6064;
                  else o2 = 6056;
                else o2 = 6072;
              else o2 = 6048;
            else o2 = 6096;
          else o2 = 6024;
          l2 = +h[o2 >> 3];
          c[63] = 0;
          i2 = b2;
          return +l2;
        }
        function mb(a2, b2, d2, e2, f2, g2, j2, k2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          g2 = g2 | 0;
          j2 = j2 | 0;
          k2 = k2 | 0;
          var l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0, O2 = 0, P2 = 0, Q2 = 0, R2 = 0, S2 = 0, T2 = 0, U2 = 0, V2 = 0, W2 = 0, X2 = 0, Y2 = 0, Z2 = 0, _2 = 0, $2 = 0, aa2 = 0, ba2 = 0, ca2 = 0, da2 = 0, ea2 = 0, fa2 = 0, ga2 = 0, ha2 = 0, ia2 = 0, ja2 = 0, ka2 = 0, la2 = 0;
          l2 = i2;
          i2 = i2 + 16 | 0;
          m2 = l2 + 8 | 0;
          n2 = l2;
          if (!(c[64] | 0)) {
            o2 = 0;
            p2 = c[1551] | 0;
            q2 = +h[763];
            c[a2 >> 2] = p2;
            r2 = c[1556] | 0;
            c[b2 >> 2] = r2;
            c[d2 >> 2] = o2;
            s2 = +h[764];
            h[e2 >> 3] = s2;
            t2 = c[1557] | 0;
            c[f2 >> 2] = t2;
            h[g2 >> 3] = q2;
            u2 = c[1559] | 0;
            c[j2 >> 2] = u2;
            v2 = +h[766];
            h[k2 >> 3] = v2;
            i2 = l2;
            return 0;
          }
          if (!(c[65] | 0)) {
            w2 = c[1555] | 0;
            x2 = c[1554] | 0;
            y2 = c[1552] | 0;
            z2 = c[1553] | 0;
          } else {
            A2 = 1;
            do {
              A2 = A2 * 2;
              B2 = A2 + 1;
            } while (B2 - A2 == 1);
            if (B2 == A2) {
              C2 = 1;
              do {
                C2 = C2 * 2;
                D2 = A2 + C2;
              } while (D2 == A2);
              E2 = D2;
            } else E2 = B2;
            F2 = ~~(E2 - A2 + 0.25);
            c[1552] = F2;
            B2 = +(F2 | 0);
            C2 = B2 * 0.5;
            G2 = A2 + (C2 + -B2 / 100) == A2;
            H2 = G2 & A2 + (C2 + B2 / 100) == A2 ? 0 : G2 & 1;
            c[1554] = H2;
            G2 = A2 + C2 == A2 & E2 + C2 > E2 & (H2 | 0) != 0 & 1;
            c[1555] = G2;
            c[1553] = 0;
            E2 = 1;
            I2 = 0;
            do {
              I2 = I2 + 1 | 0;
              E2 = B2 * E2;
            } while (E2 + 1 - E2 == 1);
            c[1553] = I2;
            w2 = G2;
            x2 = H2;
            y2 = F2;
            z2 = I2;
          }
          c[1551] = y2;
          c[1556] = z2;
          c[65] = 0;
          h[n2 >> 3] = +(y2 | 0);
          c[m2 >> 2] = 0 - z2;
          E2 = +tc(n2, m2);
          B2 = E2 > 11102230246251565e-32 ? E2 : 11102230246251565e-32;
          h[n2 >> 3] = B2;
          h[764] = 1;
          if (B2 < 1 & B2 > 0) {
            C2 = B2;
            while (1) {
              J2 = 0.5 - (0.5 - (C2 * 0.5 + C2 * C2 * 32) + 0.5) + 0.5;
              if (C2 > J2 & J2 > 0) C2 = J2;
              else break;
            }
            h[764] = C2;
            h[n2 >> 3] = J2;
            K2 = C2;
          } else K2 = 1;
          if (E2 < K2) h[764] = E2;
          n2 = c[1551] | 0;
          E2 = +(n2 | 0);
          K2 = 1 / E2;
          C2 = K2 + 0;
          J2 = K2 * (K2 * C2 + 0) + 0;
          z2 = (n2 | 0) < 1;
          B2 = C2;
          y2 = 1;
          while (1) {
            L2 = y2 + -1 | 0;
            C2 = B2;
            B2 = B2 / E2 + 0;
            A2 = E2 * B2 + 0;
            if (z2) {
              M2 = 0;
              N2 = 0;
              O2 = K2 * C2 + 0;
            } else {
              I2 = 1;
              D2 = 0;
              while (1) {
                D2 = B2 + D2;
                if ((I2 | 0) == (n2 | 0)) break;
                else I2 = I2 + 1 | 0;
              }
              P2 = K2 * C2 + 0;
              I2 = 1;
              Q2 = 0;
              while (1) {
                R2 = P2 + Q2;
                if ((I2 | 0) == (n2 | 0)) {
                  M2 = R2;
                  N2 = D2;
                  O2 = P2;
                  break;
                } else {
                  I2 = I2 + 1 | 0;
                  Q2 = R2;
                }
              }
            }
            if (!(M2 == C2 & (N2 == C2 & (A2 == C2 ? O2 / K2 + 0 == C2 : 0)))) break;
            else y2 = L2;
          }
          O2 = J2 + 1;
          J2 = 0 - K2;
          I2 = 1;
          do {
            I2 = I2 + -1 | 0;
            N2 = J2;
            J2 = J2 / E2 + 0;
            M2 = E2 * J2 + 0;
            if (z2) {
              S2 = 0;
              T2 = 0;
              U2 = K2 * N2 + 0;
            } else {
              F2 = 1;
              B2 = 0;
              while (1) {
                B2 = J2 + B2;
                if ((F2 | 0) == (n2 | 0)) break;
                else F2 = F2 + 1 | 0;
              }
              C2 = K2 * N2 + 0;
              F2 = 1;
              A2 = 0;
              while (1) {
                Q2 = C2 + A2;
                if ((F2 | 0) == (n2 | 0)) {
                  S2 = Q2;
                  T2 = B2;
                  U2 = C2;
                  break;
                } else {
                  F2 = F2 + 1 | 0;
                  A2 = Q2;
                }
              }
            }
          } while (S2 == N2 & (T2 == N2 & (M2 == N2 ? U2 / K2 + 0 == N2 : 0)));
          a: do
            if (O2 == O2 & true) {
              U2 = O2 * K2 + 0;
              if (z2) {
                T2 = U2;
                F2 = 1;
                while (1) {
                  H2 = F2 + -1 | 0;
                  S2 = T2;
                  T2 = T2 / E2 + 0;
                  if (!(S2 == 0 & (E2 * T2 + 0 == S2 ? (K2 * S2 + 0) / K2 + 0 == S2 : 0))) {
                    V2 = H2;
                    break a;
                  } else F2 = H2;
                }
              } else {
                W2 = U2;
                X2 = 1;
              }
              while (1) {
                T2 = W2;
                W2 = W2 / E2 + 0;
                N2 = E2 * W2;
                F2 = 1;
                M2 = 0;
                while (1) {
                  M2 = W2 + M2;
                  if ((F2 | 0) == (n2 | 0)) break;
                  else F2 = F2 + 1 | 0;
                }
                F2 = X2 + -1 | 0;
                S2 = K2 * T2 + 0;
                J2 = S2 / K2;
                H2 = 1;
                A2 = 0;
                while (1) {
                  A2 = S2 + A2;
                  if ((H2 | 0) == (n2 | 0)) break;
                  else H2 = H2 + 1 | 0;
                }
                if (!(A2 == T2 & (M2 == T2 & (N2 + 0 == T2 & J2 + 0 == T2)))) {
                  V2 = F2;
                  break;
                } else X2 = F2;
              }
            } else V2 = 1;
          while (0);
          b: do
            if (O2 == O2 & true) {
              W2 = 0 - O2 * K2;
              if (z2) {
                U2 = W2;
                X2 = 1;
                while (1) {
                  H2 = X2 + -1 | 0;
                  S2 = U2;
                  U2 = U2 / E2 + 0;
                  if (!(S2 == 0 & (E2 * U2 + 0 == S2 ? (K2 * S2 + 0) / K2 + 0 == S2 : 0))) {
                    Y2 = H2;
                    break b;
                  } else X2 = H2;
                }
              } else {
                Z2 = W2;
                _2 = 1;
              }
              while (1) {
                U2 = Z2;
                Z2 = Z2 / E2 + 0;
                S2 = E2 * Z2;
                X2 = 1;
                C2 = 0;
                while (1) {
                  C2 = Z2 + C2;
                  if ((X2 | 0) == (n2 | 0)) break;
                  else X2 = X2 + 1 | 0;
                }
                X2 = _2 + -1 | 0;
                T2 = K2 * U2 + 0;
                J2 = T2 / K2;
                F2 = 1;
                N2 = 0;
                while (1) {
                  N2 = T2 + N2;
                  if ((F2 | 0) == (n2 | 0)) break;
                  else F2 = F2 + 1 | 0;
                }
                if (!(N2 == U2 & (C2 == U2 & (S2 + 0 == U2 & J2 + 0 == U2)))) {
                  Y2 = X2;
                  break;
                } else _2 = X2;
              }
            } else Y2 = 1;
          while (0);
          _2 = (V2 | 0) == (Y2 | 0);
          n2 = (V2 | 0) == (L2 | 0);
          do
            if ((L2 | 0) == (I2 | 0) & _2) {
              if (n2) {
                c[1557] = L2;
                $2 = 0;
                aa2 = L2;
                ba2 = 62;
                break;
              }
              if ((V2 - L2 | 0) == 3) {
                z2 = y2 + -2 + (c[1556] | 0) | 0;
                c[1557] = z2;
                $2 = 1;
                aa2 = z2;
                ba2 = 62;
                break;
              } else {
                c[1557] = (V2 | 0) >= (L2 | 0) ? L2 : V2;
                c[1558] = 1;
                ba2 = 61;
                break;
              }
            } else {
              z2 = L2 - I2 | 0;
              c[m2 >> 2] = z2;
              F2 = (((z2 | 0) > -1 ? z2 : 0 - z2 | 0) | 0) == 1;
              if (n2 & (I2 | 0) == (Y2 | 0))
                if (F2) {
                  z2 = (L2 | 0) >= (I2 | 0) ? L2 : I2;
                  c[1557] = z2;
                  $2 = 0;
                  aa2 = z2;
                  ba2 = 62;
                  break;
                } else {
                  c[1557] = (L2 | 0) <= (I2 | 0) ? L2 : I2;
                  c[1558] = 1;
                  ba2 = 61;
                  break;
                }
              z2 = (L2 | 0) <= (I2 | 0) ? L2 : I2;
              if (!(F2 & _2)) {
                F2 = (V2 | 0) >= (z2 | 0) ? z2 : V2;
                c[m2 >> 2] = F2;
                c[1557] = (F2 | 0) <= (Y2 | 0) ? F2 : Y2;
                c[1558] = 1;
                ba2 = 61;
                break;
              }
              if ((V2 - z2 | 0) == 3) {
                F2 = ((L2 | 0) >= (I2 | 0) ? L2 : I2) + -1 + (c[1556] | 0) | 0;
                c[1557] = F2;
                $2 = 0;
                aa2 = F2;
                ba2 = 62;
                break;
              } else {
                c[1557] = z2;
                c[1558] = 1;
                ba2 = 61;
                break;
              }
            }
          while (0);
          if ((ba2 | 0) == 61) {
            c[64] = 0;
            ca2 = 0;
            ba2 = 63;
          } else if ((ba2 | 0) == 62) {
            I2 = c[1558] | 0;
            c[64] = 0;
            if (!I2) {
              da2 = $2;
              ea2 = aa2;
            } else {
              ca2 = $2;
              ba2 = 63;
            }
          }
          if ((ba2 | 0) == 63) {
            c[64] = 1;
            Lc(264) | 0;
            cc(284, 6228, 4) | 0;
            yc() | 0;
            da2 = ca2;
            ea2 = c[1557] | 0;
          }
          ca2 = (da2 | w2 | 0) == 0;
          h[763] = 1;
          w2 = 1 - ea2 | 0;
          c[m2 >> 2] = w2;
          if ((ea2 | 0) > 0) fa2 = 1;
          else {
            m2 = 1;
            Z2 = 1;
            while (1) {
              Z2 = K2 * Z2 + 0;
              if ((m2 | 0) >= (w2 | 0)) break;
              else m2 = m2 + 1 | 0;
            }
            h[763] = Z2;
            fa2 = Z2;
          }
          m2 = 0 - ea2 | 0;
          w2 = 1;
          da2 = 1;
          while (1) {
            ga2 = da2 << 1;
            w2 = w2 + 1 | 0;
            if ((ga2 | 0) > (m2 | 0)) break;
            else da2 = ga2;
          }
          ba2 = (da2 | 0) == (m2 | 0);
          m2 = ba2 ? da2 : ga2;
          $2 = ((m2 + ea2 | 0) > (0 - (ea2 + da2) | 0) ? ga2 : m2 << 1) + ea2 | 0;
          ea2 = $2 + -1 | 0;
          c[1559] = ea2;
          m2 = c[1556] | 0;
          if ((((ba2 & 1 ^ 1) + w2 + m2 | 0) % 2 | 0 | 0) == 1 ? (w2 = $2 + -2 | 0, (c[1551] | 0) == 2) : 0) {
            c[1559] = w2;
            ha2 = w2;
          } else ha2 = ea2;
          ea2 = ha2 + -1 | 0;
          if (ca2) ia2 = ha2;
          else {
            c[1559] = ea2;
            ia2 = ea2;
          }
          ea2 = c[1551] | 0;
          Z2 = +(ea2 | 0);
          K2 = 1 / Z2;
          if ((m2 | 0) < 1) {
            ja2 = 0;
            ka2 = 0;
          } else {
            ha2 = 1;
            E2 = 0;
            O2 = Z2 + -1;
            W2 = 0;
            while (1) {
              O2 = K2 * O2;
              T2 = W2 < 1 ? W2 : E2;
              M2 = W2 + O2;
              if ((ha2 | 0) == (m2 | 0)) {
                ja2 = T2;
                ka2 = M2;
                break;
              } else {
                ha2 = ha2 + 1 | 0;
                E2 = T2;
                W2 = M2;
              }
            }
          }
          W2 = !(ka2 >= 1) ? ka2 : ja2;
          if ((ia2 | 0) < 1) la2 = W2;
          else {
            ja2 = +h[765];
            ha2 = 1;
            ka2 = W2;
            while (1) {
              W2 = ja2 + Z2 * ka2;
              if ((ha2 | 0) == (ia2 | 0)) {
                la2 = W2;
                break;
              } else {
                ha2 = ha2 + 1 | 0;
                ka2 = W2;
              }
            }
          }
          h[766] = la2;
          o2 = x2;
          p2 = ea2;
          q2 = fa2;
          c[a2 >> 2] = p2;
          r2 = c[1556] | 0;
          c[b2 >> 2] = r2;
          c[d2 >> 2] = o2;
          s2 = +h[764];
          h[e2 >> 3] = s2;
          t2 = c[1557] | 0;
          c[f2 >> 2] = t2;
          h[g2 >> 3] = q2;
          u2 = c[1559] | 0;
          c[j2 >> 2] = u2;
          v2 = +h[766];
          h[k2 >> 3] = v2;
          i2 = l2;
          return 0;
        }
        function nb(b2, d2, e2, f2, g2, j2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          g2 = g2 | 0;
          j2 = j2 | 0;
          var k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0;
          k2 = i2;
          i2 = i2 + 16 | 0;
          l2 = k2 + 8 | 0;
          m2 = k2;
          n2 = c[g2 >> 2] | 0;
          g2 = f2 + (~n2 << 3) | 0;
          f2 = j2 + -8 | 0;
          o2 = c[d2 >> 2] | 0;
          p2 = c[e2 >> 2] | 0;
          if (!(((o2 | 0) > (p2 | 0) ? p2 : o2) | 0)) {
            q2 = 0;
            i2 = k2;
            return +q2;
          }
          if (nc(b2, 1821) | 0) {
            o2 = c[e2 >> 2] | 0;
            if ((o2 | 0) < 1) {
              q2 = 0;
              i2 = k2;
              return +q2;
            }
            p2 = c[d2 >> 2] | 0;
            if ((p2 | 0) < 1) {
              q2 = 0;
              i2 = k2;
              return +q2;
            } else {
              r2 = 1;
              s2 = 0;
            }
            while (1) {
              t2 = S(r2, n2) | 0;
              u2 = 1;
              v2 = s2;
              while (1) {
                w2 = +h[g2 + (u2 + t2 << 3) >> 3];
                x2 = w2 >= 0 ? w2 : -w2;
                v2 = v2 >= x2 ? v2 : x2;
                if ((u2 | 0) == (p2 | 0)) break;
                else u2 = u2 + 1 | 0;
              }
              if ((r2 | 0) == (o2 | 0)) {
                q2 = v2;
                break;
              } else {
                r2 = r2 + 1 | 0;
                s2 = v2;
              }
            }
            i2 = k2;
            return +q2;
          }
          if ((nc(b2, 1823) | 0) == 0 ? (a[b2 >> 0] | 0) != 49 : 0) {
            if (!(nc(b2, 1825) | 0)) {
              if ((nc(b2, 1889) | 0) == 0 ? (nc(b2, 1922) | 0) == 0 : 0) {
                q2 = 0;
                i2 = k2;
                return +q2;
              }
              h[m2 >> 3] = 0;
              h[l2 >> 3] = 1;
              b2 = c[e2 >> 2] | 0;
              if ((b2 | 0) < 1) {
                y2 = 1;
                z2 = 0;
              } else {
                r2 = 1;
                while (1) {
                  Eb(d2, g2 + ((S(r2, n2) | 0) + 1 << 3) | 0, 288, m2, l2) | 0;
                  if ((r2 | 0) == (b2 | 0)) break;
                  else r2 = r2 + 1 | 0;
                }
                y2 = +h[l2 >> 3];
                z2 = +h[m2 >> 3];
              }
              q2 = z2 * +G(+y2);
              i2 = k2;
              return +q2;
            }
            m2 = c[d2 >> 2] | 0;
            if ((m2 | 0) < 1) A2 = m2;
            else {
              je(j2 | 0, 0, m2 << 3 | 0) | 0;
              A2 = c[d2 >> 2] | 0;
            }
            m2 = c[e2 >> 2] | 0;
            if ((m2 | 0) >= 1) {
              j2 = (A2 | 0) < 1;
              r2 = 1;
              while (1) {
                if (!j2) {
                  b2 = S(r2, n2) | 0;
                  o2 = 1;
                  while (1) {
                    y2 = +h[g2 + (o2 + b2 << 3) >> 3];
                    p2 = f2 + (o2 << 3) | 0;
                    h[p2 >> 3] = +h[p2 >> 3] + (y2 >= 0 ? y2 : -y2);
                    if ((o2 | 0) == (A2 | 0)) break;
                    else o2 = o2 + 1 | 0;
                  }
                }
                if ((r2 | 0) == (m2 | 0)) break;
                else r2 = r2 + 1 | 0;
              }
            }
            if ((A2 | 0) < 1) {
              q2 = 0;
              i2 = k2;
              return +q2;
            } else {
              B2 = 0;
              C2 = 1;
            }
            while (1) {
              v2 = +h[f2 + (C2 << 3) >> 3];
              y2 = B2 >= v2 ? B2 : v2;
              if ((C2 | 0) == (A2 | 0)) {
                q2 = y2;
                break;
              } else {
                B2 = y2;
                C2 = C2 + 1 | 0;
              }
            }
            i2 = k2;
            return +q2;
          }
          C2 = c[e2 >> 2] | 0;
          if ((C2 | 0) < 1) {
            q2 = 0;
            i2 = k2;
            return +q2;
          }
          e2 = c[d2 >> 2] | 0;
          if ((e2 | 0) < 1) {
            D2 = 0;
            E2 = 0;
          } else {
            d2 = 1;
            B2 = 0;
            while (1) {
              A2 = S(d2, n2) | 0;
              f2 = 1;
              y2 = 0;
              while (1) {
                v2 = +h[g2 + (f2 + A2 << 3) >> 3];
                y2 = y2 + (v2 >= 0 ? v2 : -v2);
                if ((f2 | 0) == (e2 | 0)) break;
                else f2 = f2 + 1 | 0;
              }
              v2 = B2 >= y2 ? B2 : y2;
              if ((d2 | 0) == (C2 | 0)) {
                D2 = y2;
                E2 = v2;
                break;
              } else {
                d2 = d2 + 1 | 0;
                B2 = v2;
              }
            }
          }
          h[l2 >> 3] = D2;
          q2 = E2;
          i2 = k2;
          return +q2;
        }
        function ob(a2, b2, c2, d2, e2, f2, g2, j2, k2, l2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          g2 = g2 | 0;
          j2 = j2 | 0;
          k2 = k2 | 0;
          l2 = l2 | 0;
          var m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, H2 = 0, I2 = 0;
          m2 = i2;
          i2 = i2 + 48 | 0;
          n2 = m2 + 32 | 0;
          o2 = m2 + 24 | 0;
          p2 = m2 + 16 | 0;
          q2 = m2 + 8 | 0;
          r2 = m2;
          s2 = +lb(1939);
          t2 = +h[c2 >> 3];
          a: do
            if (!(t2 == 0)) {
              u2 = +h[b2 >> 3];
              if (u2 == 0) {
                h[k2 >> 3] = 0;
                h[l2 >> 3] = 1;
                v2 = +h[d2 >> 3];
                h[q2 >> 3] = v2;
                h[d2 >> 3] = +h[a2 >> 3];
                h[a2 >> 3] = v2;
                h[b2 >> 3] = -+h[c2 >> 3];
                h[c2 >> 3] = 0;
                break;
              }
              v2 = +h[a2 >> 3];
              w2 = +h[d2 >> 3];
              do
                if (v2 - w2 == 0) {
                  x2 = +Ra(48, b2);
                  if (x2 != +Ra(48, c2)) {
                    h[k2 >> 3] = 1;
                    h[l2 >> 3] = 0;
                    break a;
                  } else {
                    y2 = +h[d2 >> 3];
                    z2 = +h[a2 >> 3];
                    A2 = +h[b2 >> 3];
                    B2 = +h[c2 >> 3];
                    break;
                  }
                } else {
                  y2 = w2;
                  z2 = v2;
                  A2 = u2;
                  B2 = t2;
                }
              while (0);
              u2 = z2 - y2;
              h[q2 >> 3] = u2;
              v2 = u2 * 0.5;
              h[o2 >> 3] = v2;
              u2 = A2 >= 0 ? A2 : -A2;
              w2 = B2 >= 0 ? B2 : -B2;
              x2 = u2 >= w2 ? u2 : w2;
              C2 = +Ra(48, b2) * (u2 <= w2 ? u2 : w2);
              w2 = +Ra(48, c2) * C2;
              C2 = v2 >= 0 ? v2 : -v2;
              h[n2 >> 3] = C2;
              u2 = C2 >= x2 ? C2 : x2;
              C2 = v2 * (v2 / u2) + w2 * (x2 / u2);
              h[p2 >> 3] = C2;
              if (C2 >= s2 * 4) {
                h[n2 >> 3] = +G(+u2) * +G(+C2);
                C2 = v2 + +Ra(n2, o2);
                h[p2 >> 3] = C2;
                h[a2 >> 3] = C2 + +h[d2 >> 3];
                h[d2 >> 3] = +h[d2 >> 3] - w2 * (x2 / C2);
                C2 = +pb(c2, p2);
                h[k2 >> 3] = +h[p2 >> 3] / C2;
                h[l2 >> 3] = +h[c2 >> 3] / C2;
                h[b2 >> 3] = +h[b2 >> 3] - +h[c2 >> 3];
                h[c2 >> 3] = 0;
                break;
              }
              h[r2 >> 3] = +h[b2 >> 3] + +h[c2 >> 3];
              C2 = +pb(r2, q2);
              x2 = +h[r2 >> 3];
              w2 = +G(+(((x2 >= 0 ? x2 : -x2) / C2 + 1) * 0.5));
              h[k2 >> 3] = w2;
              x2 = +h[o2 >> 3] / (C2 * w2);
              w2 = x2 * +Ra(48, r2);
              x2 = -w2;
              h[l2 >> 3] = x2;
              C2 = +h[a2 >> 3];
              v2 = +h[k2 >> 3];
              u2 = +h[b2 >> 3];
              D2 = C2 * v2 + u2 * x2;
              E2 = w2 * C2 + v2 * u2;
              u2 = +h[c2 >> 3];
              C2 = +h[d2 >> 3];
              F2 = v2 * u2 + C2 * x2;
              H2 = w2 * u2 + v2 * C2;
              h[a2 >> 3] = v2 * D2 + F2 * x2;
              h[b2 >> 3] = E2 * +h[k2 >> 3] + H2 * +h[l2 >> 3];
              h[c2 >> 3] = F2 * +h[k2 >> 3] - D2 * +h[l2 >> 3];
              D2 = H2 * +h[k2 >> 3] - E2 * +h[l2 >> 3];
              h[d2 >> 3] = D2;
              E2 = (+h[a2 >> 3] + D2) * 0.5;
              h[q2 >> 3] = E2;
              h[a2 >> 3] = E2;
              h[d2 >> 3] = E2;
              E2 = +h[c2 >> 3];
              if (E2 != 0) {
                if (!(+h[b2 >> 3] != 0)) {
                  h[b2 >> 3] = -E2;
                  h[c2 >> 3] = 0;
                  E2 = +h[k2 >> 3];
                  h[q2 >> 3] = E2;
                  h[k2 >> 3] = -+h[l2 >> 3];
                  h[l2 >> 3] = E2;
                  break;
                }
                E2 = +Ra(48, b2);
                if (E2 == +Ra(48, c2)) {
                  E2 = +h[b2 >> 3];
                  D2 = +G(+(E2 >= 0 ? E2 : -E2));
                  E2 = +h[c2 >> 3];
                  H2 = +G(+(E2 >= 0 ? E2 : -E2));
                  h[n2 >> 3] = D2 * H2;
                  E2 = +Ra(n2, c2);
                  h[o2 >> 3] = E2;
                  F2 = +h[b2 >> 3] + +h[c2 >> 3];
                  h[n2 >> 3] = F2;
                  x2 = 1 / +G(+(F2 >= 0 ? F2 : -F2));
                  F2 = +h[q2 >> 3];
                  h[a2 >> 3] = F2 + E2;
                  h[d2 >> 3] = F2 - E2;
                  h[b2 >> 3] = +h[b2 >> 3] - +h[c2 >> 3];
                  h[c2 >> 3] = 0;
                  E2 = D2 * x2;
                  D2 = H2 * x2;
                  x2 = +h[k2 >> 3];
                  H2 = +h[l2 >> 3];
                  F2 = E2 * x2 - D2 * H2;
                  h[q2 >> 3] = F2;
                  h[l2 >> 3] = D2 * x2 + E2 * H2;
                  h[k2 >> 3] = F2;
                }
              }
            } else {
              h[k2 >> 3] = 1;
              h[l2 >> 3] = 0;
            }
          while (0);
          h[e2 >> 3] = +h[a2 >> 3];
          h[g2 >> 3] = +h[d2 >> 3];
          s2 = +h[c2 >> 3];
          if (s2 == 0) {
            h[f2 >> 3] = 0;
            I2 = 0;
            h[j2 >> 3] = I2;
            i2 = m2;
            return 0;
          } else {
            B2 = +h[b2 >> 3];
            A2 = +G(+(B2 >= 0 ? B2 : -B2));
            B2 = A2 * +G(+(s2 >= 0 ? s2 : -s2));
            h[f2 >> 3] = B2;
            I2 = -B2;
            h[j2 >> 3] = I2;
            i2 = m2;
            return 0;
          }
          return 0;
        }
        function pb(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          var c2 = 0, d2 = 0, e2 = 0, f2 = 0, g2 = 0;
          c2 = +h[a2 >> 3];
          d2 = c2 >= 0 ? c2 : -c2;
          c2 = +h[b2 >> 3];
          e2 = c2 >= 0 ? c2 : -c2;
          c2 = d2 >= e2 ? d2 : e2;
          f2 = d2 <= e2 ? d2 : e2;
          if (f2 == 0) {
            g2 = c2;
            return +g2;
          }
          e2 = f2 / c2;
          g2 = c2 * +G(+(e2 * e2 + 1));
          return +g2;
        }
        function qb(b2, d2, e2, f2, g2, j2, k2, l2, m2, n2, o2, p2, q2, r2, s2, t2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          g2 = g2 | 0;
          j2 = j2 | 0;
          k2 = k2 | 0;
          l2 = l2 | 0;
          m2 = m2 | 0;
          n2 = n2 | 0;
          o2 = o2 | 0;
          p2 = p2 | 0;
          q2 = q2 | 0;
          r2 = r2 | 0;
          s2 = s2 | 0;
          t2 = t2 | 0;
          var u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0, O2 = 0, P2 = 0, Q2 = 0, R2 = 0, T2 = 0, U2 = 0, V2 = 0, W2 = 0, X2 = 0, Y2 = 0, Z2 = 0, _2 = 0, $2 = 0, aa2 = 0, ba2 = 0, ca2 = 0, da2 = 0, ea2 = 0, fa2 = 0, ga2 = 0, ha2 = 0, ia2 = 0, ja2 = 0, ka2 = 0, la2 = 0, ma2 = 0, na2 = 0, oa2 = 0, pa2 = 0, qa2 = 0, ra2 = 0, sa2 = 0, ta2 = 0, ua2 = 0, va2 = 0, wa2 = 0, xa2 = 0, ya2 = 0, za2 = 0, Aa2 = 0, Ba2 = 0, Ca2 = 0, Da2 = 0, Ea2 = 0, Fa2 = 0, Ga2 = 0, Ha2 = 0, Ia2 = 0, Ja2 = 0, Ka2 = 0, La2 = 0, Ma2 = 0, Na2 = 0, Oa2 = 0, Pa2 = 0, Qa2 = 0, Ra2 = 0, Sa2 = 0, Ta2 = 0, Ua2 = 0, Va2 = 0, Wa2 = 0, Xa2 = 0, Ya2 = 0;
          u2 = i2;
          i2 = i2 + 112 | 0;
          v2 = u2 + 96 | 0;
          w2 = u2 + 48 | 0;
          x2 = u2 + 40 | 0;
          y2 = u2 + 32 | 0;
          z2 = u2 + 24 | 0;
          A2 = u2 + 92 | 0;
          B2 = u2 + 16 | 0;
          C2 = u2 + 8 | 0;
          D2 = u2 + 88 | 0;
          E2 = u2 + 84 | 0;
          F2 = u2 + 80 | 0;
          G2 = u2 + 76 | 0;
          H2 = u2 + 72 | 0;
          I2 = u2 + 68 | 0;
          J2 = u2 + 64 | 0;
          K2 = u2 + 60 | 0;
          L2 = u2;
          M2 = u2 + 56 | 0;
          N2 = u2 + 100 | 0;
          O2 = c[k2 >> 2] | 0;
          P2 = O2 + 1 | 0;
          Q2 = j2 + (~O2 << 3) | 0;
          j2 = l2 + -8 | 0;
          R2 = m2 + -8 | 0;
          T2 = c[q2 >> 2] | 0;
          U2 = T2 + 1 | 0;
          V2 = p2 + (~T2 << 3) | 0;
          c[t2 >> 2] = 0;
          T2 = c[e2 >> 2] | 0;
          if (!T2) {
            h[r2 >> 3] = 1;
            i2 = u2;
            return 0;
          }
          a: do
            if ((T2 | 0) < 12)
              if ((c[s2 >> 2] | 0) == -1) W2 = 1;
              else {
                hb(b2, d2, e2, f2, g2, Q2 + (P2 << 3) | 0, k2, l2, m2, n2, o2, V2 + (U2 << 3) | 0, q2, t2) | 0;
                W2 = 1;
              }
            else {
              c[t2 >> 2] = 0;
              a[N2 >> 0] = (c[b2 >> 2] | 0) == 0 ? 69 : 83;
              a[N2 + 1 >> 0] = (c[d2 >> 2] | 0) == 0 ? 78 : 86;
              p2 = lc(292, 1827, N2, e2, f2, g2, s2) | 0;
              X2 = (p2 | 0) > 2 ? p2 : 2;
              p2 = (c[g2 >> 2] | 0) - (c[f2 >> 2] | 0) + 1 | 0;
              Y2 = ((c[e2 >> 2] | 0) + -1 | 0) / 3 | 0;
              Z2 = (p2 | 0) <= (Y2 | 0) ? p2 : Y2;
              c[v2 >> 2] = Z2;
              Y2 = (Z2 | 0) <= (X2 | 0) ? Z2 : X2;
              X2 = lc(296, 1827, N2, e2, f2, g2, s2) | 0;
              Z2 = ((c[e2 >> 2] | 0) + 6 | 0) / 9 | 0;
              p2 = (X2 | 0) <= (Z2 | 0) ? X2 : Z2;
              Z2 = (c[g2 >> 2] | 0) - (c[f2 >> 2] | 0) | 0;
              X2 = (p2 | 0) <= (Z2 | 0) ? p2 : Z2;
              Z2 = X2 - ((X2 | 0) % 2 | 0) | 0;
              X2 = (Z2 | 0) > 2 ? Z2 : 2;
              c[v2 >> 2] = Y2 + 1;
              Z2 = Q2 + (P2 << 3) | 0;
              p2 = V2 + (U2 << 3) | 0;
              tb(b2, d2, e2, f2, g2, v2, Z2, k2, n2, o2, p2, q2, D2, A2, l2, m2, Z2, k2, e2, Z2, k2, e2, Z2, k2, r2, 300) | 0;
              _2 = (X2 * 3 | 0) / 2 | 0;
              c[v2 >> 2] = _2;
              $2 = ~~+h[r2 >> 3];
              aa2 = (_2 | 0) >= ($2 | 0) ? _2 : $2;
              if ((c[s2 >> 2] | 0) == -1) {
                h[r2 >> 3] = +(aa2 | 0);
                i2 = u2;
                return 0;
              }
              $2 = lc(304, 1827, N2, e2, f2, g2, s2) | 0;
              _2 = ($2 | 0) > 11 ? $2 : 11;
              $2 = lc(308, 1827, N2, e2, f2, g2, s2) | 0;
              ba2 = ($2 | 0) > 0 ? $2 : 0;
              $2 = lc(312, 1827, N2, e2, f2, g2, s2) | 0;
              ca2 = ($2 | 0) > 0 ? $2 : 0;
              c[M2 >> 2] = (ca2 | 0) < 2 ? ca2 : 2;
              ca2 = c[e2 >> 2] | 0;
              $2 = (ca2 + -1 | 0) / 3 | 0;
              da2 = c[s2 >> 2] | 0;
              ea2 = (da2 | 0) / 2 | 0;
              fa2 = ($2 | 0) <= (ea2 | 0) ? $2 : ea2;
              c[F2 >> 2] = fa2;
              ea2 = (ca2 + 6 | 0) / 9 | 0;
              ca2 = (da2 << 1 | 0) / 3 | 0;
              da2 = (ea2 | 0) <= (ca2 | 0) ? ea2 : ca2;
              ca2 = da2 - ((da2 | 0) % 2 | 0) | 0;
              da2 = c[g2 >> 2] | 0;
              ea2 = c[f2 >> 2] | 0;
              $2 = da2 - ea2 + 1 | 0;
              ga2 = ($2 | 0) > 10 ? $2 : 10;
              c[J2 >> 2] = da2;
              c[v2 >> 2] = ga2 * 30;
              b: do
                if ((ga2 | 0) < 1) ha2 = da2;
                else {
                  $2 = (ca2 | 0) <= (X2 | 0) ? ca2 : X2;
                  ia2 = (_2 | 0) <= (fa2 | 0) ? _2 : fa2;
                  if ((da2 | 0) < (ea2 | 0)) {
                    W2 = aa2;
                    break a;
                  } else {
                    ja2 = 1;
                    ka2 = 0;
                    la2 = 1;
                    ma2 = ea2;
                    na2 = da2;
                  }
                  while (1) {
                    oa2 = na2;
                    while (1) {
                      if ((oa2 | 0) <= (ma2 | 0)) {
                        pa2 = ma2;
                        break;
                      }
                      qa2 = oa2 + -1 | 0;
                      if (+h[Q2 + ((S(qa2, O2) | 0) + oa2 << 3) >> 3] == 0) {
                        pa2 = oa2;
                        break;
                      } else oa2 = qa2;
                    }
                    c[K2 >> 2] = pa2;
                    oa2 = na2 - pa2 | 0;
                    qa2 = oa2 + 1 | 0;
                    ra2 = (qa2 | 0) <= (fa2 | 0) ? qa2 : fa2;
                    sa2 = (ja2 | 0) < 5;
                    if (sa2) ta2 = (ra2 | 0) <= (Y2 | 0) ? ra2 : Y2;
                    else {
                      ua2 = c[F2 >> 2] << 1;
                      ta2 = (ra2 | 0) <= (ua2 | 0) ? ra2 : ua2;
                    }
                    c[F2 >> 2] = ta2;
                    do
                      if ((ta2 | 0) < (fa2 | 0)) {
                        if ((ta2 | 0) >= (oa2 | 0)) {
                          c[F2 >> 2] = qa2;
                          va2 = qa2;
                          break;
                        }
                        ua2 = na2 - ta2 | 0;
                        wa2 = +h[Q2 + (ua2 + 1 + (S(ua2, O2) | 0) << 3) >> 3];
                        xa2 = +h[Q2 + ((S(ua2 + -1 | 0, O2) | 0) + ua2 << 3) >> 3];
                        if ((wa2 >= 0 ? wa2 : -wa2) > (xa2 >= 0 ? xa2 : -xa2)) {
                          ua2 = ta2 + 1 | 0;
                          c[F2 >> 2] = ua2;
                          va2 = ua2;
                        } else va2 = ta2;
                      } else va2 = ta2;
                    while (0);
                    if (!sa2) {
                      qa2 = ka2 + 1 | 0;
                      if ((ka2 | 0) < 0 & (va2 | 0) < (ra2 | 0)) {
                        ya2 = ka2;
                        za2 = va2;
                      } else {
                        oa2 = (va2 - qa2 | 0) < 2 ? 0 : qa2;
                        qa2 = va2 - oa2 | 0;
                        c[F2 >> 2] = qa2;
                        ya2 = oa2;
                        za2 = qa2;
                      }
                    } else {
                      ya2 = -1;
                      za2 = va2;
                    }
                    qa2 = c[e2 >> 2] | 0;
                    oa2 = qa2 - za2 | 0;
                    ua2 = oa2 + 1 | 0;
                    c[H2 >> 2] = oa2 + ~za2;
                    c[I2 >> 2] = 1 - za2 + qa2 + (-2 - za2);
                    tb(b2, d2, e2, K2, J2, F2, Z2, k2, n2, o2, p2, q2, D2, A2, l2, m2, Q2 + (ua2 + O2 << 3) | 0, k2, H2, Q2 + (ua2 + (S(za2 + 1 | 0, O2) | 0) << 3) | 0, k2, I2, Q2 + (za2 + 2 + O2 << 3) | 0, k2, r2, s2) | 0;
                    ua2 = c[A2 >> 2] | 0;
                    qa2 = (c[J2 >> 2] | 0) - ua2 | 0;
                    c[J2 >> 2] = qa2;
                    oa2 = qa2 - (c[D2 >> 2] | 0) + 1 | 0;
                    if (ua2)
                      if ((ua2 * 100 | 0) <= (S(c[F2 >> 2] | 0, ba2) | 0) ? (Aa2 = c[K2 >> 2] | 0, (qa2 - Aa2 | 0) >= (ia2 | 0)) : 0) {
                        Ba2 = Aa2;
                        Ca2 = 28;
                      } else {
                        Da2 = ua2;
                        Ea2 = qa2;
                      }
                    else {
                      Ba2 = c[K2 >> 2] | 0;
                      Ca2 = 28;
                    }
                    if ((Ca2 | 0) == 28) {
                      Ca2 = 0;
                      ua2 = qa2 - Ba2 | 0;
                      Aa2 = (ua2 | 0) > 2 ? ua2 : 2;
                      ua2 = ($2 | 0) <= (Aa2 | 0) ? $2 : Aa2;
                      Aa2 = ua2 - ((ua2 | 0) % 2 | 0) | 0;
                      c[E2 >> 2] = Aa2;
                      if (!((ja2 | 0) % 6 | 0)) {
                        Fa2 = qa2 - Aa2 | 0;
                        Ga2 = Fa2 + 1 | 0;
                        Ha2 = Fa2 + 2 | 0;
                        Fa2 = Ba2 + 2 | 0;
                        Ia2 = (Ha2 | 0) >= (Fa2 | 0) ? Ha2 : Fa2;
                        if ((qa2 | 0) < (Ia2 | 0)) Ja2 = Ba2;
                        else {
                          Fa2 = qa2;
                          do {
                            Ka2 = Fa2 + -1 | 0;
                            xa2 = +h[Q2 + ((S(Ka2, O2) | 0) + Fa2 << 3) >> 3];
                            La2 = Fa2;
                            Fa2 = Fa2 + -2 | 0;
                            wa2 = +h[Q2 + ((S(Fa2, O2) | 0) + Ka2 << 3) >> 3];
                            Ma2 = (xa2 >= 0 ? xa2 : -xa2) + (wa2 >= 0 ? wa2 : -wa2);
                            wa2 = +h[Q2 + ((S(La2, O2) | 0) + La2 << 3) >> 3] + Ma2 * 0.75;
                            h[w2 >> 3] = wa2;
                            h[x2 >> 3] = Ma2;
                            h[y2 >> 3] = Ma2 * -0.4375;
                            h[z2 >> 3] = wa2;
                            ob(w2, x2, y2, z2, j2 + (Ka2 << 3) | 0, R2 + (Ka2 << 3) | 0, j2 + (La2 << 3) | 0, R2 + (La2 << 3) | 0, B2, C2) | 0;
                          } while ((Fa2 | 0) >= (Ia2 | 0));
                          Ja2 = c[K2 >> 2] | 0;
                        }
                        if ((Ga2 | 0) == (Ja2 | 0)) {
                          Ia2 = j2 + (Ha2 << 3) | 0;
                          h[Ia2 >> 3] = +h[Q2 + ((S(Ha2, O2) | 0) + Ha2 << 3) >> 3];
                          Fa2 = R2 + (Ha2 << 3) | 0;
                          h[Fa2 >> 3] = 0;
                          h[j2 + (Ga2 << 3) >> 3] = +h[Ia2 >> 3];
                          h[R2 + (Ga2 << 3) >> 3] = +h[Fa2 >> 3];
                          Na2 = Ga2;
                        } else Na2 = Ga2;
                      } else {
                        if ((qa2 - oa2 | 0) < ((ua2 | 0) / 2 | 0 | 0)) {
                          Fa2 = qa2 - Aa2 + 1 | 0;
                          Ia2 = Q2 + (P2 - Aa2 + (c[e2 >> 2] | 0) << 3) | 0;
                          eb(2024, E2, E2, Q2 + ((S(Fa2, O2) | 0) + Fa2 << 3) | 0, k2, Ia2, k2) | 0;
                          ra2 = j2 + (Fa2 << 3) | 0;
                          sa2 = R2 + (Fa2 << 3) | 0;
                          if ((c[E2 >> 2] | 0) > (_2 | 0)) ub(6240, 6240, E2, 316, E2, Ia2, k2, ra2, sa2, 316, 316, L2, 316, r2, s2, G2) | 0;
                          else hb(6240, 6240, E2, 316, E2, Ia2, k2, ra2, sa2, 316, 316, L2, 316, G2) | 0;
                          sa2 = (c[G2 >> 2] | 0) + Fa2 | 0;
                          Fa2 = c[J2 >> 2] | 0;
                          if ((sa2 | 0) < (Fa2 | 0)) {
                            Oa2 = sa2;
                            Pa2 = Fa2;
                          } else {
                            sa2 = Fa2 + -1 | 0;
                            ra2 = S(sa2, O2) | 0;
                            h[w2 >> 3] = +h[Q2 + (ra2 + sa2 << 3) >> 3];
                            h[y2 >> 3] = +h[Q2 + (ra2 + Fa2 << 3) >> 3];
                            ra2 = S(Fa2, O2) | 0;
                            h[x2 >> 3] = +h[Q2 + (sa2 + ra2 << 3) >> 3];
                            h[z2 >> 3] = +h[Q2 + (ra2 + Fa2 << 3) >> 3];
                            ob(w2, x2, y2, z2, j2 + (sa2 << 3) | 0, R2 + (sa2 << 3) | 0, j2 + (Fa2 << 3) | 0, R2 + (Fa2 << 3) | 0, B2, C2) | 0;
                            Fa2 = c[J2 >> 2] | 0;
                            Oa2 = Fa2 + -1 | 0;
                            Pa2 = Fa2;
                          }
                        } else {
                          Oa2 = oa2;
                          Pa2 = qa2;
                        }
                        if (!((Pa2 | 0) <= (Oa2 | 0) ? 1 : (Pa2 - Oa2 | 0) < (c[E2 >> 2] | 0))) {
                          Fa2 = Pa2;
                          do {
                            sa2 = 1;
                            ra2 = Oa2;
                            c: while (1) {
                              Ia2 = ra2;
                              do {
                                if ((Ia2 | 0) >= (Fa2 | 0)) break c;
                                Qa2 = j2 + (Ia2 << 3) | 0;
                                Ra2 = +h[Qa2 >> 3];
                                Sa2 = R2 + (Ia2 << 3) | 0;
                                wa2 = +h[Sa2 >> 3];
                                Ia2 = Ia2 + 1 | 0;
                                Ta2 = j2 + (Ia2 << 3) | 0;
                                Ua2 = +h[Ta2 >> 3];
                                Va2 = R2 + (Ia2 << 3) | 0;
                                Ma2 = +h[Va2 >> 3];
                              } while (!((Ra2 >= 0 ? Ra2 : -Ra2) + (wa2 >= 0 ? wa2 : -wa2) < (Ua2 >= 0 ? Ua2 : -Ua2) + (Ma2 >= 0 ? Ma2 : -Ma2)));
                              h[Qa2 >> 3] = Ua2;
                              h[Ta2 >> 3] = Ra2;
                              Ma2 = +h[Sa2 >> 3];
                              h[Sa2 >> 3] = +h[Va2 >> 3];
                              h[Va2 >> 3] = Ma2;
                              sa2 = 0;
                              ra2 = Ia2;
                            }
                            Fa2 = Fa2 + -1 | 0;
                          } while (!((Fa2 | 0) <= (Oa2 | 0) | (sa2 | 0) != 0));
                        }
                        Fa2 = Oa2 + 2 | 0;
                        if ((Pa2 | 0) < (Fa2 | 0)) Na2 = Oa2;
                        else {
                          qa2 = Pa2;
                          while (1) {
                            oa2 = R2 + (qa2 << 3) | 0;
                            Aa2 = qa2 + -1 | 0;
                            ua2 = R2 + (Aa2 << 3) | 0;
                            if (+h[oa2 >> 3] != -+h[ua2 >> 3]) {
                              Ga2 = j2 + (qa2 << 3) | 0;
                              Ma2 = +h[Ga2 >> 3];
                              Ha2 = j2 + (Aa2 << 3) | 0;
                              h[Ga2 >> 3] = +h[Ha2 >> 3];
                              Ga2 = qa2 + -2 | 0;
                              Aa2 = j2 + (Ga2 << 3) | 0;
                              h[Ha2 >> 3] = +h[Aa2 >> 3];
                              h[Aa2 >> 3] = Ma2;
                              Ma2 = +h[oa2 >> 3];
                              h[oa2 >> 3] = +h[ua2 >> 3];
                              oa2 = R2 + (Ga2 << 3) | 0;
                              h[ua2 >> 3] = +h[oa2 >> 3];
                              h[oa2 >> 3] = Ma2;
                              Wa2 = Ga2;
                            } else Wa2 = qa2 + -2 | 0;
                            if ((Wa2 | 0) < (Fa2 | 0)) {
                              Na2 = Oa2;
                              break;
                            } else qa2 = Wa2;
                          }
                        }
                      }
                      qa2 = c[J2 >> 2] | 0;
                      Fa2 = qa2 - Na2 | 0;
                      do
                        if ((Fa2 | 0) == 1 ? +h[R2 + (qa2 << 3) >> 3] == 0 : 0) {
                          Ga2 = j2 + (qa2 << 3) | 0;
                          Ma2 = +h[Ga2 >> 3];
                          wa2 = +h[Q2 + ((S(qa2, O2) | 0) + qa2 << 3) >> 3];
                          xa2 = Ma2 - wa2;
                          oa2 = j2 + (qa2 + -1 << 3) | 0;
                          Xa2 = +h[oa2 >> 3];
                          Ya2 = Xa2 - wa2;
                          if ((xa2 >= 0 ? xa2 : -xa2) < (Ya2 >= 0 ? Ya2 : -Ya2)) {
                            h[oa2 >> 3] = Ma2;
                            break;
                          } else {
                            h[Ga2 >> 3] = Xa2;
                            break;
                          }
                        }
                      while (0);
                      Ga2 = c[E2 >> 2] | 0;
                      oa2 = Fa2 + 1 | 0;
                      ua2 = (Ga2 | 0) <= (oa2 | 0) ? Ga2 : oa2;
                      oa2 = ua2 - ((ua2 | 0) % 2 | 0) | 0;
                      c[E2 >> 2] = oa2;
                      ua2 = qa2 - oa2 + 1 | 0;
                      Ga2 = oa2 * 3 | 0;
                      oa2 = c[e2 >> 2] | 0;
                      Aa2 = oa2 - (Ga2 + -3) | 0;
                      Ha2 = Aa2 + 1 | 0;
                      c[H2 >> 2] = 2 - Ga2 + -2 + Aa2;
                      c[I2 >> 2] = oa2 + 1 + (3 - Ga2) + ~Ga2;
                      vb(b2, d2, M2, e2, K2, J2, E2, j2 + (ua2 << 3) | 0, R2 + (ua2 << 3) | 0, Z2, k2, n2, o2, p2, q2, r2, 320, Q2 + (Ha2 + O2 << 3) | 0, k2, I2, Q2 + (Ga2 + 1 + O2 << 3) | 0, k2, H2, Q2 + (Ha2 + (S(Ga2 + -2 | 0, O2) | 0) << 3) | 0, k2) | 0;
                      Da2 = c[A2 >> 2] | 0;
                      Ea2 = c[J2 >> 2] | 0;
                    }
                    if ((la2 | 0) >= (c[v2 >> 2] | 0)) {
                      ha2 = Ea2;
                      break b;
                    }
                    ma2 = c[f2 >> 2] | 0;
                    if ((Ea2 | 0) < (ma2 | 0)) {
                      W2 = aa2;
                      break a;
                    } else {
                      ja2 = (Da2 | 0) > 0 ? 1 : ja2 + 1 | 0;
                      ka2 = ya2;
                      la2 = la2 + 1 | 0;
                      na2 = Ea2;
                    }
                  }
                }
              while (0);
              c[t2 >> 2] = ha2;
              W2 = aa2;
            }
          while (0);
          h[r2 >> 3] = +(W2 | 0);
          i2 = u2;
          return 0;
        }
        function rb(a2, b2, d2, e2, f2, g2, i3, j2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          g2 = g2 | 0;
          i3 = i3 | 0;
          j2 = j2 | 0;
          var k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0;
          k2 = c[d2 >> 2] | 0;
          d2 = b2 + (~k2 << 3) | 0;
          b2 = d2 + (k2 + 1 << 3) | 0;
          l2 = +h[b2 >> 3];
          m2 = l2 - +h[g2 >> 3];
          n2 = +h[i3 >> 3];
          o2 = +h[d2 + (k2 + 2 << 3) >> 3];
          p2 = (m2 >= 0 ? m2 : -m2) + (n2 >= 0 ? n2 : -n2) + (o2 >= 0 ? o2 : -o2);
          if ((c[a2 >> 2] | 0) == 2)
            if (p2 == 0) {
              c[j2 >> 2] = 0;
              c[j2 + 4 >> 2] = 0;
              c[j2 + 8 >> 2] = 0;
              c[j2 + 12 >> 2] = 0;
              return 0;
            } else {
              q2 = o2 / p2;
              a2 = k2 << 1;
              h[j2 >> 3] = q2 * +h[d2 + ((a2 | 1) << 3) >> 3] + m2 / p2 * (l2 - +h[e2 >> 3]) - n2 / p2 * +h[f2 >> 3];
              h[j2 + 8 >> 3] = q2 * (+h[b2 >> 3] + +h[d2 + (a2 + 2 << 3) >> 3] - +h[e2 >> 3] - +h[g2 >> 3]);
              return 0;
            }
          else {
            q2 = +h[d2 + (k2 + 3 << 3) >> 3];
            r2 = p2 + (q2 >= 0 ? q2 : -q2);
            if (r2 == 0) {
              c[j2 >> 2] = 0;
              c[j2 + 4 >> 2] = 0;
              c[j2 + 8 >> 2] = 0;
              c[j2 + 12 >> 2] = 0;
              c[j2 + 16 >> 2] = 0;
              c[j2 + 20 >> 2] = 0;
              return 0;
            } else {
              p2 = o2 / r2;
              o2 = q2 / r2;
              a2 = k2 << 1;
              i3 = k2 * 3 | 0;
              h[j2 >> 3] = m2 / r2 * (l2 - +h[e2 >> 3]) - n2 / r2 * +h[f2 >> 3] + p2 * +h[d2 + ((a2 | 1) << 3) >> 3] + o2 * +h[d2 + (i3 + 1 << 3) >> 3];
              h[j2 + 8 >> 3] = p2 * (+h[b2 >> 3] + +h[d2 + (a2 + 2 << 3) >> 3] - +h[e2 >> 3] - +h[g2 >> 3]) + o2 * +h[d2 + (i3 + 2 << 3) >> 3];
              h[j2 + 16 >> 3] = o2 * (+h[b2 >> 3] + +h[d2 + (i3 + 3 << 3) >> 3] - +h[e2 >> 3] - +h[g2 >> 3]) + p2 * +h[d2 + (a2 + 3 << 3) >> 3];
              return 0;
            }
          }
          return 0;
        }
        function sb(a2, b2, d2, e2, f2, g2, j2, k2, l2, m2, n2, o2, p2, q2, r2, s2, t2, u2, v2, w2, x2, y2, z2, A2, B2, C2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          g2 = g2 | 0;
          j2 = j2 | 0;
          k2 = k2 | 0;
          l2 = l2 | 0;
          m2 = m2 | 0;
          n2 = n2 | 0;
          o2 = o2 | 0;
          p2 = p2 | 0;
          q2 = q2 | 0;
          r2 = r2 | 0;
          s2 = s2 | 0;
          t2 = t2 | 0;
          u2 = u2 | 0;
          v2 = v2 | 0;
          w2 = w2 | 0;
          x2 = x2 | 0;
          y2 = y2 | 0;
          z2 = z2 | 0;
          A2 = A2 | 0;
          B2 = B2 | 0;
          C2 = C2 | 0;
          var D2 = 0, E2 = 0, F2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0, O2 = 0, P2 = 0, Q2 = 0, R2 = 0, T2 = 0, U2 = 0, V2 = 0, W2 = 0, X2 = 0, Y2 = 0, Z2 = 0, _2 = 0, $2 = 0, aa2 = 0, ba2 = 0, ca2 = 0, da2 = 0, ea2 = 0, fa2 = 0, ga2 = 0, ha2 = 0, ia2 = 0, ja2 = 0, ka2 = 0, la2 = 0, ma2 = 0, na2 = 0, oa2 = 0, pa2 = 0, qa2 = 0, ra2 = 0, sa2 = 0, ta2 = 0, ua2 = 0, va2 = 0, wa2 = 0, xa2 = 0, ya2 = 0, za2 = 0, Aa2 = 0, Ba2 = 0, Ca2 = 0, Da2 = 0, Ea2 = 0, Fa2 = 0, Ga2 = 0, Ha2 = 0, Ia2 = 0, Ja2 = 0, Ka2 = 0, La2 = 0, Ma2 = 0, Na2 = 0, Oa2 = 0, Pa2 = 0, Qa2 = 0, Ra2 = 0, Sa2 = 0;
          D2 = i2;
          i2 = i2 + 128 | 0;
          E2 = D2 + 112 | 0;
          F2 = D2 + 108 | 0;
          H2 = D2 + 104 | 0;
          I2 = D2 + 72 | 0;
          J2 = D2 + 64 | 0;
          K2 = D2 + 56 | 0;
          L2 = D2 + 48 | 0;
          M2 = D2 + 40 | 0;
          N2 = D2 + 32 | 0;
          O2 = D2 + 100 | 0;
          P2 = D2 + 96 | 0;
          Q2 = D2 + 24 | 0;
          R2 = D2 + 16 | 0;
          T2 = D2 + 92 | 0;
          U2 = D2 + 88 | 0;
          V2 = D2 + 84 | 0;
          W2 = D2 + 80 | 0;
          X2 = D2 + 8 | 0;
          Y2 = D2;
          Z2 = c[k2 >> 2] | 0;
          _2 = j2 + (~Z2 << 3) | 0;
          j2 = c[o2 >> 2] | 0;
          $2 = n2 + (~j2 << 3) | 0;
          n2 = r2 + -8 | 0;
          r2 = s2 + -8 | 0;
          s2 = c[u2 >> 2] | 0;
          aa2 = s2 + 1 | 0;
          ba2 = t2 + (~s2 << 3) | 0;
          t2 = c[x2 >> 2] | 0;
          ca2 = t2 + 1 | 0;
          da2 = w2 + (~t2 << 3) | 0;
          w2 = c[A2 >> 2] | 0;
          ea2 = w2 + 1 | 0;
          fa2 = z2 + (~w2 << 3) | 0;
          w2 = B2 + -8 | 0;
          z2 = c[g2 >> 2] | 0;
          c[E2 >> 2] = z2;
          ga2 = (c[f2 >> 2] | 0) - (c[e2 >> 2] | 0) + 1 | 0;
          c[F2 >> 2] = ga2;
          ha2 = (z2 | 0) <= (ga2 | 0) ? z2 : ga2;
          c[O2 >> 2] = ha2;
          if ((ha2 | 0) < 3) ia2 = 1;
          else {
            c[E2 >> 2] = ha2 + -1;
            ha2 = da2 + (ca2 << 3) | 0;
            Za(O2, 324, E2, ha2, x2, B2, B2, 328, T2) | 0;
            ga2 = ~~+h[B2 >> 3];
            c[E2 >> 2] = (c[O2 >> 2] | 0) + -1;
            Lb(2067, 2080, O2, O2, 324, E2, ha2, x2, B2, ba2 + (aa2 << 3) | 0, u2, B2, 328, T2) | 0;
            ha2 = ~~+h[B2 >> 3];
            ia2 = +(((ga2 | 0) >= (ha2 | 0) ? ga2 : ha2) + (c[O2 >> 2] | 0) | 0);
          }
          if ((c[C2 >> 2] | 0) == -1) {
            h[B2 >> 3] = ia2;
            i2 = D2;
            return 0;
          }
          c[p2 >> 2] = 0;
          c[q2 >> 2] = 0;
          h[B2 >> 3] = 1;
          if ((c[e2 >> 2] | 0) > (c[f2 >> 2] | 0)) {
            i2 = D2;
            return 0;
          }
          if ((c[g2 >> 2] | 0) < 1) {
            i2 = D2;
            return 0;
          }
          ja2 = +lb(1851);
          h[X2 >> 3] = ja2;
          h[Y2 >> 3] = 1 / ja2;
          db(X2, Y2) | 0;
          ja2 = +lb(1864);
          ka2 = +h[X2 >> 3] * (+(c[d2 >> 2] | 0) / ja2);
          X2 = c[g2 >> 2] | 0;
          c[E2 >> 2] = X2;
          g2 = c[f2 >> 2] | 0;
          Y2 = c[e2 >> 2] | 0;
          ha2 = g2 - Y2 + 1 | 0;
          c[F2 >> 2] = ha2;
          ga2 = (X2 | 0) <= (ha2 | 0) ? X2 : ha2;
          c[O2 >> 2] = ga2;
          ha2 = g2 - ga2 | 0;
          ga2 = ha2 + 1 | 0;
          if ((ga2 | 0) == (Y2 | 0)) la2 = 0;
          else la2 = +h[_2 + (ga2 + (S(ha2, Z2) | 0) << 3) >> 3];
          Y2 = S(ga2, Z2) | 0;
          X2 = _2 + (Y2 + ga2 << 3) | 0;
          if ((g2 | 0) == (ga2 | 0)) {
            h[n2 + (g2 << 3) >> 3] = +h[X2 >> 3];
            h[r2 + (g2 << 3) >> 3] = 0;
            c[p2 >> 2] = 1;
            c[q2 >> 2] = 0;
            ma2 = +h[X2 >> 3];
            na2 = ja2 * (ma2 >= 0 ? ma2 : -ma2);
            if ((la2 >= 0 ? la2 : -la2) <= (ka2 >= na2 ? ka2 : na2) ? (c[p2 >> 2] = 0, c[q2 >> 2] = 1, (ha2 | 0) >= (c[e2 >> 2] | 0)) : 0) h[_2 + (g2 + (S(ha2, Z2) | 0) << 3) >> 3] = 0;
            h[B2 >> 3] = 1;
            i2 = D2;
            return 0;
          }
          g2 = da2 + (ca2 << 3) | 0;
          eb(2076, O2, O2, X2, k2, g2, x2) | 0;
          c[E2 >> 2] = (c[O2 >> 2] | 0) + -1;
          c[F2 >> 2] = (c[k2 >> 2] | 0) + 1;
          c[H2 >> 2] = (c[x2 >> 2] | 0) + 1;
          ca2 = _2 + (ha2 + 2 + Y2 << 3) | 0;
          z2 = da2 + (t2 + 2 << 3) | 0;
          Ta(E2, ca2, F2, z2, H2) | 0;
          oa2 = ba2 + (aa2 << 3) | 0;
          Db(2024, O2, O2, 6136, 56, oa2, u2) | 0;
          hb(332, 332, O2, 324, O2, g2, x2, n2 + (ga2 << 3) | 0, r2 + (ga2 << 3) | 0, 324, O2, oa2, u2, W2) | 0;
          aa2 = c[O2 >> 2] | 0;
          pa2 = aa2 + -3 | 0;
          c[E2 >> 2] = pa2;
          if ((pa2 | 0) >= 1) {
            qa2 = 1;
            while (1) {
              ra2 = S(qa2, t2) | 0;
              h[da2 + (qa2 + 2 + ra2 << 3) >> 3] = 0;
              h[da2 + (qa2 + 3 + ra2 << 3) >> 3] = 0;
              if ((qa2 | 0) < (pa2 | 0)) qa2 = qa2 + 1 | 0;
              else break;
            }
          }
          if ((aa2 | 0) > 2) h[da2 + ((S(aa2 + -2 | 0, t2) | 0) + aa2 << 3) >> 3] = 0;
          c[p2 >> 2] = aa2;
          qa2 = c[W2 >> 2] | 0;
          pa2 = qa2 + 1 | 0;
          c[V2 >> 2] = pa2;
          a: do
            if ((qa2 | 0) < (aa2 | 0)) {
              na2 = la2 >= 0 ? la2 : -la2;
              ra2 = aa2;
              sa2 = pa2;
              while (1) {
                ta2 = ra2;
                while (1) {
                  if ((ta2 | 0) == 1) ua2 = 0;
                  else ua2 = +h[da2 + ((S(ta2 + -1 | 0, t2) | 0) + ta2 << 3) >> 3] != 0 & 1;
                  va2 = S(ta2, t2) | 0;
                  ma2 = +h[da2 + (va2 + ta2 << 3) >> 3];
                  wa2 = ma2 >= 0 ? ma2 : -ma2;
                  if (!ua2) {
                    ma2 = ja2 * (wa2 == 0 ? na2 : wa2);
                    xa2 = la2 * +h[ba2 + ((S(ta2, s2) | 0) + 1 << 3) >> 3];
                    if (!((xa2 >= 0 ? xa2 : -xa2) <= (ka2 >= ma2 ? ka2 : ma2))) {
                      ya2 = 26;
                      break;
                    }
                    za2 = ta2 + -1 | 0;
                  } else {
                    Aa2 = ta2 + -1 | 0;
                    ma2 = +h[da2 + ((S(Aa2, t2) | 0) + ta2 << 3) >> 3];
                    xa2 = +G(+(ma2 >= 0 ? ma2 : -ma2));
                    ma2 = +h[da2 + (Aa2 + va2 << 3) >> 3];
                    Ba2 = wa2 + xa2 * +G(+(ma2 >= 0 ? ma2 : -ma2));
                    ma2 = la2 * +h[ba2 + ((S(ta2, s2) | 0) + 1 << 3) >> 3];
                    xa2 = ma2 >= 0 ? ma2 : -ma2;
                    ma2 = la2 * +h[ba2 + ((S(Aa2, s2) | 0) + 1 << 3) >> 3];
                    wa2 = ma2 >= 0 ? ma2 : -ma2;
                    ma2 = ja2 * (Ba2 == 0 ? na2 : Ba2);
                    if (!((xa2 >= wa2 ? xa2 : wa2) <= (ka2 >= ma2 ? ka2 : ma2))) {
                      ya2 = 31;
                      break;
                    }
                    za2 = ta2 + -2 | 0;
                  }
                  c[p2 >> 2] = za2;
                  if ((sa2 | 0) > (za2 | 0)) {
                    Ca2 = za2;
                    break a;
                  } else ta2 = za2;
                }
                if ((ya2 | 0) == 26) {
                  ya2 = 0;
                  c[U2 >> 2] = ta2;
                  Rb(2058, O2, g2, x2, oa2, u2, U2, V2, B2, T2) | 0;
                  Da2 = (c[V2 >> 2] | 0) + 1 | 0;
                } else if ((ya2 | 0) == 31) {
                  ya2 = 0;
                  c[U2 >> 2] = ta2;
                  Rb(2058, O2, g2, x2, oa2, u2, U2, V2, B2, T2) | 0;
                  Da2 = (c[V2 >> 2] | 0) + 2 | 0;
                }
                c[V2 >> 2] = Da2;
                Aa2 = c[p2 >> 2] | 0;
                if ((Da2 | 0) > (Aa2 | 0)) {
                  Ca2 = Aa2;
                  break;
                } else {
                  ra2 = Aa2;
                  sa2 = Da2;
                }
              }
            } else Ca2 = aa2;
          while (0);
          ka2 = (Ca2 | 0) == 0 ? 0 : la2;
          aa2 = c[O2 >> 2] | 0;
          if ((Ca2 | 0) < (aa2 | 0)) {
            Da2 = Ca2 + 1 | 0;
            ya2 = Ca2;
            while (1) {
              Ca2 = Da2 + -1 | 0;
              za2 = c[W2 >> 2] | 0;
              s2 = za2 + 1 | 0;
              ba2 = za2 + 2 | 0;
              if ((s2 | 0) != (ya2 | 0) ? !(+h[da2 + ((S(s2, t2) | 0) + ba2 << 3) >> 3] == 0) : 0) Ea2 = za2 + 3 | 0;
              else Ea2 = ba2;
              if ((Ea2 | 0) >= (Da2 | 0)) break;
              ba2 = da2 + ((S(Ca2, t2) | 0) + Ca2 << 3) | 0;
              za2 = Ea2;
              ua2 = s2;
              s2 = 1;
              while (1) {
                pa2 = ua2 + 1 | 0;
                qa2 = S(ua2, t2) | 0;
                la2 = +h[da2 + (qa2 + ua2 << 3) >> 3];
                ja2 = la2 >= 0 ? la2 : -la2;
                if ((za2 | 0) == (pa2 | 0)) Fa2 = ja2;
                else {
                  la2 = +h[da2 + (pa2 + qa2 << 3) >> 3];
                  na2 = +G(+(la2 >= 0 ? la2 : -la2));
                  la2 = +h[da2 + ((S(pa2, t2) | 0) + ua2 << 3) >> 3];
                  Fa2 = ja2 + na2 * +G(+(la2 >= 0 ? la2 : -la2));
                }
                if ((za2 | 0) != (Ca2 | 0)) {
                  pa2 = za2 + 1 | 0;
                  qa2 = S(za2, t2) | 0;
                  la2 = +h[da2 + (pa2 + qa2 << 3) >> 3];
                  na2 = +h[da2 + (qa2 + za2 << 3) >> 3];
                  ja2 = na2 >= 0 ? na2 : -na2;
                  if (la2 == 0) Ga2 = ja2;
                  else {
                    na2 = +G(+(la2 >= 0 ? la2 : -la2));
                    la2 = +h[da2 + ((S(pa2, t2) | 0) + za2 << 3) >> 3];
                    Ga2 = ja2 + na2 * +G(+(la2 >= 0 ? la2 : -la2));
                  }
                } else {
                  la2 = +h[ba2 >> 3];
                  Ga2 = la2 >= 0 ? la2 : -la2;
                }
                if (!(Fa2 >= Ga2)) {
                  c[U2 >> 2] = ua2;
                  c[V2 >> 2] = za2;
                  Rb(2058, O2, g2, x2, oa2, u2, U2, V2, B2, T2) | 0;
                  Ha2 = 0;
                  Ia2 = (c[T2 >> 2] | 0) == 0 ? c[V2 >> 2] | 0 : za2;
                } else {
                  Ha2 = s2;
                  Ia2 = za2;
                }
                pa2 = Ia2 + 1 | 0;
                do
                  if ((Ia2 | 0) == (Ca2 | 0)) Ja2 = pa2;
                  else {
                    if (+h[da2 + (pa2 + (S(Ia2, t2) | 0) << 3) >> 3] == 0) {
                      Ja2 = pa2;
                      break;
                    }
                    Ja2 = Ia2 + 2 | 0;
                  }
                while (0);
                if ((Ja2 | 0) < (Da2 | 0)) {
                  za2 = Ja2;
                  ua2 = Ia2;
                  s2 = Ha2;
                } else break;
              }
              if (Ha2 | 0) break;
              Da2 = Ia2;
              ya2 = c[p2 >> 2] | 0;
            }
            Ka2 = c[O2 >> 2] | 0;
          } else Ka2 = aa2;
          aa2 = c[W2 >> 2] | 0;
          if ((Ka2 | 0) > (aa2 | 0)) {
            ya2 = ha2 + -1 | 0;
            Ia2 = Ka2;
            Da2 = aa2;
            while (1) {
              do
                if ((Ia2 | 0) != (Da2 + 1 | 0)) {
                  aa2 = Ia2 + -1 | 0;
                  Ha2 = S(aa2, t2) | 0;
                  Ga2 = +h[da2 + (Ha2 + Ia2 << 3) >> 3];
                  if (Ga2 == 0) {
                    Ja2 = Ia2 + ha2 | 0;
                    h[n2 + (Ja2 << 3) >> 3] = +h[da2 + ((S(Ia2, t2) | 0) + Ia2 << 3) >> 3];
                    h[r2 + (Ja2 << 3) >> 3] = 0;
                    La2 = aa2;
                    Ma2 = Da2;
                    break;
                  } else {
                    h[I2 >> 3] = +h[da2 + (Ha2 + aa2 << 3) >> 3];
                    h[K2 >> 3] = Ga2;
                    Ha2 = S(Ia2, t2) | 0;
                    h[J2 >> 3] = +h[da2 + (aa2 + Ha2 << 3) >> 3];
                    h[L2 >> 3] = +h[da2 + (Ha2 + Ia2 << 3) >> 3];
                    Ha2 = ya2 + Ia2 | 0;
                    aa2 = Ia2 + ha2 | 0;
                    ob(I2, J2, K2, L2, n2 + (Ha2 << 3) | 0, r2 + (Ha2 << 3) | 0, n2 + (aa2 << 3) | 0, r2 + (aa2 << 3) | 0, M2, N2) | 0;
                    La2 = Ia2 + -2 | 0;
                    Ma2 = c[W2 >> 2] | 0;
                    break;
                  }
                } else {
                  aa2 = Ia2 + ha2 | 0;
                  h[n2 + (aa2 << 3) >> 3] = +h[da2 + ((S(Ia2, t2) | 0) + Ia2 << 3) >> 3];
                  h[r2 + (aa2 << 3) >> 3] = 0;
                  La2 = Ia2 + -1 | 0;
                  Ma2 = Da2;
                }
              while (0);
              if ((La2 | 0) > (Ma2 | 0)) {
                Ia2 = La2;
                Da2 = Ma2;
              } else break;
            }
            Na2 = c[O2 >> 2] | 0;
          } else Na2 = Ka2;
          Ka2 = c[p2 >> 2] | 0;
          b: do
            if (ka2 == 0 | (Ka2 | 0) < (Na2 | 0)) {
              Ma2 = ka2 != 0;
              if (Ma2 & (Ka2 | 0) > 1) {
                Ta(p2, oa2, u2, B2, 324) | 0;
                h[R2 >> 3] = +h[B2 >> 3];
                yb(p2, R2, B2 + 8 | 0, 324, Q2) | 0;
                h[B2 >> 3] = 1;
                Da2 = (c[O2 >> 2] | 0) + -2 | 0;
                c[E2 >> 2] = Da2;
                c[F2 >> 2] = Da2;
                Db(2078, E2, F2, 6136, 6136, da2 + (t2 + 3 << 3) | 0, x2) | 0;
                wb(2078, p2, O2, B2, 324, Q2, g2, x2, w2 + ((c[O2 >> 2] | 0) + 1 << 3) | 0) | 0;
                wb(2067, p2, p2, B2, 324, Q2, g2, x2, w2 + ((c[O2 >> 2] | 0) + 1 << 3) | 0) | 0;
                wb(2067, O2, p2, B2, 324, Q2, oa2, u2, w2 + ((c[O2 >> 2] | 0) + 1 << 3) | 0) | 0;
                Da2 = c[O2 >> 2] | 0;
                c[E2 >> 2] = (c[C2 >> 2] | 0) - Da2;
                Za(O2, 324, p2, g2, x2, B2, w2 + (Da2 + 1 << 3) | 0, E2, T2) | 0;
              }
              if ((ha2 | 0) > 0) {
                Da2 = _2 + (ga2 + (S(ha2, Z2) | 0) << 3) | 0;
                h[Da2 >> 3] = ka2 * +h[oa2 >> 3];
              }
              eb(2076, O2, O2, g2, x2, X2, k2) | 0;
              c[E2 >> 2] = (c[O2 >> 2] | 0) + -1;
              c[F2 >> 2] = (c[x2 >> 2] | 0) + 1;
              c[H2 >> 2] = (c[k2 >> 2] | 0) + 1;
              Ta(E2, z2, F2, ca2, H2) | 0;
              if (Ma2 & (c[p2 >> 2] | 0) > 1) {
                Ma2 = c[O2 >> 2] | 0;
                c[E2 >> 2] = (c[C2 >> 2] | 0) - Ma2;
                Lb(2067, 2080, O2, p2, 324, p2, g2, x2, B2, oa2, u2, w2 + (Ma2 + 1 << 3) | 0, E2, T2) | 0;
              }
              Ma2 = c[a2 >> 2] | 0;
              if (!Ma2) Oa2 = c[e2 >> 2] | 0;
              else Oa2 = 1;
              c[E2 >> 2] = ha2;
              Da2 = c[y2 >> 2] | 0;
              c[F2 >> 2] = Da2;
              if ((Da2 | 0) < 0 ? (Oa2 | 0) >= (ha2 | 0) : (Oa2 | 0) <= (ha2 | 0)) {
                La2 = fa2 + (ea2 << 3) | 0;
                Ia2 = Oa2;
                r2 = Da2;
                while (1) {
                  c[H2 >> 2] = r2;
                  Da2 = ga2 - Ia2 | 0;
                  c[P2 >> 2] = (r2 | 0) <= (Da2 | 0) ? r2 : Da2;
                  Da2 = _2 + (Ia2 + Y2 << 3) | 0;
                  _a(2080, 2080, P2, O2, O2, 56, Da2, k2, oa2, u2, 6136, La2, A2) | 0;
                  eb(2024, P2, O2, La2, A2, Da2, k2) | 0;
                  Da2 = c[F2 >> 2] | 0;
                  n2 = Da2 + Ia2 | 0;
                  N2 = c[E2 >> 2] | 0;
                  if (!((Da2 | 0) < 0 ? (n2 | 0) >= (N2 | 0) : (n2 | 0) <= (N2 | 0))) break;
                  Ia2 = n2;
                  r2 = c[y2 >> 2] | 0;
                }
                Pa2 = c[a2 >> 2] | 0;
              } else Pa2 = Ma2;
              c: do
                if (Pa2 | 0) {
                  r2 = c[d2 >> 2] | 0;
                  c[F2 >> 2] = r2;
                  Ia2 = c[v2 >> 2] | 0;
                  c[E2 >> 2] = Ia2;
                  La2 = c[f2 >> 2] | 0;
                  n2 = La2 + 1 | 0;
                  if ((Ia2 | 0) < 0 ? (n2 | 0) >= (r2 | 0) : (La2 | 0) < (r2 | 0)) {
                    Qa2 = n2;
                    Ra2 = Ia2;
                    Sa2 = r2;
                  } else break;
                  while (1) {
                    c[H2 >> 2] = Ra2;
                    r2 = Sa2 - Qa2 + 1 | 0;
                    c[P2 >> 2] = (Ra2 | 0) <= (r2 | 0) ? Ra2 : r2;
                    r2 = _2 + ((S(Qa2, Z2) | 0) + ga2 << 3) | 0;
                    _a(2084, 2080, O2, P2, O2, 56, oa2, u2, r2, k2, 6136, g2, x2) | 0;
                    eb(2024, O2, P2, g2, x2, r2, k2) | 0;
                    r2 = c[E2 >> 2] | 0;
                    Ia2 = r2 + Qa2 | 0;
                    n2 = c[F2 >> 2] | 0;
                    if (!((r2 | 0) < 0 ? (Ia2 | 0) >= (n2 | 0) : (Ia2 | 0) <= (n2 | 0))) break c;
                    Qa2 = Ia2;
                    Ra2 = c[v2 >> 2] | 0;
                    Sa2 = c[d2 >> 2] | 0;
                  }
                }
              while (0);
              if (c[b2 >> 2] | 0) {
                Ma2 = c[m2 >> 2] | 0;
                c[E2 >> 2] = Ma2;
                Ia2 = c[y2 >> 2] | 0;
                c[F2 >> 2] = Ia2;
                n2 = c[l2 >> 2] | 0;
                if (!((Ia2 | 0) < 0 ? (n2 | 0) >= (Ma2 | 0) : (n2 | 0) <= (Ma2 | 0))) break;
                r2 = S(ga2, j2) | 0;
                La2 = fa2 + (ea2 << 3) | 0;
                N2 = n2;
                n2 = Ia2;
                Ia2 = Ma2;
                while (1) {
                  c[H2 >> 2] = n2;
                  Ma2 = Ia2 - N2 + 1 | 0;
                  c[P2 >> 2] = (n2 | 0) <= (Ma2 | 0) ? n2 : Ma2;
                  Ma2 = $2 + (N2 + r2 << 3) | 0;
                  _a(2080, 2080, P2, O2, O2, 56, Ma2, o2, oa2, u2, 6136, La2, A2) | 0;
                  eb(2024, P2, O2, La2, A2, Ma2, o2) | 0;
                  Ma2 = c[F2 >> 2] | 0;
                  Da2 = Ma2 + N2 | 0;
                  M2 = c[E2 >> 2] | 0;
                  if (!((Ma2 | 0) < 0 ? (Da2 | 0) >= (M2 | 0) : (Da2 | 0) <= (M2 | 0))) break b;
                  N2 = Da2;
                  n2 = c[y2 >> 2] | 0;
                  Ia2 = c[m2 >> 2] | 0;
                }
              }
            }
          while (0);
          c[q2 >> 2] = (c[O2 >> 2] | 0) - (c[p2 >> 2] | 0);
          c[p2 >> 2] = (c[p2 >> 2] | 0) - (c[W2 >> 2] | 0);
          h[B2 >> 3] = ia2;
          i2 = D2;
          return 0;
        }
        function tb(a2, b2, d2, e2, f2, g2, j2, k2, l2, m2, n2, o2, p2, q2, r2, s2, t2, u2, v2, w2, x2, y2, z2, A2, B2, C2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          g2 = g2 | 0;
          j2 = j2 | 0;
          k2 = k2 | 0;
          l2 = l2 | 0;
          m2 = m2 | 0;
          n2 = n2 | 0;
          o2 = o2 | 0;
          p2 = p2 | 0;
          q2 = q2 | 0;
          r2 = r2 | 0;
          s2 = s2 | 0;
          t2 = t2 | 0;
          u2 = u2 | 0;
          v2 = v2 | 0;
          w2 = w2 | 0;
          x2 = x2 | 0;
          y2 = y2 | 0;
          z2 = z2 | 0;
          A2 = A2 | 0;
          B2 = B2 | 0;
          C2 = C2 | 0;
          var D2 = 0, E2 = 0, F2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0, O2 = 0, P2 = 0, Q2 = 0, R2 = 0, T2 = 0, U2 = 0, V2 = 0, W2 = 0, X2 = 0, Y2 = 0, Z2 = 0, _2 = 0, $2 = 0, aa2 = 0, ba2 = 0, ca2 = 0, da2 = 0, ea2 = 0, fa2 = 0, ga2 = 0, ha2 = 0, ia2 = 0, ja2 = 0, ka2 = 0, la2 = 0, ma2 = 0, na2 = 0, oa2 = 0, pa2 = 0, qa2 = 0, ra2 = 0, sa2 = 0, ta2 = 0, ua2 = 0, va2 = 0, wa2 = 0, xa2 = 0, ya2 = 0, za2 = 0, Aa2 = 0, Ba2 = 0, Ca2 = 0, Da2 = 0, Ea2 = 0, Fa2 = 0, Ga2 = 0, Ha2 = 0, Ia2 = 0, Ja2 = 0, Ka2 = 0, La2 = 0, Ma2 = 0, Na2 = 0, Oa2 = 0, Pa2 = 0, Qa2 = 0, Ra2 = 0, Sa2 = 0;
          D2 = i2;
          i2 = i2 + 128 | 0;
          E2 = D2 + 112 | 0;
          F2 = D2 + 108 | 0;
          H2 = D2 + 104 | 0;
          I2 = D2 + 72 | 0;
          J2 = D2 + 64 | 0;
          K2 = D2 + 56 | 0;
          L2 = D2 + 48 | 0;
          M2 = D2 + 40 | 0;
          N2 = D2 + 32 | 0;
          O2 = D2 + 100 | 0;
          P2 = D2 + 96 | 0;
          Q2 = D2 + 24 | 0;
          R2 = D2 + 16 | 0;
          T2 = D2 + 92 | 0;
          U2 = D2 + 88 | 0;
          V2 = D2 + 84 | 0;
          W2 = D2 + 80 | 0;
          X2 = D2 + 8 | 0;
          Y2 = D2;
          Z2 = c[k2 >> 2] | 0;
          _2 = j2 + (~Z2 << 3) | 0;
          j2 = c[o2 >> 2] | 0;
          $2 = n2 + (~j2 << 3) | 0;
          n2 = r2 + -8 | 0;
          aa2 = s2 + -8 | 0;
          ba2 = c[u2 >> 2] | 0;
          ca2 = ba2 + 1 | 0;
          da2 = t2 + (~ba2 << 3) | 0;
          t2 = c[x2 >> 2] | 0;
          ea2 = t2 + 1 | 0;
          fa2 = w2 + (~t2 << 3) | 0;
          w2 = c[A2 >> 2] | 0;
          ga2 = w2 + 1 | 0;
          ha2 = z2 + (~w2 << 3) | 0;
          w2 = B2 + -8 | 0;
          z2 = c[g2 >> 2] | 0;
          c[E2 >> 2] = z2;
          ia2 = (c[f2 >> 2] | 0) - (c[e2 >> 2] | 0) + 1 | 0;
          c[F2 >> 2] = ia2;
          ja2 = (z2 | 0) <= (ia2 | 0) ? z2 : ia2;
          c[O2 >> 2] = ja2;
          if ((ja2 | 0) < 3) ka2 = 1;
          else {
            c[E2 >> 2] = ja2 + -1;
            ja2 = fa2 + (ea2 << 3) | 0;
            Za(O2, 336, E2, ja2, x2, B2, B2, 340, T2) | 0;
            ia2 = ~~+h[B2 >> 3];
            c[E2 >> 2] = (c[O2 >> 2] | 0) + -1;
            z2 = da2 + (ca2 << 3) | 0;
            Lb(2067, 2080, O2, O2, 336, E2, ja2, x2, B2, z2, u2, B2, 340, T2) | 0;
            la2 = ~~+h[B2 >> 3];
            ub(344, 344, O2, 336, O2, ja2, x2, r2, s2, 336, O2, z2, u2, B2, 340, W2) | 0;
            z2 = ~~+h[B2 >> 3];
            s2 = (c[O2 >> 2] | 0) + ((ia2 | 0) >= (la2 | 0) ? ia2 : la2) | 0;
            c[E2 >> 2] = s2;
            ka2 = +(((s2 | 0) >= (z2 | 0) ? s2 : z2) | 0);
          }
          if ((c[C2 >> 2] | 0) == -1) {
            h[B2 >> 3] = ka2;
            i2 = D2;
            return 0;
          }
          c[p2 >> 2] = 0;
          c[q2 >> 2] = 0;
          h[B2 >> 3] = 1;
          if ((c[e2 >> 2] | 0) > (c[f2 >> 2] | 0)) {
            i2 = D2;
            return 0;
          }
          if ((c[g2 >> 2] | 0) < 1) {
            i2 = D2;
            return 0;
          }
          ma2 = +lb(1851);
          h[X2 >> 3] = ma2;
          h[Y2 >> 3] = 1 / ma2;
          db(X2, Y2) | 0;
          ma2 = +lb(1864);
          na2 = +h[X2 >> 3] * (+(c[d2 >> 2] | 0) / ma2);
          X2 = c[g2 >> 2] | 0;
          c[E2 >> 2] = X2;
          g2 = c[f2 >> 2] | 0;
          Y2 = c[e2 >> 2] | 0;
          z2 = g2 - Y2 + 1 | 0;
          c[F2 >> 2] = z2;
          s2 = (X2 | 0) <= (z2 | 0) ? X2 : z2;
          c[O2 >> 2] = s2;
          z2 = g2 - s2 | 0;
          s2 = z2 + 1 | 0;
          if ((s2 | 0) == (Y2 | 0)) oa2 = 0;
          else oa2 = +h[_2 + (s2 + (S(z2, Z2) | 0) << 3) >> 3];
          Y2 = S(s2, Z2) | 0;
          X2 = _2 + (Y2 + s2 << 3) | 0;
          if ((g2 | 0) == (s2 | 0)) {
            h[n2 + (g2 << 3) >> 3] = +h[X2 >> 3];
            h[aa2 + (g2 << 3) >> 3] = 0;
            c[p2 >> 2] = 1;
            c[q2 >> 2] = 0;
            pa2 = +h[X2 >> 3];
            qa2 = ma2 * (pa2 >= 0 ? pa2 : -pa2);
            if ((oa2 >= 0 ? oa2 : -oa2) <= (na2 >= qa2 ? na2 : qa2) ? (c[p2 >> 2] = 0, c[q2 >> 2] = 1, (z2 | 0) >= (c[e2 >> 2] | 0)) : 0) h[_2 + (g2 + (S(z2, Z2) | 0) << 3) >> 3] = 0;
            h[B2 >> 3] = 1;
            i2 = D2;
            return 0;
          }
          g2 = fa2 + (ea2 << 3) | 0;
          eb(2076, O2, O2, X2, k2, g2, x2) | 0;
          c[E2 >> 2] = (c[O2 >> 2] | 0) + -1;
          c[F2 >> 2] = (c[k2 >> 2] | 0) + 1;
          c[H2 >> 2] = (c[x2 >> 2] | 0) + 1;
          ea2 = _2 + (z2 + 2 + Y2 << 3) | 0;
          la2 = fa2 + (t2 + 2 << 3) | 0;
          Ta(E2, ea2, F2, la2, H2) | 0;
          ia2 = da2 + (ca2 << 3) | 0;
          Db(2024, O2, O2, 6144, 64, ia2, u2) | 0;
          ca2 = lc(348, 1834, 1841, O2, 336, O2, C2) | 0;
          r2 = n2 + (s2 << 3) | 0;
          ja2 = aa2 + (s2 << 3) | 0;
          if ((c[O2 >> 2] | 0) > (ca2 | 0)) ub(344, 344, O2, 336, O2, g2, x2, r2, ja2, 336, O2, ia2, u2, B2, C2, W2) | 0;
          else hb(344, 344, O2, 336, O2, g2, x2, r2, ja2, 336, O2, ia2, u2, W2) | 0;
          ja2 = c[O2 >> 2] | 0;
          r2 = ja2 + -3 | 0;
          c[E2 >> 2] = r2;
          if ((r2 | 0) >= 1) {
            ca2 = 1;
            while (1) {
              ra2 = S(ca2, t2) | 0;
              h[fa2 + (ca2 + 2 + ra2 << 3) >> 3] = 0;
              h[fa2 + (ca2 + 3 + ra2 << 3) >> 3] = 0;
              if ((ca2 | 0) < (r2 | 0)) ca2 = ca2 + 1 | 0;
              else break;
            }
          }
          if ((ja2 | 0) > 2) h[fa2 + ((S(ja2 + -2 | 0, t2) | 0) + ja2 << 3) >> 3] = 0;
          c[p2 >> 2] = ja2;
          ca2 = c[W2 >> 2] | 0;
          r2 = ca2 + 1 | 0;
          c[V2 >> 2] = r2;
          a: do
            if ((ca2 | 0) < (ja2 | 0)) {
              qa2 = oa2 >= 0 ? oa2 : -oa2;
              ra2 = ja2;
              sa2 = r2;
              while (1) {
                ta2 = ra2;
                while (1) {
                  if ((ta2 | 0) == 1) ua2 = 0;
                  else ua2 = +h[fa2 + ((S(ta2 + -1 | 0, t2) | 0) + ta2 << 3) >> 3] != 0 & 1;
                  va2 = S(ta2, t2) | 0;
                  pa2 = +h[fa2 + (va2 + ta2 << 3) >> 3];
                  wa2 = pa2 >= 0 ? pa2 : -pa2;
                  if (!ua2) {
                    pa2 = ma2 * (wa2 == 0 ? qa2 : wa2);
                    xa2 = oa2 * +h[da2 + ((S(ta2, ba2) | 0) + 1 << 3) >> 3];
                    if (!((xa2 >= 0 ? xa2 : -xa2) <= (na2 >= pa2 ? na2 : pa2))) {
                      ya2 = 29;
                      break;
                    }
                    za2 = ta2 + -1 | 0;
                  } else {
                    Aa2 = ta2 + -1 | 0;
                    pa2 = +h[fa2 + ((S(Aa2, t2) | 0) + ta2 << 3) >> 3];
                    xa2 = +G(+(pa2 >= 0 ? pa2 : -pa2));
                    pa2 = +h[fa2 + (Aa2 + va2 << 3) >> 3];
                    Ba2 = wa2 + xa2 * +G(+(pa2 >= 0 ? pa2 : -pa2));
                    pa2 = oa2 * +h[da2 + ((S(ta2, ba2) | 0) + 1 << 3) >> 3];
                    xa2 = pa2 >= 0 ? pa2 : -pa2;
                    pa2 = oa2 * +h[da2 + ((S(Aa2, ba2) | 0) + 1 << 3) >> 3];
                    wa2 = pa2 >= 0 ? pa2 : -pa2;
                    pa2 = ma2 * (Ba2 == 0 ? qa2 : Ba2);
                    if (!((xa2 >= wa2 ? xa2 : wa2) <= (na2 >= pa2 ? na2 : pa2))) {
                      ya2 = 34;
                      break;
                    }
                    za2 = ta2 + -2 | 0;
                  }
                  c[p2 >> 2] = za2;
                  if ((sa2 | 0) > (za2 | 0)) {
                    Ca2 = za2;
                    break a;
                  } else ta2 = za2;
                }
                if ((ya2 | 0) == 29) {
                  ya2 = 0;
                  c[U2 >> 2] = ta2;
                  Rb(2058, O2, g2, x2, ia2, u2, U2, V2, B2, T2) | 0;
                  Da2 = (c[V2 >> 2] | 0) + 1 | 0;
                } else if ((ya2 | 0) == 34) {
                  ya2 = 0;
                  c[U2 >> 2] = ta2;
                  Rb(2058, O2, g2, x2, ia2, u2, U2, V2, B2, T2) | 0;
                  Da2 = (c[V2 >> 2] | 0) + 2 | 0;
                }
                c[V2 >> 2] = Da2;
                Aa2 = c[p2 >> 2] | 0;
                if ((Da2 | 0) > (Aa2 | 0)) {
                  Ca2 = Aa2;
                  break;
                } else {
                  ra2 = Aa2;
                  sa2 = Da2;
                }
              }
            } else Ca2 = ja2;
          while (0);
          na2 = (Ca2 | 0) == 0 ? 0 : oa2;
          ja2 = c[O2 >> 2] | 0;
          if ((Ca2 | 0) < (ja2 | 0)) {
            Da2 = Ca2 + 1 | 0;
            ya2 = Ca2;
            while (1) {
              Ca2 = Da2 + -1 | 0;
              za2 = c[W2 >> 2] | 0;
              ba2 = za2 + 1 | 0;
              da2 = za2 + 2 | 0;
              if ((ba2 | 0) != (ya2 | 0) ? !(+h[fa2 + ((S(ba2, t2) | 0) + da2 << 3) >> 3] == 0) : 0) Ea2 = za2 + 3 | 0;
              else Ea2 = da2;
              if ((Ea2 | 0) >= (Da2 | 0)) break;
              da2 = fa2 + ((S(Ca2, t2) | 0) + Ca2 << 3) | 0;
              za2 = Ea2;
              ua2 = ba2;
              ba2 = 1;
              while (1) {
                r2 = ua2 + 1 | 0;
                ca2 = S(ua2, t2) | 0;
                oa2 = +h[fa2 + (ca2 + ua2 << 3) >> 3];
                ma2 = oa2 >= 0 ? oa2 : -oa2;
                if ((za2 | 0) == (r2 | 0)) Fa2 = ma2;
                else {
                  oa2 = +h[fa2 + (r2 + ca2 << 3) >> 3];
                  qa2 = +G(+(oa2 >= 0 ? oa2 : -oa2));
                  oa2 = +h[fa2 + ((S(r2, t2) | 0) + ua2 << 3) >> 3];
                  Fa2 = ma2 + qa2 * +G(+(oa2 >= 0 ? oa2 : -oa2));
                }
                if ((za2 | 0) != (Ca2 | 0)) {
                  r2 = za2 + 1 | 0;
                  ca2 = S(za2, t2) | 0;
                  oa2 = +h[fa2 + (r2 + ca2 << 3) >> 3];
                  qa2 = +h[fa2 + (ca2 + za2 << 3) >> 3];
                  ma2 = qa2 >= 0 ? qa2 : -qa2;
                  if (oa2 == 0) Ga2 = ma2;
                  else {
                    qa2 = +G(+(oa2 >= 0 ? oa2 : -oa2));
                    oa2 = +h[fa2 + ((S(r2, t2) | 0) + za2 << 3) >> 3];
                    Ga2 = ma2 + qa2 * +G(+(oa2 >= 0 ? oa2 : -oa2));
                  }
                } else {
                  oa2 = +h[da2 >> 3];
                  Ga2 = oa2 >= 0 ? oa2 : -oa2;
                }
                if (!(Fa2 >= Ga2)) {
                  c[U2 >> 2] = ua2;
                  c[V2 >> 2] = za2;
                  Rb(2058, O2, g2, x2, ia2, u2, U2, V2, B2, T2) | 0;
                  Ha2 = 0;
                  Ia2 = (c[T2 >> 2] | 0) == 0 ? c[V2 >> 2] | 0 : za2;
                } else {
                  Ha2 = ba2;
                  Ia2 = za2;
                }
                r2 = Ia2 + 1 | 0;
                do
                  if ((Ia2 | 0) == (Ca2 | 0)) Ja2 = r2;
                  else {
                    if (+h[fa2 + (r2 + (S(Ia2, t2) | 0) << 3) >> 3] == 0) {
                      Ja2 = r2;
                      break;
                    }
                    Ja2 = Ia2 + 2 | 0;
                  }
                while (0);
                if ((Ja2 | 0) < (Da2 | 0)) {
                  za2 = Ja2;
                  ua2 = Ia2;
                  ba2 = Ha2;
                } else break;
              }
              if (Ha2 | 0) break;
              Da2 = Ia2;
              ya2 = c[p2 >> 2] | 0;
            }
            Ka2 = c[O2 >> 2] | 0;
          } else Ka2 = ja2;
          ja2 = c[W2 >> 2] | 0;
          if ((Ka2 | 0) > (ja2 | 0)) {
            ya2 = z2 + -1 | 0;
            Ia2 = Ka2;
            Da2 = ja2;
            while (1) {
              do
                if ((Ia2 | 0) != (Da2 + 1 | 0)) {
                  ja2 = Ia2 + -1 | 0;
                  Ha2 = S(ja2, t2) | 0;
                  Ga2 = +h[fa2 + (Ha2 + Ia2 << 3) >> 3];
                  if (Ga2 == 0) {
                    Ja2 = Ia2 + z2 | 0;
                    h[n2 + (Ja2 << 3) >> 3] = +h[fa2 + ((S(Ia2, t2) | 0) + Ia2 << 3) >> 3];
                    h[aa2 + (Ja2 << 3) >> 3] = 0;
                    La2 = ja2;
                    Ma2 = Da2;
                    break;
                  } else {
                    h[I2 >> 3] = +h[fa2 + (Ha2 + ja2 << 3) >> 3];
                    h[K2 >> 3] = Ga2;
                    Ha2 = S(Ia2, t2) | 0;
                    h[J2 >> 3] = +h[fa2 + (ja2 + Ha2 << 3) >> 3];
                    h[L2 >> 3] = +h[fa2 + (Ha2 + Ia2 << 3) >> 3];
                    Ha2 = ya2 + Ia2 | 0;
                    ja2 = Ia2 + z2 | 0;
                    ob(I2, J2, K2, L2, n2 + (Ha2 << 3) | 0, aa2 + (Ha2 << 3) | 0, n2 + (ja2 << 3) | 0, aa2 + (ja2 << 3) | 0, M2, N2) | 0;
                    La2 = Ia2 + -2 | 0;
                    Ma2 = c[W2 >> 2] | 0;
                    break;
                  }
                } else {
                  ja2 = Ia2 + z2 | 0;
                  h[n2 + (ja2 << 3) >> 3] = +h[fa2 + ((S(Ia2, t2) | 0) + Ia2 << 3) >> 3];
                  h[aa2 + (ja2 << 3) >> 3] = 0;
                  La2 = Ia2 + -1 | 0;
                  Ma2 = Da2;
                }
              while (0);
              if ((La2 | 0) > (Ma2 | 0)) {
                Ia2 = La2;
                Da2 = Ma2;
              } else break;
            }
            Na2 = c[O2 >> 2] | 0;
          } else Na2 = Ka2;
          Ka2 = c[p2 >> 2] | 0;
          b: do
            if (na2 == 0 | (Ka2 | 0) < (Na2 | 0)) {
              Ma2 = na2 != 0;
              if (Ma2 & (Ka2 | 0) > 1) {
                Ta(p2, ia2, u2, B2, 336) | 0;
                h[R2 >> 3] = +h[B2 >> 3];
                yb(p2, R2, B2 + 8 | 0, 336, Q2) | 0;
                h[B2 >> 3] = 1;
                Da2 = (c[O2 >> 2] | 0) + -2 | 0;
                c[E2 >> 2] = Da2;
                c[F2 >> 2] = Da2;
                Db(2078, E2, F2, 6144, 6144, fa2 + (t2 + 3 << 3) | 0, x2) | 0;
                wb(2078, p2, O2, B2, 336, Q2, g2, x2, w2 + ((c[O2 >> 2] | 0) + 1 << 3) | 0) | 0;
                wb(2067, p2, p2, B2, 336, Q2, g2, x2, w2 + ((c[O2 >> 2] | 0) + 1 << 3) | 0) | 0;
                wb(2067, O2, p2, B2, 336, Q2, ia2, u2, w2 + ((c[O2 >> 2] | 0) + 1 << 3) | 0) | 0;
                Da2 = c[O2 >> 2] | 0;
                c[E2 >> 2] = (c[C2 >> 2] | 0) - Da2;
                Za(O2, 336, p2, g2, x2, B2, w2 + (Da2 + 1 << 3) | 0, E2, T2) | 0;
              }
              if ((z2 | 0) > 0) {
                Da2 = _2 + (s2 + (S(z2, Z2) | 0) << 3) | 0;
                h[Da2 >> 3] = na2 * +h[ia2 >> 3];
              }
              eb(2076, O2, O2, g2, x2, X2, k2) | 0;
              c[E2 >> 2] = (c[O2 >> 2] | 0) + -1;
              c[F2 >> 2] = (c[x2 >> 2] | 0) + 1;
              c[H2 >> 2] = (c[k2 >> 2] | 0) + 1;
              Ta(E2, la2, F2, ea2, H2) | 0;
              if (Ma2 & (c[p2 >> 2] | 0) > 1) {
                Ma2 = c[O2 >> 2] | 0;
                c[E2 >> 2] = (c[C2 >> 2] | 0) - Ma2;
                Lb(2067, 2080, O2, p2, 336, p2, g2, x2, B2, ia2, u2, w2 + (Ma2 + 1 << 3) | 0, E2, T2) | 0;
              }
              Ma2 = c[a2 >> 2] | 0;
              if (!Ma2) Oa2 = c[e2 >> 2] | 0;
              else Oa2 = 1;
              c[E2 >> 2] = z2;
              Da2 = c[y2 >> 2] | 0;
              c[F2 >> 2] = Da2;
              if ((Da2 | 0) < 0 ? (Oa2 | 0) >= (z2 | 0) : (Oa2 | 0) <= (z2 | 0)) {
                La2 = ha2 + (ga2 << 3) | 0;
                Ia2 = Oa2;
                aa2 = Da2;
                while (1) {
                  c[H2 >> 2] = aa2;
                  Da2 = s2 - Ia2 | 0;
                  c[P2 >> 2] = (aa2 | 0) <= (Da2 | 0) ? aa2 : Da2;
                  Da2 = _2 + (Ia2 + Y2 << 3) | 0;
                  _a(2080, 2080, P2, O2, O2, 64, Da2, k2, ia2, u2, 6144, La2, A2) | 0;
                  eb(2024, P2, O2, La2, A2, Da2, k2) | 0;
                  Da2 = c[F2 >> 2] | 0;
                  n2 = Da2 + Ia2 | 0;
                  N2 = c[E2 >> 2] | 0;
                  if (!((Da2 | 0) < 0 ? (n2 | 0) >= (N2 | 0) : (n2 | 0) <= (N2 | 0))) break;
                  Ia2 = n2;
                  aa2 = c[y2 >> 2] | 0;
                }
                Pa2 = c[a2 >> 2] | 0;
              } else Pa2 = Ma2;
              c: do
                if (Pa2 | 0) {
                  aa2 = c[d2 >> 2] | 0;
                  c[F2 >> 2] = aa2;
                  Ia2 = c[v2 >> 2] | 0;
                  c[E2 >> 2] = Ia2;
                  La2 = c[f2 >> 2] | 0;
                  n2 = La2 + 1 | 0;
                  if ((Ia2 | 0) < 0 ? (n2 | 0) >= (aa2 | 0) : (La2 | 0) < (aa2 | 0)) {
                    Qa2 = n2;
                    Ra2 = Ia2;
                    Sa2 = aa2;
                  } else break;
                  while (1) {
                    c[H2 >> 2] = Ra2;
                    aa2 = Sa2 - Qa2 + 1 | 0;
                    c[P2 >> 2] = (Ra2 | 0) <= (aa2 | 0) ? Ra2 : aa2;
                    aa2 = _2 + ((S(Qa2, Z2) | 0) + s2 << 3) | 0;
                    _a(2084, 2080, O2, P2, O2, 64, ia2, u2, aa2, k2, 6144, g2, x2) | 0;
                    eb(2024, O2, P2, g2, x2, aa2, k2) | 0;
                    aa2 = c[E2 >> 2] | 0;
                    Ia2 = aa2 + Qa2 | 0;
                    n2 = c[F2 >> 2] | 0;
                    if (!((aa2 | 0) < 0 ? (Ia2 | 0) >= (n2 | 0) : (Ia2 | 0) <= (n2 | 0))) break c;
                    Qa2 = Ia2;
                    Ra2 = c[v2 >> 2] | 0;
                    Sa2 = c[d2 >> 2] | 0;
                  }
                }
              while (0);
              if (!(c[b2 >> 2] | 0)) break;
              Ma2 = c[m2 >> 2] | 0;
              c[E2 >> 2] = Ma2;
              Ia2 = c[y2 >> 2] | 0;
              c[F2 >> 2] = Ia2;
              n2 = c[l2 >> 2] | 0;
              if (!((Ia2 | 0) < 0 ? (n2 | 0) >= (Ma2 | 0) : (n2 | 0) <= (Ma2 | 0))) break;
              aa2 = S(s2, j2) | 0;
              La2 = ha2 + (ga2 << 3) | 0;
              N2 = n2;
              n2 = Ia2;
              Ia2 = Ma2;
              while (1) {
                c[H2 >> 2] = n2;
                Ma2 = Ia2 - N2 + 1 | 0;
                c[P2 >> 2] = (n2 | 0) <= (Ma2 | 0) ? n2 : Ma2;
                Ma2 = $2 + (N2 + aa2 << 3) | 0;
                _a(2080, 2080, P2, O2, O2, 64, Ma2, o2, ia2, u2, 6144, La2, A2) | 0;
                eb(2024, P2, O2, La2, A2, Ma2, o2) | 0;
                Ma2 = c[F2 >> 2] | 0;
                Da2 = Ma2 + N2 | 0;
                M2 = c[E2 >> 2] | 0;
                if (!((Ma2 | 0) < 0 ? (Da2 | 0) >= (M2 | 0) : (Da2 | 0) <= (M2 | 0))) break b;
                N2 = Da2;
                n2 = c[y2 >> 2] | 0;
                Ia2 = c[m2 >> 2] | 0;
              }
            }
          while (0);
          c[q2 >> 2] = (c[O2 >> 2] | 0) - (c[p2 >> 2] | 0);
          c[p2 >> 2] = (c[p2 >> 2] | 0) - (c[W2 >> 2] | 0);
          h[B2 >> 3] = ka2;
          i2 = D2;
          return 0;
        }
        function ub(b2, d2, e2, f2, g2, j2, k2, l2, m2, n2, o2, p2, q2, r2, s2, t2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          g2 = g2 | 0;
          j2 = j2 | 0;
          k2 = k2 | 0;
          l2 = l2 | 0;
          m2 = m2 | 0;
          n2 = n2 | 0;
          o2 = o2 | 0;
          p2 = p2 | 0;
          q2 = q2 | 0;
          r2 = r2 | 0;
          s2 = s2 | 0;
          t2 = t2 | 0;
          var u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0, O2 = 0, P2 = 0, Q2 = 0, R2 = 0, T2 = 0, U2 = 0, V2 = 0, W2 = 0, X2 = 0, Y2 = 0, Z2 = 0, _2 = 0, $2 = 0, aa2 = 0, ba2 = 0, ca2 = 0, da2 = 0, ea2 = 0, fa2 = 0, ga2 = 0, ha2 = 0, ia2 = 0, ja2 = 0, ka2 = 0, la2 = 0, ma2 = 0, na2 = 0, oa2 = 0, pa2 = 0, qa2 = 0, ra2 = 0, sa2 = 0, ta2 = 0, ua2 = 0, va2 = 0, wa2 = 0, xa2 = 0, ya2 = 0, za2 = 0, Aa2 = 0, Ba2 = 0, Ca2 = 0, Da2 = 0, Ea2 = 0, Fa2 = 0, Ga2 = 0, Ha2 = 0, Ia2 = 0, Ja2 = 0, Ka2 = 0, La2 = 0, Ma2 = 0, Na2 = 0, Oa2 = 0, Pa2 = 0, Qa2 = 0, Ra2 = 0, Sa2 = 0, Ta2 = 0, Ua2 = 0, Va2 = 0, Wa2 = 0, Xa2 = 0, Ya2 = 0;
          u2 = i2;
          i2 = i2 + 112 | 0;
          v2 = u2 + 96 | 0;
          w2 = u2 + 48 | 0;
          x2 = u2 + 40 | 0;
          y2 = u2 + 32 | 0;
          z2 = u2 + 24 | 0;
          A2 = u2 + 92 | 0;
          B2 = u2 + 16 | 0;
          C2 = u2 + 8 | 0;
          D2 = u2 + 88 | 0;
          E2 = u2 + 84 | 0;
          F2 = u2 + 80 | 0;
          G2 = u2 + 76 | 0;
          H2 = u2 + 72 | 0;
          I2 = u2 + 68 | 0;
          J2 = u2 + 64 | 0;
          K2 = u2 + 60 | 0;
          L2 = u2;
          M2 = u2 + 56 | 0;
          N2 = u2 + 100 | 0;
          O2 = c[k2 >> 2] | 0;
          P2 = O2 + 1 | 0;
          Q2 = j2 + (~O2 << 3) | 0;
          j2 = l2 + -8 | 0;
          R2 = m2 + -8 | 0;
          T2 = c[q2 >> 2] | 0;
          U2 = T2 + 1 | 0;
          V2 = p2 + (~T2 << 3) | 0;
          c[t2 >> 2] = 0;
          T2 = c[e2 >> 2] | 0;
          if (!T2) {
            h[r2 >> 3] = 1;
            i2 = u2;
            return 0;
          }
          a: do
            if ((T2 | 0) < 12)
              if ((c[s2 >> 2] | 0) == -1) W2 = 1;
              else {
                hb(b2, d2, e2, f2, g2, Q2 + (P2 << 3) | 0, k2, l2, m2, n2, o2, V2 + (U2 << 3) | 0, q2, t2) | 0;
                W2 = 1;
              }
            else {
              c[t2 >> 2] = 0;
              a[N2 >> 0] = (c[b2 >> 2] | 0) == 0 ? 69 : 83;
              a[N2 + 1 >> 0] = (c[d2 >> 2] | 0) == 0 ? 78 : 86;
              p2 = lc(352, 1844, N2, e2, f2, g2, s2) | 0;
              X2 = (p2 | 0) > 2 ? p2 : 2;
              p2 = (c[g2 >> 2] | 0) - (c[f2 >> 2] | 0) + 1 | 0;
              Y2 = ((c[e2 >> 2] | 0) + -1 | 0) / 3 | 0;
              Z2 = (p2 | 0) <= (Y2 | 0) ? p2 : Y2;
              c[v2 >> 2] = Z2;
              Y2 = (Z2 | 0) <= (X2 | 0) ? Z2 : X2;
              X2 = lc(356, 1844, N2, e2, f2, g2, s2) | 0;
              Z2 = ((c[e2 >> 2] | 0) + 6 | 0) / 9 | 0;
              p2 = (X2 | 0) <= (Z2 | 0) ? X2 : Z2;
              Z2 = (c[g2 >> 2] | 0) - (c[f2 >> 2] | 0) | 0;
              X2 = (p2 | 0) <= (Z2 | 0) ? p2 : Z2;
              Z2 = X2 - ((X2 | 0) % 2 | 0) | 0;
              X2 = (Z2 | 0) > 2 ? Z2 : 2;
              c[v2 >> 2] = Y2 + 1;
              Z2 = Q2 + (P2 << 3) | 0;
              p2 = V2 + (U2 << 3) | 0;
              sb(b2, d2, e2, f2, g2, v2, Z2, k2, n2, o2, p2, q2, D2, A2, l2, m2, Z2, k2, e2, Z2, k2, e2, Z2, k2, r2, 360) | 0;
              _2 = (X2 * 3 | 0) / 2 | 0;
              c[v2 >> 2] = _2;
              $2 = ~~+h[r2 >> 3];
              aa2 = (_2 | 0) >= ($2 | 0) ? _2 : $2;
              if ((c[s2 >> 2] | 0) == -1) {
                h[r2 >> 3] = +(aa2 | 0);
                i2 = u2;
                return 0;
              }
              $2 = lc(364, 1844, N2, e2, f2, g2, s2) | 0;
              _2 = ($2 | 0) > 11 ? $2 : 11;
              $2 = lc(368, 1844, N2, e2, f2, g2, s2) | 0;
              ba2 = ($2 | 0) > 0 ? $2 : 0;
              $2 = lc(372, 1844, N2, e2, f2, g2, s2) | 0;
              ca2 = ($2 | 0) > 0 ? $2 : 0;
              c[M2 >> 2] = (ca2 | 0) < 2 ? ca2 : 2;
              ca2 = c[e2 >> 2] | 0;
              $2 = (ca2 + -1 | 0) / 3 | 0;
              da2 = c[s2 >> 2] | 0;
              ea2 = (da2 | 0) / 2 | 0;
              fa2 = ($2 | 0) <= (ea2 | 0) ? $2 : ea2;
              c[F2 >> 2] = fa2;
              ea2 = (ca2 + 6 | 0) / 9 | 0;
              ca2 = (da2 << 1 | 0) / 3 | 0;
              da2 = (ea2 | 0) <= (ca2 | 0) ? ea2 : ca2;
              ca2 = da2 - ((da2 | 0) % 2 | 0) | 0;
              da2 = c[g2 >> 2] | 0;
              ea2 = c[f2 >> 2] | 0;
              $2 = da2 - ea2 + 1 | 0;
              ga2 = ($2 | 0) > 10 ? $2 : 10;
              c[J2 >> 2] = da2;
              c[v2 >> 2] = ga2 * 30;
              b: do
                if ((ga2 | 0) < 1) ha2 = da2;
                else {
                  $2 = (ca2 | 0) <= (X2 | 0) ? ca2 : X2;
                  ia2 = (_2 | 0) <= (fa2 | 0) ? _2 : fa2;
                  if ((da2 | 0) < (ea2 | 0)) {
                    W2 = aa2;
                    break a;
                  } else {
                    ja2 = 1;
                    ka2 = 0;
                    la2 = 1;
                    ma2 = ea2;
                    na2 = da2;
                  }
                  while (1) {
                    oa2 = na2;
                    while (1) {
                      if ((oa2 | 0) <= (ma2 | 0)) {
                        pa2 = ma2;
                        break;
                      }
                      qa2 = oa2 + -1 | 0;
                      if (+h[Q2 + ((S(qa2, O2) | 0) + oa2 << 3) >> 3] == 0) {
                        pa2 = oa2;
                        break;
                      } else oa2 = qa2;
                    }
                    c[K2 >> 2] = pa2;
                    oa2 = na2 - pa2 | 0;
                    qa2 = oa2 + 1 | 0;
                    ra2 = (qa2 | 0) <= (fa2 | 0) ? qa2 : fa2;
                    sa2 = (ja2 | 0) < 5;
                    if (sa2) ta2 = (ra2 | 0) <= (Y2 | 0) ? ra2 : Y2;
                    else {
                      ua2 = c[F2 >> 2] << 1;
                      ta2 = (ra2 | 0) <= (ua2 | 0) ? ra2 : ua2;
                    }
                    c[F2 >> 2] = ta2;
                    do
                      if ((ta2 | 0) < (fa2 | 0)) {
                        if ((ta2 | 0) >= (oa2 | 0)) {
                          c[F2 >> 2] = qa2;
                          va2 = qa2;
                          break;
                        }
                        ua2 = na2 - ta2 | 0;
                        wa2 = +h[Q2 + (ua2 + 1 + (S(ua2, O2) | 0) << 3) >> 3];
                        xa2 = +h[Q2 + ((S(ua2 + -1 | 0, O2) | 0) + ua2 << 3) >> 3];
                        if ((wa2 >= 0 ? wa2 : -wa2) > (xa2 >= 0 ? xa2 : -xa2)) {
                          ua2 = ta2 + 1 | 0;
                          c[F2 >> 2] = ua2;
                          va2 = ua2;
                        } else va2 = ta2;
                      } else va2 = ta2;
                    while (0);
                    if (!sa2) {
                      qa2 = ka2 + 1 | 0;
                      if ((ka2 | 0) < 0 & (va2 | 0) < (ra2 | 0)) {
                        ya2 = ka2;
                        za2 = va2;
                      } else {
                        oa2 = (va2 - qa2 | 0) < 2 ? 0 : qa2;
                        qa2 = va2 - oa2 | 0;
                        c[F2 >> 2] = qa2;
                        ya2 = oa2;
                        za2 = qa2;
                      }
                    } else {
                      ya2 = -1;
                      za2 = va2;
                    }
                    qa2 = c[e2 >> 2] | 0;
                    oa2 = qa2 - za2 | 0;
                    ua2 = oa2 + 1 | 0;
                    c[H2 >> 2] = oa2 + ~za2;
                    c[I2 >> 2] = 1 - za2 + qa2 + (-2 - za2);
                    sb(b2, d2, e2, K2, J2, F2, Z2, k2, n2, o2, p2, q2, D2, A2, l2, m2, Q2 + (ua2 + O2 << 3) | 0, k2, H2, Q2 + (ua2 + (S(za2 + 1 | 0, O2) | 0) << 3) | 0, k2, I2, Q2 + (za2 + 2 + O2 << 3) | 0, k2, r2, s2) | 0;
                    ua2 = c[A2 >> 2] | 0;
                    qa2 = (c[J2 >> 2] | 0) - ua2 | 0;
                    c[J2 >> 2] = qa2;
                    oa2 = qa2 - (c[D2 >> 2] | 0) + 1 | 0;
                    if (ua2)
                      if ((ua2 * 100 | 0) <= (S(c[F2 >> 2] | 0, ba2) | 0) ? (Aa2 = c[K2 >> 2] | 0, (qa2 - Aa2 | 0) >= (ia2 | 0)) : 0) {
                        Ba2 = Aa2;
                        Ca2 = 28;
                      } else {
                        Da2 = ua2;
                        Ea2 = qa2;
                      }
                    else {
                      Ba2 = c[K2 >> 2] | 0;
                      Ca2 = 28;
                    }
                    if ((Ca2 | 0) == 28) {
                      Ca2 = 0;
                      ua2 = qa2 - Ba2 | 0;
                      Aa2 = (ua2 | 0) > 2 ? ua2 : 2;
                      ua2 = ($2 | 0) <= (Aa2 | 0) ? $2 : Aa2;
                      Aa2 = ua2 - ((ua2 | 0) % 2 | 0) | 0;
                      c[E2 >> 2] = Aa2;
                      if (!((ja2 | 0) % 6 | 0)) {
                        Fa2 = qa2 - Aa2 | 0;
                        Ga2 = Fa2 + 1 | 0;
                        Ha2 = Fa2 + 2 | 0;
                        Fa2 = Ba2 + 2 | 0;
                        Ia2 = (Ha2 | 0) >= (Fa2 | 0) ? Ha2 : Fa2;
                        if ((qa2 | 0) < (Ia2 | 0)) Ja2 = Ba2;
                        else {
                          Fa2 = qa2;
                          do {
                            Ka2 = Fa2 + -1 | 0;
                            xa2 = +h[Q2 + ((S(Ka2, O2) | 0) + Fa2 << 3) >> 3];
                            La2 = Fa2;
                            Fa2 = Fa2 + -2 | 0;
                            wa2 = +h[Q2 + ((S(Fa2, O2) | 0) + Ka2 << 3) >> 3];
                            Ma2 = (xa2 >= 0 ? xa2 : -xa2) + (wa2 >= 0 ? wa2 : -wa2);
                            wa2 = +h[Q2 + ((S(La2, O2) | 0) + La2 << 3) >> 3] + Ma2 * 0.75;
                            h[w2 >> 3] = wa2;
                            h[x2 >> 3] = Ma2;
                            h[y2 >> 3] = Ma2 * -0.4375;
                            h[z2 >> 3] = wa2;
                            ob(w2, x2, y2, z2, j2 + (Ka2 << 3) | 0, R2 + (Ka2 << 3) | 0, j2 + (La2 << 3) | 0, R2 + (La2 << 3) | 0, B2, C2) | 0;
                          } while ((Fa2 | 0) >= (Ia2 | 0));
                          Ja2 = c[K2 >> 2] | 0;
                        }
                        if ((Ga2 | 0) == (Ja2 | 0)) {
                          Ia2 = j2 + (Ha2 << 3) | 0;
                          h[Ia2 >> 3] = +h[Q2 + ((S(Ha2, O2) | 0) + Ha2 << 3) >> 3];
                          Fa2 = R2 + (Ha2 << 3) | 0;
                          h[Fa2 >> 3] = 0;
                          h[j2 + (Ga2 << 3) >> 3] = +h[Ia2 >> 3];
                          h[R2 + (Ga2 << 3) >> 3] = +h[Fa2 >> 3];
                          Na2 = Ga2;
                        } else Na2 = Ga2;
                      } else {
                        if ((qa2 - oa2 | 0) < ((ua2 | 0) / 2 | 0 | 0)) {
                          Fa2 = qa2 - Aa2 + 1 | 0;
                          Ia2 = Q2 + (P2 - Aa2 + (c[e2 >> 2] | 0) << 3) | 0;
                          eb(2024, E2, E2, Q2 + ((S(Fa2, O2) | 0) + Fa2 << 3) | 0, k2, Ia2, k2) | 0;
                          hb(6244, 6244, E2, 376, E2, Ia2, k2, j2 + (Fa2 << 3) | 0, R2 + (Fa2 << 3) | 0, 376, 376, L2, 376, G2) | 0;
                          Ia2 = (c[G2 >> 2] | 0) + Fa2 | 0;
                          Fa2 = c[J2 >> 2] | 0;
                          if ((Ia2 | 0) < (Fa2 | 0)) {
                            Oa2 = Ia2;
                            Pa2 = Fa2;
                          } else {
                            Ia2 = Fa2 + -1 | 0;
                            ra2 = S(Ia2, O2) | 0;
                            h[w2 >> 3] = +h[Q2 + (ra2 + Ia2 << 3) >> 3];
                            h[y2 >> 3] = +h[Q2 + (ra2 + Fa2 << 3) >> 3];
                            ra2 = S(Fa2, O2) | 0;
                            h[x2 >> 3] = +h[Q2 + (Ia2 + ra2 << 3) >> 3];
                            h[z2 >> 3] = +h[Q2 + (ra2 + Fa2 << 3) >> 3];
                            ob(w2, x2, y2, z2, j2 + (Ia2 << 3) | 0, R2 + (Ia2 << 3) | 0, j2 + (Fa2 << 3) | 0, R2 + (Fa2 << 3) | 0, B2, C2) | 0;
                            Fa2 = c[J2 >> 2] | 0;
                            Oa2 = Fa2 + -1 | 0;
                            Pa2 = Fa2;
                          }
                        } else {
                          Oa2 = oa2;
                          Pa2 = qa2;
                        }
                        if (!((Pa2 | 0) <= (Oa2 | 0) ? 1 : (Pa2 - Oa2 | 0) < (c[E2 >> 2] | 0))) {
                          Fa2 = Pa2;
                          do {
                            Ia2 = 1;
                            ra2 = Oa2;
                            c: while (1) {
                              sa2 = ra2;
                              do {
                                if ((sa2 | 0) >= (Fa2 | 0)) break c;
                                Qa2 = j2 + (sa2 << 3) | 0;
                                Ra2 = +h[Qa2 >> 3];
                                Sa2 = R2 + (sa2 << 3) | 0;
                                wa2 = +h[Sa2 >> 3];
                                sa2 = sa2 + 1 | 0;
                                Ta2 = j2 + (sa2 << 3) | 0;
                                Ua2 = +h[Ta2 >> 3];
                                Va2 = R2 + (sa2 << 3) | 0;
                                Ma2 = +h[Va2 >> 3];
                              } while (!((Ra2 >= 0 ? Ra2 : -Ra2) + (wa2 >= 0 ? wa2 : -wa2) < (Ua2 >= 0 ? Ua2 : -Ua2) + (Ma2 >= 0 ? Ma2 : -Ma2)));
                              h[Qa2 >> 3] = Ua2;
                              h[Ta2 >> 3] = Ra2;
                              Ma2 = +h[Sa2 >> 3];
                              h[Sa2 >> 3] = +h[Va2 >> 3];
                              h[Va2 >> 3] = Ma2;
                              Ia2 = 0;
                              ra2 = sa2;
                            }
                            Fa2 = Fa2 + -1 | 0;
                          } while (!((Fa2 | 0) <= (Oa2 | 0) | (Ia2 | 0) != 0));
                        }
                        Fa2 = Oa2 + 2 | 0;
                        if ((Pa2 | 0) < (Fa2 | 0)) Na2 = Oa2;
                        else {
                          qa2 = Pa2;
                          while (1) {
                            oa2 = R2 + (qa2 << 3) | 0;
                            Aa2 = qa2 + -1 | 0;
                            ua2 = R2 + (Aa2 << 3) | 0;
                            if (+h[oa2 >> 3] != -+h[ua2 >> 3]) {
                              Ga2 = j2 + (qa2 << 3) | 0;
                              Ma2 = +h[Ga2 >> 3];
                              Ha2 = j2 + (Aa2 << 3) | 0;
                              h[Ga2 >> 3] = +h[Ha2 >> 3];
                              Ga2 = qa2 + -2 | 0;
                              Aa2 = j2 + (Ga2 << 3) | 0;
                              h[Ha2 >> 3] = +h[Aa2 >> 3];
                              h[Aa2 >> 3] = Ma2;
                              Ma2 = +h[oa2 >> 3];
                              h[oa2 >> 3] = +h[ua2 >> 3];
                              oa2 = R2 + (Ga2 << 3) | 0;
                              h[ua2 >> 3] = +h[oa2 >> 3];
                              h[oa2 >> 3] = Ma2;
                              Wa2 = Ga2;
                            } else Wa2 = qa2 + -2 | 0;
                            if ((Wa2 | 0) < (Fa2 | 0)) {
                              Na2 = Oa2;
                              break;
                            } else qa2 = Wa2;
                          }
                        }
                      }
                      qa2 = c[J2 >> 2] | 0;
                      Fa2 = qa2 - Na2 | 0;
                      do
                        if ((Fa2 | 0) == 1 ? +h[R2 + (qa2 << 3) >> 3] == 0 : 0) {
                          Ga2 = j2 + (qa2 << 3) | 0;
                          Ma2 = +h[Ga2 >> 3];
                          wa2 = +h[Q2 + ((S(qa2, O2) | 0) + qa2 << 3) >> 3];
                          xa2 = Ma2 - wa2;
                          oa2 = j2 + (qa2 + -1 << 3) | 0;
                          Xa2 = +h[oa2 >> 3];
                          Ya2 = Xa2 - wa2;
                          if ((xa2 >= 0 ? xa2 : -xa2) < (Ya2 >= 0 ? Ya2 : -Ya2)) {
                            h[oa2 >> 3] = Ma2;
                            break;
                          } else {
                            h[Ga2 >> 3] = Xa2;
                            break;
                          }
                        }
                      while (0);
                      Ga2 = c[E2 >> 2] | 0;
                      oa2 = Fa2 + 1 | 0;
                      ua2 = (Ga2 | 0) <= (oa2 | 0) ? Ga2 : oa2;
                      oa2 = ua2 - ((ua2 | 0) % 2 | 0) | 0;
                      c[E2 >> 2] = oa2;
                      ua2 = qa2 - oa2 + 1 | 0;
                      Ga2 = oa2 * 3 | 0;
                      oa2 = c[e2 >> 2] | 0;
                      Aa2 = oa2 - (Ga2 + -3) | 0;
                      Ha2 = Aa2 + 1 | 0;
                      c[H2 >> 2] = 2 - Ga2 + -2 + Aa2;
                      c[I2 >> 2] = oa2 + 1 + (3 - Ga2) + ~Ga2;
                      vb(b2, d2, M2, e2, K2, J2, E2, j2 + (ua2 << 3) | 0, R2 + (ua2 << 3) | 0, Z2, k2, n2, o2, p2, q2, r2, 380, Q2 + (Ha2 + O2 << 3) | 0, k2, I2, Q2 + (Ga2 + 1 + O2 << 3) | 0, k2, H2, Q2 + (Ha2 + (S(Ga2 + -2 | 0, O2) | 0) << 3) | 0, k2) | 0;
                      Da2 = c[A2 >> 2] | 0;
                      Ea2 = c[J2 >> 2] | 0;
                    }
                    if ((la2 | 0) >= (c[v2 >> 2] | 0)) {
                      ha2 = Ea2;
                      break b;
                    }
                    ma2 = c[f2 >> 2] | 0;
                    if ((Ea2 | 0) < (ma2 | 0)) {
                      W2 = aa2;
                      break a;
                    } else {
                      ja2 = (Da2 | 0) > 0 ? 1 : ja2 + 1 | 0;
                      ka2 = ya2;
                      la2 = la2 + 1 | 0;
                      na2 = Ea2;
                    }
                  }
                }
              while (0);
              c[t2 >> 2] = ha2;
              W2 = aa2;
            }
          while (0);
          h[r2 >> 3] = +(W2 | 0);
          i2 = u2;
          return 0;
        }
        function vb(a2, b2, d2, e2, f2, g2, j2, k2, l2, m2, n2, o2, p2, q2, r2, s2, t2, u2, v2, w2, x2, y2, z2, A2, B2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          g2 = g2 | 0;
          j2 = j2 | 0;
          k2 = k2 | 0;
          l2 = l2 | 0;
          m2 = m2 | 0;
          n2 = n2 | 0;
          o2 = o2 | 0;
          p2 = p2 | 0;
          q2 = q2 | 0;
          r2 = r2 | 0;
          s2 = s2 | 0;
          t2 = t2 | 0;
          u2 = u2 | 0;
          v2 = v2 | 0;
          w2 = w2 | 0;
          x2 = x2 | 0;
          y2 = y2 | 0;
          z2 = z2 | 0;
          A2 = A2 | 0;
          B2 = B2 | 0;
          var C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0, O2 = 0, P2 = 0, Q2 = 0, R2 = 0, T2 = 0, U2 = 0, V2 = 0, W2 = 0, X2 = 0, Y2 = 0, Z2 = 0, _2 = 0, $2 = 0, aa2 = 0, ba2 = 0, ca2 = 0, da2 = 0, ea2 = 0, fa2 = 0, ga2 = 0, ha2 = 0, ia2 = 0, ja2 = 0, ka2 = 0, la2 = 0, ma2 = 0, na2 = 0, oa2 = 0, pa2 = 0, qa2 = 0, ra2 = 0, sa2 = 0, ta2 = 0, ua2 = 0, va2 = 0, wa2 = 0, xa2 = 0, ya2 = 0, za2 = 0, Aa2 = 0, Ba2 = 0, Ca2 = 0, Da2 = 0, Ea2 = 0, Fa2 = 0, Ga2 = 0, Ha2 = 0, Ia2 = 0, Ja2 = 0, Ka2 = 0, La2 = 0, Ma2 = 0, Na2 = 0, Oa2 = 0, Pa2 = 0, Qa2 = 0, Ra2 = 0, Sa2 = 0, Ta2 = 0, Ua2 = 0, Va2 = 0, Wa2 = 0, Xa2 = 0, Ya2 = 0, Za2 = 0, $a2 = 0, ab2 = 0, bb2 = 0, cb2 = 0, fb2 = 0, gb2 = 0, hb2 = 0, ib2 = 0, jb2 = 0, kb2 = 0, mb2 = 0, nb2 = 0, ob2 = 0, pb2 = 0, qb2 = 0, sb2 = 0, tb2 = 0, ub2 = 0, vb2 = 0, wb2 = 0;
          C2 = i2;
          i2 = i2 + 96 | 0;
          D2 = C2 + 88 | 0;
          E2 = C2 + 84 | 0;
          F2 = C2 + 80 | 0;
          G2 = C2 + 76 | 0;
          H2 = C2 + 72 | 0;
          I2 = C2 + 32 | 0;
          J2 = C2 + 68 | 0;
          K2 = C2 + 64 | 0;
          L2 = C2 + 60 | 0;
          M2 = C2 + 24 | 0;
          N2 = C2 + 56 | 0;
          O2 = C2 + 16 | 0;
          P2 = C2 + 8 | 0;
          Q2 = C2;
          R2 = k2 + -8 | 0;
          k2 = l2 + -8 | 0;
          l2 = c[n2 >> 2] | 0;
          T2 = m2 + (~l2 << 3) | 0;
          U2 = c[r2 >> 2] | 0;
          V2 = q2 + (~U2 << 3) | 0;
          q2 = c[t2 >> 2] | 0;
          t2 = s2 + (~q2 << 3) | 0;
          s2 = c[v2 >> 2] | 0;
          W2 = s2 + 1 | 0;
          X2 = u2 + (~s2 << 3) | 0;
          u2 = c[y2 >> 2] | 0;
          Y2 = u2 + 1 | 0;
          Z2 = x2 + (~u2 << 3) | 0;
          x2 = c[B2 >> 2] | 0;
          _2 = x2 + 1 | 0;
          $2 = A2 + (~x2 << 3) | 0;
          A2 = c[j2 >> 2] | 0;
          if ((A2 | 0) < 2) {
            i2 = C2;
            return 0;
          }
          if ((c[f2 >> 2] | 0) >= (c[g2 >> 2] | 0)) {
            i2 = C2;
            return 0;
          }
          j2 = A2 + -2 | 0;
          if ((j2 | 0) >= 1) {
            aa2 = 1;
            while (1) {
              ba2 = k2 + (aa2 << 3) | 0;
              ca2 = aa2 + 1 | 0;
              da2 = k2 + (ca2 << 3) | 0;
              if (+h[ba2 >> 3] != -+h[da2 >> 3]) {
                ea2 = R2 + (aa2 << 3) | 0;
                fa2 = +h[ea2 >> 3];
                ga2 = R2 + (ca2 << 3) | 0;
                h[ea2 >> 3] = +h[ga2 >> 3];
                ea2 = aa2 + 2 | 0;
                ca2 = R2 + (ea2 << 3) | 0;
                h[ga2 >> 3] = +h[ca2 >> 3];
                h[ca2 >> 3] = fa2;
                fa2 = +h[ba2 >> 3];
                h[ba2 >> 3] = +h[da2 >> 3];
                ba2 = k2 + (ea2 << 3) | 0;
                h[da2 >> 3] = +h[ba2 >> 3];
                h[ba2 >> 3] = fa2;
                ha2 = ea2;
              } else ha2 = aa2 + 2 | 0;
              if ((ha2 | 0) > (j2 | 0)) break;
              else aa2 = ha2;
            }
          }
          ha2 = A2 - ((A2 | 0) % 2 | 0) | 0;
          fa2 = +lb(1851);
          h[P2 >> 3] = fa2;
          h[Q2 >> 3] = 1 / fa2;
          db(P2, Q2) | 0;
          fa2 = +lb(1864);
          ia2 = +h[P2 >> 3] * (+(c[e2 >> 2] | 0) / fa2);
          P2 = c[d2 >> 2] | 0;
          d2 = (P2 + -1 | 0) >>> 0 < 2;
          Q2 = c[f2 >> 2] | 0;
          aa2 = Q2 + 2 | 0;
          j2 = c[g2 >> 2] | 0;
          if ((aa2 | 0) <= (j2 | 0)) h[T2 + (aa2 + (S(Q2, l2) | 0) << 3) >> 3] = 0;
          aa2 = (A2 | 0) / 2 | 0;
          A2 = (aa2 * 6 | 0) + -3 | 0;
          c[J2 >> 2] = A2;
          ea2 = j2 + -2 | 0;
          j2 = aa2 * 3 | 0;
          ba2 = j2 + -2 | 0;
          da2 = ((1 - aa2 | 0) * 3 | 0) + -1 + Q2 | 0;
          ca2 = (j2 | 0) < 2;
          if (!(ca2 ? (da2 | 0) >= (ea2 | 0) : (da2 | 0) <= (ea2 | 0))) {
            i2 = C2;
            return 0;
          }
          ga2 = X2 + (W2 << 3) | 0;
          W2 = j2 + -3 | 0;
          ja2 = (ha2 | 0) < 3;
          ka2 = ha2 + 1 | 0;
          la2 = $2 + (_2 << 3) | 0;
          ma2 = Z2 + (Y2 << 3) | 0;
          Y2 = I2 + 8 | 0;
          na2 = I2 + 16 | 0;
          oa2 = m2 + -16 | 0;
          m2 = Q2 - j2 | 0;
          pa2 = j2 + -2 | 0;
          qa2 = (P2 | 0) != 2 | (ha2 | 0) < 3;
          ha2 = (l2 | 0) == 1;
          P2 = da2;
          da2 = A2;
          A2 = 0;
          ra2 = Q2 + -1 - j2 | 0;
          while (1) {
            j2 = m2 + (S(pa2, A2) | 0) | 0;
            Q2 = da2 + P2 | 0;
            if (d2) Db(1874, J2, J2, 6152, 72, ga2, v2) | 0;
            sa2 = W2 + P2 | 0;
            ta2 = c[g2 >> 2] | 0;
            ua2 = ta2 + -2 | 0;
            c[D2 >> 2] = ua2;
            va2 = (sa2 | 0) <= (ua2 | 0) ? sa2 : ua2;
            if ((P2 | 0) <= (va2 | 0)) {
              ua2 = P2;
              sa2 = c[f2 >> 2] | 0;
              wa2 = ta2;
              ta2 = 0;
              xa2 = ra2;
              while (1) {
                ya2 = j2 + ta2 | 0;
                za2 = ((1 - ua2 + sa2 | 0) / 3 | 0) + 1 | 0;
                Aa2 = (za2 | 0) > 1 ? za2 : 1;
                za2 = (wa2 - ua2 | 0) / 3 | 0;
                c[D2 >> 2] = za2;
                Ba2 = (aa2 | 0) <= (za2 | 0) ? aa2 : za2;
                Ca2 = Ba2 + 1 | 0;
                if ((Ba2 | 0) < (aa2 | 0)) Da2 = ((Ba2 * 3 | 0) + ua2 | 0) == (wa2 + -2 | 0);
                else Da2 = 0;
                Ea2 = (Aa2 | 0) > (Ba2 | 0);
                a: do
                  if (!Ea2) {
                    Fa2 = ua2 + -3 | 0;
                    Ga2 = Aa2;
                    Ha2 = sa2;
                    while (1) {
                      Ia2 = Ga2 * 3 | 0;
                      Ja2 = Fa2 + Ia2 | 0;
                      do
                        if ((Ja2 | 0) == (Ha2 + -1 | 0)) {
                          Ka2 = Ga2 << 1;
                          La2 = Ka2 + -1 | 0;
                          Ma2 = S(Ga2, q2) | 0;
                          Na2 = t2 + (Ma2 + 1 << 3) | 0;
                          rb(384, T2 + ((S(Ha2, l2) | 0) + Ha2 << 3) | 0, n2, R2 + (La2 << 3) | 0, k2 + (La2 << 3) | 0, R2 + (Ka2 << 3) | 0, k2 + (Ka2 << 3) | 0, Na2) | 0;
                          h[O2 >> 3] = +h[Na2 >> 3];
                          yb(384, O2, t2 + (Ma2 + 2 << 3) | 0, 388, Na2) | 0;
                        } else {
                          Na2 = Ja2 + 1 | 0;
                          Ma2 = S(Ja2, l2) | 0;
                          Ka2 = T2 + (Na2 + Ma2 << 3) | 0;
                          h[M2 >> 3] = +h[Ka2 >> 3];
                          La2 = Ja2 + 2 | 0;
                          Oa2 = T2 + (La2 + Ma2 << 3) | 0;
                          Pa2 = S(Ga2, q2) | 0;
                          Qa2 = t2 + (Pa2 + 2 << 3) | 0;
                          h[Qa2 >> 3] = +h[Oa2 >> 3];
                          Ra2 = Ia2 + ua2 | 0;
                          Sa2 = T2 + (Ma2 + Ra2 << 3) | 0;
                          Ta2 = t2 + (Pa2 + 3 << 3) | 0;
                          h[Ta2 >> 3] = +h[Sa2 >> 3];
                          Ua2 = t2 + (Pa2 + 1 << 3) | 0;
                          yb(384, M2, Qa2, 388, Ua2) | 0;
                          if ((!(+h[Sa2 >> 3] != 0) ? (Pa2 = S(Na2, l2) | 0, !(+h[T2 + (Pa2 + Ra2 << 3) >> 3] != 0)) : 0) ? (Va2 = S(La2, l2) | 0, !(+h[T2 + (Va2 + Ra2 << 3) >> 3] == 0)) : 0) {
                            Ra2 = T2 + (Pa2 + Na2 << 3) | 0;
                            Na2 = Ga2 << 1;
                            Pa2 = Na2 + -1 | 0;
                            rb(384, Ra2, n2, R2 + (Pa2 << 3) | 0, k2 + (Pa2 << 3) | 0, R2 + (Na2 << 3) | 0, k2 + (Na2 << 3) | 0, I2) | 0;
                            h[O2 >> 3] = +h[I2 >> 3];
                            yb(384, O2, Y2, 388, I2) | 0;
                            Wa2 = +h[I2 >> 3];
                            Xa2 = +h[Ka2 >> 3];
                            Ya2 = +h[Y2 >> 3];
                            Za2 = +h[Oa2 >> 3];
                            $a2 = Wa2 * (Xa2 + Ya2 * Za2);
                            ab2 = Za2 - Ya2 * $a2;
                            Za2 = +h[na2 >> 3];
                            bb2 = Za2 * $a2;
                            cb2 = +h[T2 + (Ma2 + Ja2 << 3) >> 3];
                            fb2 = +h[Ra2 >> 3];
                            gb2 = +h[T2 + (Va2 + La2 << 3) >> 3];
                            if ((bb2 >= 0 ? bb2 : -bb2) + (ab2 >= 0 ? ab2 : -ab2) > fa2 * ((cb2 >= 0 ? cb2 : -cb2) + (fb2 >= 0 ? fb2 : -fb2) + (gb2 >= 0 ? gb2 : -gb2))) {
                              h[Ka2 >> 3] = +h[M2 >> 3];
                              h[Oa2 >> 3] = 0;
                              h[Sa2 >> 3] = 0;
                              break;
                            } else {
                              h[Ka2 >> 3] = Xa2 - $a2;
                              h[Oa2 >> 3] = 0;
                              h[Sa2 >> 3] = 0;
                              h[Ua2 >> 3] = Wa2;
                              h[Qa2 >> 3] = Ya2;
                              h[Ta2 >> 3] = Za2;
                              break;
                            }
                          }
                          h[Ka2 >> 3] = +h[M2 >> 3];
                          h[Oa2 >> 3] = 0;
                          h[Sa2 >> 3] = 0;
                        }
                      while (0);
                      if ((Ga2 | 0) >= (Ba2 | 0)) break a;
                      Ga2 = Ga2 + 1 | 0;
                      Ha2 = c[f2 >> 2] | 0;
                    }
                  }
                while (0);
                Ha2 = (Ba2 * 3 | 0) + ua2 | 0;
                do
                  if (Da2) {
                    Ga2 = Ha2 + 1 | 0;
                    if ((Ha2 | 0) == ((c[f2 >> 2] | 0) + -1 | 0)) {
                      Fa2 = Ca2 << 1;
                      Ja2 = Fa2 + -1 | 0;
                      Ia2 = S(Ca2, q2) | 0;
                      Sa2 = t2 + (Ia2 + 1 << 3) | 0;
                      rb(392, T2 + ((S(Ga2, l2) | 0) + Ga2 << 3) | 0, n2, R2 + (Ja2 << 3) | 0, k2 + (Ja2 << 3) | 0, R2 + (Fa2 << 3) | 0, k2 + (Fa2 << 3) | 0, Sa2) | 0;
                      h[M2 >> 3] = +h[Sa2 >> 3];
                      yb(392, M2, t2 + (Ia2 + 2 << 3) | 0, 388, Sa2) | 0;
                      break;
                    } else {
                      Sa2 = S(Ha2, l2) | 0;
                      Ia2 = T2 + (Ga2 + Sa2 << 3) | 0;
                      h[M2 >> 3] = +h[Ia2 >> 3];
                      Ga2 = T2 + (Ha2 + 2 + Sa2 << 3) | 0;
                      Sa2 = S(Ca2, q2) | 0;
                      Fa2 = t2 + (Sa2 + 2 << 3) | 0;
                      h[Fa2 >> 3] = +h[Ga2 >> 3];
                      yb(392, M2, Fa2, 388, t2 + (Sa2 + 1 << 3) | 0) | 0;
                      h[Ia2 >> 3] = +h[M2 >> 3];
                      h[Ga2 >> 3] = 0;
                      break;
                    }
                  }
                while (0);
                do
                  if (!d2)
                    if (!(c[a2 >> 2] | 0)) {
                      hb2 = c[g2 >> 2] | 0;
                      break;
                    } else {
                      hb2 = c[e2 >> 2] | 0;
                      break;
                    }
                  else {
                    Ga2 = c[g2 >> 2] | 0;
                    hb2 = (Q2 | 0) > (Ga2 | 0) ? Ga2 : Q2;
                  }
                while (0);
                sa2 = c[f2 >> 2] | 0;
                Ga2 = (sa2 | 0) < (ua2 | 0) ? ua2 : sa2;
                if ((Ga2 | 0) <= (hb2 | 0)) {
                  Ia2 = 2 - ua2 | 0;
                  Sa2 = ua2 + -3 | 0;
                  Fa2 = Ga2;
                  while (1) {
                    Ga2 = (Ia2 + Fa2 | 0) / 3 | 0;
                    ib2 = (Ba2 | 0) <= (Ga2 | 0) ? Ba2 : Ga2;
                    if ((Aa2 | 0) <= (ib2 | 0)) {
                      Ga2 = S(Fa2, l2) | 0;
                      Ja2 = Ga2 + 1 | 0;
                      Oa2 = Ga2 + 2 | 0;
                      Ka2 = Ga2 + ua2 | 0;
                      Ga2 = Aa2;
                      while (1) {
                        Ta2 = Ga2 * 3 | 0;
                        Qa2 = Sa2 + Ta2 | 0;
                        Ua2 = S(Ga2, q2) | 0;
                        La2 = T2 + (Ja2 + Qa2 << 3) | 0;
                        Za2 = +h[La2 >> 3];
                        Va2 = t2 + (Ua2 + 2 << 3) | 0;
                        Ra2 = T2 + (Oa2 + Qa2 << 3) | 0;
                        Qa2 = t2 + (Ua2 + 3 << 3) | 0;
                        Ma2 = T2 + (Ka2 + Ta2 << 3) | 0;
                        Ya2 = +h[t2 + (Ua2 + 1 << 3) >> 3] * (Za2 + +h[Va2 >> 3] * +h[Ra2 >> 3] + +h[Qa2 >> 3] * +h[Ma2 >> 3]);
                        h[La2 >> 3] = Za2 - Ya2;
                        h[Ra2 >> 3] = +h[Ra2 >> 3] - +h[Va2 >> 3] * Ya2;
                        h[Ma2 >> 3] = +h[Ma2 >> 3] - Ya2 * +h[Qa2 >> 3];
                        if ((Ga2 | 0) < (ib2 | 0)) Ga2 = Ga2 + 1 | 0;
                        else break;
                      }
                    }
                    if ((Fa2 | 0) < (hb2 | 0)) Fa2 = Fa2 + 1 | 0;
                    else break;
                  }
                  c[D2 >> 2] = ib2;
                }
                b: do
                  if (Da2 ? (Fa2 = Ha2 + 1 | 0, c[D2 >> 2] = hb2, Sa2 = (Fa2 | 0) < (sa2 | 0) ? sa2 : Fa2, (Sa2 | 0) <= (hb2 | 0)) : 0) {
                    Ia2 = S(Ca2, q2) | 0;
                    Ga2 = t2 + (Ia2 + 1 << 3) | 0;
                    Ka2 = t2 + (Ia2 + 2 << 3) | 0;
                    Ia2 = Ha2 + 2 | 0;
                    if (!ha2) {
                      Oa2 = Sa2;
                      while (1) {
                        Ja2 = S(Oa2, l2) | 0;
                        Qa2 = T2 + (Ja2 + Fa2 << 3) | 0;
                        Ya2 = +h[Qa2 >> 3];
                        Ma2 = T2 + (Ia2 + Ja2 << 3) | 0;
                        Za2 = +h[Ga2 >> 3] * (Ya2 + +h[Ka2 >> 3] * +h[Ma2 >> 3]);
                        h[Qa2 >> 3] = Ya2 - Za2;
                        h[Ma2 >> 3] = +h[Ma2 >> 3] - +h[Ka2 >> 3] * Za2;
                        if ((Oa2 | 0) < (hb2 | 0)) Oa2 = Oa2 + 1 | 0;
                        else break b;
                      }
                    }
                    Oa2 = Sa2;
                    Za2 = +h[oa2 + (Sa2 + ya2 + (S(~((aa2 | 0) > (za2 | 0) ? za2 : aa2), -3) | 0) << 3) >> 3];
                    while (1) {
                      Ma2 = S(Oa2, l2) | 0;
                      Qa2 = T2 + (Ia2 + Ma2 << 3) | 0;
                      Ya2 = +h[Ga2 >> 3] * (Za2 + +h[Ka2 >> 3] * +h[Qa2 >> 3]);
                      h[T2 + (Ma2 + Fa2 << 3) >> 3] = Za2 - Ya2;
                      Za2 = +h[Qa2 >> 3] - +h[Ka2 >> 3] * Ya2;
                      h[Qa2 >> 3] = Za2;
                      if ((Oa2 | 0) >= (hb2 | 0)) break;
                      else Oa2 = Oa2 + 1 | 0;
                    }
                  }
                while (0);
                if (d2) jb2 = (sa2 | 0) < (P2 | 0) ? P2 : sa2;
                else jb2 = (c[a2 >> 2] | 0) == 0 ? sa2 : 1;
                c[D2 >> 2] = Ba2;
                if (!Ea2) {
                  za2 = ua2 + -3 | 0;
                  ya2 = c[J2 >> 2] | 0;
                  Oa2 = sa2 - P2 | 0;
                  Ka2 = (Oa2 | 0) > 1 ? Oa2 : 1;
                  Oa2 = (Ka2 | 0) > (ya2 | 0);
                  Fa2 = Aa2;
                  while (1) {
                    Ga2 = S(Fa2, q2) | 0;
                    Ia2 = t2 + (Ga2 + 1 << 3) | 0;
                    Za2 = +h[Ia2 >> 3];
                    c: do
                      if (Za2 != 0) {
                        Sa2 = Fa2 * 3 | 0;
                        Qa2 = za2 + Sa2 | 0;
                        Ma2 = c[g2 >> 2] | 0;
                        Ja2 = Sa2 + ua2 | 0;
                        c[E2 >> 2] = Ja2;
                        Sa2 = (Ma2 | 0) <= (Ja2 | 0) ? Ma2 : Ja2;
                        d: do
                          if ((jb2 | 0) <= (Sa2 | 0)) {
                            Ma2 = S(Qa2 + 1 | 0, l2) | 0;
                            Va2 = t2 + (Ga2 + 2 << 3) | 0;
                            Ra2 = S(Qa2 + 2 | 0, l2) | 0;
                            La2 = t2 + (Ga2 + 3 << 3) | 0;
                            Ua2 = S(Ja2, l2) | 0;
                            Ta2 = jb2;
                            Ya2 = Za2;
                            while (1) {
                              Na2 = T2 + (Ta2 + Ma2 << 3) | 0;
                              Wa2 = +h[Na2 >> 3];
                              Pa2 = T2 + (Ta2 + Ra2 << 3) | 0;
                              kb2 = T2 + (Ta2 + Ua2 << 3) | 0;
                              $a2 = Ya2 * (Wa2 + +h[Va2 >> 3] * +h[Pa2 >> 3] + +h[La2 >> 3] * +h[kb2 >> 3]);
                              h[Na2 >> 3] = Wa2 - $a2;
                              h[Pa2 >> 3] = +h[Pa2 >> 3] - +h[Va2 >> 3] * $a2;
                              h[kb2 >> 3] = +h[kb2 >> 3] - $a2 * +h[La2 >> 3];
                              if ((Ta2 | 0) >= (Sa2 | 0)) break d;
                              Ta2 = Ta2 + 1 | 0;
                              Ya2 = +h[Ia2 >> 3];
                            }
                          }
                        while (0);
                        if (d2) {
                          Sa2 = Qa2 - P2 | 0;
                          c[E2 >> 2] = ya2;
                          if (Oa2) break;
                          Ta2 = S(Sa2 + 1 | 0, s2) | 0;
                          La2 = t2 + (Ga2 + 2 << 3) | 0;
                          Va2 = S(Sa2 + 2 | 0, s2) | 0;
                          Ua2 = t2 + (Ga2 + 3 << 3) | 0;
                          Ra2 = S(Sa2 + 3 | 0, s2) | 0;
                          Sa2 = Ka2;
                          while (1) {
                            Ma2 = X2 + (Sa2 + Ta2 << 3) | 0;
                            Ya2 = +h[Ma2 >> 3];
                            kb2 = X2 + (Sa2 + Va2 << 3) | 0;
                            Pa2 = X2 + (Sa2 + Ra2 << 3) | 0;
                            $a2 = +h[Ia2 >> 3] * (Ya2 + +h[La2 >> 3] * +h[kb2 >> 3] + +h[Ua2 >> 3] * +h[Pa2 >> 3]);
                            h[Ma2 >> 3] = Ya2 - $a2;
                            h[kb2 >> 3] = +h[kb2 >> 3] - +h[La2 >> 3] * $a2;
                            h[Pa2 >> 3] = +h[Pa2 >> 3] - $a2 * +h[Ua2 >> 3];
                            if ((Sa2 | 0) < (ya2 | 0)) Sa2 = Sa2 + 1 | 0;
                            else break c;
                          }
                        }
                        if (!(c[b2 >> 2] | 0)) break;
                        Sa2 = c[p2 >> 2] | 0;
                        c[E2 >> 2] = Sa2;
                        Ua2 = c[o2 >> 2] | 0;
                        if ((Ua2 | 0) > (Sa2 | 0)) break;
                        La2 = S(Qa2 + 1 | 0, U2) | 0;
                        Ra2 = t2 + (Ga2 + 2 << 3) | 0;
                        Va2 = S(Qa2 + 2 | 0, U2) | 0;
                        Ta2 = t2 + (Ga2 + 3 << 3) | 0;
                        Pa2 = S(Ja2, U2) | 0;
                        kb2 = Ua2;
                        while (1) {
                          Ua2 = V2 + (kb2 + La2 << 3) | 0;
                          $a2 = +h[Ua2 >> 3];
                          Ma2 = V2 + (kb2 + Va2 << 3) | 0;
                          Na2 = V2 + (kb2 + Pa2 << 3) | 0;
                          Ya2 = +h[Ia2 >> 3] * ($a2 + +h[Ra2 >> 3] * +h[Ma2 >> 3] + +h[Ta2 >> 3] * +h[Na2 >> 3]);
                          h[Ua2 >> 3] = $a2 - Ya2;
                          h[Ma2 >> 3] = +h[Ma2 >> 3] - +h[Ra2 >> 3] * Ya2;
                          h[Na2 >> 3] = +h[Na2 >> 3] - Ya2 * +h[Ta2 >> 3];
                          if ((kb2 | 0) < (Sa2 | 0)) kb2 = kb2 + 1 | 0;
                          else break;
                        }
                      }
                    while (0);
                    if ((Fa2 | 0) < (Ba2 | 0)) Fa2 = Fa2 + 1 | 0;
                    else break;
                  }
                }
                e: do
                  if (Da2) {
                    Fa2 = S(Ca2, q2) | 0;
                    ya2 = t2 + (Fa2 + 1 << 3) | 0;
                    Za2 = +h[ya2 >> 3];
                    if (!(Za2 != 0)) break;
                    Ka2 = c[g2 >> 2] | 0;
                    c[E2 >> 2] = Ka2;
                    Oa2 = Ha2 + 3 | 0;
                    za2 = (Ka2 | 0) <= (Oa2 | 0) ? Ka2 : Oa2;
                    c[D2 >> 2] = za2;
                    f: do
                      if ((jb2 | 0) <= (za2 | 0)) {
                        Oa2 = S(Ha2 + 1 | 0, l2) | 0;
                        Ka2 = t2 + (Fa2 + 2 << 3) | 0;
                        Ea2 = S(Ha2 + 2 | 0, l2) | 0;
                        Ia2 = jb2;
                        Ya2 = Za2;
                        while (1) {
                          Ga2 = T2 + (Ia2 + Oa2 << 3) | 0;
                          $a2 = +h[Ga2 >> 3];
                          kb2 = T2 + (Ia2 + Ea2 << 3) | 0;
                          Wa2 = Ya2 * ($a2 + +h[Ka2 >> 3] * +h[kb2 >> 3]);
                          h[Ga2 >> 3] = $a2 - Wa2;
                          h[kb2 >> 3] = +h[kb2 >> 3] - +h[Ka2 >> 3] * Wa2;
                          if ((Ia2 | 0) >= (za2 | 0)) break f;
                          Ia2 = Ia2 + 1 | 0;
                          Ya2 = +h[ya2 >> 3];
                        }
                      }
                    while (0);
                    if (d2) {
                      za2 = Ha2 - P2 | 0;
                      c[D2 >> 2] = 1;
                      Ia2 = sa2 - P2 | 0;
                      c[E2 >> 2] = Ia2;
                      Ka2 = c[J2 >> 2] | 0;
                      Ea2 = (Ia2 | 0) > 1 ? Ia2 : 1;
                      if ((Ea2 | 0) > (Ka2 | 0)) break;
                      Ia2 = S(za2 + 1 | 0, s2) | 0;
                      Oa2 = t2 + (Fa2 + 2 << 3) | 0;
                      kb2 = S(za2 + 2 | 0, s2) | 0;
                      za2 = Ea2;
                      while (1) {
                        Ea2 = X2 + (za2 + Ia2 << 3) | 0;
                        Za2 = +h[Ea2 >> 3];
                        Ga2 = X2 + (za2 + kb2 << 3) | 0;
                        Ya2 = +h[ya2 >> 3] * (Za2 + +h[Oa2 >> 3] * +h[Ga2 >> 3]);
                        h[Ea2 >> 3] = Za2 - Ya2;
                        h[Ga2 >> 3] = +h[Ga2 >> 3] - +h[Oa2 >> 3] * Ya2;
                        if ((za2 | 0) < (Ka2 | 0)) za2 = za2 + 1 | 0;
                        else break e;
                      }
                    }
                    if (!(c[b2 >> 2] | 0)) break;
                    za2 = c[p2 >> 2] | 0;
                    Ka2 = c[o2 >> 2] | 0;
                    if ((Ka2 | 0) > (za2 | 0)) break;
                    Oa2 = S(Ha2 + 1 | 0, U2) | 0;
                    kb2 = t2 + (Fa2 + 2 << 3) | 0;
                    Ia2 = S(Ha2 + 2 | 0, U2) | 0;
                    Ga2 = Ka2;
                    while (1) {
                      Ka2 = V2 + (Ga2 + Oa2 << 3) | 0;
                      Ya2 = +h[Ka2 >> 3];
                      Ea2 = V2 + (Ga2 + Ia2 << 3) | 0;
                      Za2 = +h[ya2 >> 3] * (Ya2 + +h[kb2 >> 3] * +h[Ea2 >> 3]);
                      h[Ka2 >> 3] = Ya2 - Za2;
                      h[Ea2 >> 3] = +h[Ea2 >> 3] - +h[kb2 >> 3] * Za2;
                      if ((Ga2 | 0) < (za2 | 0)) Ga2 = Ga2 + 1 | 0;
                      else break;
                    }
                  }
                while (0);
                Ha2 = ua2 + -3 | 0;
                Ga2 = ((Ha2 + (Aa2 * 3 | 0) | 0) < (sa2 | 0) & 1) + Aa2 | 0;
                wa2 = c[g2 >> 2] | 0;
                za2 = wa2 + -2 | 0;
                kb2 = ((ua2 | 0) == (za2 | 0) & 1) + (Da2 ? Ca2 : Ba2) | 0;
                if ((Ga2 | 0) <= (kb2 | 0)) {
                  ya2 = kb2 * 3 | 0;
                  Ia2 = wa2 + -1 | 0;
                  Oa2 = sa2 + 2 | 0;
                  Fa2 = sa2 + 3 | 0;
                  Ea2 = wa2 + -3 | 0;
                  Ka2 = wa2 + -4 | 0;
                  Sa2 = Ga2;
                  while (1) {
                    Ga2 = Ha2 + (Sa2 * 3 | 0) | 0;
                    Ta2 = (Ia2 | 0) <= (Ga2 | 0) ? Ia2 : Ga2;
                    Ga2 = Ta2 + 1 | 0;
                    Ra2 = S(Ta2, l2) | 0;
                    Pa2 = T2 + (Ga2 + Ra2 << 3) | 0;
                    Za2 = +h[Pa2 >> 3];
                    do
                      if (Za2 != 0) {
                        Ya2 = +h[T2 + (Ra2 + Ta2 << 3) >> 3];
                        Va2 = S(Ga2, l2) | 0;
                        Wa2 = +h[T2 + (Va2 + Ga2 << 3) >> 3];
                        $a2 = Wa2 >= 0 ? Wa2 : -Wa2;
                        Xa2 = (Ya2 >= 0 ? Ya2 : -Ya2) + $a2;
                        do
                          if (Xa2 == 0) {
                            if ((Ta2 | 0) > (sa2 | 0)) {
                              gb2 = +h[T2 + ((S(Ta2 + -1 | 0, l2) | 0) + Ta2 << 3) >> 3];
                              mb2 = Xa2 + (gb2 >= 0 ? gb2 : -gb2);
                            } else mb2 = Xa2;
                            if ((Ta2 | 0) < (Oa2 | 0)) nb2 = mb2;
                            else {
                              gb2 = +h[T2 + ((S(Ta2 + -2 | 0, l2) | 0) + Ta2 << 3) >> 3];
                              nb2 = mb2 + (gb2 >= 0 ? gb2 : -gb2);
                            }
                            if ((Ta2 | 0) < (Fa2 | 0)) ob2 = nb2;
                            else {
                              gb2 = +h[T2 + ((S(Ta2 + -3 | 0, l2) | 0) + Ta2 << 3) >> 3];
                              ob2 = nb2 + (gb2 >= 0 ? gb2 : -gb2);
                            }
                            if ((Ta2 | 0) > (za2 | 0)) pb2 = ob2;
                            else {
                              gb2 = +h[T2 + (Ta2 + 2 + Va2 << 3) >> 3];
                              pb2 = ob2 + (gb2 >= 0 ? gb2 : -gb2);
                            }
                            if ((Ta2 | 0) > (Ea2 | 0)) qb2 = pb2;
                            else {
                              gb2 = +h[T2 + (Ta2 + 3 + Va2 << 3) >> 3];
                              qb2 = pb2 + (gb2 >= 0 ? gb2 : -gb2);
                            }
                            if ((Ta2 | 0) > (Ka2 | 0)) {
                              sb2 = qb2;
                              break;
                            }
                            gb2 = +h[T2 + (Ta2 + 4 + Va2 << 3) >> 3];
                            sb2 = qb2 + (gb2 >= 0 ? gb2 : -gb2);
                          } else sb2 = Xa2;
                        while (0);
                        Xa2 = fa2 * sb2;
                        gb2 = Za2 >= 0 ? Za2 : -Za2;
                        if (!(gb2 <= (ia2 >= Xa2 ? ia2 : Xa2))) break;
                        Xa2 = +h[T2 + (Va2 + Ta2 << 3) >> 3];
                        fb2 = Xa2 >= 0 ? Xa2 : -Xa2;
                        Xa2 = gb2 >= fb2 ? gb2 : fb2;
                        cb2 = Ya2 - Wa2;
                        ab2 = cb2 >= 0 ? cb2 : -cb2;
                        cb2 = $a2 >= ab2 ? $a2 : ab2;
                        bb2 = Xa2 + cb2;
                        tb2 = ($a2 <= ab2 ? $a2 : ab2) * (cb2 / bb2);
                        cb2 = fa2 * tb2;
                        if (!(tb2 == 0) ? !((gb2 <= fb2 ? gb2 : fb2) * (Xa2 / bb2) <= (ia2 >= cb2 ? ia2 : cb2)) : 0) break;
                        h[Pa2 >> 3] = 0;
                      }
                    while (0);
                    if ((Sa2 | 0) < (kb2 | 0)) Sa2 = Sa2 + 1 | 0;
                    else break;
                  }
                  c[D2 >> 2] = Ia2;
                  c[E2 >> 2] = xa2 + ya2;
                }
                Sa2 = (wa2 + ~ua2 | 0) / 3 | 0;
                c[D2 >> 2] = Sa2;
                kb2 = (aa2 | 0) <= (Sa2 | 0) ? aa2 : Sa2;
                if ((Aa2 | 0) <= (kb2 | 0)) {
                  Sa2 = Aa2;
                  while (1) {
                    Ka2 = Sa2 * 3 | 0;
                    Ea2 = Ha2 + Ka2 | 0;
                    za2 = S(Sa2, q2) | 0;
                    Fa2 = t2 + (za2 + 3 << 3) | 0;
                    Oa2 = Ea2 + 4 | 0;
                    Ba2 = T2 + (Oa2 + (S(Ka2 + ua2 | 0, l2) | 0) << 3) | 0;
                    Za2 = +h[t2 + (za2 + 1 << 3) >> 3] * +h[Fa2 >> 3] * +h[Ba2 >> 3];
                    cb2 = -Za2;
                    h[T2 + ((S(Ea2 + 1 | 0, l2) | 0) + Oa2 << 3) >> 3] = cb2;
                    h[T2 + ((S(Ea2 + 2 | 0, l2) | 0) + Oa2 << 3) >> 3] = +h[t2 + (za2 + 2 << 3) >> 3] * cb2;
                    h[Ba2 >> 3] = +h[Ba2 >> 3] - Za2 * +h[Fa2 >> 3];
                    if ((Sa2 | 0) < (kb2 | 0)) Sa2 = Sa2 + 1 | 0;
                    else break;
                  }
                }
                if ((ua2 | 0) >= (va2 | 0)) break;
                else {
                  ua2 = ua2 + 1 | 0;
                  ta2 = ta2 + 1 | 0;
                  xa2 = xa2 + 1 | 0;
                }
              }
            }
            g: do
              if (d2) {
                if (!(c[a2 >> 2] | 0)) {
                  ub2 = c[f2 >> 2] | 0;
                  vb2 = g2;
                } else {
                  ub2 = 1;
                  vb2 = e2;
                }
                xa2 = c[vb2 >> 2] | 0;
                ta2 = c[f2 >> 2] | 0;
                if (!(qa2 | (ta2 | 0) > (P2 | 0)) ? !(ja2 | (Q2 | 0) > (c[g2 >> 2] | 0)) : 0) {
                  ua2 = c[J2 >> 2] | 0;
                  va2 = (ua2 + 1 | 0) / 2 | 0;
                  c[F2 >> 2] = va2;
                  wa2 = ua2 - va2 | 0;
                  c[G2 >> 2] = wa2;
                  sa2 = va2 - ka2 | 0;
                  c[L2 >> 2] = sa2;
                  c[K2 >> 2] = ka2;
                  va2 = c[z2 >> 2] | 0;
                  j2 = Q2 + 1 | 0;
                  Sa2 = (va2 | 0) < 0;
                  if (Sa2 ? (xa2 | 0) <= (j2 | 0) : (xa2 | 0) > (Q2 | 0)) {
                    kb2 = P2 + 1 | 0;
                    Ha2 = j2;
                    j2 = va2;
                    Aa2 = wa2;
                    wa2 = sa2;
                    while (1) {
                      c[D2 >> 2] = j2;
                      sa2 = xa2 - Ha2 + 1 | 0;
                      c[E2 >> 2] = sa2;
                      c[N2 >> 2] = (j2 | 0) <= (sa2 | 0) ? j2 : sa2;
                      sa2 = (S(Ha2, l2) | 0) + kb2 | 0;
                      eb(1874, K2, N2, T2 + (sa2 + Aa2 << 3) | 0, n2, $2 + (_2 + wa2 << 3) | 0, B2) | 0;
                      Db(1874, L2, N2, 6152, 6152, la2, B2) | 0;
                      ya2 = (c[L2 >> 2] | 0) + 1 | 0;
                      Sb(2078, 2076, 2084, 2080, K2, N2, 72, X2 + ((c[G2 >> 2] | 0) + 1 + (S(ya2, s2) | 0) << 3) | 0, v2, $2 + (ya2 + x2 << 3) | 0, B2) | 0;
                      ya2 = T2 + (sa2 << 3) | 0;
                      _a(2084, 2080, F2, N2, G2, 72, ga2, v2, ya2, n2, 72, la2, B2) | 0;
                      eb(1874, G2, N2, ya2, n2, $2 + (_2 + (c[F2 >> 2] | 0) << 3) | 0, B2) | 0;
                      Ia2 = (c[F2 >> 2] | 0) + 1 | 0;
                      Sb(2078, 2078, 2084, 2080, G2, N2, 72, X2 + ((S(Ia2, s2) | 0) + 1 << 3) | 0, v2, $2 + (Ia2 + x2 << 3) | 0, B2) | 0;
                      Ia2 = c[F2 >> 2] | 0;
                      c[D2 >> 2] = ua2 - Ia2;
                      Fa2 = c[G2 >> 2] | 0;
                      c[E2 >> 2] = ua2 - Fa2;
                      Ba2 = Ia2 + 1 | 0;
                      _a(2084, 2080, D2, N2, E2, 72, X2 + (Fa2 + 1 + (S(Ba2, s2) | 0) << 3) | 0, v2, T2 + (sa2 + Fa2 << 3) | 0, n2, 72, $2 + (Ba2 + x2 << 3) | 0, B2) | 0;
                      eb(1874, J2, N2, la2, B2, ya2, n2) | 0;
                      ya2 = Ha2 + va2 | 0;
                      if (!(Sa2 ? (xa2 | 0) <= (ya2 | 0) : (xa2 | 0) >= (ya2 | 0))) break;
                      Ha2 = ya2;
                      j2 = c[z2 >> 2] | 0;
                      Aa2 = c[G2 >> 2] | 0;
                      wa2 = c[L2 >> 2] | 0;
                    }
                    wb2 = c[f2 >> 2] | 0;
                  } else wb2 = ta2;
                  wa2 = (P2 | 0) < (wb2 | 0) ? wb2 : P2;
                  Aa2 = wa2 + -1 | 0;
                  j2 = c[w2 >> 2] | 0;
                  Ha2 = (j2 | 0) < 0;
                  h: do
                    if (Ha2 ? (ub2 | 0) >= (Aa2 | 0) : (ub2 | 0) < (wa2 | 0)) {
                      Sa2 = P2 + 1 | 0;
                      va2 = S(Sa2, l2) | 0;
                      kb2 = ub2;
                      ya2 = j2;
                      Ba2 = wb2;
                      while (1) {
                        c[D2 >> 2] = ya2;
                        Fa2 = ((P2 | 0) < (Ba2 | 0) ? Ba2 : P2) - kb2 | 0;
                        c[E2 >> 2] = Fa2;
                        c[N2 >> 2] = (ya2 | 0) <= (Fa2 | 0) ? ya2 : Fa2;
                        Fa2 = T2 + ((S((c[G2 >> 2] | 0) + Sa2 | 0, l2) | 0) + kb2 << 3) | 0;
                        eb(1874, N2, K2, Fa2, n2, Z2 + ((S((c[L2 >> 2] | 0) + 1 | 0, u2) | 0) + 1 << 3) | 0, y2) | 0;
                        Db(1874, N2, L2, 6152, 6152, ma2, y2) | 0;
                        Fa2 = (c[L2 >> 2] | 0) + 1 | 0;
                        Sb(2067, 2076, 2080, 2080, N2, K2, 72, X2 + ((c[G2 >> 2] | 0) + 1 + (S(Fa2, s2) | 0) << 3) | 0, v2, Z2 + ((S(Fa2, u2) | 0) + 1 << 3) | 0, y2) | 0;
                        Fa2 = T2 + (kb2 + va2 << 3) | 0;
                        _a(2080, 2080, N2, F2, G2, 72, Fa2, n2, ga2, v2, 72, ma2, y2) | 0;
                        eb(1874, N2, G2, Fa2, n2, Z2 + ((S((c[F2 >> 2] | 0) + 1 | 0, u2) | 0) + 1 << 3) | 0, y2) | 0;
                        sa2 = c[F2 >> 2] | 0;
                        c[D2 >> 2] = ua2 - sa2;
                        Ia2 = sa2 + 1 | 0;
                        Sb(2067, 2078, 2080, 2080, N2, D2, 72, X2 + ((S(Ia2, s2) | 0) + 1 << 3) | 0, v2, Z2 + ((S(Ia2, u2) | 0) + 1 << 3) | 0, y2) | 0;
                        Ia2 = c[F2 >> 2] | 0;
                        c[D2 >> 2] = ua2 - Ia2;
                        sa2 = c[G2 >> 2] | 0;
                        c[E2 >> 2] = ua2 - sa2;
                        za2 = Ia2 + 1 | 0;
                        _a(2080, 2080, N2, D2, E2, 72, T2 + ((S(sa2 + Sa2 | 0, l2) | 0) + kb2 << 3) | 0, n2, X2 + (sa2 + 1 + (S(za2, s2) | 0) << 3) | 0, v2, 72, Z2 + ((S(za2, u2) | 0) + 1 << 3) | 0, y2) | 0;
                        eb(1874, N2, J2, ma2, y2, Fa2, n2) | 0;
                        Fa2 = kb2 + j2 | 0;
                        if (!(Ha2 ? (Fa2 | 0) >= (Aa2 | 0) : (Fa2 | 0) < (wa2 | 0))) break h;
                        kb2 = Fa2;
                        ya2 = c[w2 >> 2] | 0;
                        Ba2 = c[f2 >> 2] | 0;
                      }
                    }
                  while (0);
                  if (!(c[b2 >> 2] | 0)) break;
                  wa2 = c[p2 >> 2] | 0;
                  Aa2 = c[w2 >> 2] | 0;
                  Ha2 = c[o2 >> 2] | 0;
                  j2 = (Aa2 | 0) < 0;
                  if (!(j2 ? (Ha2 | 0) >= (wa2 | 0) : (Ha2 | 0) <= (wa2 | 0))) break;
                  Ba2 = P2 + 1 | 0;
                  ya2 = S(Ba2, U2) | 0;
                  kb2 = Ha2;
                  Ha2 = Aa2;
                  Sa2 = wa2;
                  while (1) {
                    c[D2 >> 2] = Ha2;
                    va2 = Sa2 - kb2 + 1 | 0;
                    c[E2 >> 2] = va2;
                    c[N2 >> 2] = (Ha2 | 0) <= (va2 | 0) ? Ha2 : va2;
                    va2 = V2 + ((S((c[G2 >> 2] | 0) + Ba2 | 0, U2) | 0) + kb2 << 3) | 0;
                    eb(1874, N2, K2, va2, r2, Z2 + ((S((c[L2 >> 2] | 0) + 1 | 0, u2) | 0) + 1 << 3) | 0, y2) | 0;
                    Db(1874, N2, L2, 6152, 6152, ma2, y2) | 0;
                    va2 = (c[L2 >> 2] | 0) + 1 | 0;
                    Sb(2067, 2076, 2080, 2080, N2, K2, 72, X2 + ((c[G2 >> 2] | 0) + 1 + (S(va2, s2) | 0) << 3) | 0, v2, Z2 + ((S(va2, u2) | 0) + 1 << 3) | 0, y2) | 0;
                    va2 = V2 + (kb2 + ya2 << 3) | 0;
                    _a(2080, 2080, N2, F2, G2, 72, va2, r2, ga2, v2, 72, ma2, y2) | 0;
                    eb(1874, N2, G2, va2, r2, Z2 + ((S((c[F2 >> 2] | 0) + 1 | 0, u2) | 0) + 1 << 3) | 0, y2) | 0;
                    Fa2 = c[F2 >> 2] | 0;
                    c[D2 >> 2] = ua2 - Fa2;
                    za2 = Fa2 + 1 | 0;
                    Sb(2067, 2078, 2080, 2080, N2, D2, 72, X2 + ((S(za2, s2) | 0) + 1 << 3) | 0, v2, Z2 + ((S(za2, u2) | 0) + 1 << 3) | 0, y2) | 0;
                    za2 = c[F2 >> 2] | 0;
                    c[D2 >> 2] = ua2 - za2;
                    Fa2 = c[G2 >> 2] | 0;
                    c[E2 >> 2] = ua2 - Fa2;
                    sa2 = za2 + 1 | 0;
                    _a(2080, 2080, N2, D2, E2, 72, V2 + ((S(Fa2 + Ba2 | 0, U2) | 0) + kb2 << 3) | 0, r2, X2 + (Fa2 + 1 + (S(sa2, s2) | 0) << 3) | 0, v2, 72, Z2 + ((S(sa2, u2) | 0) + 1 << 3) | 0, y2) | 0;
                    eb(1874, N2, J2, ma2, y2, va2, r2) | 0;
                    va2 = kb2 + Aa2 | 0;
                    if (!(j2 ? (va2 | 0) >= (wa2 | 0) : (va2 | 0) <= (wa2 | 0))) break g;
                    kb2 = va2;
                    Ha2 = c[w2 >> 2] | 0;
                    Sa2 = c[p2 >> 2] | 0;
                  }
                }
                Sa2 = ta2 - P2 | 0;
                Ha2 = (Sa2 | 0) > 1 ? Sa2 : 1;
                Sa2 = c[g2 >> 2] | 0;
                kb2 = Q2 - Sa2 | 0;
                c[H2 >> 2] = (c[J2 >> 2] | 0) + 1 - Ha2 - ((kb2 | 0) > 0 ? kb2 : 0);
                kb2 = c[z2 >> 2] | 0;
                wa2 = (Q2 | 0) > (Sa2 | 0) ? Sa2 : Q2;
                Sa2 = wa2 + 1 | 0;
                j2 = (kb2 | 0) < 0;
                i: do
                  if (j2 ? (xa2 | 0) <= (Sa2 | 0) : (xa2 | 0) > (wa2 | 0)) {
                    Aa2 = X2 + ((S(Ha2, s2) | 0) + Ha2 << 3) | 0;
                    Ba2 = Ha2 + P2 | 0;
                    if (j2) {
                      ua2 = Sa2;
                      ya2 = kb2;
                      while (1) {
                        c[D2 >> 2] = ya2;
                        va2 = xa2 - ua2 + 1 | 0;
                        c[E2 >> 2] = va2;
                        c[N2 >> 2] = (ya2 | 0) <= (va2 | 0) ? ya2 : va2;
                        va2 = T2 + (Ba2 + (S(ua2, l2) | 0) << 3) | 0;
                        _a(2084, 2080, H2, N2, H2, 72, Aa2, v2, va2, n2, 6152, la2, B2) | 0;
                        eb(1874, H2, N2, la2, B2, va2, n2) | 0;
                        va2 = ua2 + kb2 | 0;
                        if ((xa2 | 0) > (va2 | 0)) break i;
                        ua2 = va2;
                        ya2 = c[z2 >> 2] | 0;
                      }
                    } else {
                      ya2 = Sa2;
                      ua2 = kb2;
                      while (1) {
                        c[D2 >> 2] = ua2;
                        va2 = xa2 - ya2 + 1 | 0;
                        c[E2 >> 2] = va2;
                        c[N2 >> 2] = (ua2 | 0) <= (va2 | 0) ? ua2 : va2;
                        va2 = T2 + (Ba2 + (S(ya2, l2) | 0) << 3) | 0;
                        _a(2084, 2080, H2, N2, H2, 72, Aa2, v2, va2, n2, 6152, la2, B2) | 0;
                        eb(1874, H2, N2, la2, B2, va2, n2) | 0;
                        va2 = ya2 + kb2 | 0;
                        if ((xa2 | 0) < (va2 | 0)) break i;
                        ya2 = va2;
                        ua2 = c[z2 >> 2] | 0;
                      }
                    }
                  }
                while (0);
                xa2 = c[f2 >> 2] | 0;
                kb2 = (xa2 | 0) < (P2 | 0) ? P2 : xa2;
                Sa2 = kb2 + -1 | 0;
                j2 = c[w2 >> 2] | 0;
                wa2 = (j2 | 0) < 0;
                j: do
                  if (wa2 ? (ub2 | 0) >= (Sa2 | 0) : (ub2 | 0) < (kb2 | 0)) {
                    ta2 = S(Ha2 + P2 | 0, l2) | 0;
                    ua2 = X2 + ((S(Ha2, s2) | 0) + Ha2 << 3) | 0;
                    if (wa2) {
                      ya2 = ub2;
                      Aa2 = j2;
                      Ba2 = xa2;
                      while (1) {
                        c[D2 >> 2] = Aa2;
                        va2 = ((Ba2 | 0) < (P2 | 0) ? P2 : Ba2) - ya2 | 0;
                        c[E2 >> 2] = va2;
                        c[N2 >> 2] = (Aa2 | 0) <= (va2 | 0) ? Aa2 : va2;
                        va2 = T2 + (ya2 + ta2 << 3) | 0;
                        _a(2080, 2080, N2, H2, H2, 72, va2, n2, ua2, v2, 6152, ma2, y2) | 0;
                        eb(1874, N2, H2, ma2, y2, va2, n2) | 0;
                        va2 = ya2 + j2 | 0;
                        if ((va2 | 0) < (Sa2 | 0)) break j;
                        ya2 = va2;
                        Aa2 = c[w2 >> 2] | 0;
                        Ba2 = c[f2 >> 2] | 0;
                      }
                    } else {
                      Ba2 = ub2;
                      Aa2 = j2;
                      ya2 = xa2;
                      while (1) {
                        c[D2 >> 2] = Aa2;
                        va2 = ((ya2 | 0) < (P2 | 0) ? P2 : ya2) - Ba2 | 0;
                        c[E2 >> 2] = va2;
                        c[N2 >> 2] = (Aa2 | 0) <= (va2 | 0) ? Aa2 : va2;
                        va2 = T2 + (Ba2 + ta2 << 3) | 0;
                        _a(2080, 2080, N2, H2, H2, 72, va2, n2, ua2, v2, 6152, ma2, y2) | 0;
                        eb(1874, N2, H2, ma2, y2, va2, n2) | 0;
                        va2 = Ba2 + j2 | 0;
                        if ((va2 | 0) >= (kb2 | 0)) break j;
                        Ba2 = va2;
                        Aa2 = c[w2 >> 2] | 0;
                        ya2 = c[f2 >> 2] | 0;
                      }
                    }
                  }
                while (0);
                if (c[b2 >> 2] | 0 ? (kb2 = c[p2 >> 2] | 0, j2 = c[w2 >> 2] | 0, xa2 = c[o2 >> 2] | 0, Sa2 = (j2 | 0) < 0, Sa2 ? (xa2 | 0) >= (kb2 | 0) : (xa2 | 0) <= (kb2 | 0)) : 0) {
                  wa2 = S(Ha2 + P2 | 0, U2) | 0;
                  ya2 = X2 + ((S(Ha2, s2) | 0) + Ha2 << 3) | 0;
                  if (Sa2) {
                    Sa2 = xa2;
                    Aa2 = j2;
                    Ba2 = kb2;
                    while (1) {
                      c[D2 >> 2] = Aa2;
                      ua2 = Ba2 - Sa2 + 1 | 0;
                      c[E2 >> 2] = ua2;
                      c[N2 >> 2] = (Aa2 | 0) <= (ua2 | 0) ? Aa2 : ua2;
                      ua2 = V2 + (Sa2 + wa2 << 3) | 0;
                      _a(2080, 2080, N2, H2, H2, 72, ua2, r2, ya2, v2, 6152, ma2, y2) | 0;
                      eb(1874, N2, H2, ma2, y2, ua2, r2) | 0;
                      ua2 = Sa2 + j2 | 0;
                      if ((ua2 | 0) < (kb2 | 0)) break g;
                      Sa2 = ua2;
                      Aa2 = c[w2 >> 2] | 0;
                      Ba2 = c[p2 >> 2] | 0;
                    }
                  } else {
                    Ba2 = xa2;
                    Aa2 = j2;
                    Sa2 = kb2;
                    while (1) {
                      c[D2 >> 2] = Aa2;
                      Ha2 = Sa2 - Ba2 + 1 | 0;
                      c[E2 >> 2] = Ha2;
                      c[N2 >> 2] = (Aa2 | 0) <= (Ha2 | 0) ? Aa2 : Ha2;
                      Ha2 = V2 + (Ba2 + wa2 << 3) | 0;
                      _a(2080, 2080, N2, H2, H2, 72, Ha2, r2, ya2, v2, 6152, ma2, y2) | 0;
                      eb(1874, N2, H2, ma2, y2, Ha2, r2) | 0;
                      Ha2 = Ba2 + j2 | 0;
                      if ((Ha2 | 0) > (kb2 | 0)) break g;
                      Ba2 = Ha2;
                      Aa2 = c[w2 >> 2] | 0;
                      Sa2 = c[p2 >> 2] | 0;
                    }
                  }
                }
              }
            while (0);
            Q2 = ba2 + P2 | 0;
            if (!(ca2 ? (Q2 | 0) >= (ea2 | 0) : (Q2 | 0) <= (ea2 | 0))) break;
            P2 = Q2;
            da2 = c[J2 >> 2] | 0;
            A2 = A2 + 1 | 0;
            ra2 = ra2 + ba2 | 0;
          }
          i2 = C2;
          return 0;
        }
        function wb(a2, b2, d2, e2, f2, g2, j2, k2, l2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          g2 = g2 | 0;
          j2 = j2 | 0;
          k2 = k2 | 0;
          l2 = l2 | 0;
          var m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0;
          m2 = i2;
          i2 = i2 + 16 | 0;
          n2 = m2;
          o2 = m2 + 12 | 0;
          p2 = m2 + 8 | 0;
          q2 = e2 + -8 | 0;
          r2 = c[k2 >> 2] | 0;
          s2 = r2 + 1 | 0;
          t2 = j2 + (~r2 << 3) | 0;
          r2 = nc(a2, 2078) | 0;
          c[p2 >> 2] = 0;
          c[o2 >> 2] = 0;
          if (!(+h[g2 >> 3] != 0)) {
            i2 = m2;
            return 0;
          }
          a2 = (r2 | 0) != 0;
          r2 = c[(a2 ? b2 : d2) >> 2] | 0;
          c[p2 >> 2] = r2;
          j2 = c[f2 >> 2] | 0;
          a: do
            if ((r2 | 0) > 0) {
              u2 = (S(j2, r2 + -1 | 0) | 0) + 1 | 0;
              v2 = (j2 | 0) > 0 ? u2 : 1;
              u2 = r2;
              while (1) {
                if (!(+h[q2 + (v2 << 3) >> 3] == 0)) break a;
                w2 = u2;
                u2 = u2 + -1 | 0;
                c[p2 >> 2] = u2;
                if ((w2 | 0) <= 1) break;
                else v2 = v2 - j2 | 0;
              }
            }
          while (0);
          j2 = t2 + (s2 << 3) | 0;
          if (a2) {
            c[o2 >> 2] = jc(p2, d2, j2, k2) | 0;
            if ((c[p2 >> 2] | 0) <= 0) {
              i2 = m2;
              return 0;
            }
            $a(1891, p2, o2, 80, j2, k2, e2, f2, 6160, l2, 396) | 0;
            h[n2 >> 3] = -+h[g2 >> 3];
            ab(p2, o2, n2, e2, f2, l2, 396, j2, k2) | 0;
            i2 = m2;
            return 0;
          } else {
            c[o2 >> 2] = kc(b2, p2, j2, k2) | 0;
            if ((c[p2 >> 2] | 0) <= 0) {
              i2 = m2;
              return 0;
            }
            $a(1969, o2, p2, 80, j2, k2, e2, f2, 6160, l2, 396) | 0;
            h[n2 >> 3] = -+h[g2 >> 3];
            ab(o2, p2, n2, l2, 396, e2, f2, j2, k2) | 0;
            i2 = m2;
            return 0;
          }
          return 0;
        }
        function xb(b2, d2, e2, f2, g2, j2, k2, l2, m2, n2, o2, p2, q2, r2, s2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          g2 = g2 | 0;
          j2 = j2 | 0;
          k2 = k2 | 0;
          l2 = l2 | 0;
          m2 = m2 | 0;
          n2 = n2 | 0;
          o2 = o2 | 0;
          p2 = p2 | 0;
          q2 = q2 | 0;
          r2 = r2 | 0;
          s2 = s2 | 0;
          var t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0, O2 = 0, P2 = 0, Q2 = 0, R2 = 0, T2 = 0, U2 = 0, V2 = 0, W2 = 0, X2 = 0, Y2 = 0, Z2 = 0, _2 = 0, $2 = 0, aa2 = 0, ba2 = 0, ca2 = 0;
          t2 = i2;
          i2 = i2 + 16 | 0;
          u2 = t2 + 8 | 0;
          v2 = t2 + 4 | 0;
          w2 = t2;
          x2 = t2 + 12 | 0;
          y2 = c[m2 >> 2] | 0;
          z2 = y2 + 1 | 0;
          A2 = l2 + (~y2 << 3) | 0;
          l2 = c[o2 >> 2] | 0;
          B2 = l2 + 1 | 0;
          C2 = n2 + (~l2 << 3) | 0;
          l2 = c[q2 >> 2] | 0;
          n2 = l2 + 1 | 0;
          D2 = p2 + (~l2 << 3) | 0;
          p2 = c[s2 >> 2] | 0;
          E2 = p2 + 1 | 0;
          F2 = r2 + (~p2 << 3) | 0;
          if ((c[g2 >> 2] | 0) < 1) {
            i2 = t2;
            return 0;
          }
          if ((c[j2 >> 2] | 0) < 1) {
            i2 = t2;
            return 0;
          }
          r2 = (nc(d2, 2080) | 0) == 0;
          a[x2 >> 0] = r2 ? 78 : 84;
          if (!(nc(f2, 2084) | 0)) {
            if (!(nc(f2, 2067) | 0)) {
              i2 = t2;
              return 0;
            }
            f2 = (nc(e2, 1889) | 0) == 0;
            r2 = (nc(b2, 2078) | 0) != 0;
            if (f2) {
              if (r2) {
                f2 = c[k2 >> 2] | 0;
                c[u2 >> 2] = f2;
                G2 = A2 + (z2 << 3) | 0;
                H2 = jc(k2, g2, G2, m2) | 0;
                c[w2 >> 2] = (f2 | 0) >= (H2 | 0) ? f2 : H2;
                H2 = D2 + (n2 << 3) | 0;
                c[v2 >> 2] = jc(w2, j2, H2, q2) | 0;
                f2 = c[k2 >> 2] | 0;
                c[u2 >> 2] = f2;
                I2 = (c[w2 >> 2] | 0) - f2 | 0;
                if ((f2 | 0) < 1) J2 = I2;
                else {
                  f2 = 1;
                  K2 = I2;
                  while (1) {
                    Ta(v2, D2 + (f2 + l2 + K2 << 3) | 0, q2, F2 + ((S(f2, p2) | 0) + 1 << 3) | 0, 400) | 0;
                    I2 = (c[w2 >> 2] | 0) - (c[k2 >> 2] | 0) | 0;
                    if ((f2 | 0) < (c[u2 >> 2] | 0)) {
                      f2 = f2 + 1 | 0;
                      K2 = I2;
                    } else {
                      J2 = I2;
                      break;
                    }
                  }
                }
                K2 = F2 + (E2 << 3) | 0;
                Sb(1878, 1916, 1891, 1884, v2, k2, 88, A2 + ((S(J2 + 1 | 0, y2) | 0) + 1 << 3) | 0, m2, K2, s2) | 0;
                J2 = c[w2 >> 2] | 0;
                f2 = c[k2 >> 2] | 0;
                if ((J2 | 0) > (f2 | 0)) {
                  c[u2 >> 2] = J2 - f2;
                  _a(1891, 1891, v2, k2, u2, 88, H2, q2, G2, m2, 88, K2, s2) | 0;
                }
                Sb(1878, 1916, x2, 1907, v2, k2, 88, C2 + (B2 << 3) | 0, o2, K2, s2) | 0;
                f2 = c[w2 >> 2] | 0;
                J2 = c[k2 >> 2] | 0;
                if ((f2 | 0) > (J2 | 0)) {
                  c[u2 >> 2] = f2 - J2;
                  _a(1891, 1891, u2, v2, k2, 96, G2, m2, K2, s2, 88, H2, q2) | 0;
                  L2 = c[w2 >> 2] | 0;
                  M2 = c[k2 >> 2] | 0;
                } else {
                  L2 = f2;
                  M2 = J2;
                }
                Sb(1878, 1916, 1969, 1884, v2, k2, 88, A2 + ((S(L2 + 1 - M2 | 0, y2) | 0) + 1 << 3) | 0, m2, K2, s2) | 0;
                K2 = c[k2 >> 2] | 0;
                c[u2 >> 2] = K2;
                if ((K2 | 0) < 1) {
                  i2 = t2;
                  return 0;
                }
                M2 = c[v2 >> 2] | 0;
                L2 = c[w2 >> 2] | 0;
                if ((M2 | 0) < 1) {
                  i2 = t2;
                  return 0;
                } else N2 = 1;
                while (1) {
                  J2 = S(N2, p2) | 0;
                  f2 = 1;
                  while (1) {
                    H2 = D2 + ((S(f2, l2) | 0) + N2 + L2 - K2 << 3) | 0;
                    h[H2 >> 3] = +h[H2 >> 3] - +h[F2 + (f2 + J2 << 3) >> 3];
                    if ((f2 | 0) == (M2 | 0)) break;
                    else f2 = f2 + 1 | 0;
                  }
                  if ((N2 | 0) < (K2 | 0)) N2 = N2 + 1 | 0;
                  else break;
                }
                i2 = t2;
                return 0;
              }
              if (!(nc(b2, 2067) | 0)) {
                i2 = t2;
                return 0;
              }
              N2 = c[k2 >> 2] | 0;
              c[u2 >> 2] = N2;
              K2 = A2 + (z2 << 3) | 0;
              M2 = jc(k2, j2, K2, m2) | 0;
              c[w2 >> 2] = (N2 | 0) >= (M2 | 0) ? N2 : M2;
              M2 = D2 + (n2 << 3) | 0;
              c[v2 >> 2] = kc(g2, w2, M2, q2) | 0;
              N2 = c[k2 >> 2] | 0;
              c[u2 >> 2] = N2;
              L2 = (c[w2 >> 2] | 0) - N2 | 0;
              if ((N2 | 0) < 1) O2 = L2;
              else {
                N2 = 1;
                f2 = L2;
                while (1) {
                  Ta(v2, D2 + ((S(f2 + N2 | 0, l2) | 0) + 1 << 3) | 0, 400, F2 + ((S(N2, p2) | 0) + 1 << 3) | 0, 400) | 0;
                  L2 = (c[w2 >> 2] | 0) - (c[k2 >> 2] | 0) | 0;
                  if ((N2 | 0) < (c[u2 >> 2] | 0)) {
                    N2 = N2 + 1 | 0;
                    f2 = L2;
                  } else {
                    O2 = L2;
                    break;
                  }
                }
              }
              f2 = F2 + (E2 << 3) | 0;
              Sb(1878, 1916, 1891, 1884, v2, k2, 88, A2 + ((S(O2 + 1 | 0, y2) | 0) + 1 << 3) | 0, m2, f2, s2) | 0;
              O2 = c[w2 >> 2] | 0;
              N2 = c[k2 >> 2] | 0;
              if ((O2 | 0) > (N2 | 0)) {
                c[u2 >> 2] = O2 - N2;
                _a(1969, 1891, v2, k2, u2, 88, M2, q2, K2, m2, 88, f2, s2) | 0;
              }
              Sb(1878, 1916, d2, 1907, v2, k2, 88, C2 + (B2 << 3) | 0, o2, f2, s2) | 0;
              N2 = c[w2 >> 2] | 0;
              O2 = c[k2 >> 2] | 0;
              if ((N2 | 0) > (O2 | 0)) {
                c[u2 >> 2] = N2 - O2;
                _a(1969, 1969, v2, u2, k2, 96, f2, s2, K2, m2, 88, M2, q2) | 0;
                P2 = c[w2 >> 2] | 0;
                Q2 = c[k2 >> 2] | 0;
              } else {
                P2 = N2;
                Q2 = O2;
              }
              Sb(1878, 1916, 1969, 1884, v2, k2, 88, A2 + ((S(P2 + 1 - Q2 | 0, y2) | 0) + 1 << 3) | 0, m2, f2, s2) | 0;
              f2 = c[k2 >> 2] | 0;
              c[u2 >> 2] = f2;
              if ((f2 | 0) < 1) {
                i2 = t2;
                return 0;
              }
              Q2 = c[v2 >> 2] | 0;
              P2 = c[w2 >> 2] | 0;
              if ((Q2 | 0) < 1) {
                i2 = t2;
                return 0;
              } else R2 = 1;
              while (1) {
                O2 = S(R2, p2) | 0;
                N2 = S(P2 + R2 - f2 | 0, l2) | 0;
                M2 = 1;
                while (1) {
                  K2 = D2 + (N2 + M2 << 3) | 0;
                  h[K2 >> 3] = +h[K2 >> 3] - +h[F2 + (M2 + O2 << 3) >> 3];
                  if ((M2 | 0) == (Q2 | 0)) break;
                  else M2 = M2 + 1 | 0;
                }
                if ((R2 | 0) < (f2 | 0)) R2 = R2 + 1 | 0;
                else break;
              }
              i2 = t2;
              return 0;
            } else {
              if (r2) {
                r2 = c[k2 >> 2] | 0;
                c[u2 >> 2] = r2;
                R2 = A2 + (z2 << 3) | 0;
                f2 = jc(k2, g2, R2, m2) | 0;
                c[w2 >> 2] = (r2 | 0) >= (f2 | 0) ? r2 : f2;
                c[v2 >> 2] = jc(w2, j2, D2 + (n2 << 3) | 0, q2) | 0;
                f2 = c[k2 >> 2] | 0;
                c[u2 >> 2] = f2;
                if ((f2 | 0) >= 1) {
                  f2 = 1;
                  while (1) {
                    Ta(v2, D2 + (f2 + l2 << 3) | 0, q2, F2 + ((S(f2, p2) | 0) + 1 << 3) | 0, 400) | 0;
                    if ((f2 | 0) < (c[u2 >> 2] | 0)) f2 = f2 + 1 | 0;
                    else break;
                  }
                }
                f2 = F2 + (E2 << 3) | 0;
                Sb(1878, 1901, 1891, 1884, v2, k2, 88, R2, m2, f2, s2) | 0;
                r2 = c[w2 >> 2] | 0;
                Q2 = c[k2 >> 2] | 0;
                if ((r2 | 0) > (Q2 | 0)) {
                  c[u2 >> 2] = r2 - Q2;
                  r2 = Q2 + 1 | 0;
                  _a(1891, 1891, v2, k2, u2, 88, D2 + (r2 + l2 << 3) | 0, q2, A2 + ((S(r2, y2) | 0) + 1 << 3) | 0, m2, 88, f2, s2) | 0;
                }
                Sb(1878, 1901, x2, 1907, v2, k2, 88, C2 + (B2 << 3) | 0, o2, f2, s2) | 0;
                r2 = c[w2 >> 2] | 0;
                Q2 = c[k2 >> 2] | 0;
                if ((r2 | 0) > (Q2 | 0)) {
                  c[u2 >> 2] = r2 - Q2;
                  r2 = Q2 + 1 | 0;
                  _a(1891, 1891, u2, v2, k2, 96, A2 + ((S(r2, y2) | 0) + 1 << 3) | 0, m2, f2, s2, 88, D2 + (r2 + l2 << 3) | 0, q2) | 0;
                }
                Sb(1878, 1901, 1969, 1884, v2, k2, 88, R2, m2, f2, s2) | 0;
                f2 = c[k2 >> 2] | 0;
                c[u2 >> 2] = f2;
                if ((f2 | 0) < 1) {
                  i2 = t2;
                  return 0;
                }
                R2 = c[v2 >> 2] | 0;
                if ((R2 | 0) < 1) {
                  i2 = t2;
                  return 0;
                } else T2 = 1;
                while (1) {
                  r2 = S(T2, p2) | 0;
                  Q2 = 1;
                  while (1) {
                    P2 = D2 + ((S(Q2, l2) | 0) + T2 << 3) | 0;
                    h[P2 >> 3] = +h[P2 >> 3] - +h[F2 + (Q2 + r2 << 3) >> 3];
                    if ((Q2 | 0) == (R2 | 0)) break;
                    else Q2 = Q2 + 1 | 0;
                  }
                  if ((T2 | 0) < (f2 | 0)) T2 = T2 + 1 | 0;
                  else break;
                }
                i2 = t2;
                return 0;
              }
              if (!(nc(b2, 2067) | 0)) {
                i2 = t2;
                return 0;
              }
              T2 = c[k2 >> 2] | 0;
              c[u2 >> 2] = T2;
              f2 = A2 + (z2 << 3) | 0;
              R2 = jc(k2, j2, f2, m2) | 0;
              c[w2 >> 2] = (T2 | 0) >= (R2 | 0) ? T2 : R2;
              c[v2 >> 2] = kc(g2, w2, D2 + (n2 << 3) | 0, q2) | 0;
              R2 = c[k2 >> 2] | 0;
              c[u2 >> 2] = R2;
              if ((R2 | 0) >= 1) {
                R2 = 1;
                while (1) {
                  Ta(v2, D2 + ((S(R2, l2) | 0) + 1 << 3) | 0, 400, F2 + ((S(R2, p2) | 0) + 1 << 3) | 0, 400) | 0;
                  if ((R2 | 0) < (c[u2 >> 2] | 0)) R2 = R2 + 1 | 0;
                  else break;
                }
              }
              R2 = F2 + (E2 << 3) | 0;
              Sb(1878, 1901, 1891, 1884, v2, k2, 88, f2, m2, R2, s2) | 0;
              T2 = c[w2 >> 2] | 0;
              Q2 = c[k2 >> 2] | 0;
              if ((T2 | 0) > (Q2 | 0)) {
                c[u2 >> 2] = T2 - Q2;
                T2 = Q2 + 1 | 0;
                _a(1969, 1891, v2, k2, u2, 88, D2 + ((S(T2, l2) | 0) + 1 << 3) | 0, q2, A2 + ((S(T2, y2) | 0) + 1 << 3) | 0, m2, 88, R2, s2) | 0;
              }
              Sb(1878, 1901, d2, 1907, v2, k2, 88, C2 + (B2 << 3) | 0, o2, R2, s2) | 0;
              T2 = c[w2 >> 2] | 0;
              Q2 = c[k2 >> 2] | 0;
              if ((T2 | 0) > (Q2 | 0)) {
                c[u2 >> 2] = T2 - Q2;
                T2 = Q2 + 1 | 0;
                _a(1969, 1969, v2, u2, k2, 96, R2, s2, A2 + ((S(T2, y2) | 0) + 1 << 3) | 0, m2, 88, D2 + ((S(T2, l2) | 0) + 1 << 3) | 0, q2) | 0;
              }
              Sb(1878, 1901, 1969, 1884, v2, k2, 88, f2, m2, R2, s2) | 0;
              R2 = c[k2 >> 2] | 0;
              c[u2 >> 2] = R2;
              if ((R2 | 0) < 1) {
                i2 = t2;
                return 0;
              }
              f2 = c[v2 >> 2] | 0;
              if ((f2 | 0) < 1) {
                i2 = t2;
                return 0;
              } else U2 = 1;
              while (1) {
                T2 = S(U2, p2) | 0;
                Q2 = S(U2, l2) | 0;
                r2 = 1;
                while (1) {
                  P2 = D2 + (r2 + Q2 << 3) | 0;
                  h[P2 >> 3] = +h[P2 >> 3] - +h[F2 + (r2 + T2 << 3) >> 3];
                  if ((r2 | 0) == (f2 | 0)) break;
                  else r2 = r2 + 1 | 0;
                }
                if ((U2 | 0) < (R2 | 0)) U2 = U2 + 1 | 0;
                else break;
              }
              i2 = t2;
              return 0;
            }
          } else {
            U2 = (nc(e2, 1889) | 0) == 0;
            e2 = (nc(b2, 2078) | 0) != 0;
            if (!U2) {
              if (e2) {
                U2 = c[k2 >> 2] | 0;
                c[u2 >> 2] = U2;
                R2 = A2 + (z2 << 3) | 0;
                f2 = kc(g2, k2, R2, m2) | 0;
                c[w2 >> 2] = (U2 | 0) >= (f2 | 0) ? U2 : f2;
                c[v2 >> 2] = jc(w2, j2, D2 + (n2 << 3) | 0, q2) | 0;
                f2 = c[k2 >> 2] | 0;
                c[u2 >> 2] = f2;
                if ((f2 | 0) >= 1) {
                  f2 = 1;
                  while (1) {
                    Ta(v2, D2 + (f2 + l2 << 3) | 0, q2, F2 + ((S(f2, p2) | 0) + 1 << 3) | 0, 400) | 0;
                    if ((f2 | 0) < (c[u2 >> 2] | 0)) f2 = f2 + 1 | 0;
                    else break;
                  }
                }
                f2 = F2 + (E2 << 3) | 0;
                Sb(1878, 1916, 1969, 1884, v2, k2, 88, R2, m2, f2, s2) | 0;
                U2 = c[w2 >> 2] | 0;
                r2 = c[k2 >> 2] | 0;
                if ((U2 | 0) > (r2 | 0)) {
                  c[u2 >> 2] = U2 - r2;
                  U2 = r2 + 1 | 0;
                  _a(1891, 1969, v2, k2, u2, 88, D2 + (U2 + l2 << 3) | 0, q2, A2 + (U2 + y2 << 3) | 0, m2, 88, f2, s2) | 0;
                }
                Sb(1878, 1901, x2, 1907, v2, k2, 88, C2 + (B2 << 3) | 0, o2, f2, s2) | 0;
                U2 = c[w2 >> 2] | 0;
                r2 = c[k2 >> 2] | 0;
                if ((U2 | 0) > (r2 | 0)) {
                  c[u2 >> 2] = U2 - r2;
                  U2 = r2 + 1 | 0;
                  _a(1969, 1891, u2, v2, k2, 96, A2 + (U2 + y2 << 3) | 0, m2, f2, s2, 88, D2 + (U2 + l2 << 3) | 0, q2) | 0;
                }
                Sb(1878, 1916, 1891, 1884, v2, k2, 88, R2, m2, f2, s2) | 0;
                f2 = c[k2 >> 2] | 0;
                c[u2 >> 2] = f2;
                if ((f2 | 0) < 1) {
                  i2 = t2;
                  return 0;
                }
                R2 = c[v2 >> 2] | 0;
                if ((R2 | 0) < 1) {
                  i2 = t2;
                  return 0;
                } else V2 = 1;
                while (1) {
                  U2 = S(V2, p2) | 0;
                  r2 = 1;
                  while (1) {
                    T2 = D2 + ((S(r2, l2) | 0) + V2 << 3) | 0;
                    h[T2 >> 3] = +h[T2 >> 3] - +h[F2 + (r2 + U2 << 3) >> 3];
                    if ((r2 | 0) == (R2 | 0)) break;
                    else r2 = r2 + 1 | 0;
                  }
                  if ((V2 | 0) < (f2 | 0)) V2 = V2 + 1 | 0;
                  else break;
                }
                i2 = t2;
                return 0;
              }
              if (!(nc(b2, 2067) | 0)) {
                i2 = t2;
                return 0;
              }
              V2 = c[k2 >> 2] | 0;
              c[u2 >> 2] = V2;
              f2 = A2 + (z2 << 3) | 0;
              R2 = kc(j2, k2, f2, m2) | 0;
              c[w2 >> 2] = (V2 | 0) >= (R2 | 0) ? V2 : R2;
              c[v2 >> 2] = kc(g2, w2, D2 + (n2 << 3) | 0, q2) | 0;
              R2 = c[k2 >> 2] | 0;
              c[u2 >> 2] = R2;
              if ((R2 | 0) >= 1) {
                R2 = 1;
                while (1) {
                  Ta(v2, D2 + ((S(R2, l2) | 0) + 1 << 3) | 0, 400, F2 + ((S(R2, p2) | 0) + 1 << 3) | 0, 400) | 0;
                  if ((R2 | 0) < (c[u2 >> 2] | 0)) R2 = R2 + 1 | 0;
                  else break;
                }
              }
              R2 = F2 + (E2 << 3) | 0;
              Sb(1878, 1916, 1969, 1884, v2, k2, 88, f2, m2, R2, s2) | 0;
              V2 = c[w2 >> 2] | 0;
              r2 = c[k2 >> 2] | 0;
              if ((V2 | 0) > (r2 | 0)) {
                c[u2 >> 2] = V2 - r2;
                V2 = r2 + 1 | 0;
                _a(1969, 1969, v2, k2, u2, 88, D2 + ((S(V2, l2) | 0) + 1 << 3) | 0, q2, A2 + (V2 + y2 << 3) | 0, m2, 88, R2, s2) | 0;
              }
              Sb(1878, 1901, d2, 1907, v2, k2, 88, C2 + (B2 << 3) | 0, o2, R2, s2) | 0;
              V2 = c[w2 >> 2] | 0;
              r2 = c[k2 >> 2] | 0;
              if ((V2 | 0) > (r2 | 0)) {
                c[u2 >> 2] = V2 - r2;
                V2 = r2 + 1 | 0;
                _a(1969, 1891, v2, u2, k2, 96, R2, s2, A2 + (V2 + y2 << 3) | 0, m2, 88, D2 + ((S(V2, l2) | 0) + 1 << 3) | 0, q2) | 0;
              }
              Sb(1878, 1916, 1891, 1884, v2, k2, 88, f2, m2, R2, s2) | 0;
              R2 = c[k2 >> 2] | 0;
              c[u2 >> 2] = R2;
              if ((R2 | 0) < 1) {
                i2 = t2;
                return 0;
              }
              f2 = c[v2 >> 2] | 0;
              if ((f2 | 0) < 1) {
                i2 = t2;
                return 0;
              } else W2 = 1;
              while (1) {
                V2 = S(W2, p2) | 0;
                y2 = S(W2, l2) | 0;
                r2 = 1;
                while (1) {
                  U2 = D2 + (r2 + y2 << 3) | 0;
                  h[U2 >> 3] = +h[U2 >> 3] - +h[F2 + (r2 + V2 << 3) >> 3];
                  if ((r2 | 0) == (f2 | 0)) break;
                  else r2 = r2 + 1 | 0;
                }
                if ((W2 | 0) < (R2 | 0)) W2 = W2 + 1 | 0;
                else break;
              }
              i2 = t2;
              return 0;
            }
            if (e2) {
              e2 = c[k2 >> 2] | 0;
              c[u2 >> 2] = e2;
              W2 = A2 + (z2 << 3) | 0;
              R2 = kc(g2, k2, W2, m2) | 0;
              c[w2 >> 2] = (e2 | 0) >= (R2 | 0) ? e2 : R2;
              R2 = D2 + (n2 << 3) | 0;
              c[v2 >> 2] = jc(w2, j2, R2, q2) | 0;
              e2 = c[k2 >> 2] | 0;
              c[u2 >> 2] = e2;
              f2 = (c[w2 >> 2] | 0) - e2 | 0;
              if ((e2 | 0) < 1) X2 = f2;
              else {
                e2 = 1;
                r2 = f2;
                while (1) {
                  Ta(v2, D2 + (e2 + l2 + r2 << 3) | 0, q2, F2 + ((S(e2, p2) | 0) + 1 << 3) | 0, 400) | 0;
                  f2 = (c[w2 >> 2] | 0) - (c[k2 >> 2] | 0) | 0;
                  if ((e2 | 0) < (c[u2 >> 2] | 0)) {
                    e2 = e2 + 1 | 0;
                    r2 = f2;
                  } else {
                    X2 = f2;
                    break;
                  }
                }
              }
              r2 = F2 + (E2 << 3) | 0;
              Sb(1878, 1901, 1969, 1884, v2, k2, 88, A2 + (z2 + X2 << 3) | 0, m2, r2, s2) | 0;
              X2 = c[w2 >> 2] | 0;
              e2 = c[k2 >> 2] | 0;
              if ((X2 | 0) > (e2 | 0)) {
                c[u2 >> 2] = X2 - e2;
                _a(1891, 1969, v2, k2, u2, 88, R2, q2, W2, m2, 88, r2, s2) | 0;
              }
              Sb(1878, 1916, x2, 1907, v2, k2, 88, C2 + (B2 << 3) | 0, o2, r2, s2) | 0;
              x2 = c[w2 >> 2] | 0;
              e2 = c[k2 >> 2] | 0;
              if ((x2 | 0) > (e2 | 0)) {
                c[u2 >> 2] = x2 - e2;
                _a(1969, 1891, u2, v2, k2, 96, W2, m2, r2, s2, 88, R2, q2) | 0;
                Y2 = c[w2 >> 2] | 0;
                Z2 = c[k2 >> 2] | 0;
              } else {
                Y2 = x2;
                Z2 = e2;
              }
              Sb(1878, 1901, 1891, 1884, v2, k2, 88, A2 + (z2 + Y2 - Z2 << 3) | 0, m2, r2, s2) | 0;
              r2 = c[k2 >> 2] | 0;
              c[u2 >> 2] = r2;
              if ((r2 | 0) < 1) {
                i2 = t2;
                return 0;
              }
              Z2 = c[v2 >> 2] | 0;
              Y2 = c[w2 >> 2] | 0;
              if ((Z2 | 0) < 1) {
                i2 = t2;
                return 0;
              } else _2 = 1;
              while (1) {
                e2 = S(_2, p2) | 0;
                x2 = 1;
                while (1) {
                  R2 = D2 + ((S(x2, l2) | 0) + _2 + Y2 - r2 << 3) | 0;
                  h[R2 >> 3] = +h[R2 >> 3] - +h[F2 + (x2 + e2 << 3) >> 3];
                  if ((x2 | 0) == (Z2 | 0)) break;
                  else x2 = x2 + 1 | 0;
                }
                if ((_2 | 0) < (r2 | 0)) _2 = _2 + 1 | 0;
                else break;
              }
              i2 = t2;
              return 0;
            }
            if (!(nc(b2, 2067) | 0)) {
              i2 = t2;
              return 0;
            }
            b2 = c[k2 >> 2] | 0;
            c[u2 >> 2] = b2;
            _2 = A2 + (z2 << 3) | 0;
            r2 = kc(j2, k2, _2, m2) | 0;
            c[w2 >> 2] = (b2 | 0) >= (r2 | 0) ? b2 : r2;
            r2 = D2 + (n2 << 3) | 0;
            c[v2 >> 2] = kc(g2, w2, r2, q2) | 0;
            g2 = c[k2 >> 2] | 0;
            c[u2 >> 2] = g2;
            if ((g2 | 0) < 1) $2 = g2;
            else {
              n2 = 1;
              b2 = g2;
              while (1) {
                Ta(v2, D2 + ((S((c[j2 >> 2] | 0) + n2 - b2 | 0, l2) | 0) + 1 << 3) | 0, 400, F2 + ((S(n2, p2) | 0) + 1 << 3) | 0, 400) | 0;
                if ((n2 | 0) >= (c[u2 >> 2] | 0)) break;
                n2 = n2 + 1 | 0;
                b2 = c[k2 >> 2] | 0;
              }
              $2 = c[k2 >> 2] | 0;
            }
            b2 = F2 + (E2 << 3) | 0;
            Sb(1878, 1901, 1969, 1884, v2, k2, 88, A2 + (z2 + (c[w2 >> 2] | 0) - $2 << 3) | 0, m2, b2, s2) | 0;
            $2 = c[w2 >> 2] | 0;
            E2 = c[k2 >> 2] | 0;
            if (($2 | 0) > (E2 | 0)) {
              c[u2 >> 2] = $2 - E2;
              _a(1969, 1969, v2, k2, u2, 88, r2, q2, _2, m2, 88, b2, s2) | 0;
            }
            Sb(1878, 1916, d2, 1907, v2, k2, 88, C2 + (B2 << 3) | 0, o2, b2, s2) | 0;
            o2 = c[w2 >> 2] | 0;
            B2 = c[k2 >> 2] | 0;
            if ((o2 | 0) > (B2 | 0)) {
              c[u2 >> 2] = o2 - B2;
              _a(1969, 1891, v2, u2, k2, 96, b2, s2, _2, m2, 88, r2, q2) | 0;
              aa2 = c[w2 >> 2] | 0;
              ba2 = c[k2 >> 2] | 0;
            } else {
              aa2 = o2;
              ba2 = B2;
            }
            Sb(1878, 1901, 1891, 1884, v2, k2, 88, A2 + (z2 + aa2 - ba2 << 3) | 0, m2, b2, s2) | 0;
            s2 = c[k2 >> 2] | 0;
            c[u2 >> 2] = s2;
            if ((s2 | 0) < 1) {
              i2 = t2;
              return 0;
            }
            u2 = c[v2 >> 2] | 0;
            v2 = c[w2 >> 2] | 0;
            if ((u2 | 0) < 1) {
              i2 = t2;
              return 0;
            } else ca2 = 1;
            while (1) {
              w2 = S(ca2, p2) | 0;
              k2 = S(v2 + ca2 - s2 | 0, l2) | 0;
              b2 = 1;
              while (1) {
                m2 = D2 + (k2 + b2 << 3) | 0;
                h[m2 >> 3] = +h[m2 >> 3] - +h[F2 + (b2 + w2 << 3) >> 3];
                if ((b2 | 0) == (u2 | 0)) break;
                else b2 = b2 + 1 | 0;
              }
              if ((ca2 | 0) < (s2 | 0)) ca2 = ca2 + 1 | 0;
              else break;
            }
            i2 = t2;
            return 0;
          }
          return 0;
        }
        function yb(a2, b2, d2, e2, f2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          var g2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0;
          g2 = i2;
          i2 = i2 + 32 | 0;
          j2 = g2 + 24 | 0;
          k2 = g2 + 16 | 0;
          l2 = g2 + 8 | 0;
          m2 = g2;
          n2 = c[a2 >> 2] | 0;
          if ((n2 | 0) < 2) {
            h[f2 >> 3] = 0;
            i2 = g2;
            return 0;
          }
          c[j2 >> 2] = n2 + -1;
          o2 = +Gb(j2, d2, e2);
          h[l2 >> 3] = o2;
          if (o2 == 0) {
            h[f2 >> 3] = 0;
            i2 = g2;
            return 0;
          }
          h[k2 >> 3] = +pb(b2, l2);
          o2 = +Ra(k2, b2);
          p2 = -o2;
          q2 = +lb(2026);
          r2 = q2 / +lb(1922);
          if ((o2 <= -0 ? p2 : o2) < r2) {
            h[m2 >> 3] = 1 / r2;
            o2 = p2;
            n2 = 0;
            do {
              n2 = n2 + 1 | 0;
              c[j2 >> 2] = (c[a2 >> 2] | 0) + -1;
              Ob(j2, m2, d2, e2) | 0;
              q2 = +h[m2 >> 3];
              o2 = o2 * q2;
              h[b2 >> 3] = q2 * +h[b2 >> 3];
            } while ((o2 >= 0 ? o2 : -o2) < r2);
            c[j2 >> 2] = (c[a2 >> 2] | 0) + -1;
            h[l2 >> 3] = +Gb(j2, d2, e2);
            h[k2 >> 3] = +pb(b2, l2);
            s2 = -+Ra(k2, b2);
            t2 = n2;
          } else {
            s2 = p2;
            t2 = 0;
          }
          h[f2 >> 3] = (s2 - +h[b2 >> 3]) / s2;
          c[j2 >> 2] = (c[a2 >> 2] | 0) + -1;
          h[k2 >> 3] = 1 / (+h[b2 >> 3] - s2);
          Ob(j2, k2, d2, e2) | 0;
          c[j2 >> 2] = t2;
          if ((t2 | 0) < 1) u2 = s2;
          else {
            j2 = 1;
            p2 = s2;
            while (1) {
              s2 = r2 * p2;
              if ((j2 | 0) < (t2 | 0)) {
                j2 = j2 + 1 | 0;
                p2 = s2;
              } else {
                u2 = s2;
                break;
              }
            }
          }
          h[b2 >> 3] = u2;
          i2 = g2;
          return 0;
        }
        function zb(a2, b2, d2, e2, f2, g2, j2, k2, l2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          g2 = g2 | 0;
          j2 = j2 | 0;
          k2 = k2 | 0;
          l2 = l2 | 0;
          var m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0, O2 = 0, P2 = 0, Q2 = 0, R2 = 0, T2 = 0, U2 = 0, V2 = 0, W2 = 0, X2 = 0, Y2 = 0, Z2 = 0, _2 = 0, $2 = 0, aa2 = 0;
          m2 = i2;
          i2 = i2 + 32 | 0;
          n2 = m2 + 16 | 0;
          o2 = m2 + 12 | 0;
          p2 = m2 + 8 | 0;
          q2 = m2;
          r2 = c[g2 >> 2] | 0;
          s2 = f2 + (~r2 << 3) | 0;
          f2 = j2 + -8 | 0;
          j2 = c[l2 >> 2] | 0;
          t2 = j2 + 1 | 0;
          u2 = k2 + (~j2 << 3) | 0;
          if (!(c[d2 >> 2] | 0)) {
            i2 = m2;
            return 0;
          }
          if (nc(a2, 1889) | 0) {
            a2 = c[d2 >> 2] | 0;
            v2 = c[e2 >> 2] | 0;
            c[n2 >> 2] = v2;
            if ((v2 | 0) < 1) {
              i2 = m2;
              return 0;
            }
            v2 = u2 + (t2 << 3) | 0;
            w2 = a2;
            a2 = -1;
            x2 = 1;
            y2 = 0;
            while (1) {
              z2 = (x2 | 0) >= (w2 | 0) ? x2 : w2;
              A2 = f2 + (x2 << 3) | 0;
              if (!(+h[A2 >> 3] == 0)) {
                B2 = S(x2, r2) | 0;
                C2 = s2 + (B2 + x2 << 3) | 0;
                D2 = +h[C2 >> 3];
                h[C2 >> 3] = 1;
                E2 = (nc(b2, 2084) | 0) == 0;
                F2 = x2 + 1 | 0;
                c[o2 >> 2] = F2;
                G2 = c[d2 >> 2] | 0;
                H2 = (G2 | 0) <= (x2 | 0);
                if (E2) {
                  a: do
                    if (H2) I2 = G2;
                    else {
                      E2 = G2;
                      while (1) {
                        if (+h[s2 + ((S(E2, r2) | 0) + x2 << 3) >> 3] != 0) {
                          I2 = E2;
                          break a;
                        }
                        J2 = E2 + -1 | 0;
                        if ((E2 | 0) > (F2 | 0)) E2 = J2;
                        else {
                          I2 = J2;
                          break;
                        }
                      }
                    }
                  while (0);
                  E2 = x2 + -1 | 0;
                  c[o2 >> 2] = E2;
                  c[p2 >> 2] = a2 + 1 + ((I2 | 0) <= (z2 | 0) ? I2 : z2);
                  h[q2 >> 3] = -+h[A2 >> 3];
                  J2 = S(x2, j2) | 0;
                  K2 = u2 + (J2 + 1 << 3) | 0;
                  $a(1969, o2, p2, q2, s2 + (B2 + 1 << 3) | 0, g2, C2, g2, 6168, K2, 404) | 0;
                  L2 = I2;
                  M2 = E2;
                  N2 = J2;
                  O2 = K2;
                } else {
                  b: do
                    if (H2) P2 = G2;
                    else {
                      K2 = G2;
                      while (1) {
                        if (+h[s2 + (K2 + B2 << 3) >> 3] != 0) {
                          P2 = K2;
                          break b;
                        }
                        J2 = K2 + -1 | 0;
                        if ((K2 | 0) > (F2 | 0)) K2 = J2;
                        else {
                          P2 = J2;
                          break;
                        }
                      }
                    }
                  while (0);
                  c[o2 >> 2] = a2 + 1 + ((P2 | 0) <= (z2 | 0) ? P2 : z2);
                  F2 = x2 + -1 | 0;
                  c[p2 >> 2] = F2;
                  h[q2 >> 3] = -+h[A2 >> 3];
                  B2 = S(x2, j2) | 0;
                  G2 = u2 + (B2 + 1 << 3) | 0;
                  $a(1891, o2, p2, q2, s2 + (x2 + r2 << 3) | 0, g2, C2, 404, 6168, G2, 404) | 0;
                  L2 = P2;
                  M2 = F2;
                  N2 = B2;
                  O2 = G2;
                }
                h[C2 >> 3] = D2;
                c[o2 >> 2] = M2;
                Tb(1901, 1969, 1907, o2, v2, l2, O2, 404) | 0;
                h[u2 + (N2 + x2 << 3) >> 3] = +h[A2 >> 3];
                if ((x2 | 0) > 1) Q2 = (z2 | 0) >= (L2 | 0) ? z2 : L2;
                else Q2 = L2;
              } else {
                G2 = k2 + ((S(j2, y2) | 0) << 3) | 0;
                c[o2 >> 2] = x2;
                je(G2 | 0, 0, ((x2 | 0) > 1 ? x2 : 1) << 3 | 0) | 0;
                Q2 = z2;
              }
              if ((x2 | 0) < (c[n2 >> 2] | 0)) {
                w2 = Q2;
                a2 = ~x2;
                x2 = x2 + 1 | 0;
                y2 = y2 + 1 | 0;
              } else break;
            }
            i2 = m2;
            return 0;
          }
          y2 = c[e2 >> 2] | 0;
          if ((y2 | 0) <= 0) {
            i2 = m2;
            return 0;
          }
          x2 = k2 + ((S(y2, t2) | 0) + -1 - j2 << 3) | 0;
          t2 = -8 - (j2 << 3) | 0;
          k2 = 1 - y2 | 0;
          a2 = y2;
          Q2 = 1;
          w2 = y2;
          L2 = 0;
          while (1) {
            N2 = x2 + (S(t2, L2) | 0) | 0;
            O2 = y2 - L2 | 0;
            v2 = k2 + L2 | 0;
            M2 = f2 + (a2 << 3) | 0;
            if (+h[M2 >> 3] == 0) {
              c[n2 >> 2] = w2;
              if ((a2 | 0) > (w2 | 0)) R2 = Q2;
              else {
                je(N2 | 0, 0, ((w2 | 0) > (O2 | 0) ? w2 : O2) + v2 << 3 | 0) | 0;
                R2 = Q2;
              }
            } else {
              if ((a2 | 0) < (w2 | 0)) {
                v2 = (nc(b2, 2084) | 0) == 0;
                O2 = c[d2 >> 2] | 0;
                N2 = c[e2 >> 2] | 0;
                P2 = O2 - N2 + a2 | 0;
                if (v2) {
                  v2 = s2 + ((S(P2, r2) | 0) + a2 << 3) | 0;
                  T2 = +h[v2 >> 3];
                  h[v2 >> 3] = 1;
                  v2 = a2 + -1 | 0;
                  c[n2 >> 2] = v2;
                  c: do
                    if ((a2 | 0) < 2) U2 = 1;
                    else {
                      p2 = 1;
                      while (1) {
                        if (+h[s2 + ((S(p2, r2) | 0) + a2 << 3) >> 3] != 0) {
                          U2 = p2;
                          break c;
                        }
                        I2 = p2 + 1 | 0;
                        if ((p2 | 0) < (v2 | 0)) p2 = I2;
                        else {
                          U2 = I2;
                          break;
                        }
                      }
                    }
                  while (0);
                  v2 = (U2 | 0) >= (Q2 | 0) ? U2 : Q2;
                  c[n2 >> 2] = N2 - a2;
                  z2 = a2 + 1 | 0;
                  c[o2 >> 2] = z2 - v2 - N2 + O2;
                  h[q2 >> 3] = -+h[M2 >> 3];
                  A2 = S(v2, r2) | 0;
                  v2 = S(a2, j2) | 0;
                  C2 = u2 + (z2 + v2 << 3) | 0;
                  $a(1969, n2, o2, q2, s2 + (A2 + z2 << 3) | 0, g2, s2 + (A2 + a2 << 3) | 0, g2, 6168, C2, 404) | 0;
                  A2 = c[e2 >> 2] | 0;
                  h[s2 + ((S((c[d2 >> 2] | 0) + a2 - A2 | 0, r2) | 0) + a2 << 3) >> 3] = T2;
                  V2 = U2;
                  W2 = v2;
                  X2 = C2;
                  Y2 = z2;
                  Z2 = A2;
                } else {
                  A2 = S(a2, r2) | 0;
                  z2 = s2 + (P2 + A2 << 3) | 0;
                  D2 = +h[z2 >> 3];
                  h[z2 >> 3] = 1;
                  z2 = a2 + -1 | 0;
                  c[n2 >> 2] = z2;
                  d: do
                    if ((a2 | 0) < 2) _2 = 1;
                    else {
                      C2 = 1;
                      while (1) {
                        if (+h[s2 + (C2 + A2 << 3) >> 3] != 0) {
                          _2 = C2;
                          break d;
                        }
                        v2 = C2 + 1 | 0;
                        if ((C2 | 0) < (z2 | 0)) C2 = v2;
                        else {
                          _2 = v2;
                          break;
                        }
                      }
                    }
                  while (0);
                  z2 = (_2 | 0) >= (Q2 | 0) ? _2 : Q2;
                  P2 = a2 + 1 | 0;
                  c[n2 >> 2] = P2 - z2 + O2 - N2;
                  c[o2 >> 2] = N2 - a2;
                  h[q2 >> 3] = -+h[M2 >> 3];
                  C2 = S(a2, j2) | 0;
                  v2 = u2 + (P2 + C2 << 3) | 0;
                  $a(1891, n2, o2, q2, s2 + (z2 + (S(P2, r2) | 0) << 3) | 0, g2, s2 + (z2 + A2 << 3) | 0, 404, 6168, v2, 404) | 0;
                  z2 = c[e2 >> 2] | 0;
                  h[s2 + (A2 + a2 + (c[d2 >> 2] | 0) - z2 << 3) >> 3] = D2;
                  V2 = _2;
                  W2 = C2;
                  X2 = v2;
                  Y2 = P2;
                  Z2 = z2;
                }
                c[n2 >> 2] = Z2 - a2;
                Tb(1916, 1969, 1907, n2, u2 + ((S(Y2, j2) | 0) + Y2 << 3) | 0, l2, X2, 404) | 0;
                if ((a2 | 0) > 1) {
                  $2 = (Q2 | 0) <= (V2 | 0) ? Q2 : V2;
                  aa2 = W2;
                } else {
                  $2 = V2;
                  aa2 = W2;
                }
              } else {
                $2 = Q2;
                aa2 = S(a2, j2) | 0;
              }
              h[u2 + (aa2 + a2 << 3) >> 3] = +h[M2 >> 3];
              R2 = $2;
            }
            if ((a2 | 0) <= 1) break;
            a2 = a2 + -1 | 0;
            Q2 = R2;
            w2 = c[e2 >> 2] | 0;
            L2 = L2 + 1 | 0;
          }
          i2 = m2;
          return 0;
        }
        function Ab(a2, b2, d2, e2, f2, g2, i3, j2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          g2 = g2 | 0;
          i3 = i3 | 0;
          j2 = j2 | 0;
          var k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0, O2 = 0, P2 = 0, Q2 = 0, R2 = 0, T2 = 0, U2 = 0, V2 = 0, W2 = 0, X2 = 0, Y2 = 0, Z2 = 0, _2 = 0, $2 = 0, aa2 = 0, ba2 = 0, ca2 = 0, da2 = 0, ea2 = 0, fa2 = 0, ga2 = 0, ha2 = 0, ia2 = 0, ja2 = 0, ka2 = 0, la2 = 0, ma2 = 0, na2 = 0, oa2 = 0, pa2 = 0;
          k2 = c[i3 >> 2] | 0;
          l2 = k2 + 1 | 0;
          m2 = g2 + (~k2 << 3) | 0;
          if (+h[f2 >> 3] == 0) return 0;
          if (!(nc(a2, 2078) | 0))
            do
              switch (c[d2 >> 2] | 0) {
                case 1: {
                  n2 = +h[e2 >> 3];
                  o2 = 1 - n2 * (+h[f2 >> 3] * n2);
                  p2 = c[b2 >> 2] | 0;
                  if ((p2 | 0) < 1) return 0;
                  else q2 = 1;
                  while (1) {
                    r2 = m2 + (q2 + k2 << 3) | 0;
                    h[r2 >> 3] = o2 * +h[r2 >> 3];
                    if ((q2 | 0) == (p2 | 0)) break;
                    else q2 = q2 + 1 | 0;
                  }
                  return 0;
                }
                case 2: {
                  o2 = +h[e2 >> 3];
                  n2 = +h[f2 >> 3];
                  s2 = o2 * n2;
                  t2 = +h[e2 + 8 >> 3];
                  u2 = n2 * t2;
                  p2 = c[b2 >> 2] | 0;
                  if ((p2 | 0) < 1) return 0;
                  r2 = k2 << 1;
                  v2 = 1;
                  while (1) {
                    w2 = m2 + (v2 + k2 << 3) | 0;
                    n2 = +h[w2 >> 3];
                    x2 = m2 + (v2 + r2 << 3) | 0;
                    y2 = o2 * n2 + t2 * +h[x2 >> 3];
                    h[w2 >> 3] = n2 - s2 * y2;
                    h[x2 >> 3] = +h[x2 >> 3] - u2 * y2;
                    if ((v2 | 0) == (p2 | 0)) break;
                    else v2 = v2 + 1 | 0;
                  }
                  return 0;
                }
                case 3: {
                  u2 = +h[e2 >> 3];
                  s2 = +h[f2 >> 3];
                  t2 = u2 * s2;
                  o2 = +h[e2 + 8 >> 3];
                  y2 = s2 * o2;
                  n2 = +h[e2 + 16 >> 3];
                  z2 = s2 * n2;
                  v2 = c[b2 >> 2] | 0;
                  if ((v2 | 0) < 1) return 0;
                  p2 = k2 << 1;
                  r2 = k2 * 3 | 0;
                  x2 = 1;
                  while (1) {
                    w2 = m2 + (x2 + k2 << 3) | 0;
                    s2 = +h[w2 >> 3];
                    A2 = m2 + (x2 + p2 << 3) | 0;
                    B2 = m2 + (x2 + r2 << 3) | 0;
                    C2 = u2 * s2 + o2 * +h[A2 >> 3] + n2 * +h[B2 >> 3];
                    h[w2 >> 3] = s2 - t2 * C2;
                    h[A2 >> 3] = +h[A2 >> 3] - y2 * C2;
                    h[B2 >> 3] = +h[B2 >> 3] - z2 * C2;
                    if ((x2 | 0) == (v2 | 0)) break;
                    else x2 = x2 + 1 | 0;
                  }
                  return 0;
                }
                case 4: {
                  z2 = +h[e2 >> 3];
                  y2 = +h[f2 >> 3];
                  t2 = z2 * y2;
                  n2 = +h[e2 + 8 >> 3];
                  o2 = y2 * n2;
                  u2 = +h[e2 + 16 >> 3];
                  C2 = y2 * u2;
                  s2 = +h[e2 + 24 >> 3];
                  D2 = y2 * s2;
                  x2 = c[b2 >> 2] | 0;
                  if ((x2 | 0) < 1) return 0;
                  v2 = k2 << 1;
                  r2 = k2 * 3 | 0;
                  p2 = k2 << 2;
                  B2 = 1;
                  while (1) {
                    A2 = m2 + (B2 + k2 << 3) | 0;
                    y2 = +h[A2 >> 3];
                    w2 = m2 + (B2 + v2 << 3) | 0;
                    E2 = m2 + (B2 + r2 << 3) | 0;
                    F2 = m2 + (B2 + p2 << 3) | 0;
                    G2 = z2 * y2 + n2 * +h[w2 >> 3] + u2 * +h[E2 >> 3] + s2 * +h[F2 >> 3];
                    h[A2 >> 3] = y2 - t2 * G2;
                    h[w2 >> 3] = +h[w2 >> 3] - o2 * G2;
                    h[E2 >> 3] = +h[E2 >> 3] - C2 * G2;
                    h[F2 >> 3] = +h[F2 >> 3] - D2 * G2;
                    if ((B2 | 0) == (x2 | 0)) break;
                    else B2 = B2 + 1 | 0;
                  }
                  return 0;
                }
                case 5: {
                  D2 = +h[e2 >> 3];
                  C2 = +h[f2 >> 3];
                  o2 = D2 * C2;
                  t2 = +h[e2 + 8 >> 3];
                  s2 = C2 * t2;
                  u2 = +h[e2 + 16 >> 3];
                  n2 = C2 * u2;
                  z2 = +h[e2 + 24 >> 3];
                  G2 = C2 * z2;
                  y2 = +h[e2 + 32 >> 3];
                  H2 = C2 * y2;
                  B2 = c[b2 >> 2] | 0;
                  if ((B2 | 0) < 1) return 0;
                  x2 = k2 << 1;
                  p2 = k2 * 3 | 0;
                  r2 = k2 << 2;
                  v2 = k2 * 5 | 0;
                  F2 = 1;
                  while (1) {
                    E2 = m2 + (F2 + k2 << 3) | 0;
                    C2 = +h[E2 >> 3];
                    w2 = m2 + (F2 + x2 << 3) | 0;
                    A2 = m2 + (F2 + p2 << 3) | 0;
                    I2 = m2 + (F2 + r2 << 3) | 0;
                    J2 = m2 + (F2 + v2 << 3) | 0;
                    K2 = D2 * C2 + t2 * +h[w2 >> 3] + u2 * +h[A2 >> 3] + z2 * +h[I2 >> 3] + y2 * +h[J2 >> 3];
                    h[E2 >> 3] = C2 - o2 * K2;
                    h[w2 >> 3] = +h[w2 >> 3] - s2 * K2;
                    h[A2 >> 3] = +h[A2 >> 3] - n2 * K2;
                    h[I2 >> 3] = +h[I2 >> 3] - G2 * K2;
                    h[J2 >> 3] = +h[J2 >> 3] - H2 * K2;
                    if ((F2 | 0) == (B2 | 0)) break;
                    else F2 = F2 + 1 | 0;
                  }
                  return 0;
                }
                case 6: {
                  H2 = +h[e2 >> 3];
                  G2 = +h[f2 >> 3];
                  n2 = H2 * G2;
                  s2 = +h[e2 + 8 >> 3];
                  o2 = G2 * s2;
                  y2 = +h[e2 + 16 >> 3];
                  z2 = G2 * y2;
                  u2 = +h[e2 + 24 >> 3];
                  t2 = G2 * u2;
                  D2 = +h[e2 + 32 >> 3];
                  K2 = G2 * D2;
                  C2 = +h[e2 + 40 >> 3];
                  L2 = G2 * C2;
                  F2 = c[b2 >> 2] | 0;
                  if ((F2 | 0) < 1) return 0;
                  B2 = k2 << 1;
                  v2 = k2 * 3 | 0;
                  r2 = k2 << 2;
                  p2 = k2 * 5 | 0;
                  x2 = k2 * 6 | 0;
                  J2 = 1;
                  while (1) {
                    I2 = m2 + (J2 + k2 << 3) | 0;
                    G2 = +h[I2 >> 3];
                    A2 = m2 + (J2 + B2 << 3) | 0;
                    w2 = m2 + (J2 + v2 << 3) | 0;
                    E2 = m2 + (J2 + r2 << 3) | 0;
                    M2 = m2 + (J2 + p2 << 3) | 0;
                    N2 = m2 + (J2 + x2 << 3) | 0;
                    O2 = H2 * G2 + s2 * +h[A2 >> 3] + y2 * +h[w2 >> 3] + u2 * +h[E2 >> 3] + D2 * +h[M2 >> 3] + C2 * +h[N2 >> 3];
                    h[I2 >> 3] = G2 - n2 * O2;
                    h[A2 >> 3] = +h[A2 >> 3] - o2 * O2;
                    h[w2 >> 3] = +h[w2 >> 3] - z2 * O2;
                    h[E2 >> 3] = +h[E2 >> 3] - t2 * O2;
                    h[M2 >> 3] = +h[M2 >> 3] - K2 * O2;
                    h[N2 >> 3] = +h[N2 >> 3] - L2 * O2;
                    if ((J2 | 0) == (F2 | 0)) break;
                    else J2 = J2 + 1 | 0;
                  }
                  return 0;
                }
                case 7: {
                  L2 = +h[e2 >> 3];
                  K2 = +h[f2 >> 3];
                  t2 = L2 * K2;
                  z2 = +h[e2 + 8 >> 3];
                  o2 = K2 * z2;
                  n2 = +h[e2 + 16 >> 3];
                  C2 = K2 * n2;
                  D2 = +h[e2 + 24 >> 3];
                  u2 = K2 * D2;
                  y2 = +h[e2 + 32 >> 3];
                  s2 = K2 * y2;
                  H2 = +h[e2 + 40 >> 3];
                  O2 = K2 * H2;
                  G2 = +h[e2 + 48 >> 3];
                  P2 = K2 * G2;
                  J2 = c[b2 >> 2] | 0;
                  if ((J2 | 0) < 1) return 0;
                  F2 = k2 << 1;
                  x2 = k2 * 3 | 0;
                  p2 = k2 << 2;
                  r2 = k2 * 5 | 0;
                  v2 = k2 * 6 | 0;
                  B2 = k2 * 7 | 0;
                  N2 = 1;
                  while (1) {
                    M2 = m2 + (N2 + k2 << 3) | 0;
                    K2 = +h[M2 >> 3];
                    E2 = m2 + (N2 + F2 << 3) | 0;
                    w2 = m2 + (N2 + x2 << 3) | 0;
                    A2 = m2 + (N2 + p2 << 3) | 0;
                    I2 = m2 + (N2 + r2 << 3) | 0;
                    Q2 = m2 + (N2 + v2 << 3) | 0;
                    R2 = m2 + (N2 + B2 << 3) | 0;
                    T2 = L2 * K2 + z2 * +h[E2 >> 3] + n2 * +h[w2 >> 3] + D2 * +h[A2 >> 3] + y2 * +h[I2 >> 3] + H2 * +h[Q2 >> 3] + G2 * +h[R2 >> 3];
                    h[M2 >> 3] = K2 - t2 * T2;
                    h[E2 >> 3] = +h[E2 >> 3] - o2 * T2;
                    h[w2 >> 3] = +h[w2 >> 3] - C2 * T2;
                    h[A2 >> 3] = +h[A2 >> 3] - u2 * T2;
                    h[I2 >> 3] = +h[I2 >> 3] - s2 * T2;
                    h[Q2 >> 3] = +h[Q2 >> 3] - O2 * T2;
                    h[R2 >> 3] = +h[R2 >> 3] - P2 * T2;
                    if ((N2 | 0) == (J2 | 0)) break;
                    else N2 = N2 + 1 | 0;
                  }
                  return 0;
                }
                case 8: {
                  P2 = +h[e2 >> 3];
                  O2 = +h[f2 >> 3];
                  s2 = P2 * O2;
                  u2 = +h[e2 + 8 >> 3];
                  C2 = O2 * u2;
                  o2 = +h[e2 + 16 >> 3];
                  t2 = O2 * o2;
                  G2 = +h[e2 + 24 >> 3];
                  H2 = O2 * G2;
                  y2 = +h[e2 + 32 >> 3];
                  D2 = O2 * y2;
                  n2 = +h[e2 + 40 >> 3];
                  z2 = O2 * n2;
                  L2 = +h[e2 + 48 >> 3];
                  T2 = O2 * L2;
                  K2 = +h[e2 + 56 >> 3];
                  U2 = O2 * K2;
                  N2 = c[b2 >> 2] | 0;
                  if ((N2 | 0) < 1) return 0;
                  J2 = k2 << 1;
                  B2 = k2 * 3 | 0;
                  v2 = k2 << 2;
                  r2 = k2 * 5 | 0;
                  p2 = k2 * 6 | 0;
                  x2 = k2 * 7 | 0;
                  F2 = k2 << 3;
                  R2 = 1;
                  while (1) {
                    Q2 = m2 + (R2 + k2 << 3) | 0;
                    O2 = +h[Q2 >> 3];
                    I2 = m2 + (R2 + J2 << 3) | 0;
                    A2 = m2 + (R2 + B2 << 3) | 0;
                    w2 = m2 + (R2 + v2 << 3) | 0;
                    E2 = m2 + (R2 + r2 << 3) | 0;
                    M2 = m2 + (R2 + p2 << 3) | 0;
                    V2 = m2 + (R2 + x2 << 3) | 0;
                    W2 = m2 + (R2 + F2 << 3) | 0;
                    X2 = P2 * O2 + u2 * +h[I2 >> 3] + o2 * +h[A2 >> 3] + G2 * +h[w2 >> 3] + y2 * +h[E2 >> 3] + n2 * +h[M2 >> 3] + L2 * +h[V2 >> 3] + K2 * +h[W2 >> 3];
                    h[Q2 >> 3] = O2 - s2 * X2;
                    h[I2 >> 3] = +h[I2 >> 3] - C2 * X2;
                    h[A2 >> 3] = +h[A2 >> 3] - t2 * X2;
                    h[w2 >> 3] = +h[w2 >> 3] - H2 * X2;
                    h[E2 >> 3] = +h[E2 >> 3] - D2 * X2;
                    h[M2 >> 3] = +h[M2 >> 3] - z2 * X2;
                    h[V2 >> 3] = +h[V2 >> 3] - T2 * X2;
                    h[W2 >> 3] = +h[W2 >> 3] - U2 * X2;
                    if ((R2 | 0) == (N2 | 0)) break;
                    else R2 = R2 + 1 | 0;
                  }
                  return 0;
                }
                case 9: {
                  U2 = +h[e2 >> 3];
                  T2 = +h[f2 >> 3];
                  z2 = U2 * T2;
                  D2 = +h[e2 + 8 >> 3];
                  H2 = T2 * D2;
                  t2 = +h[e2 + 16 >> 3];
                  C2 = T2 * t2;
                  s2 = +h[e2 + 24 >> 3];
                  K2 = T2 * s2;
                  L2 = +h[e2 + 32 >> 3];
                  n2 = T2 * L2;
                  y2 = +h[e2 + 40 >> 3];
                  G2 = T2 * y2;
                  o2 = +h[e2 + 48 >> 3];
                  u2 = T2 * o2;
                  P2 = +h[e2 + 56 >> 3];
                  X2 = T2 * P2;
                  O2 = +h[e2 + 64 >> 3];
                  Y2 = T2 * O2;
                  R2 = c[b2 >> 2] | 0;
                  if ((R2 | 0) < 1) return 0;
                  N2 = k2 << 1;
                  F2 = k2 * 3 | 0;
                  x2 = k2 << 2;
                  p2 = k2 * 5 | 0;
                  r2 = k2 * 6 | 0;
                  v2 = k2 * 7 | 0;
                  B2 = k2 << 3;
                  J2 = k2 * 9 | 0;
                  W2 = 1;
                  while (1) {
                    V2 = m2 + (W2 + k2 << 3) | 0;
                    T2 = +h[V2 >> 3];
                    M2 = m2 + (W2 + N2 << 3) | 0;
                    E2 = m2 + (W2 + F2 << 3) | 0;
                    w2 = m2 + (W2 + x2 << 3) | 0;
                    A2 = m2 + (W2 + p2 << 3) | 0;
                    I2 = m2 + (W2 + r2 << 3) | 0;
                    Q2 = m2 + (W2 + v2 << 3) | 0;
                    Z2 = m2 + (W2 + B2 << 3) | 0;
                    _2 = m2 + (W2 + J2 << 3) | 0;
                    $2 = U2 * T2 + D2 * +h[M2 >> 3] + t2 * +h[E2 >> 3] + s2 * +h[w2 >> 3] + L2 * +h[A2 >> 3] + y2 * +h[I2 >> 3] + o2 * +h[Q2 >> 3] + P2 * +h[Z2 >> 3] + O2 * +h[_2 >> 3];
                    h[V2 >> 3] = T2 - z2 * $2;
                    h[M2 >> 3] = +h[M2 >> 3] - H2 * $2;
                    h[E2 >> 3] = +h[E2 >> 3] - C2 * $2;
                    h[w2 >> 3] = +h[w2 >> 3] - K2 * $2;
                    h[A2 >> 3] = +h[A2 >> 3] - n2 * $2;
                    h[I2 >> 3] = +h[I2 >> 3] - G2 * $2;
                    h[Q2 >> 3] = +h[Q2 >> 3] - u2 * $2;
                    h[Z2 >> 3] = +h[Z2 >> 3] - X2 * $2;
                    h[_2 >> 3] = +h[_2 >> 3] - Y2 * $2;
                    if ((W2 | 0) == (R2 | 0)) break;
                    else W2 = W2 + 1 | 0;
                  }
                  return 0;
                }
                case 10: {
                  Y2 = +h[e2 >> 3];
                  X2 = +h[f2 >> 3];
                  u2 = Y2 * X2;
                  G2 = +h[e2 + 8 >> 3];
                  n2 = X2 * G2;
                  K2 = +h[e2 + 16 >> 3];
                  C2 = X2 * K2;
                  H2 = +h[e2 + 24 >> 3];
                  z2 = X2 * H2;
                  O2 = +h[e2 + 32 >> 3];
                  P2 = X2 * O2;
                  o2 = +h[e2 + 40 >> 3];
                  y2 = X2 * o2;
                  L2 = +h[e2 + 48 >> 3];
                  s2 = X2 * L2;
                  t2 = +h[e2 + 56 >> 3];
                  D2 = X2 * t2;
                  U2 = +h[e2 + 64 >> 3];
                  $2 = X2 * U2;
                  T2 = +h[e2 + 72 >> 3];
                  aa2 = X2 * T2;
                  W2 = c[b2 >> 2] | 0;
                  if ((W2 | 0) < 1) return 0;
                  R2 = k2 << 1;
                  J2 = k2 * 3 | 0;
                  B2 = k2 << 2;
                  v2 = k2 * 5 | 0;
                  r2 = k2 * 6 | 0;
                  p2 = k2 * 7 | 0;
                  x2 = k2 << 3;
                  F2 = k2 * 9 | 0;
                  N2 = k2 * 10 | 0;
                  _2 = 1;
                  while (1) {
                    Z2 = m2 + (_2 + k2 << 3) | 0;
                    X2 = +h[Z2 >> 3];
                    Q2 = m2 + (_2 + R2 << 3) | 0;
                    I2 = m2 + (_2 + J2 << 3) | 0;
                    A2 = m2 + (_2 + B2 << 3) | 0;
                    w2 = m2 + (_2 + v2 << 3) | 0;
                    E2 = m2 + (_2 + r2 << 3) | 0;
                    M2 = m2 + (_2 + p2 << 3) | 0;
                    V2 = m2 + (_2 + x2 << 3) | 0;
                    ba2 = m2 + (_2 + F2 << 3) | 0;
                    ca2 = m2 + (_2 + N2 << 3) | 0;
                    da2 = Y2 * X2 + G2 * +h[Q2 >> 3] + K2 * +h[I2 >> 3] + H2 * +h[A2 >> 3] + O2 * +h[w2 >> 3] + o2 * +h[E2 >> 3] + L2 * +h[M2 >> 3] + t2 * +h[V2 >> 3] + U2 * +h[ba2 >> 3] + T2 * +h[ca2 >> 3];
                    h[Z2 >> 3] = X2 - u2 * da2;
                    h[Q2 >> 3] = +h[Q2 >> 3] - n2 * da2;
                    h[I2 >> 3] = +h[I2 >> 3] - C2 * da2;
                    h[A2 >> 3] = +h[A2 >> 3] - z2 * da2;
                    h[w2 >> 3] = +h[w2 >> 3] - P2 * da2;
                    h[E2 >> 3] = +h[E2 >> 3] - y2 * da2;
                    h[M2 >> 3] = +h[M2 >> 3] - s2 * da2;
                    h[V2 >> 3] = +h[V2 >> 3] - D2 * da2;
                    h[ba2 >> 3] = +h[ba2 >> 3] - $2 * da2;
                    h[ca2 >> 3] = +h[ca2 >> 3] - aa2 * da2;
                    if ((_2 | 0) == (W2 | 0)) break;
                    else _2 = _2 + 1 | 0;
                  }
                  return 0;
                }
                default: {
                  wb(a2, b2, d2, e2, 408, f2, m2 + (l2 << 3) | 0, i3, j2) | 0;
                  return 0;
                }
              }
            while (0);
          do
            switch (c[b2 >> 2] | 0) {
              case 1: {
                aa2 = +h[e2 >> 3];
                $2 = 1 - aa2 * (+h[f2 >> 3] * aa2);
                q2 = c[d2 >> 2] | 0;
                if ((q2 | 0) < 1) return 0;
                else ea2 = 1;
                while (1) {
                  _2 = m2 + ((S(ea2, k2) | 0) + 1 << 3) | 0;
                  h[_2 >> 3] = $2 * +h[_2 >> 3];
                  if ((ea2 | 0) == (q2 | 0)) break;
                  else ea2 = ea2 + 1 | 0;
                }
                return 0;
              }
              case 2: {
                $2 = +h[e2 >> 3];
                aa2 = +h[f2 >> 3];
                D2 = $2 * aa2;
                s2 = +h[e2 + 8 >> 3];
                y2 = aa2 * s2;
                q2 = c[d2 >> 2] | 0;
                if ((q2 | 0) < 1) return 0;
                if ((k2 | 0) != 1) {
                  _2 = 1;
                  while (1) {
                    W2 = S(_2, k2) | 0;
                    N2 = m2 + (W2 + 1 << 3) | 0;
                    aa2 = +h[N2 >> 3];
                    F2 = m2 + (W2 + 2 << 3) | 0;
                    P2 = +h[F2 >> 3];
                    z2 = $2 * aa2 + s2 * P2;
                    h[N2 >> 3] = aa2 - D2 * z2;
                    h[F2 >> 3] = P2 - y2 * z2;
                    if ((_2 | 0) == (q2 | 0)) break;
                    else _2 = _2 + 1 | 0;
                  }
                  return 0;
                }
                _2 = 1;
                z2 = +h[g2 >> 3];
                while (1) {
                  F2 = S(_2, k2) | 0;
                  N2 = m2 + (F2 + 2 << 3) | 0;
                  P2 = +h[N2 >> 3];
                  aa2 = $2 * z2 + s2 * P2;
                  h[m2 + (F2 + 1 << 3) >> 3] = z2 - D2 * aa2;
                  z2 = P2 - y2 * aa2;
                  h[N2 >> 3] = z2;
                  if ((_2 | 0) == (q2 | 0)) break;
                  else _2 = _2 + 1 | 0;
                }
                return 0;
              }
              case 3: {
                z2 = +h[e2 >> 3];
                y2 = +h[f2 >> 3];
                D2 = z2 * y2;
                s2 = +h[e2 + 8 >> 3];
                $2 = y2 * s2;
                aa2 = +h[e2 + 16 >> 3];
                P2 = y2 * aa2;
                _2 = c[d2 >> 2] | 0;
                if ((_2 | 0) < 1) return 0;
                if ((k2 | 0) != 1) {
                  q2 = 1;
                  while (1) {
                    N2 = S(q2, k2) | 0;
                    F2 = m2 + (N2 + 1 << 3) | 0;
                    y2 = +h[F2 >> 3];
                    W2 = m2 + (N2 + 2 << 3) | 0;
                    C2 = +h[W2 >> 3];
                    x2 = m2 + (N2 + 3 << 3) | 0;
                    n2 = +h[x2 >> 3];
                    u2 = z2 * y2 + s2 * C2 + aa2 * n2;
                    h[F2 >> 3] = y2 - D2 * u2;
                    h[W2 >> 3] = C2 - $2 * u2;
                    h[x2 >> 3] = n2 - P2 * u2;
                    if ((q2 | 0) == (_2 | 0)) break;
                    else q2 = q2 + 1 | 0;
                  }
                  return 0;
                }
                q2 = 1;
                u2 = +h[g2 + 8 >> 3];
                while (1) {
                  x2 = S(q2, k2) | 0;
                  W2 = m2 + (x2 + 1 << 3) | 0;
                  n2 = +h[W2 >> 3];
                  F2 = m2 + (x2 + 3 << 3) | 0;
                  C2 = +h[F2 >> 3];
                  y2 = z2 * n2 + s2 * u2 + aa2 * C2;
                  h[W2 >> 3] = n2 - D2 * y2;
                  h[m2 + (x2 + 2 << 3) >> 3] = u2 - $2 * y2;
                  u2 = C2 - P2 * y2;
                  h[F2 >> 3] = u2;
                  if ((q2 | 0) == (_2 | 0)) break;
                  else q2 = q2 + 1 | 0;
                }
                return 0;
              }
              case 4: {
                u2 = +h[e2 >> 3];
                P2 = +h[f2 >> 3];
                $2 = u2 * P2;
                D2 = +h[e2 + 8 >> 3];
                aa2 = P2 * D2;
                s2 = +h[e2 + 16 >> 3];
                z2 = P2 * s2;
                y2 = +h[e2 + 24 >> 3];
                C2 = P2 * y2;
                q2 = c[d2 >> 2] | 0;
                if ((q2 | 0) < 1) return 0;
                if ((k2 | 0) != 1) {
                  _2 = 1;
                  while (1) {
                    F2 = S(_2, k2) | 0;
                    x2 = m2 + (F2 + 1 << 3) | 0;
                    P2 = +h[x2 >> 3];
                    W2 = m2 + (F2 + 2 << 3) | 0;
                    n2 = +h[W2 >> 3];
                    N2 = m2 + (F2 + 3 << 3) | 0;
                    T2 = +h[N2 >> 3];
                    p2 = m2 + (F2 + 4 << 3) | 0;
                    U2 = +h[p2 >> 3];
                    t2 = u2 * P2 + D2 * n2 + s2 * T2 + y2 * U2;
                    h[x2 >> 3] = P2 - $2 * t2;
                    h[W2 >> 3] = n2 - aa2 * t2;
                    h[N2 >> 3] = T2 - z2 * t2;
                    h[p2 >> 3] = U2 - C2 * t2;
                    if ((_2 | 0) == (q2 | 0)) break;
                    else _2 = _2 + 1 | 0;
                  }
                  return 0;
                }
                _2 = 1;
                t2 = +h[g2 + 16 >> 3];
                while (1) {
                  p2 = S(_2, k2) | 0;
                  N2 = m2 + (p2 + 1 << 3) | 0;
                  U2 = +h[N2 >> 3];
                  W2 = m2 + (p2 + 2 << 3) | 0;
                  T2 = +h[W2 >> 3];
                  x2 = m2 + (p2 + 4 << 3) | 0;
                  n2 = +h[x2 >> 3];
                  P2 = u2 * U2 + D2 * T2 + s2 * t2 + y2 * n2;
                  h[N2 >> 3] = U2 - $2 * P2;
                  h[W2 >> 3] = T2 - aa2 * P2;
                  h[m2 + (p2 + 3 << 3) >> 3] = t2 - z2 * P2;
                  t2 = n2 - C2 * P2;
                  h[x2 >> 3] = t2;
                  if ((_2 | 0) == (q2 | 0)) break;
                  else _2 = _2 + 1 | 0;
                }
                return 0;
              }
              case 5: {
                t2 = +h[e2 >> 3];
                C2 = +h[f2 >> 3];
                z2 = t2 * C2;
                aa2 = +h[e2 + 8 >> 3];
                $2 = C2 * aa2;
                y2 = +h[e2 + 16 >> 3];
                s2 = C2 * y2;
                D2 = +h[e2 + 24 >> 3];
                u2 = C2 * D2;
                P2 = +h[e2 + 32 >> 3];
                n2 = C2 * P2;
                _2 = c[d2 >> 2] | 0;
                if ((_2 | 0) < 1) return 0;
                if ((k2 | 0) != 1) {
                  q2 = 1;
                  while (1) {
                    x2 = S(q2, k2) | 0;
                    p2 = m2 + (x2 + 1 << 3) | 0;
                    C2 = +h[p2 >> 3];
                    W2 = m2 + (x2 + 2 << 3) | 0;
                    T2 = +h[W2 >> 3];
                    N2 = m2 + (x2 + 3 << 3) | 0;
                    U2 = +h[N2 >> 3];
                    F2 = m2 + (x2 + 4 << 3) | 0;
                    L2 = +h[F2 >> 3];
                    r2 = m2 + (x2 + 5 << 3) | 0;
                    o2 = +h[r2 >> 3];
                    O2 = t2 * C2 + aa2 * T2 + y2 * U2 + D2 * L2 + P2 * o2;
                    h[p2 >> 3] = C2 - z2 * O2;
                    h[W2 >> 3] = T2 - $2 * O2;
                    h[N2 >> 3] = U2 - s2 * O2;
                    h[F2 >> 3] = L2 - u2 * O2;
                    h[r2 >> 3] = o2 - n2 * O2;
                    if ((q2 | 0) == (_2 | 0)) break;
                    else q2 = q2 + 1 | 0;
                  }
                  return 0;
                }
                q2 = 1;
                O2 = +h[g2 + 24 >> 3];
                while (1) {
                  r2 = S(q2, k2) | 0;
                  F2 = m2 + (r2 + 1 << 3) | 0;
                  o2 = +h[F2 >> 3];
                  N2 = m2 + (r2 + 2 << 3) | 0;
                  L2 = +h[N2 >> 3];
                  W2 = m2 + (r2 + 3 << 3) | 0;
                  U2 = +h[W2 >> 3];
                  p2 = m2 + (r2 + 5 << 3) | 0;
                  T2 = +h[p2 >> 3];
                  C2 = t2 * o2 + aa2 * L2 + y2 * U2 + D2 * O2 + P2 * T2;
                  h[F2 >> 3] = o2 - z2 * C2;
                  h[N2 >> 3] = L2 - $2 * C2;
                  h[W2 >> 3] = U2 - s2 * C2;
                  h[m2 + (r2 + 4 << 3) >> 3] = O2 - u2 * C2;
                  O2 = T2 - n2 * C2;
                  h[p2 >> 3] = O2;
                  if ((q2 | 0) == (_2 | 0)) break;
                  else q2 = q2 + 1 | 0;
                }
                return 0;
              }
              case 6: {
                O2 = +h[e2 >> 3];
                n2 = +h[f2 >> 3];
                u2 = O2 * n2;
                s2 = +h[e2 + 8 >> 3];
                $2 = n2 * s2;
                z2 = +h[e2 + 16 >> 3];
                P2 = n2 * z2;
                D2 = +h[e2 + 24 >> 3];
                y2 = n2 * D2;
                aa2 = +h[e2 + 32 >> 3];
                t2 = n2 * aa2;
                C2 = +h[e2 + 40 >> 3];
                T2 = n2 * C2;
                q2 = c[d2 >> 2] | 0;
                if ((q2 | 0) < 1) return 0;
                if ((k2 | 0) != 1) {
                  _2 = 1;
                  while (1) {
                    p2 = S(_2, k2) | 0;
                    r2 = m2 + (p2 + 1 << 3) | 0;
                    n2 = +h[r2 >> 3];
                    W2 = m2 + (p2 + 2 << 3) | 0;
                    U2 = +h[W2 >> 3];
                    N2 = m2 + (p2 + 3 << 3) | 0;
                    L2 = +h[N2 >> 3];
                    F2 = m2 + (p2 + 4 << 3) | 0;
                    o2 = +h[F2 >> 3];
                    x2 = m2 + (p2 + 5 << 3) | 0;
                    H2 = +h[x2 >> 3];
                    v2 = m2 + (p2 + 6 << 3) | 0;
                    K2 = +h[v2 >> 3];
                    G2 = O2 * n2 + s2 * U2 + z2 * L2 + D2 * o2 + aa2 * H2 + C2 * K2;
                    h[r2 >> 3] = n2 - u2 * G2;
                    h[W2 >> 3] = U2 - $2 * G2;
                    h[N2 >> 3] = L2 - P2 * G2;
                    h[F2 >> 3] = o2 - y2 * G2;
                    h[x2 >> 3] = H2 - t2 * G2;
                    h[v2 >> 3] = K2 - T2 * G2;
                    if ((_2 | 0) == (q2 | 0)) break;
                    else _2 = _2 + 1 | 0;
                  }
                  return 0;
                }
                _2 = 1;
                G2 = +h[g2 + 32 >> 3];
                while (1) {
                  v2 = S(_2, k2) | 0;
                  x2 = m2 + (v2 + 1 << 3) | 0;
                  K2 = +h[x2 >> 3];
                  F2 = m2 + (v2 + 2 << 3) | 0;
                  H2 = +h[F2 >> 3];
                  N2 = m2 + (v2 + 3 << 3) | 0;
                  o2 = +h[N2 >> 3];
                  W2 = m2 + (v2 + 4 << 3) | 0;
                  L2 = +h[W2 >> 3];
                  r2 = m2 + (v2 + 6 << 3) | 0;
                  U2 = +h[r2 >> 3];
                  n2 = O2 * K2 + s2 * H2 + z2 * o2 + D2 * L2 + aa2 * G2 + C2 * U2;
                  h[x2 >> 3] = K2 - u2 * n2;
                  h[F2 >> 3] = H2 - $2 * n2;
                  h[N2 >> 3] = o2 - P2 * n2;
                  h[W2 >> 3] = L2 - y2 * n2;
                  h[m2 + (v2 + 5 << 3) >> 3] = G2 - t2 * n2;
                  G2 = U2 - T2 * n2;
                  h[r2 >> 3] = G2;
                  if ((_2 | 0) == (q2 | 0)) break;
                  else _2 = _2 + 1 | 0;
                }
                return 0;
              }
              case 7: {
                G2 = +h[e2 >> 3];
                T2 = +h[f2 >> 3];
                t2 = G2 * T2;
                y2 = +h[e2 + 8 >> 3];
                P2 = T2 * y2;
                $2 = +h[e2 + 16 >> 3];
                u2 = T2 * $2;
                C2 = +h[e2 + 24 >> 3];
                aa2 = T2 * C2;
                D2 = +h[e2 + 32 >> 3];
                z2 = T2 * D2;
                s2 = +h[e2 + 40 >> 3];
                O2 = T2 * s2;
                n2 = +h[e2 + 48 >> 3];
                U2 = T2 * n2;
                _2 = c[d2 >> 2] | 0;
                if ((_2 | 0) < 1) return 0;
                if ((k2 | 0) != 1) {
                  q2 = 1;
                  while (1) {
                    r2 = S(q2, k2) | 0;
                    v2 = m2 + (r2 + 1 << 3) | 0;
                    T2 = +h[v2 >> 3];
                    W2 = m2 + (r2 + 2 << 3) | 0;
                    L2 = +h[W2 >> 3];
                    N2 = m2 + (r2 + 3 << 3) | 0;
                    o2 = +h[N2 >> 3];
                    F2 = m2 + (r2 + 4 << 3) | 0;
                    H2 = +h[F2 >> 3];
                    x2 = m2 + (r2 + 5 << 3) | 0;
                    K2 = +h[x2 >> 3];
                    p2 = m2 + (r2 + 6 << 3) | 0;
                    Y2 = +h[p2 >> 3];
                    B2 = m2 + (r2 + 7 << 3) | 0;
                    da2 = +h[B2 >> 3];
                    X2 = G2 * T2 + y2 * L2 + $2 * o2 + C2 * H2 + D2 * K2 + s2 * Y2 + n2 * da2;
                    h[v2 >> 3] = T2 - t2 * X2;
                    h[W2 >> 3] = L2 - P2 * X2;
                    h[N2 >> 3] = o2 - u2 * X2;
                    h[F2 >> 3] = H2 - aa2 * X2;
                    h[x2 >> 3] = K2 - z2 * X2;
                    h[p2 >> 3] = Y2 - O2 * X2;
                    h[B2 >> 3] = da2 - U2 * X2;
                    if ((q2 | 0) == (_2 | 0)) break;
                    else q2 = q2 + 1 | 0;
                  }
                  return 0;
                }
                q2 = 1;
                X2 = +h[g2 + 40 >> 3];
                while (1) {
                  B2 = S(q2, k2) | 0;
                  p2 = m2 + (B2 + 1 << 3) | 0;
                  da2 = +h[p2 >> 3];
                  x2 = m2 + (B2 + 2 << 3) | 0;
                  Y2 = +h[x2 >> 3];
                  F2 = m2 + (B2 + 3 << 3) | 0;
                  K2 = +h[F2 >> 3];
                  N2 = m2 + (B2 + 4 << 3) | 0;
                  H2 = +h[N2 >> 3];
                  W2 = m2 + (B2 + 5 << 3) | 0;
                  o2 = +h[W2 >> 3];
                  v2 = m2 + (B2 + 7 << 3) | 0;
                  L2 = +h[v2 >> 3];
                  T2 = G2 * da2 + y2 * Y2 + $2 * K2 + C2 * H2 + D2 * o2 + s2 * X2 + n2 * L2;
                  h[p2 >> 3] = da2 - t2 * T2;
                  h[x2 >> 3] = Y2 - P2 * T2;
                  h[F2 >> 3] = K2 - u2 * T2;
                  h[N2 >> 3] = H2 - aa2 * T2;
                  h[W2 >> 3] = o2 - z2 * T2;
                  h[m2 + (B2 + 6 << 3) >> 3] = X2 - O2 * T2;
                  X2 = L2 - U2 * T2;
                  h[v2 >> 3] = X2;
                  if ((q2 | 0) == (_2 | 0)) break;
                  else q2 = q2 + 1 | 0;
                }
                return 0;
              }
              case 8: {
                X2 = +h[e2 >> 3];
                U2 = +h[f2 >> 3];
                O2 = X2 * U2;
                z2 = +h[e2 + 8 >> 3];
                aa2 = U2 * z2;
                u2 = +h[e2 + 16 >> 3];
                P2 = U2 * u2;
                t2 = +h[e2 + 24 >> 3];
                n2 = U2 * t2;
                s2 = +h[e2 + 32 >> 3];
                D2 = U2 * s2;
                C2 = +h[e2 + 40 >> 3];
                $2 = U2 * C2;
                y2 = +h[e2 + 48 >> 3];
                G2 = U2 * y2;
                T2 = +h[e2 + 56 >> 3];
                L2 = U2 * T2;
                q2 = c[d2 >> 2] | 0;
                if ((q2 | 0) < 1) return 0;
                if ((k2 | 0) != 1) {
                  _2 = 1;
                  while (1) {
                    v2 = S(_2, k2) | 0;
                    B2 = m2 + (v2 + 1 << 3) | 0;
                    U2 = +h[B2 >> 3];
                    W2 = m2 + (v2 + 2 << 3) | 0;
                    o2 = +h[W2 >> 3];
                    N2 = m2 + (v2 + 3 << 3) | 0;
                    H2 = +h[N2 >> 3];
                    F2 = m2 + (v2 + 4 << 3) | 0;
                    K2 = +h[F2 >> 3];
                    x2 = m2 + (v2 + 5 << 3) | 0;
                    Y2 = +h[x2 >> 3];
                    p2 = m2 + (v2 + 6 << 3) | 0;
                    da2 = +h[p2 >> 3];
                    r2 = m2 + (v2 + 7 << 3) | 0;
                    fa2 = +h[r2 >> 3];
                    J2 = m2 + (v2 + 8 << 3) | 0;
                    ga2 = +h[J2 >> 3];
                    ha2 = X2 * U2 + z2 * o2 + u2 * H2 + t2 * K2 + s2 * Y2 + C2 * da2 + y2 * fa2 + T2 * ga2;
                    h[B2 >> 3] = U2 - O2 * ha2;
                    h[W2 >> 3] = o2 - aa2 * ha2;
                    h[N2 >> 3] = H2 - P2 * ha2;
                    h[F2 >> 3] = K2 - n2 * ha2;
                    h[x2 >> 3] = Y2 - D2 * ha2;
                    h[p2 >> 3] = da2 - $2 * ha2;
                    h[r2 >> 3] = fa2 - G2 * ha2;
                    h[J2 >> 3] = ga2 - L2 * ha2;
                    if ((_2 | 0) == (q2 | 0)) break;
                    else _2 = _2 + 1 | 0;
                  }
                  return 0;
                }
                _2 = 1;
                ha2 = +h[g2 + 48 >> 3];
                while (1) {
                  J2 = S(_2, k2) | 0;
                  r2 = m2 + (J2 + 1 << 3) | 0;
                  ga2 = +h[r2 >> 3];
                  p2 = m2 + (J2 + 2 << 3) | 0;
                  fa2 = +h[p2 >> 3];
                  x2 = m2 + (J2 + 3 << 3) | 0;
                  da2 = +h[x2 >> 3];
                  F2 = m2 + (J2 + 4 << 3) | 0;
                  Y2 = +h[F2 >> 3];
                  N2 = m2 + (J2 + 5 << 3) | 0;
                  K2 = +h[N2 >> 3];
                  W2 = m2 + (J2 + 6 << 3) | 0;
                  H2 = +h[W2 >> 3];
                  B2 = m2 + (J2 + 8 << 3) | 0;
                  o2 = +h[B2 >> 3];
                  U2 = X2 * ga2 + z2 * fa2 + u2 * da2 + t2 * Y2 + s2 * K2 + C2 * H2 + y2 * ha2 + T2 * o2;
                  h[r2 >> 3] = ga2 - O2 * U2;
                  h[p2 >> 3] = fa2 - aa2 * U2;
                  h[x2 >> 3] = da2 - P2 * U2;
                  h[F2 >> 3] = Y2 - n2 * U2;
                  h[N2 >> 3] = K2 - D2 * U2;
                  h[W2 >> 3] = H2 - $2 * U2;
                  h[m2 + (J2 + 7 << 3) >> 3] = ha2 - G2 * U2;
                  ha2 = o2 - L2 * U2;
                  h[B2 >> 3] = ha2;
                  if ((_2 | 0) == (q2 | 0)) break;
                  else _2 = _2 + 1 | 0;
                }
                return 0;
              }
              case 9: {
                ha2 = +h[e2 >> 3];
                L2 = +h[f2 >> 3];
                G2 = ha2 * L2;
                $2 = +h[e2 + 8 >> 3];
                D2 = L2 * $2;
                n2 = +h[e2 + 16 >> 3];
                P2 = L2 * n2;
                aa2 = +h[e2 + 24 >> 3];
                O2 = L2 * aa2;
                T2 = +h[e2 + 32 >> 3];
                y2 = L2 * T2;
                C2 = +h[e2 + 40 >> 3];
                s2 = L2 * C2;
                t2 = +h[e2 + 48 >> 3];
                u2 = L2 * t2;
                z2 = +h[e2 + 56 >> 3];
                X2 = L2 * z2;
                U2 = +h[e2 + 64 >> 3];
                o2 = L2 * U2;
                _2 = c[d2 >> 2] | 0;
                if ((_2 | 0) < 1) return 0;
                else ia2 = 1;
                while (1) {
                  q2 = S(ia2, k2) | 0;
                  B2 = m2 + (q2 + 1 << 3) | 0;
                  L2 = +h[B2 >> 3];
                  J2 = m2 + (q2 + 2 << 3) | 0;
                  H2 = +h[J2 >> 3];
                  W2 = m2 + (q2 + 3 << 3) | 0;
                  K2 = +h[W2 >> 3];
                  N2 = m2 + (q2 + 4 << 3) | 0;
                  Y2 = +h[N2 >> 3];
                  F2 = m2 + (q2 + 5 << 3) | 0;
                  da2 = +h[F2 >> 3];
                  x2 = m2 + (q2 + 6 << 3) | 0;
                  fa2 = +h[x2 >> 3];
                  p2 = m2 + (q2 + 7 << 3) | 0;
                  ga2 = +h[p2 >> 3];
                  r2 = m2 + (q2 + 8 << 3) | 0;
                  ja2 = +h[r2 >> 3];
                  v2 = m2 + (q2 + 9 << 3) | 0;
                  ka2 = +h[v2 >> 3];
                  la2 = ha2 * L2 + $2 * H2 + n2 * K2 + aa2 * Y2 + T2 * da2 + C2 * fa2 + t2 * ga2 + z2 * ja2 + U2 * ka2;
                  h[B2 >> 3] = L2 - G2 * la2;
                  h[J2 >> 3] = H2 - D2 * la2;
                  h[W2 >> 3] = K2 - P2 * la2;
                  h[N2 >> 3] = Y2 - O2 * la2;
                  h[F2 >> 3] = da2 - y2 * la2;
                  h[x2 >> 3] = fa2 - s2 * la2;
                  h[p2 >> 3] = ga2 - u2 * la2;
                  h[r2 >> 3] = ja2 - X2 * la2;
                  h[v2 >> 3] = ka2 - o2 * la2;
                  if ((ia2 | 0) == (_2 | 0)) break;
                  else ia2 = ia2 + 1 | 0;
                }
                return 0;
              }
              case 10: {
                o2 = +h[e2 >> 3];
                X2 = +h[f2 >> 3];
                u2 = o2 * X2;
                s2 = +h[e2 + 8 >> 3];
                y2 = X2 * s2;
                O2 = +h[e2 + 16 >> 3];
                P2 = X2 * O2;
                D2 = +h[e2 + 24 >> 3];
                G2 = X2 * D2;
                U2 = +h[e2 + 32 >> 3];
                z2 = X2 * U2;
                t2 = +h[e2 + 40 >> 3];
                C2 = X2 * t2;
                T2 = +h[e2 + 48 >> 3];
                aa2 = X2 * T2;
                n2 = +h[e2 + 56 >> 3];
                $2 = X2 * n2;
                ha2 = +h[e2 + 64 >> 3];
                la2 = X2 * ha2;
                ka2 = +h[e2 + 72 >> 3];
                ja2 = X2 * ka2;
                _2 = c[d2 >> 2] | 0;
                if ((_2 | 0) < 1) return 0;
                else ma2 = 1;
                while (1) {
                  v2 = S(ma2, k2) | 0;
                  r2 = m2 + (v2 + 1 << 3) | 0;
                  X2 = +h[r2 >> 3];
                  p2 = m2 + (v2 + 2 << 3) | 0;
                  ga2 = +h[p2 >> 3];
                  x2 = m2 + (v2 + 3 << 3) | 0;
                  fa2 = +h[x2 >> 3];
                  F2 = m2 + (v2 + 4 << 3) | 0;
                  da2 = +h[F2 >> 3];
                  N2 = m2 + (v2 + 5 << 3) | 0;
                  Y2 = +h[N2 >> 3];
                  W2 = m2 + (v2 + 6 << 3) | 0;
                  K2 = +h[W2 >> 3];
                  J2 = m2 + (v2 + 7 << 3) | 0;
                  H2 = +h[J2 >> 3];
                  B2 = m2 + (v2 + 8 << 3) | 0;
                  L2 = +h[B2 >> 3];
                  q2 = m2 + (v2 + 9 << 3) | 0;
                  na2 = +h[q2 >> 3];
                  R2 = m2 + (v2 + 10 << 3) | 0;
                  oa2 = +h[R2 >> 3];
                  pa2 = o2 * X2 + s2 * ga2 + O2 * fa2 + D2 * da2 + U2 * Y2 + t2 * K2 + T2 * H2 + n2 * L2 + ha2 * na2 + ka2 * oa2;
                  h[r2 >> 3] = X2 - u2 * pa2;
                  h[p2 >> 3] = ga2 - y2 * pa2;
                  h[x2 >> 3] = fa2 - P2 * pa2;
                  h[F2 >> 3] = da2 - G2 * pa2;
                  h[N2 >> 3] = Y2 - z2 * pa2;
                  h[W2 >> 3] = K2 - C2 * pa2;
                  h[J2 >> 3] = H2 - aa2 * pa2;
                  h[B2 >> 3] = L2 - $2 * pa2;
                  h[q2 >> 3] = na2 - la2 * pa2;
                  h[R2 >> 3] = oa2 - ja2 * pa2;
                  if ((ma2 | 0) == (_2 | 0)) break;
                  else ma2 = ma2 + 1 | 0;
                }
                return 0;
              }
              default: {
                wb(a2, b2, d2, e2, 408, f2, m2 + (l2 << 3) | 0, i3, j2) | 0;
                return 0;
              }
            }
          while (0);
          return 0;
        }
        function Bb(a2, b2, d2, e2, f2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          var g2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0;
          g2 = i2;
          i2 = i2 + 16 | 0;
          j2 = g2 + 8 | 0;
          k2 = g2;
          l2 = +lb(2026);
          m2 = +lb(1922);
          h[k2 >> 3] = +lb(2022);
          n2 = +Q(+(l2 / m2));
          c[j2 >> 2] = ~~(n2 / +Q(+ +lb(2022)) * 0.5);
          n2 = +tc(k2, j2);
          m2 = 1 / n2;
          l2 = +h[b2 >> 3];
          if (l2 == 0) {
            h[d2 >> 3] = 1;
            h[e2 >> 3] = 0;
            h[f2 >> 3] = +h[a2 >> 3];
            i2 = g2;
            return 0;
          }
          o2 = +h[a2 >> 3];
          if (o2 == 0) {
            h[d2 >> 3] = 0;
            h[e2 >> 3] = 1;
            h[f2 >> 3] = +h[b2 >> 3];
            i2 = g2;
            return 0;
          }
          p2 = o2 >= 0 ? o2 : -o2;
          h[k2 >> 3] = p2;
          q2 = l2 >= 0 ? l2 : -l2;
          r2 = p2 >= q2 ? p2 : q2;
          do
            if (!(r2 >= m2)) {
              if (!(r2 <= n2)) {
                h[k2 >> 3] = o2;
                q2 = +G(+(l2 * l2 + o2 * o2));
                h[f2 >> 3] = q2;
                h[d2 >> 3] = o2 / q2;
                h[e2 >> 3] = l2 / +h[f2 >> 3];
                break;
              } else {
                s2 = o2;
                t2 = 0;
                u2 = l2;
              }
              while (1) {
                v2 = t2 + 1 | 0;
                s2 = m2 * s2;
                u2 = m2 * u2;
                q2 = s2 >= 0 ? s2 : -s2;
                p2 = u2 >= 0 ? u2 : -u2;
                if (!((q2 >= p2 ? q2 : p2) <= n2)) break;
                else t2 = v2;
              }
              h[k2 >> 3] = s2;
              p2 = +G(+(u2 * u2 + s2 * s2));
              h[f2 >> 3] = p2;
              h[d2 >> 3] = s2 / p2;
              h[e2 >> 3] = u2 / +h[f2 >> 3];
              c[j2 >> 2] = v2;
              if ((t2 | 0) >= 0) {
                w2 = 1;
                p2 = +h[f2 >> 3];
                while (1) {
                  p2 = n2 * p2;
                  if ((w2 | 0) > (t2 | 0)) break;
                  else w2 = w2 + 1 | 0;
                }
                h[f2 >> 3] = p2;
              }
            } else {
              q2 = o2;
              w2 = 0;
              x2 = l2;
              while (1) {
                y2 = w2 + 1 | 0;
                q2 = n2 * q2;
                x2 = n2 * x2;
                z2 = q2 >= 0 ? q2 : -q2;
                A2 = x2 >= 0 ? x2 : -x2;
                if (!((z2 >= A2 ? z2 : A2) >= m2)) break;
                else w2 = y2;
              }
              h[k2 >> 3] = q2;
              p2 = +G(+(x2 * x2 + q2 * q2));
              h[f2 >> 3] = p2;
              h[d2 >> 3] = q2 / p2;
              h[e2 >> 3] = x2 / +h[f2 >> 3];
              c[j2 >> 2] = y2;
              if ((w2 | 0) >= 0) {
                B2 = 1;
                p2 = +h[f2 >> 3];
                while (1) {
                  p2 = m2 * p2;
                  if ((B2 | 0) > (w2 | 0)) break;
                  else B2 = B2 + 1 | 0;
                }
                h[f2 >> 3] = p2;
              }
            }
          while (0);
          m2 = +h[a2 >> 3];
          n2 = +h[b2 >> 3];
          if (!((m2 >= 0 ? m2 : -m2) > (n2 >= 0 ? n2 : -n2))) {
            i2 = g2;
            return 0;
          }
          n2 = +h[d2 >> 3];
          if (!(n2 < 0)) {
            i2 = g2;
            return 0;
          }
          h[d2 >> 3] = -n2;
          h[e2 >> 3] = -+h[e2 >> 3];
          h[f2 >> 3] = -+h[f2 >> 3];
          i2 = g2;
          return 0;
        }
        function Cb(a2, b2, d2, e2, f2, g2, j2, k2, l2, m2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          g2 = g2 | 0;
          j2 = j2 | 0;
          k2 = k2 | 0;
          l2 = l2 | 0;
          m2 = m2 | 0;
          var n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0, O2 = 0, P2 = 0;
          n2 = i2;
          i2 = i2 + 16 | 0;
          o2 = n2;
          p2 = c[l2 >> 2] | 0;
          q2 = k2 + (~p2 << 3) | 0;
          c[m2 >> 2] = 0;
          if (!(nc(a2, 1924) | 0))
            if (!(nc(a2, 2078) | 0))
              if (!(nc(a2, 2076) | 0))
                if (!(nc(a2, 1926) | 0))
                  if (!(nc(a2, 2022) | 0))
                    if (!(nc(a2, 1928) | 0))
                      if (!(nc(a2, 1930) | 0)) {
                        c[m2 >> 2] = -1;
                        r2 = -1;
                      } else {
                        s2 = 6;
                        t2 = 9;
                      }
                    else {
                      s2 = 5;
                      t2 = 9;
                    }
                  else {
                    s2 = 4;
                    t2 = 9;
                  }
                else {
                  s2 = 3;
                  t2 = 9;
                }
              else {
                s2 = 2;
                t2 = 9;
              }
            else {
              s2 = 1;
              t2 = 9;
            }
          else {
            s2 = 0;
            t2 = 9;
          }
          a: do
            if ((t2 | 0) == 9) {
              if (!(+h[e2 >> 3] == 0) ? (cb(e2) | 0) == 0 : 0) {
                if (cb(f2) | 0) {
                  c[m2 >> 2] = -5;
                  r2 = -5;
                  break;
                }
                a2 = c[g2 >> 2] | 0;
                if ((a2 | 0) < 0) {
                  c[m2 >> 2] = -6;
                  r2 = -6;
                  break;
                }
                k2 = c[j2 >> 2] | 0;
                do
                  if ((k2 | 0) >= 0 ? (u2 = (s2 | 0) == 4, v2 = (k2 | 0) == (a2 | 0), v2 | u2 ^ 1) : 0) {
                    w2 = (s2 | 0) == 5;
                    if (w2)
                      if (v2) t2 = 24;
                      else break;
                    else if (s2 >>> 0 < 4) {
                      if ((c[l2 >> 2] | 0) < (((a2 | 0) > 1 ? a2 : 1) | 0)) {
                        c[m2 >> 2] = -9;
                        r2 = -9;
                        break a;
                      }
                    } else t2 = 24;
                    b: do
                      if ((t2 | 0) == 24) {
                        v2 = a2 + -1 | 0;
                        c[o2 >> 2] = v2;
                        x2 = c[b2 >> 2] | 0;
                        if ((x2 | 0) >= 0 ? (x2 | 0) <= (((a2 | 0) > 0 ? v2 : 0) | 0) : 0) {
                          v2 = k2 + -1 | 0;
                          c[o2 >> 2] = v2;
                          y2 = c[d2 >> 2] | 0;
                          if (((y2 | 0) >= 0 ? (y2 | 0) <= (((k2 | 0) > 0 ? v2 : 0) | 0) : 0) ? (s2 | 1 | 0) != 5 | (x2 | 0) == (y2 | 0) : 0) {
                            if (!(u2 ? (c[l2 >> 2] | 0) <= (x2 | 0) : 0)) t2 = 33;
                            do
                              if ((t2 | 0) == 33) {
                                if (w2)
                                  if ((c[l2 >> 2] | 0) > (y2 | 0)) break b;
                                  else break;
                                if ((s2 | 0) != 6) break b;
                                if ((c[l2 >> 2] | 0) > ((x2 << 1) + y2 | 0)) break b;
                              }
                            while (0);
                            c[m2 >> 2] = -9;
                            r2 = -9;
                            break a;
                          }
                          c[m2 >> 2] = -3;
                          r2 = -3;
                          break a;
                        }
                        c[m2 >> 2] = -2;
                        r2 = -2;
                        break a;
                      }
                    while (0);
                    w2 = c[m2 >> 2] | 0;
                    if (w2 | 0) {
                      r2 = w2;
                      break a;
                    }
                    if ((k2 | 0) == 0 | (a2 | 0) == 0) {
                      i2 = n2;
                      return 0;
                    }
                    z2 = +lb(2026);
                    A2 = 1 / z2;
                    w2 = s2 & 255;
                    B2 = +h[e2 >> 3];
                    C2 = +h[f2 >> 3];
                    while (1) {
                      D2 = z2 * B2;
                      if (!(D2 == B2)) {
                        E2 = C2 / A2;
                        if (!(E2 == C2))
                          if (!(C2 != 0 ? (D2 >= 0 ? D2 : -D2) > (C2 >= 0 ? C2 : -C2) : 0))
                            if ((E2 >= 0 ? E2 : -E2) > (B2 >= 0 ? B2 : -B2)) {
                              F2 = 0;
                              G2 = A2;
                              H2 = B2;
                              I2 = E2;
                            } else {
                              F2 = 1;
                              G2 = C2 / B2;
                              H2 = B2;
                              I2 = C2;
                            }
                          else {
                            F2 = 0;
                            G2 = z2;
                            H2 = D2;
                            I2 = C2;
                          }
                        else {
                          F2 = 1;
                          G2 = C2;
                          H2 = 1;
                          I2 = C2;
                        }
                      } else {
                        F2 = 1;
                        G2 = C2 / B2;
                        H2 = B2;
                        I2 = C2;
                      }
                      switch (w2 & 7) {
                        case 0: {
                          u2 = c[j2 >> 2] | 0;
                          c[o2 >> 2] = u2;
                          if ((u2 | 0) >= 1 ? (y2 = c[g2 >> 2] | 0, (y2 | 0) >= 1) : 0) {
                            x2 = 1;
                            while (1) {
                              v2 = S(x2, p2) | 0;
                              J2 = 1;
                              while (1) {
                                K2 = q2 + (J2 + v2 << 3) | 0;
                                h[K2 >> 3] = G2 * +h[K2 >> 3];
                                if ((J2 | 0) == (y2 | 0)) break;
                                else J2 = J2 + 1 | 0;
                              }
                              if ((x2 | 0) < (u2 | 0)) x2 = x2 + 1 | 0;
                              else break;
                            }
                          }
                          break;
                        }
                        case 1: {
                          x2 = c[j2 >> 2] | 0;
                          c[o2 >> 2] = x2;
                          if ((x2 | 0) >= 1) {
                            u2 = c[g2 >> 2] | 0;
                            y2 = 1;
                            while (1) {
                              if ((y2 | 0) <= (u2 | 0)) {
                                J2 = S(y2, p2) | 0;
                                v2 = y2;
                                while (1) {
                                  K2 = q2 + (v2 + J2 << 3) | 0;
                                  h[K2 >> 3] = G2 * +h[K2 >> 3];
                                  if ((v2 | 0) == (u2 | 0)) break;
                                  else v2 = v2 + 1 | 0;
                                }
                              }
                              if ((y2 | 0) < (x2 | 0)) y2 = y2 + 1 | 0;
                              else break;
                            }
                          }
                          break;
                        }
                        case 2: {
                          y2 = c[j2 >> 2] | 0;
                          c[o2 >> 2] = y2;
                          if ((y2 | 0) >= 1) {
                            x2 = c[g2 >> 2] | 0;
                            u2 = 1;
                            while (1) {
                              v2 = (u2 | 0) > (x2 | 0) ? x2 : u2;
                              if ((v2 | 0) >= 1) {
                                J2 = S(u2, p2) | 0;
                                K2 = 1;
                                while (1) {
                                  L2 = q2 + (K2 + J2 << 3) | 0;
                                  h[L2 >> 3] = G2 * +h[L2 >> 3];
                                  if ((K2 | 0) < (v2 | 0)) K2 = K2 + 1 | 0;
                                  else break;
                                }
                              }
                              if ((u2 | 0) < (y2 | 0)) u2 = u2 + 1 | 0;
                              else break;
                            }
                          }
                          break;
                        }
                        case 3: {
                          u2 = c[j2 >> 2] | 0;
                          c[o2 >> 2] = u2;
                          if ((u2 | 0) >= 1) {
                            y2 = c[g2 >> 2] | 0;
                            x2 = 1;
                            do {
                              K2 = x2;
                              x2 = x2 + 1 | 0;
                              v2 = (K2 | 0) < (y2 | 0) ? x2 : y2;
                              if ((v2 | 0) >= 1) {
                                J2 = S(K2, p2) | 0;
                                L2 = 1;
                                while (1) {
                                  M2 = q2 + (L2 + J2 << 3) | 0;
                                  h[M2 >> 3] = G2 * +h[M2 >> 3];
                                  if ((L2 | 0) == (v2 | 0)) break;
                                  else L2 = L2 + 1 | 0;
                                }
                              }
                            } while ((K2 | 0) < (u2 | 0));
                          }
                          break;
                        }
                        case 4: {
                          u2 = (c[b2 >> 2] | 0) + 1 | 0;
                          y2 = c[j2 >> 2] | 0;
                          x2 = y2 + 1 | 0;
                          c[o2 >> 2] = y2;
                          if ((y2 | 0) >= 1) {
                            L2 = 1;
                            while (1) {
                              v2 = x2 - L2 | 0;
                              J2 = (u2 | 0) <= (v2 | 0) ? u2 : v2;
                              if ((J2 | 0) >= 1) {
                                v2 = S(L2, p2) | 0;
                                M2 = 1;
                                while (1) {
                                  N2 = q2 + (M2 + v2 << 3) | 0;
                                  h[N2 >> 3] = G2 * +h[N2 >> 3];
                                  if ((M2 | 0) < (J2 | 0)) M2 = M2 + 1 | 0;
                                  else break;
                                }
                              }
                              if ((L2 | 0) < (y2 | 0)) L2 = L2 + 1 | 0;
                              else break;
                            }
                          }
                          break;
                        }
                        case 5: {
                          L2 = c[d2 >> 2] | 0;
                          y2 = L2 + 2 | 0;
                          u2 = L2 + 1 | 0;
                          x2 = c[j2 >> 2] | 0;
                          c[o2 >> 2] = x2;
                          if ((x2 | 0) >= 1) {
                            M2 = 1;
                            while (1) {
                              J2 = y2 - M2 | 0;
                              v2 = (J2 | 0) < 1 ? 1 : J2;
                              if ((v2 | 0) <= (u2 | 0)) {
                                J2 = S(M2, p2) | 0;
                                K2 = v2;
                                while (1) {
                                  v2 = q2 + (K2 + J2 << 3) | 0;
                                  h[v2 >> 3] = G2 * +h[v2 >> 3];
                                  if ((K2 | 0) > (L2 | 0)) break;
                                  else K2 = K2 + 1 | 0;
                                }
                              }
                              if ((M2 | 0) < (x2 | 0)) M2 = M2 + 1 | 0;
                              else break;
                            }
                          }
                          break;
                        }
                        case 6: {
                          M2 = c[b2 >> 2] | 0;
                          x2 = c[d2 >> 2] | 0;
                          L2 = x2 + M2 | 0;
                          u2 = L2 + 2 | 0;
                          y2 = M2 + 1 | 0;
                          K2 = x2 + 1 + (M2 << 1) | 0;
                          M2 = L2 + 1 + (c[g2 >> 2] | 0) | 0;
                          L2 = c[j2 >> 2] | 0;
                          c[o2 >> 2] = L2;
                          if ((L2 | 0) >= 1) {
                            x2 = -1;
                            J2 = 1;
                            while (1) {
                              v2 = u2 + x2 | 0;
                              N2 = M2 + x2 | 0;
                              O2 = (K2 | 0) <= (N2 | 0) ? K2 : N2;
                              N2 = (v2 | 0) >= (y2 | 0) ? v2 : y2;
                              if ((N2 | 0) <= (O2 | 0)) {
                                v2 = S(J2, p2) | 0;
                                P2 = N2;
                                while (1) {
                                  N2 = q2 + (P2 + v2 << 3) | 0;
                                  h[N2 >> 3] = G2 * +h[N2 >> 3];
                                  if ((P2 | 0) < (O2 | 0)) P2 = P2 + 1 | 0;
                                  else break;
                                }
                              }
                              if ((J2 | 0) < (L2 | 0)) {
                                x2 = ~J2;
                                J2 = J2 + 1 | 0;
                              } else break;
                            }
                          }
                          break;
                        }
                        default: {
                        }
                      }
                      if (!F2) {
                        B2 = H2;
                        C2 = I2;
                      } else break;
                    }
                    i2 = n2;
                    return 0;
                  }
                while (0);
                c[m2 >> 2] = -7;
                r2 = -7;
                break;
              }
              c[m2 >> 2] = -4;
              r2 = -4;
            }
          while (0);
          c[o2 >> 2] = 0 - r2;
          Oc(1932, o2) | 0;
          i2 = n2;
          return 0;
        }
        function Db(a2, b2, d2, e2, f2, g2, i3) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          g2 = g2 | 0;
          i3 = i3 | 0;
          var j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0;
          j2 = c[i3 >> 2] | 0;
          i3 = g2 + (~j2 << 3) | 0;
          do
            if (!(nc(a2, 2076) | 0))
              if (!(nc(a2, 2078) | 0)) {
                g2 = c[d2 >> 2] | 0;
                if ((g2 | 0) < 1) {
                  k2 = g2;
                  break;
                }
                l2 = c[b2 >> 2] | 0;
                if ((l2 | 0) < 1) {
                  k2 = g2;
                  break;
                } else m2 = 1;
                while (1) {
                  n2 = S(m2, j2) | 0;
                  o2 = 1;
                  while (1) {
                    h[i3 + (o2 + n2 << 3) >> 3] = +h[e2 >> 3];
                    if ((o2 | 0) == (l2 | 0)) break;
                    else o2 = o2 + 1 | 0;
                  }
                  if ((m2 | 0) == (g2 | 0)) {
                    k2 = g2;
                    break;
                  } else m2 = m2 + 1 | 0;
                }
              } else {
                g2 = c[b2 >> 2] | 0;
                l2 = c[d2 >> 2] | 0;
                o2 = (g2 | 0) > (l2 | 0) ? l2 : g2;
                if ((o2 | 0) < 1) {
                  k2 = l2;
                  break;
                } else p2 = 1;
                do {
                  n2 = p2;
                  p2 = p2 + 1 | 0;
                  if ((n2 | 0) < (g2 | 0)) {
                    q2 = S(n2, j2) | 0;
                    r2 = p2;
                    while (1) {
                      h[i3 + (r2 + q2 << 3) >> 3] = +h[e2 >> 3];
                      if ((r2 | 0) == (g2 | 0)) break;
                      else r2 = r2 + 1 | 0;
                    }
                  }
                } while ((n2 | 0) < (o2 | 0));
                k2 = l2;
              }
            else {
              l2 = c[d2 >> 2] | 0;
              if ((l2 | 0) < 2) k2 = l2;
              else {
                o2 = c[b2 >> 2] | 0;
                g2 = 2;
                while (1) {
                  r2 = g2 + -1 | 0;
                  q2 = (r2 | 0) > (o2 | 0) ? o2 : r2;
                  if ((q2 | 0) >= 1) {
                    r2 = S(g2, j2) | 0;
                    s2 = 1;
                    while (1) {
                      h[i3 + (s2 + r2 << 3) >> 3] = +h[e2 >> 3];
                      if ((s2 | 0) < (q2 | 0)) s2 = s2 + 1 | 0;
                      else break;
                    }
                  }
                  if ((g2 | 0) == (l2 | 0)) {
                    k2 = l2;
                    break;
                  } else g2 = g2 + 1 | 0;
                }
              }
            }
          while (0);
          e2 = c[b2 >> 2] | 0;
          b2 = (e2 | 0) > (k2 | 0) ? k2 : e2;
          if ((b2 | 0) < 1) return 0;
          else t2 = 1;
          while (1) {
            h[i3 + ((S(t2, j2) | 0) + t2 << 3) >> 3] = +h[f2 >> 3];
            if ((t2 | 0) < (b2 | 0)) t2 = t2 + 1 | 0;
            else break;
          }
          return 0;
        }
        function Eb(a2, b2, d2, e2, f2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          var g2 = 0, i3 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0;
          g2 = b2 + -8 | 0;
          b2 = c[a2 >> 2] | 0;
          if ((b2 | 0) <= 0) return 0;
          a2 = c[d2 >> 2] | 0;
          d2 = S(a2, b2 + -1 | 0) | 0;
          b2 = d2 + 1 | 0;
          i3 = (a2 | 0) < 0;
          if (!(i3 ? (d2 | 0) < 1 : (d2 | 0) > -1)) return 0;
          if (i3) {
            i3 = 1;
            do {
              j2 = +h[g2 + (i3 << 3) >> 3];
              do
                if (j2 != 0) {
                  k2 = j2 >= 0 ? j2 : -j2;
                  l2 = +h[e2 >> 3];
                  if (l2 < k2) {
                    m2 = l2 / k2;
                    h[f2 >> 3] = m2 * m2 * +h[f2 >> 3] + 1;
                    h[e2 >> 3] = k2;
                    break;
                  } else {
                    m2 = k2 / l2;
                    h[f2 >> 3] = m2 * m2 + +h[f2 >> 3];
                    break;
                  }
                }
              while (0);
              i3 = i3 + a2 | 0;
            } while ((i3 | 0) > (d2 | 0));
            return 0;
          } else {
            d2 = 1;
            do {
              j2 = +h[g2 + (d2 << 3) >> 3];
              do
                if (j2 != 0) {
                  m2 = j2 >= 0 ? j2 : -j2;
                  l2 = +h[e2 >> 3];
                  if (l2 < m2) {
                    k2 = l2 / m2;
                    h[f2 >> 3] = k2 * k2 * +h[f2 >> 3] + 1;
                    h[e2 >> 3] = m2;
                    break;
                  } else {
                    k2 = m2 / l2;
                    h[f2 >> 3] = k2 * k2 + +h[f2 >> 3];
                    break;
                  }
                }
              while (0);
              d2 = d2 + a2 | 0;
            } while ((d2 | 0) <= (b2 | 0));
            return 0;
          }
          return 0;
        }
        function Fb(a2, b2, d2, e2, f2, g2, j2, k2, l2, m2, n2, o2, p2, q2, r2, s2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          g2 = g2 | 0;
          j2 = j2 | 0;
          k2 = k2 | 0;
          l2 = l2 | 0;
          m2 = m2 | 0;
          n2 = n2 | 0;
          o2 = o2 | 0;
          p2 = p2 | 0;
          q2 = q2 | 0;
          r2 = r2 | 0;
          s2 = s2 | 0;
          var t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0, O2 = 0, P2 = 0, Q2 = 0, R2 = 0, S2 = 0, T2 = 0, U2 = 0, V2 = 0, W2 = 0, X2 = 0, Y2 = 0, Z2 = 0, _2 = 0, $2 = 0, aa2 = 0, ba2 = 0, ca2 = 0, da2 = 0, ea2 = 0, fa2 = 0, ga2 = 0, ha2 = 0, ia2 = 0, ja2 = 0, ka2 = 0, la2 = 0, ma2 = 0, na2 = 0, oa2 = 0, pa2 = 0, qa2 = 0, ra2 = 0, sa2 = 0, ta2 = 0, ua2 = 0, va2 = 0, wa2 = 0, xa2 = 0, ya2 = 0, za2 = 0, Aa2 = 0, Ba2 = 0, Ca2 = 0;
          t2 = i2;
          i2 = i2 + 208 | 0;
          u2 = t2 + 64 | 0;
          v2 = t2 + 32 | 0;
          w2 = t2;
          x2 = t2 + 192 | 0;
          y2 = c[j2 >> 2] | 0;
          j2 = y2 + 1 | 0;
          z2 = g2 + (~y2 << 3) | 0;
          g2 = c[l2 >> 2] | 0;
          l2 = g2 + 1 | 0;
          A2 = k2 + (~g2 << 3) | 0;
          k2 = c[n2 >> 2] | 0;
          n2 = k2 + 1 | 0;
          B2 = m2 + (~k2 << 3) | 0;
          m2 = c[q2 >> 2] | 0;
          q2 = m2 + 1 | 0;
          C2 = p2 + (~m2 << 3) | 0;
          c[s2 >> 2] = 0;
          if (!(c[e2 >> 2] | 0)) {
            i2 = t2;
            return 0;
          }
          if (!(c[f2 >> 2] | 0)) {
            i2 = t2;
            return 0;
          }
          D2 = +lb(1939);
          E2 = +lb(2026) / D2;
          F2 = +(c[d2 >> 2] | 0);
          switch ((c[e2 >> 2] << 1) + (c[f2 >> 2] | 0) | 0) {
            case 6: {
              f2 = A2 + (l2 << 3) | 0;
              G2 = +h[f2 >> 3];
              H2 = G2 >= 0 ? G2 : -G2;
              d2 = g2 << 1;
              p2 = A2 + ((d2 | 1) << 3) | 0;
              G2 = +h[p2 >> 3];
              I2 = G2 >= 0 ? G2 : -G2;
              G2 = H2 >= I2 ? H2 : I2;
              J2 = A2 + (g2 + 2 << 3) | 0;
              I2 = +h[J2 >> 3];
              H2 = I2 >= 0 ? I2 : -I2;
              I2 = G2 >= H2 ? G2 : H2;
              K2 = A2 + (d2 + 2 << 3) | 0;
              H2 = +h[K2 >> 3];
              G2 = H2 >= 0 ? H2 : -H2;
              H2 = I2 >= G2 ? I2 : G2;
              d2 = z2 + (j2 << 3) | 0;
              G2 = +h[d2 >> 3];
              I2 = G2 >= 0 ? G2 : -G2;
              G2 = H2 >= I2 ? H2 : I2;
              L2 = y2 << 1;
              M2 = z2 + ((L2 | 1) << 3) | 0;
              I2 = +h[M2 >> 3];
              H2 = I2 >= 0 ? I2 : -I2;
              I2 = G2 >= H2 ? G2 : H2;
              N2 = z2 + (y2 + 2 << 3) | 0;
              H2 = +h[N2 >> 3];
              G2 = H2 >= 0 ? H2 : -H2;
              H2 = I2 >= G2 ? I2 : G2;
              O2 = z2 + (L2 + 2 << 3) | 0;
              G2 = +h[O2 >> 3];
              I2 = G2 >= 0 ? G2 : -G2;
              G2 = D2 * (H2 >= I2 ? H2 : I2);
              I2 = G2 >= E2 ? G2 : E2;
              h[w2 >> 3] = 0;
              Ta(468, w2, 6248, u2, 416) | 0;
              G2 = +h[d2 >> 3];
              H2 = F2 * +h[f2 >> 3];
              h[u2 >> 3] = G2 + H2;
              P2 = +h[O2 >> 3];
              O2 = u2 + 40 | 0;
              h[O2 >> 3] = H2 + P2;
              H2 = F2 * +h[K2 >> 3];
              K2 = u2 + 80 | 0;
              h[K2 >> 3] = G2 + H2;
              f2 = u2 + 120 | 0;
              h[f2 >> 3] = H2 + P2;
              d2 = (c[a2 >> 2] | 0) == 0;
              P2 = +h[(d2 ? N2 : M2) >> 3];
              H2 = +h[(d2 ? M2 : N2) >> 3];
              h[u2 + 32 >> 3] = H2;
              h[u2 + 8 >> 3] = P2;
              h[u2 + 112 >> 3] = H2;
              h[u2 + 88 >> 3] = P2;
              N2 = (c[b2 >> 2] | 0) == 0;
              P2 = F2 * +h[(N2 ? J2 : p2) >> 3];
              H2 = F2 * +h[(N2 ? p2 : J2) >> 3];
              h[u2 + 64 >> 3] = P2;
              h[u2 + 104 >> 3] = P2;
              h[u2 + 16 >> 3] = H2;
              h[u2 + 56 >> 3] = H2;
              h[w2 >> 3] = +h[B2 + (n2 << 3) >> 3];
              J2 = w2 + 8 | 0;
              h[J2 >> 3] = +h[B2 + (k2 + 2 << 3) >> 3];
              p2 = k2 << 1;
              N2 = w2 + 16 | 0;
              h[N2 >> 3] = +h[B2 + ((p2 | 1) << 3) >> 3];
              M2 = w2 + 24 | 0;
              h[M2 >> 3] = +h[B2 + (p2 + 2 << 3) >> 3];
              p2 = 0;
              d2 = 0;
              L2 = 1;
              while (1) {
                H2 = 0;
                Q2 = L2;
                R2 = d2;
                S2 = p2;
                while (1) {
                  T2 = Q2 + -5 | 0;
                  U2 = L2;
                  P2 = H2;
                  V2 = R2;
                  W2 = S2;
                  do {
                    G2 = +h[u2 + (T2 + (U2 << 2) << 3) >> 3];
                    X2 = G2 >= 0 ? G2 : -G2;
                    Y2 = !(X2 >= P2);
                    P2 = Y2 ? P2 : X2;
                    V2 = Y2 ? V2 : Q2;
                    W2 = Y2 ? W2 : U2;
                    U2 = U2 + 1 | 0;
                  } while ((U2 | 0) != 5);
                  Q2 = Q2 + 1 | 0;
                  if ((Q2 | 0) == 5) break;
                  else {
                    H2 = P2;
                    R2 = V2;
                    S2 = W2;
                  }
                }
                if ((V2 | 0) != (L2 | 0)) {
                  S2 = V2 + -1 | 0;
                  R2 = L2 + -1 | 0;
                  Pb(412, u2 + (S2 << 3) | 0, 412, u2 + (R2 << 3) | 0, 412) | 0;
                  Q2 = w2 + (R2 << 3) | 0;
                  H2 = +h[Q2 >> 3];
                  R2 = w2 + (S2 << 3) | 0;
                  h[Q2 >> 3] = +h[R2 >> 3];
                  h[R2 >> 3] = H2;
                }
                R2 = L2 << 2;
                if ((W2 | 0) != (L2 | 0)) Pb(412, u2 + ((W2 << 2) + -4 << 3) | 0, 416, u2 + (R2 + -4 << 3) | 0, 416) | 0;
                Q2 = L2 + -1 | 0;
                c[x2 + (Q2 << 2) >> 2] = W2;
                S2 = u2 + ((L2 * 5 | 0) + -5 << 3) | 0;
                H2 = +h[S2 >> 3];
                if ((H2 >= 0 ? H2 : -H2) < I2) {
                  c[s2 >> 2] = 1;
                  h[S2 >> 3] = I2;
                  Z2 = I2;
                } else Z2 = H2;
                U2 = L2;
                L2 = L2 + 1 | 0;
                T2 = R2 + -5 | 0;
                R2 = w2 + (Q2 << 3) | 0;
                Q2 = U2 + -5 | 0;
                Y2 = L2 << 2;
                _2 = u2 + (Q2 + Y2 << 3) | 0;
                $2 = U2 + 2 | 0;
                U2 = ($2 | 0) == 5;
                aa2 = L2;
                H2 = Z2;
                while (1) {
                  ba2 = u2 + (T2 + aa2 << 3) | 0;
                  X2 = +h[ba2 >> 3] / H2;
                  h[ba2 >> 3] = X2;
                  ca2 = w2 + (aa2 + -1 << 3) | 0;
                  h[ca2 >> 3] = +h[ca2 >> 3] - X2 * +h[R2 >> 3];
                  ca2 = aa2 + -5 | 0;
                  da2 = u2 + (ca2 + Y2 << 3) | 0;
                  h[da2 >> 3] = +h[da2 >> 3] - X2 * +h[_2 >> 3];
                  if (!U2) {
                    da2 = $2;
                    do {
                      ea2 = da2 << 2;
                      fa2 = u2 + (ca2 + ea2 << 3) | 0;
                      h[fa2 >> 3] = +h[fa2 >> 3] - +h[ba2 >> 3] * +h[u2 + (Q2 + ea2 << 3) >> 3];
                      da2 = da2 + 1 | 0;
                    } while ((da2 | 0) != 5);
                  }
                  da2 = aa2 + 1 | 0;
                  if ((da2 | 0) == 5) break;
                  aa2 = da2;
                  H2 = +h[S2 >> 3];
                }
                if ((L2 | 0) == 4) break;
                else {
                  p2 = W2;
                  d2 = V2;
                }
              }
              Z2 = +h[f2 >> 3];
              if ((Z2 >= 0 ? Z2 : -Z2) < I2) {
                h[f2 >> 3] = I2;
                ga2 = I2;
              } else ga2 = Z2;
              h[o2 >> 3] = 1;
              Z2 = E2 * 8;
              I2 = +h[w2 >> 3];
              H2 = I2 >= 0 ? I2 : -I2;
              P2 = +h[u2 >> 3];
              X2 = +h[J2 >> 3];
              if (((!(Z2 * H2 > (P2 >= 0 ? P2 : -P2)) ? (G2 = +h[O2 >> 3], !(Z2 * (X2 >= 0 ? X2 : -X2) > (G2 >= 0 ? G2 : -G2))) : 0) ? (G2 = +h[N2 >> 3], ha2 = +h[K2 >> 3], !(Z2 * (G2 >= 0 ? G2 : -G2) > (ha2 >= 0 ? ha2 : -ha2))) : 0) ? (ha2 = +h[M2 >> 3], !(Z2 * (ha2 >= 0 ? ha2 : -ha2) > (ga2 >= 0 ? ga2 : -ga2))) : 0) {
                ia2 = ha2;
                ja2 = G2;
                ka2 = X2;
                la2 = I2;
              } else {
                G2 = X2 >= 0 ? X2 : -X2;
                ha2 = H2 >= G2 ? H2 : G2;
                G2 = +h[N2 >> 3];
                H2 = G2 >= 0 ? G2 : -G2;
                Z2 = ha2 >= H2 ? ha2 : H2;
                H2 = +h[M2 >> 3];
                ha2 = H2 >= 0 ? H2 : -H2;
                ma2 = 0.125 / (Z2 >= ha2 ? Z2 : ha2);
                h[o2 >> 3] = ma2;
                ha2 = I2 * ma2;
                h[w2 >> 3] = ha2;
                I2 = X2 * ma2;
                h[J2 >> 3] = I2;
                X2 = ma2 * G2;
                h[N2 >> 3] = X2;
                G2 = ma2 * H2;
                h[M2 >> 3] = G2;
                ia2 = G2;
                ja2 = X2;
                ka2 = I2;
                la2 = ha2;
              }
              ha2 = ia2 * (1 / ga2);
              M2 = v2 + 24 | 0;
              h[M2 >> 3] = ha2;
              ga2 = 1 / +h[K2 >> 3];
              K2 = v2 + 16 | 0;
              ia2 = ja2 * ga2 - ga2 * +h[u2 + 112 >> 3] * ha2;
              h[K2 >> 3] = ia2;
              ha2 = 1 / +h[O2 >> 3];
              ga2 = ka2 * ha2;
              O2 = v2 + 8 | 0;
              h[O2 >> 3] = ga2;
              ka2 = ga2 - ha2 * +h[u2 + 72 >> 3] * ia2;
              h[O2 >> 3] = ka2;
              ga2 = ka2 - ha2 * +h[u2 + 104 >> 3] * +h[v2 + 24 >> 3];
              h[O2 >> 3] = ga2;
              ha2 = 1 / P2;
              P2 = la2 * ha2;
              h[v2 >> 3] = P2;
              la2 = P2 - ha2 * +h[u2 + 32 >> 3] * ga2;
              h[v2 >> 3] = la2;
              ga2 = la2 - ha2 * +h[u2 + 64 >> 3] * +h[v2 + 16 >> 3];
              h[v2 >> 3] = ga2;
              h[v2 >> 3] = ga2 - ha2 * +h[u2 + 96 >> 3] * +h[v2 + 24 >> 3];
              u2 = c[x2 + 8 >> 2] | 0;
              if ((u2 | 0) != 3) {
                N2 = v2 + (u2 + -1 << 3) | 0;
                h[K2 >> 3] = +h[N2 >> 3];
                h[N2 >> 3] = ia2;
              }
              N2 = c[x2 + 4 >> 2] | 0;
              if ((N2 | 0) != 2) {
                ia2 = +h[O2 >> 3];
                u2 = v2 + (N2 + -1 << 3) | 0;
                h[O2 >> 3] = +h[u2 >> 3];
                h[u2 >> 3] = ia2;
              }
              u2 = c[x2 >> 2] | 0;
              if ((u2 | 0) != 1) {
                ia2 = +h[v2 >> 3];
                x2 = v2 + (u2 + -1 << 3) | 0;
                h[v2 >> 3] = +h[x2 >> 3];
                h[x2 >> 3] = ia2;
              }
              ia2 = +h[v2 >> 3];
              h[C2 + (q2 << 3) >> 3] = ia2;
              ha2 = +h[O2 >> 3];
              h[C2 + (m2 + 2 << 3) >> 3] = ha2;
              ga2 = +h[K2 >> 3];
              K2 = m2 << 1;
              h[C2 + ((K2 | 1) << 3) >> 3] = ga2;
              la2 = +h[M2 >> 3];
              h[C2 + (K2 + 2 << 3) >> 3] = la2;
              P2 = (ia2 >= 0 ? ia2 : -ia2) + (ga2 >= 0 ? ga2 : -ga2);
              ga2 = (ha2 >= 0 ? ha2 : -ha2) + (la2 >= 0 ? la2 : -la2);
              h[r2 >> 3] = P2 >= ga2 ? P2 : ga2;
              i2 = t2;
              return 0;
            }
            case 4: {
              ga2 = +h[z2 + (j2 << 3) >> 3];
              P2 = ga2 >= 0 ? ga2 : -ga2;
              la2 = +h[A2 + (l2 << 3) >> 3];
              ha2 = la2 >= 0 ? la2 : -la2;
              ia2 = P2 >= ha2 ? P2 : ha2;
              K2 = g2 << 1;
              ha2 = +h[A2 + ((K2 | 1) << 3) >> 3];
              P2 = ha2 >= 0 ? ha2 : -ha2;
              ka2 = ia2 >= P2 ? ia2 : P2;
              P2 = +h[A2 + (g2 + 2 << 3) >> 3];
              ia2 = P2 >= 0 ? P2 : -P2;
              ja2 = ka2 >= ia2 ? ka2 : ia2;
              ia2 = +h[A2 + (K2 + 2 << 3) >> 3];
              ka2 = ia2 >= 0 ? ia2 : -ia2;
              I2 = D2 * (ja2 >= ka2 ? ja2 : ka2);
              h[v2 >> 3] = ga2 + F2 * la2;
              h[v2 + 24 >> 3] = ga2 + F2 * ia2;
              K2 = (c[b2 >> 2] | 0) == 0;
              h[v2 + 8 >> 3] = F2 * (K2 ? ha2 : P2);
              h[v2 + 16 >> 3] = F2 * (K2 ? P2 : ha2);
              h[w2 >> 3] = +h[B2 + (n2 << 3) >> 3];
              h[w2 + 8 >> 3] = +h[B2 + ((k2 << 1 | 1) << 3) >> 3];
              na2 = I2 >= E2 ? I2 : E2;
              oa2 = v2;
              break;
            }
            case 5: {
              I2 = +h[A2 + (l2 << 3) >> 3];
              ha2 = I2 >= 0 ? I2 : -I2;
              P2 = +h[z2 + (j2 << 3) >> 3];
              ia2 = P2 >= 0 ? P2 : -P2;
              ga2 = ha2 >= ia2 ? ha2 : ia2;
              K2 = y2 << 1;
              ia2 = +h[z2 + ((K2 | 1) << 3) >> 3];
              ha2 = ia2 >= 0 ? ia2 : -ia2;
              la2 = ga2 >= ha2 ? ga2 : ha2;
              ha2 = +h[z2 + (y2 + 2 << 3) >> 3];
              ga2 = ha2 >= 0 ? ha2 : -ha2;
              ka2 = la2 >= ga2 ? la2 : ga2;
              ga2 = +h[z2 + (K2 + 2 << 3) >> 3];
              la2 = ga2 >= 0 ? ga2 : -ga2;
              ja2 = D2 * (ka2 >= la2 ? ka2 : la2);
              la2 = F2 * I2;
              h[v2 >> 3] = P2 + la2;
              h[v2 + 24 >> 3] = ga2 + la2;
              K2 = (c[a2 >> 2] | 0) == 0;
              h[v2 + 8 >> 3] = K2 ? ha2 : ia2;
              h[v2 + 16 >> 3] = K2 ? ia2 : ha2;
              h[w2 >> 3] = +h[B2 + (n2 << 3) >> 3];
              h[w2 + 8 >> 3] = +h[B2 + (k2 + 2 << 3) >> 3];
              na2 = ja2 >= E2 ? ja2 : E2;
              oa2 = v2;
              break;
            }
            default: {
              ja2 = +h[z2 + (j2 << 3) >> 3] + F2 * +h[A2 + (l2 << 3) >> 3];
              F2 = ja2 >= 0 ? ja2 : -ja2;
              if (!(F2 <= E2)) {
                pa2 = ja2;
                qa2 = F2;
              } else {
                c[s2 >> 2] = 1;
                pa2 = E2;
                qa2 = E2;
              }
              h[o2 >> 3] = 1;
              l2 = B2 + (n2 << 3) | 0;
              F2 = +h[l2 >> 3];
              ja2 = F2 >= 0 ? F2 : -F2;
              if (E2 * ja2 > qa2) {
                qa2 = 1 / ja2;
                h[o2 >> 3] = qa2;
                ra2 = qa2;
                sa2 = +h[l2 >> 3];
              } else {
                ra2 = 1;
                sa2 = F2;
              }
              F2 = sa2 * ra2 / pa2;
              h[C2 + (q2 << 3) >> 3] = F2;
              h[r2 >> 3] = F2 >= 0 ? F2 : -F2;
              i2 = t2;
              return 0;
            }
          }
          l2 = (hc(412, oa2, 416) | 0) + -1 | 0;
          F2 = +h[v2 + (l2 << 3) >> 3];
          if (!((F2 >= 0 ? F2 : -F2) <= na2)) ta2 = F2;
          else {
            c[s2 >> 2] = 1;
            ta2 = na2;
          }
          F2 = +h[v2 + ((c[420 + (l2 << 2) >> 2] | 0) + -1 << 3) >> 3];
          pa2 = +h[v2 + ((c[436 + (l2 << 2) >> 2] | 0) + -1 << 3) >> 3] / ta2;
          ra2 = +h[v2 + ((c[452 + (l2 << 2) >> 2] | 0) + -1 << 3) >> 3] - F2 * pa2;
          if (!((ra2 >= 0 ? ra2 : -ra2) <= na2)) ua2 = ra2;
          else {
            c[s2 >> 2] = 1;
            ua2 = na2;
          }
          if ((l2 | 2 | 0) == 3) {
            s2 = w2 + 8 | 0;
            na2 = +h[s2 >> 3];
            ra2 = +h[w2 >> 3] - pa2 * na2;
            h[s2 >> 3] = ra2;
            h[w2 >> 3] = na2;
            va2 = s2;
            wa2 = ra2;
            xa2 = na2;
          } else {
            na2 = +h[w2 >> 3];
            s2 = w2 + 8 | 0;
            ra2 = +h[s2 >> 3] - pa2 * na2;
            h[s2 >> 3] = ra2;
            va2 = s2;
            wa2 = ra2;
            xa2 = na2;
          }
          h[o2 >> 3] = 1;
          na2 = E2 * 2;
          E2 = wa2 >= 0 ? wa2 : -wa2;
          if (!(na2 * E2 > (ua2 >= 0 ? ua2 : -ua2))) {
            ra2 = -xa2;
            if (na2 * (xa2 >= 0 ? xa2 : ra2) > (ta2 >= 0 ? ta2 : -ta2)) {
              ya2 = ra2;
              za2 = 21;
            } else {
              Aa2 = wa2;
              Ba2 = xa2;
            }
          } else {
            ya2 = -xa2;
            za2 = 21;
          }
          if ((za2 | 0) == 21) {
            ra2 = xa2 >= 0 ? xa2 : ya2;
            ya2 = 0.5 / (ra2 >= E2 ? ra2 : E2);
            h[o2 >> 3] = ya2;
            E2 = xa2 * ya2;
            h[w2 >> 3] = E2;
            xa2 = wa2 * ya2;
            h[va2 >> 3] = xa2;
            Aa2 = xa2;
            Ba2 = E2;
          }
          E2 = Aa2 / ua2;
          ua2 = Ba2 / ta2 - F2 / ta2 * E2;
          va2 = (l2 | 1 | 0) == 3;
          ta2 = va2 ? ua2 : E2;
          F2 = va2 ? E2 : ua2;
          va2 = C2 + (q2 << 3) | 0;
          h[va2 >> 3] = F2;
          if ((c[e2 >> 2] | 0) == 1) {
            h[C2 + ((m2 << 1 | 1) << 3) >> 3] = ta2;
            ua2 = +h[va2 >> 3];
            Ca2 = (ta2 >= 0 ? ta2 : -ta2) + (ua2 >= 0 ? ua2 : -ua2);
          } else {
            h[C2 + (m2 + 2 << 3) >> 3] = ta2;
            ua2 = F2 >= 0 ? F2 : -F2;
            F2 = ta2 >= 0 ? ta2 : -ta2;
            Ca2 = ua2 >= F2 ? ua2 : F2;
          }
          h[r2 >> 3] = Ca2;
          i2 = t2;
          return 0;
        }
        function Gb(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, g2 = 0, i3 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0;
          e2 = b2 + -8 | 0;
          f2 = c[a2 >> 2] | 0;
          if ((f2 | 0) < 1) {
            g2 = 0;
            return +g2;
          }
          a2 = c[d2 >> 2] | 0;
          if ((a2 | 0) < 1) {
            g2 = 0;
            return +g2;
          }
          if ((f2 | 0) == 1) {
            i3 = +h[b2 >> 3];
            g2 = i3 >= 0 ? i3 : -i3;
            return +g2;
          }
          b2 = S(a2, f2 + -1 | 0) | 0;
          f2 = b2 + 1 | 0;
          if ((b2 | 0) > -1) {
            i3 = 1;
            b2 = 1;
            j2 = 0;
            while (1) {
              k2 = +h[e2 + (b2 << 3) >> 3];
              do
                if (k2 != 0) {
                  l2 = k2 >= 0 ? k2 : -k2;
                  if (j2 < l2) {
                    m2 = j2 / l2;
                    n2 = l2;
                    o2 = i3 * (m2 * m2) + 1;
                    break;
                  } else {
                    m2 = l2 / j2;
                    n2 = j2;
                    o2 = i3 + m2 * m2;
                    break;
                  }
                } else {
                  n2 = j2;
                  o2 = i3;
                }
              while (0);
              b2 = b2 + a2 | 0;
              if ((b2 | 0) > (f2 | 0)) {
                p2 = n2;
                q2 = o2;
                break;
              } else {
                i3 = o2;
                j2 = n2;
              }
            }
          } else {
            p2 = 0;
            q2 = 1;
          }
          g2 = p2 * +G(+q2);
          return +g2;
        }
        function Hb(a2, b2, d2, e2, f2, g2, j2, k2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          g2 = g2 | 0;
          j2 = j2 | 0;
          k2 = k2 | 0;
          var l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0;
          l2 = i2;
          i2 = i2 + 16 | 0;
          m2 = l2 + 12 | 0;
          n2 = l2 + 8 | 0;
          o2 = l2;
          p2 = c[f2 >> 2] | 0;
          q2 = e2 + (~p2 << 3) | 0;
          r2 = g2 + -8 | 0;
          c[k2 >> 2] = 0;
          g2 = c[a2 >> 2] | 0;
          do
            if ((g2 | 0) < 0) {
              c[k2 >> 2] = -1;
              s2 = -1;
            } else {
              t2 = c[b2 >> 2] | 0;
              if ((t2 | 0) < 0 | (t2 | 0) > (g2 | 0)) {
                c[k2 >> 2] = -2;
                s2 = -2;
                break;
              }
              u2 = c[d2 >> 2] | 0;
              if ((u2 | 0) < 0 | (u2 | 0) > (t2 | 0)) {
                c[k2 >> 2] = -3;
                s2 = -3;
                break;
              }
              if ((c[f2 >> 2] | 0) < (((g2 | 0) > 1 ? g2 : 1) | 0)) {
                c[k2 >> 2] = -5;
                s2 = -5;
                break;
              }
              if ((t2 | 0) < 1) {
                i2 = l2;
                return 0;
              }
              c[m2 >> 2] = t2;
              v2 = u2 + 1 | 0;
              if ((u2 | 0) < (t2 | 0)) {
                if ((g2 | 0) < 1) {
                  w2 = v2;
                  while (1) {
                    h[q2 + ((S(w2, p2) | 0) + w2 << 3) >> 3] = 1;
                    if ((w2 | 0) < (t2 | 0)) w2 = w2 + 1 | 0;
                    else {
                      x2 = u2;
                      break;
                    }
                  }
                } else {
                  w2 = g2 << 3;
                  y2 = v2;
                  z2 = 0;
                  while (1) {
                    A2 = S(y2, p2) | 0;
                    je(e2 + ((S(u2 + z2 | 0, p2) | 0) << 3) | 0, 0, w2 | 0) | 0;
                    h[q2 + (A2 + y2 << 3) >> 3] = 1;
                    if ((y2 | 0) < (t2 | 0)) {
                      y2 = y2 + 1 | 0;
                      z2 = z2 + 1 | 0;
                    } else break;
                  }
                  x2 = c[d2 >> 2] | 0;
                }
                c[n2 >> 2] = g2;
                B2 = x2;
              } else B2 = u2;
              if ((B2 | 0) <= 0) {
                i2 = l2;
                return 0;
              }
              z2 = 0 - p2 | 0;
              y2 = S(p2, (B2 << 3) + -8 | 0) | 0;
              t2 = B2;
              w2 = 0;
              while (1) {
                v2 = e2 + ((S(w2, z2) | 0) << 3) + y2 | 0;
                A2 = c[b2 >> 2] | 0;
                if ((A2 | 0) > (t2 | 0)) {
                  C2 = q2 + ((S(t2, p2) | 0) + t2 << 3) | 0;
                  h[C2 >> 3] = 1;
                  c[m2 >> 2] = 1 - t2 + (c[a2 >> 2] | 0);
                  c[n2 >> 2] = A2 - t2;
                  wb(1964, m2, n2, C2, 472, r2 + (t2 << 3) | 0, q2 + ((S(t2 + 1 | 0, p2) | 0) + t2 << 3) | 0, f2, j2) | 0;
                }
                C2 = c[a2 >> 2] | 0;
                if ((C2 | 0) > (t2 | 0)) {
                  c[m2 >> 2] = C2 - t2;
                  C2 = r2 + (t2 << 3) | 0;
                  h[o2 >> 3] = -+h[C2 >> 3];
                  A2 = S(t2, p2) | 0;
                  Ob(m2, o2, q2 + (t2 + 1 + A2 << 3) | 0, 472) | 0;
                  D2 = A2;
                  E2 = C2;
                } else {
                  D2 = S(t2, p2) | 0;
                  E2 = r2 + (t2 << 3) | 0;
                }
                h[q2 + (D2 + t2 << 3) >> 3] = 1 - +h[E2 >> 3];
                C2 = t2 + -1 | 0;
                c[m2 >> 2] = C2;
                if ((t2 | 0) < 2) break;
                je(v2 | 0, 0, ((C2 | 0) > 1 ? C2 : 1) << 3 | 0) | 0;
                t2 = C2;
                w2 = w2 + 1 | 0;
              }
              i2 = l2;
              return 0;
            }
          while (0);
          c[m2 >> 2] = 0 - s2;
          Oc(1941, m2) | 0;
          i2 = l2;
          return 0;
        }
        function Ib(a2, b2, d2, e2, f2, g2, j2, k2, l2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          g2 = g2 | 0;
          j2 = j2 | 0;
          k2 = k2 | 0;
          l2 = l2 | 0;
          var m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0, O2 = 0, P2 = 0, Q2 = 0, R2 = 0, T2 = 0;
          m2 = i2;
          i2 = i2 + 16 | 0;
          n2 = m2 + 8 | 0;
          o2 = m2 + 4 | 0;
          p2 = m2;
          q2 = c[f2 >> 2] | 0;
          r2 = e2 + (~q2 << 3) | 0;
          s2 = g2 + -8 | 0;
          c[l2 >> 2] = 0;
          g2 = c[d2 >> 2] | 0;
          t2 = c[b2 >> 2] | 0;
          u2 = g2 - t2 | 0;
          c[o2 >> 2] = u2;
          v2 = c[k2 >> 2] | 0;
          w2 = (v2 | 0) == -1;
          x2 = c[a2 >> 2] | 0;
          do
            if ((x2 | 0) < 0) {
              c[l2 >> 2] = -1;
              y2 = -1;
            } else {
              if ((t2 | 0) >= 1 ? (z2 = (x2 | 0) > 1 ? x2 : 1, (t2 | 0) <= (z2 | 0)) : 0) {
                if ((g2 | 0) > (x2 | 0) ? 1 : (g2 | 0) < (((t2 | 0) > (x2 | 0) ? x2 : t2) | 0)) {
                  c[l2 >> 2] = -3;
                  y2 = -3;
                  break;
                }
                if ((c[f2 >> 2] | 0) < (z2 | 0)) {
                  c[l2 >> 2] = -5;
                  y2 = -5;
                  break;
                }
                if (!(w2 | (v2 | 0) >= (((u2 | 0) > 1 ? u2 : 1) | 0))) {
                  c[l2 >> 2] = -8;
                  y2 = -8;
                  break;
                }
                z2 = lc(476, 1955, 1962, o2, o2, o2, 480) | 0;
                A2 = c[o2 >> 2] | 0;
                B2 = +(S((A2 | 0) > 1 ? A2 : 1, z2) | 0);
                h[j2 >> 3] = B2;
                z2 = c[l2 >> 2] | 0;
                if (z2 | 0) {
                  y2 = z2;
                  break;
                }
                if (w2) {
                  i2 = m2;
                  return 0;
                }
                z2 = c[a2 >> 2] | 0;
                if (!z2) {
                  h[j2 >> 3] = 1;
                  i2 = m2;
                  return 0;
                }
                C2 = c[b2 >> 2] | 0;
                D2 = C2 + 1 | 0;
                c[n2 >> 2] = D2;
                E2 = c[d2 >> 2] | 0;
                a: do
                  if ((E2 | 0) > (C2 | 0)) {
                    F2 = 0 - q2 | 0;
                    G2 = E2 << 3;
                    H2 = G2 + -8 | 0;
                    I2 = S(q2, H2) | 0;
                    if ((E2 | 0) >= (z2 | 0)) {
                      J2 = 0;
                      K2 = E2;
                      while (1) {
                        L2 = K2;
                        K2 = K2 + -1 | 0;
                        if ((L2 | 0) > 1) je(e2 + ((S(J2, F2) | 0) << 3) + I2 | 0, 0, H2 + (S(J2, -8) | 0) | 0) | 0;
                        if ((L2 | 0) < (E2 | 0)) {
                          M2 = S(K2, q2) | 0;
                          N2 = S(L2, q2) | 0;
                          O2 = L2;
                          do {
                            O2 = O2 + 1 | 0;
                            h[r2 + (O2 + N2 << 3) >> 3] = +h[r2 + (O2 + M2 << 3) >> 3];
                          } while ((O2 | 0) != (E2 | 0));
                        }
                        if ((L2 | 0) <= (D2 | 0)) break a;
                        else J2 = J2 + 1 | 0;
                      }
                    }
                    J2 = E2 + (S(q2, E2 + -1 | 0) | 0) | 0;
                    K2 = (z2 << 3) - G2 | 0;
                    O2 = 0;
                    M2 = E2;
                    while (1) {
                      N2 = S(O2, F2) | 0;
                      P2 = e2 + (J2 + N2 << 3) | 0;
                      Q2 = M2;
                      M2 = M2 + -1 | 0;
                      if ((Q2 | 0) > 1) je(e2 + (N2 << 3) + I2 | 0, 0, H2 + (S(O2, -8) | 0) | 0) | 0;
                      if ((Q2 | 0) < (E2 | 0)) {
                        N2 = S(M2, q2) | 0;
                        R2 = S(Q2, q2) | 0;
                        T2 = Q2;
                        do {
                          T2 = T2 + 1 | 0;
                          h[r2 + (T2 + R2 << 3) >> 3] = +h[r2 + (T2 + N2 << 3) >> 3];
                        } while ((T2 | 0) != (E2 | 0));
                      }
                      je(P2 | 0, 0, K2 | 0) | 0;
                      if ((Q2 | 0) <= (D2 | 0)) break;
                      else O2 = O2 + 1 | 0;
                    }
                  }
                while (0);
                D2 = c[b2 >> 2] | 0;
                c[n2 >> 2] = D2;
                E2 = c[a2 >> 2] | 0;
                if ((D2 | 0) >= 1) {
                  z2 = (E2 | 0) < 1;
                  C2 = E2 << 3;
                  O2 = 1;
                  K2 = 0;
                  while (1) {
                    M2 = S(O2, q2) | 0;
                    if (!z2) je(e2 + ((S(q2, K2) | 0) << 3) | 0, 0, C2 | 0) | 0;
                    h[r2 + (M2 + O2 << 3) >> 3] = 1;
                    if ((O2 | 0) < (D2 | 0)) {
                      O2 = O2 + 1 | 0;
                      K2 = K2 + 1 | 0;
                    } else break;
                  }
                }
                c[n2 >> 2] = E2;
                K2 = c[d2 >> 2] | 0;
                O2 = K2 + 1 | 0;
                b: do
                  if ((K2 | 0) < (E2 | 0)) {
                    D2 = c[a2 >> 2] | 0;
                    if ((D2 | 0) < 1) {
                      C2 = O2;
                      while (1) {
                        h[r2 + ((S(C2, q2) | 0) + C2 << 3) >> 3] = 1;
                        if ((C2 | 0) < (E2 | 0)) C2 = C2 + 1 | 0;
                        else break b;
                      }
                    }
                    C2 = D2 << 3;
                    z2 = O2;
                    M2 = 0;
                    while (1) {
                      H2 = S(z2, q2) | 0;
                      je(e2 + ((S(K2 + M2 | 0, q2) | 0) << 3) | 0, 0, C2 | 0) | 0;
                      h[r2 + (H2 + z2 << 3) >> 3] = 1;
                      if ((z2 | 0) < (E2 | 0)) {
                        z2 = z2 + 1 | 0;
                        M2 = M2 + 1 | 0;
                      } else break;
                    }
                  }
                while (0);
                if ((A2 | 0) > 0) {
                  E2 = c[b2 >> 2] | 0;
                  K2 = E2 + 1 | 0;
                  Jb(o2, o2, o2, r2 + ((S(K2, q2) | 0) + K2 << 3) | 0, f2, s2 + (E2 << 3) | 0, j2, k2, p2) | 0;
                }
                h[j2 >> 3] = B2;
                i2 = m2;
                return 0;
              }
              c[l2 >> 2] = -2;
              y2 = -2;
            }
          while (0);
          c[n2 >> 2] = 0 - y2;
          Oc(1948, n2) | 0;
          i2 = m2;
          return 0;
        }
        function Jb(a2, b2, d2, e2, f2, g2, j2, k2, l2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          g2 = g2 | 0;
          j2 = j2 | 0;
          k2 = k2 | 0;
          l2 = l2 | 0;
          var m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0, O2 = 0, P2 = 0, Q2 = 0, R2 = 0, T2 = 0, U2 = 0, V2 = 0, W2 = 0, X2 = 0, Y2 = 0, Z2 = 0;
          m2 = i2;
          i2 = i2 + 32 | 0;
          n2 = m2 + 20 | 0;
          o2 = m2 + 16 | 0;
          p2 = m2 + 12 | 0;
          q2 = m2 + 8 | 0;
          r2 = m2 + 4 | 0;
          s2 = m2;
          t2 = c[f2 >> 2] | 0;
          u2 = e2 + (~t2 << 3) | 0;
          v2 = g2 + -8 | 0;
          g2 = j2 + -8 | 0;
          c[l2 >> 2] = 0;
          w2 = lc(484, 1955, 1962, a2, b2, d2, 488) | 0;
          x2 = c[b2 >> 2] | 0;
          y2 = (x2 | 0) > 1 ? x2 : 1;
          h[j2 >> 3] = +(S(y2, w2) | 0);
          z2 = c[k2 >> 2] | 0;
          A2 = (z2 | 0) == -1;
          B2 = c[a2 >> 2] | 0;
          do
            if ((B2 | 0) >= 0) {
              if ((x2 | 0) < 0 | (x2 | 0) > (B2 | 0)) {
                c[l2 >> 2] = -2;
                C2 = -2;
                break;
              }
              D2 = c[d2 >> 2] | 0;
              if ((D2 | 0) < 0 | (D2 | 0) > (x2 | 0)) {
                c[l2 >> 2] = -3;
                C2 = -3;
                break;
              }
              if ((c[f2 >> 2] | 0) < (((B2 | 0) > 1 ? B2 : 1) | 0)) {
                c[l2 >> 2] = -5;
                C2 = -5;
                break;
              }
              if (!(A2 | (z2 | 0) >= (y2 | 0))) {
                c[l2 >> 2] = -8;
                C2 = -8;
                break;
              }
              E2 = c[l2 >> 2] | 0;
              if (!E2) {
                if (A2) {
                  i2 = m2;
                  return 0;
                }
                if ((x2 | 0) < 1) {
                  h[j2 >> 3] = 1;
                  i2 = m2;
                  return 0;
                }
                do
                  if ((w2 | 0) > 1) {
                    if ((w2 | 0) < (D2 | 0)) {
                      c[n2 >> 2] = 0;
                      F2 = lc(492, 1955, 1962, a2, b2, d2, 488) | 0;
                      c[o2 >> 2] = F2;
                      G2 = (F2 | 0) > 0 ? F2 : 0;
                      F2 = c[d2 >> 2] | 0;
                      if ((G2 | 0) < (F2 | 0)) {
                        H2 = c[b2 >> 2] | 0;
                        c[s2 >> 2] = H2;
                        I2 = S(H2, w2) | 0;
                        J2 = c[k2 >> 2] | 0;
                        if ((J2 | 0) < (I2 | 0)) {
                          K2 = (J2 | 0) / (H2 | 0) | 0;
                          c[n2 >> 2] = 2;
                          H2 = lc(496, 1955, 1962, a2, b2, d2, 488) | 0;
                          c[o2 >> 2] = H2;
                          if ((K2 | 0) < (((H2 | 0) > 2 ? H2 : 2) | 0)) {
                            L2 = I2;
                            M2 = 0;
                            N2 = 0;
                            O2 = K2;
                            break;
                          }
                          P2 = I2;
                          Q2 = G2;
                          R2 = K2;
                          T2 = c[d2 >> 2] | 0;
                        } else {
                          P2 = I2;
                          Q2 = G2;
                          R2 = w2;
                          T2 = F2;
                        }
                      } else {
                        P2 = x2;
                        Q2 = G2;
                        R2 = w2;
                        T2 = F2;
                      }
                    } else {
                      P2 = x2;
                      Q2 = 0;
                      R2 = w2;
                      T2 = D2;
                    }
                    if ((R2 | 0) < (T2 | 0) & (T2 | 0) > (Q2 | 0)) {
                      F2 = T2 - Q2 + -1 | 0;
                      G2 = (F2 | 0) % (R2 | 0) | 0;
                      I2 = F2 - G2 | 0;
                      F2 = I2 + R2 | 0;
                      c[o2 >> 2] = F2;
                      K2 = (T2 | 0) <= (F2 | 0) ? T2 : F2;
                      F2 = c[b2 >> 2] | 0;
                      c[n2 >> 2] = F2;
                      if ((K2 | 0) < (F2 | 0)) {
                        if ((K2 | 0) >= 1) {
                          H2 = Q2 + G2 - R2 - T2 | 0;
                          G2 = ~T2;
                          J2 = -8 - (((H2 | 0) > (G2 | 0) ? H2 : G2) << 3) | 0;
                          G2 = S(t2, J2) | 0;
                          H2 = K2;
                          U2 = 0;
                          while (1) {
                            H2 = H2 + 1 | 0;
                            je(e2 + ((S(t2, U2) | 0) << 3) + G2 | 0, 0, J2 | 0) | 0;
                            if ((H2 | 0) >= (F2 | 0)) break;
                            else U2 = U2 + 1 | 0;
                          }
                        }
                        c[o2 >> 2] = K2;
                        L2 = P2;
                        M2 = K2;
                        N2 = I2;
                        O2 = R2;
                      } else {
                        L2 = P2;
                        M2 = K2;
                        N2 = I2;
                        O2 = R2;
                      }
                    } else {
                      L2 = P2;
                      M2 = 0;
                      N2 = 0;
                      O2 = R2;
                    }
                  } else {
                    L2 = x2;
                    M2 = 0;
                    N2 = 0;
                    O2 = w2;
                  }
                while (0);
                D2 = c[b2 >> 2] | 0;
                if ((D2 | 0) > (M2 | 0)) {
                  c[n2 >> 2] = (c[a2 >> 2] | 0) - M2;
                  c[o2 >> 2] = D2 - M2;
                  c[p2 >> 2] = (c[d2 >> 2] | 0) - M2;
                  D2 = M2 + 1 | 0;
                  Hb(n2, o2, p2, u2 + ((S(D2, t2) | 0) + D2 << 3) | 0, f2, v2 + (D2 << 3) | 0, j2, r2) | 0;
                }
                if ((M2 | 0) > 0 ? (c[n2 >> 2] = 0 - O2, D2 = N2 + 1 | 0, (O2 | 0) > 0 ? (N2 | 0) > -1 : (D2 | 0) < 2) : 0) {
                  U2 = ~N2;
                  F2 = D2;
                  while (1) {
                    c[o2 >> 2] = O2;
                    D2 = (c[d2 >> 2] | 0) - F2 + 1 | 0;
                    c[p2 >> 2] = D2;
                    H2 = (O2 | 0) <= (D2 | 0) ? O2 : D2;
                    c[q2 >> 2] = H2;
                    if ((H2 + F2 | 0) > (c[b2 >> 2] | 0)) {
                      V2 = u2 + ((S(F2, t2) | 0) + F2 << 3) | 0;
                      W2 = v2 + (F2 << 3) | 0;
                      X2 = U2 + 1 | 0;
                    } else {
                      H2 = U2 + 1 | 0;
                      c[o2 >> 2] = H2 + (c[a2 >> 2] | 0);
                      D2 = u2 + ((S(F2, t2) | 0) + F2 << 3) | 0;
                      J2 = v2 + (F2 << 3) | 0;
                      zb(2003, 2011, o2, q2, D2, f2, J2, j2, s2) | 0;
                      c[o2 >> 2] = H2 + (c[a2 >> 2] | 0);
                      G2 = c[q2 >> 2] | 0;
                      c[p2 >> 2] = H2 + (c[b2 >> 2] | 0) - G2;
                      xb(1964, 1969, 2003, 2011, o2, p2, q2, D2, f2, j2, s2, u2 + ((S(G2 + F2 | 0, t2) | 0) + F2 << 3) | 0, f2, g2 + (G2 + 1 << 3) | 0, s2) | 0;
                      V2 = D2;
                      W2 = J2;
                      X2 = H2;
                    }
                    c[o2 >> 2] = X2 + (c[a2 >> 2] | 0);
                    Hb(o2, q2, q2, V2, f2, W2, j2, r2) | 0;
                    H2 = F2 + -1 | 0;
                    J2 = H2 + (c[q2 >> 2] | 0) | 0;
                    c[o2 >> 2] = J2;
                    if ((F2 | 0) <= (J2 | 0)) {
                      if ((F2 | 0) >= 2) {
                        D2 = (F2 << 3) + -8 | 0;
                        G2 = S(t2, D2) | 0;
                        Y2 = F2;
                        Z2 = 0;
                        while (1) {
                          je(e2 + ((S(t2, Z2) | 0) << 3) + G2 | 0, 0, D2 | 0) | 0;
                          if ((Y2 | 0) < (J2 | 0)) {
                            Y2 = Y2 + 1 | 0;
                            Z2 = Z2 + 1 | 0;
                          } else break;
                        }
                      }
                      c[p2 >> 2] = H2;
                    }
                    Z2 = c[n2 >> 2] | 0;
                    Y2 = Z2 + F2 | 0;
                    if ((Z2 | 0) < 0 ? (Y2 | 0) > 0 : (Y2 | 0) < 2) {
                      U2 = 0 - Y2 | 0;
                      F2 = Y2;
                    } else break;
                  }
                }
                h[j2 >> 3] = +(L2 | 0);
                i2 = m2;
                return 0;
              } else C2 = E2;
            } else {
              c[l2 >> 2] = -1;
              C2 = -1;
            }
          while (0);
          c[n2 >> 2] = 0 - C2;
          Oc(1955, n2) | 0;
          i2 = m2;
          return 0;
        }
        function Kb(a2, b2, d2, e2, f2, g2, j2, k2, l2, m2, n2, o2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          g2 = g2 | 0;
          j2 = j2 | 0;
          k2 = k2 | 0;
          l2 = l2 | 0;
          m2 = m2 | 0;
          n2 = n2 | 0;
          o2 = o2 | 0;
          var p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0;
          p2 = i2;
          i2 = i2 + 16 | 0;
          q2 = p2 + 8 | 0;
          r2 = p2 + 4 | 0;
          s2 = p2;
          t2 = c[j2 >> 2] | 0;
          u2 = g2 + (~t2 << 3) | 0;
          g2 = k2 + -8 | 0;
          k2 = c[m2 >> 2] | 0;
          v2 = l2 + (~k2 << 3) | 0;
          c[o2 >> 2] = 0;
          l2 = nc(a2, 2078) | 0;
          w2 = nc(b2, 2080) | 0;
          x2 = (l2 | 0) != 0;
          y2 = c[(x2 ? d2 : e2) >> 2] | 0;
          if (!x2 ? (nc(a2, 2067) | 0) == 0 : 0) {
            c[o2 >> 2] = -1;
            z2 = -1;
          } else A2 = 4;
          do
            if ((A2 | 0) == 4) {
              if ((w2 | 0) == 0 ? (nc(b2, 2082) | 0) == 0 : 0) {
                c[o2 >> 2] = -2;
                z2 = -2;
                break;
              }
              B2 = c[d2 >> 2] | 0;
              if ((B2 | 0) < 0) {
                c[o2 >> 2] = -3;
                z2 = -3;
                break;
              }
              C2 = c[e2 >> 2] | 0;
              if ((C2 | 0) < 0) {
                c[o2 >> 2] = -4;
                z2 = -4;
                break;
              }
              D2 = c[f2 >> 2] | 0;
              if ((D2 | 0) < 0 | (D2 | 0) > (y2 | 0)) {
                c[o2 >> 2] = -5;
                z2 = -5;
                break;
              }
              if ((c[j2 >> 2] | 0) < (((y2 | 0) > 1 ? y2 : 1) | 0)) {
                c[o2 >> 2] = -7;
                z2 = -7;
                break;
              }
              if ((c[m2 >> 2] | 0) < (((B2 | 0) > 1 ? B2 : 1) | 0)) {
                c[o2 >> 2] = -10;
                z2 = -10;
                break;
              }
              E2 = c[o2 >> 2] | 0;
              if (!E2) {
                if ((B2 | 0) == 0 | (C2 | 0) == 0 | (D2 | 0) == 0) {
                  i2 = p2;
                  return 0;
                }
                F2 = (l2 | 0) == 0;
                G2 = (w2 | 0) != 0;
                H2 = F2 & G2 | (F2 | G2) ^ 1;
                I2 = H2 ? 1 : D2;
                J2 = H2 ? D2 : 1;
                D2 = H2 ? 1 : -1;
                if (x2) c[s2 >> 2] = C2;
                else c[r2 >> 2] = B2;
                c[q2 >> 2] = J2;
                H2 = 0 - I2 | 0;
                K2 = F2 ^ G2;
                if (!(K2 ? (I2 | 0) >= (J2 | 0) : (I2 | 0) <= (J2 | 0))) {
                  i2 = p2;
                  return 0;
                }
                if (x2) {
                  J2 = H2;
                  G2 = I2;
                  F2 = B2;
                  while (1) {
                    c[r2 >> 2] = J2 + 1 + F2;
                    B2 = u2 + ((S(G2, t2) | 0) + G2 << 3) | 0;
                    L2 = +h[B2 >> 3];
                    h[B2 >> 3] = 1;
                    wb(a2, r2, s2, B2, 500, g2 + (G2 << 3) | 0, v2 + (k2 + G2 << 3) | 0, m2, n2) | 0;
                    h[B2 >> 3] = L2;
                    B2 = G2 + D2 | 0;
                    M2 = c[q2 >> 2] | 0;
                    if (!(K2 ? (B2 | 0) >= (M2 | 0) : (B2 | 0) <= (M2 | 0))) break;
                    J2 = 0 - B2 | 0;
                    G2 = B2;
                    F2 = c[d2 >> 2] | 0;
                  }
                  i2 = p2;
                  return 0;
                }
                if (K2) {
                  F2 = H2;
                  G2 = I2;
                  J2 = C2;
                  while (1) {
                    c[s2 >> 2] = F2 + 1 + J2;
                    B2 = u2 + ((S(G2, t2) | 0) + G2 << 3) | 0;
                    L2 = +h[B2 >> 3];
                    h[B2 >> 3] = 1;
                    wb(a2, r2, s2, B2, 500, g2 + (G2 << 3) | 0, v2 + ((S(G2, k2) | 0) + 1 << 3) | 0, m2, n2) | 0;
                    h[B2 >> 3] = L2;
                    B2 = G2 + D2 | 0;
                    if ((B2 | 0) < (c[q2 >> 2] | 0)) break;
                    F2 = 0 - B2 | 0;
                    G2 = B2;
                    J2 = c[e2 >> 2] | 0;
                  }
                  i2 = p2;
                  return 0;
                } else {
                  J2 = H2;
                  G2 = I2;
                  F2 = C2;
                  while (1) {
                    c[s2 >> 2] = J2 + 1 + F2;
                    K2 = u2 + ((S(G2, t2) | 0) + G2 << 3) | 0;
                    L2 = +h[K2 >> 3];
                    h[K2 >> 3] = 1;
                    wb(a2, r2, s2, K2, 500, g2 + (G2 << 3) | 0, v2 + ((S(G2, k2) | 0) + 1 << 3) | 0, m2, n2) | 0;
                    h[K2 >> 3] = L2;
                    K2 = G2 + D2 | 0;
                    if ((K2 | 0) > (c[q2 >> 2] | 0)) break;
                    J2 = 0 - K2 | 0;
                    G2 = K2;
                    F2 = c[e2 >> 2] | 0;
                  }
                  i2 = p2;
                  return 0;
                }
              } else z2 = E2;
            }
          while (0);
          c[q2 >> 2] = 0 - z2;
          Oc(1982, q2) | 0;
          i2 = p2;
          return 0;
        }
        function Lb(a2, b2, d2, e2, f2, g2, j2, k2, l2, m2, n2, o2, p2, q2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          g2 = g2 | 0;
          j2 = j2 | 0;
          k2 = k2 | 0;
          l2 = l2 | 0;
          m2 = m2 | 0;
          n2 = n2 | 0;
          o2 = o2 | 0;
          p2 = p2 | 0;
          q2 = q2 | 0;
          var r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0, O2 = 0, P2 = 0, Q2 = 0;
          r2 = i2;
          i2 = i2 + 48 | 0;
          s2 = r2 + 32 | 0;
          t2 = r2 + 24 | 0;
          u2 = r2 + 16 | 0;
          v2 = r2 + 40 | 0;
          w2 = r2 + 12 | 0;
          x2 = r2 + 8 | 0;
          y2 = r2 + 4 | 0;
          z2 = r2;
          A2 = c[k2 >> 2] | 0;
          B2 = j2 + (~A2 << 3) | 0;
          j2 = l2 + -8 | 0;
          l2 = c[n2 >> 2] | 0;
          C2 = m2 + (~l2 << 3) | 0;
          c[q2 >> 2] = 0;
          c[x2 >> 2] = (c[g2 >> 2] | 0) - (c[f2 >> 2] | 0);
          m2 = nc(a2, 2078) | 0;
          D2 = (c[p2 >> 2] | 0) == -1;
          E2 = (m2 | 0) != 0;
          m2 = c[(E2 ? e2 : d2) >> 2] | 0;
          F2 = c[(E2 ? d2 : e2) >> 2] | 0;
          if (!E2 ? (nc(a2, 2067) | 0) == 0 : 0) {
            c[q2 >> 2] = -1;
            G2 = -1;
          } else H2 = 4;
          do
            if ((H2 | 0) == 4) {
              if ((nc(b2, 2080) | 0) == 0 ? (nc(b2, 2082) | 0) == 0 : 0) {
                c[q2 >> 2] = -2;
                G2 = -2;
                break;
              }
              I2 = c[d2 >> 2] | 0;
              if ((I2 | 0) < 0) {
                c[q2 >> 2] = -3;
                G2 = -3;
                break;
              }
              if ((c[e2 >> 2] | 0) < 0) {
                c[q2 >> 2] = -4;
                G2 = -4;
                break;
              }
              J2 = c[f2 >> 2] | 0;
              if ((J2 | 0) >= 1 ? (K2 = (F2 | 0) > 1 ? F2 : 1, (J2 | 0) <= (K2 | 0)) : 0) {
                L2 = c[g2 >> 2] | 0;
                if ((L2 | 0) > (F2 | 0) ? 1 : (L2 | 0) < (((J2 | 0) > (F2 | 0) ? F2 : J2) | 0)) {
                  c[q2 >> 2] = -6;
                  G2 = -6;
                  break;
                }
                if ((c[k2 >> 2] | 0) < (K2 | 0)) {
                  c[q2 >> 2] = -8;
                  G2 = -8;
                  break;
                }
                if ((c[n2 >> 2] | 0) < (((I2 | 0) > 1 ? I2 : 1) | 0)) {
                  c[q2 >> 2] = -11;
                  G2 = -11;
                  break;
                }
                I2 = (m2 | 0) > 1 ? m2 : 1;
                if (!(D2 | (c[p2 >> 2] | 0) >= (I2 | 0))) {
                  c[q2 >> 2] = -13;
                  G2 = -13;
                  break;
                }
                K2 = c[q2 >> 2] | 0;
                if (K2 | 0) {
                  G2 = K2;
                  break;
                }
                c[t2 >> 2] = 1;
                c[s2 >> 2] = a2;
                c[t2 + 4 >> 2] = 1;
                c[s2 + 4 >> 2] = b2;
                uc(v2, s2, t2, 504, 2);
                if (E2) M2 = lc(508, 1996, v2, x2, e2, x2, 512) | 0;
                else M2 = lc(508, 1996, v2, d2, x2, x2, 512) | 0;
                N2 = +(S(M2, I2) | 0);
                h[o2 >> 3] = N2;
                I2 = c[q2 >> 2] | 0;
                if (I2 | 0) {
                  G2 = I2;
                  break;
                }
                if (D2) {
                  i2 = r2;
                  return 0;
                }
                I2 = c[d2 >> 2] | 0;
                if (I2 | 0 ? (K2 = c[e2 >> 2] | 0, J2 = c[x2 >> 2] | 0, !((K2 | 0) == 0 | (J2 | 0) == 0)) : 0) {
                  if (E2) {
                    c[w2 >> 2] = J2;
                    c[y2 >> 2] = K2;
                    K2 = c[f2 >> 2] | 0;
                    O2 = 1;
                    P2 = K2 + 1 | 0;
                    Q2 = K2;
                  } else {
                    c[w2 >> 2] = I2;
                    c[y2 >> 2] = J2;
                    J2 = c[f2 >> 2] | 0;
                    O2 = J2 + 1 | 0;
                    P2 = 1;
                    Q2 = J2;
                  }
                  Mb(a2, b2, w2, y2, x2, B2 + (Q2 + 1 + (S(Q2, A2) | 0) << 3) | 0, k2, j2 + (Q2 << 3) | 0, C2 + ((S(O2, l2) | 0) + P2 << 3) | 0, n2, o2, p2, z2) | 0;
                  h[o2 >> 3] = N2;
                  i2 = r2;
                  return 0;
                }
                h[o2 >> 3] = 1;
                i2 = r2;
                return 0;
              }
              c[q2 >> 2] = -5;
              G2 = -5;
            }
          while (0);
          c[u2 >> 2] = 0 - G2;
          Oc(1989, u2) | 0;
          i2 = r2;
          return 0;
        }
        function Mb(a2, b2, d2, e2, f2, g2, j2, k2, l2, m2, n2, o2, p2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          g2 = g2 | 0;
          j2 = j2 | 0;
          k2 = k2 | 0;
          l2 = l2 | 0;
          m2 = m2 | 0;
          n2 = n2 | 0;
          o2 = o2 | 0;
          p2 = p2 | 0;
          var q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0, O2 = 0, P2 = 0, Q2 = 0, R2 = 0, T2 = 0, U2 = 0, V2 = 0, W2 = 0, X2 = 0, Y2 = 0, Z2 = 0, _2 = 0, $2 = 0, aa2 = 0, ba2 = 0, ca2 = 0, da2 = 0, ea2 = 0, fa2 = 0, ga2 = 0, ha2 = 0;
          q2 = i2;
          i2 = i2 + 33344 | 0;
          r2 = q2 + 33320 | 0;
          s2 = q2 + 33312 | 0;
          t2 = q2 + 33304 | 0;
          u2 = q2 + 33300 | 0;
          v2 = q2 + 33328 | 0;
          w2 = q2;
          x2 = q2 + 33296 | 0;
          y2 = q2 + 33292 | 0;
          z2 = q2 + 33288 | 0;
          A2 = q2 + 33284 | 0;
          B2 = q2 + 33280 | 0;
          C2 = c[j2 >> 2] | 0;
          D2 = C2 + 1 | 0;
          E2 = g2 + (~C2 << 3) | 0;
          g2 = k2 + -8 | 0;
          F2 = c[m2 >> 2] | 0;
          G2 = F2 + 1 | 0;
          H2 = l2 + (~F2 << 3) | 0;
          c[p2 >> 2] = 0;
          l2 = nc(a2, 2078) | 0;
          I2 = nc(b2, 2080) | 0;
          J2 = (c[o2 >> 2] | 0) == -1;
          K2 = (l2 | 0) != 0;
          L2 = c[(K2 ? e2 : d2) >> 2] | 0;
          M2 = c[(K2 ? d2 : e2) >> 2] | 0;
          if (!K2 ? (nc(a2, 2067) | 0) == 0 : 0) {
            c[p2 >> 2] = -1;
            N2 = -1;
          } else O2 = 4;
          do
            if ((O2 | 0) == 4) {
              if ((I2 | 0) == 0 ? (nc(b2, 2082) | 0) == 0 : 0) {
                c[p2 >> 2] = -2;
                N2 = -2;
                break;
              }
              P2 = c[d2 >> 2] | 0;
              if ((P2 | 0) < 0) {
                c[p2 >> 2] = -3;
                N2 = -3;
                break;
              }
              if ((c[e2 >> 2] | 0) < 0) {
                c[p2 >> 2] = -4;
                N2 = -4;
                break;
              }
              Q2 = c[f2 >> 2] | 0;
              if ((Q2 | 0) < 0 | (Q2 | 0) > (M2 | 0)) {
                c[p2 >> 2] = -5;
                N2 = -5;
                break;
              }
              if ((c[j2 >> 2] | 0) < (((M2 | 0) > 1 ? M2 : 1) | 0)) {
                c[p2 >> 2] = -7;
                N2 = -7;
                break;
              }
              if ((c[m2 >> 2] | 0) < (((P2 | 0) > 1 ? P2 : 1) | 0)) {
                c[p2 >> 2] = -10;
                N2 = -10;
                break;
              }
              P2 = (L2 | 0) > 1 ? L2 : 1;
              if (!(J2 | (c[o2 >> 2] | 0) >= (P2 | 0))) {
                c[p2 >> 2] = -12;
                N2 = -12;
                break;
              }
              Q2 = c[p2 >> 2] | 0;
              if (!Q2) {
                c[t2 >> 2] = 1;
                c[r2 >> 2] = a2;
                R2 = t2 + 4 | 0;
                c[R2 >> 2] = 1;
                T2 = r2 + 4 | 0;
                c[T2 >> 2] = b2;
                uc(v2, r2, t2, 516, 2);
                c[s2 >> 2] = 64;
                U2 = lc(520, 1996, v2, d2, e2, f2, 524) | 0;
                V2 = c[s2 >> 2] | 0;
                W2 = (V2 | 0) <= (U2 | 0) ? V2 : U2;
                X2 = +(S(W2, P2) | 0);
                h[n2 >> 3] = X2;
                P2 = c[p2 >> 2] | 0;
                if (!P2) {
                  if (J2) {
                    i2 = q2;
                    return 0;
                  }
                  if ((c[d2 >> 2] | 0 ? c[e2 >> 2] | 0 : 0) ? (U2 = c[f2 >> 2] | 0, U2 | 0) : 0) {
                    c[B2 >> 2] = L2;
                    a: do
                      if ((W2 | 0) > 1) {
                        do
                          if ((W2 | 0) < (U2 | 0)) {
                            V2 = S(W2, L2) | 0;
                            Y2 = c[o2 >> 2] | 0;
                            if ((Y2 | 0) >= (V2 | 0)) {
                              Z2 = W2;
                              _2 = U2;
                              break;
                            }
                            V2 = (Y2 | 0) / (L2 | 0) | 0;
                            c[t2 >> 2] = 1;
                            c[r2 >> 2] = a2;
                            c[R2 >> 2] = 1;
                            c[T2 >> 2] = b2;
                            uc(v2, r2, t2, 516, 2);
                            c[s2 >> 2] = 2;
                            Y2 = lc(516, 1996, v2, d2, e2, f2, 524) | 0;
                            $2 = c[s2 >> 2] | 0;
                            if ((V2 | 0) < ((($2 | 0) >= (Y2 | 0) ? $2 : Y2) | 0)) {
                              O2 = 33;
                              break a;
                            }
                            Z2 = V2;
                            _2 = c[f2 >> 2] | 0;
                          } else {
                            Z2 = W2;
                            _2 = U2;
                          }
                        while (0);
                        if ((Z2 | 0) < (_2 | 0)) {
                          V2 = (l2 | 0) == 0;
                          Y2 = (I2 | 0) != 0;
                          if (V2 & Y2 | (V2 | Y2) ^ 1) {
                            aa2 = Z2;
                            ba2 = _2;
                            ca2 = 1;
                          } else {
                            aa2 = 0 - Z2 | 0;
                            ba2 = 1;
                            ca2 = _2 - ((_2 + -1 | 0) % (Z2 | 0) | 0) | 0;
                          }
                          if (K2) c[z2 >> 2] = c[e2 >> 2];
                          else c[y2 >> 2] = c[d2 >> 2];
                          c[s2 >> 2] = ba2;
                          Y2 = 0 - ca2 | 0;
                          V2 = (aa2 | 0) < 0;
                          if (!(V2 ? (ca2 | 0) >= (ba2 | 0) : (ca2 | 0) <= (ba2 | 0))) break;
                          $2 = M2 + 1 | 0;
                          if (K2) {
                            da2 = Y2;
                            ea2 = ca2;
                            fa2 = _2;
                            while (1) {
                              ga2 = fa2 - ea2 + 1 | 0;
                              c[x2 >> 2] = (Z2 | 0) <= (ga2 | 0) ? Z2 : ga2;
                              c[u2 >> 2] = $2 + da2;
                              ga2 = E2 + ((S(ea2, C2) | 0) + ea2 << 3) | 0;
                              zb(2003, 2011, u2, x2, ga2, j2, g2 + (ea2 << 3) | 0, w2, 528) | 0;
                              c[y2 >> 2] = da2 + 1 + (c[d2 >> 2] | 0);
                              xb(a2, b2, 2003, 2011, y2, z2, x2, ga2, j2, w2, 528, H2 + (F2 + ea2 << 3) | 0, m2, n2, B2) | 0;
                              ga2 = ea2 + aa2 | 0;
                              ha2 = c[s2 >> 2] | 0;
                              if (!(V2 ? (ga2 | 0) >= (ha2 | 0) : (ga2 | 0) <= (ha2 | 0))) break a;
                              da2 = 0 - ga2 | 0;
                              ea2 = ga2;
                              fa2 = c[f2 >> 2] | 0;
                            }
                          } else {
                            fa2 = Y2;
                            ea2 = ca2;
                            da2 = _2;
                            while (1) {
                              ga2 = da2 - ea2 + 1 | 0;
                              c[x2 >> 2] = (Z2 | 0) <= (ga2 | 0) ? Z2 : ga2;
                              c[u2 >> 2] = $2 + fa2;
                              ga2 = E2 + ((S(ea2, C2) | 0) + ea2 << 3) | 0;
                              zb(2003, 2011, u2, x2, ga2, j2, g2 + (ea2 << 3) | 0, w2, 528) | 0;
                              c[z2 >> 2] = fa2 + 1 + (c[e2 >> 2] | 0);
                              xb(a2, b2, 2003, 2011, y2, z2, x2, ga2, j2, w2, 528, H2 + ((S(ea2, F2) | 0) + 1 << 3) | 0, m2, n2, B2) | 0;
                              ga2 = ea2 + aa2 | 0;
                              ha2 = c[s2 >> 2] | 0;
                              if (!(V2 ? (ga2 | 0) >= (ha2 | 0) : (ga2 | 0) <= (ha2 | 0))) break a;
                              fa2 = 0 - ga2 | 0;
                              ea2 = ga2;
                              da2 = c[f2 >> 2] | 0;
                            }
                          }
                        } else O2 = 33;
                      } else O2 = 33;
                    while (0);
                    if ((O2 | 0) == 33) Kb(a2, b2, d2, e2, f2, E2 + (D2 << 3) | 0, j2, k2, H2 + (G2 << 3) | 0, m2, n2, A2) | 0;
                    h[n2 >> 3] = X2;
                    i2 = q2;
                    return 0;
                  }
                  h[n2 >> 3] = 1;
                  i2 = q2;
                  return 0;
                } else N2 = P2;
              } else N2 = Q2;
            }
          while (0);
          c[s2 >> 2] = 0 - N2;
          Oc(1996, s2) | 0;
          i2 = q2;
          return 0;
        }
        function Nb(a2, b2, d2, e2, f2, g2, i3) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          g2 = g2 | 0;
          i3 = i3 | 0;
          var j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0;
          j2 = e2 + -8 | 0;
          e2 = b2 + -8 | 0;
          b2 = c[a2 >> 2] | 0;
          if ((b2 | 0) < 1) return 0;
          a2 = c[d2 >> 2] | 0;
          if ((a2 | 0) == 1) {
            d2 = c[f2 >> 2] | 0;
            if ((d2 | 0) == 1) {
              k2 = 1;
              while (1) {
                l2 = +h[g2 >> 3];
                m2 = e2 + (k2 << 3) | 0;
                n2 = +h[m2 >> 3];
                o2 = +h[i3 >> 3];
                p2 = j2 + (k2 << 3) | 0;
                q2 = +h[p2 >> 3];
                h[p2 >> 3] = l2 * q2 - n2 * o2;
                h[m2 >> 3] = l2 * n2 + o2 * q2;
                if ((k2 | 0) == (b2 | 0)) break;
                else k2 = k2 + 1 | 0;
              }
              return 0;
            } else {
              r2 = 1;
              s2 = d2;
            }
          } else {
            if ((a2 | 0) < 0) t2 = (S(1 - b2 | 0, a2) | 0) + 1 | 0;
            else t2 = 1;
            r2 = t2;
            s2 = c[f2 >> 2] | 0;
          }
          if ((s2 | 0) < 0) {
            u2 = 1;
            v2 = r2;
            w2 = (S(1 - b2 | 0, s2) | 0) + 1 | 0;
          } else {
            u2 = 1;
            v2 = r2;
            w2 = 1;
          }
          while (1) {
            q2 = +h[g2 >> 3];
            r2 = e2 + (v2 << 3) | 0;
            o2 = +h[r2 >> 3];
            n2 = +h[i3 >> 3];
            f2 = j2 + (w2 << 3) | 0;
            l2 = +h[f2 >> 3];
            h[f2 >> 3] = q2 * l2 - o2 * n2;
            h[r2 >> 3] = q2 * o2 + n2 * l2;
            if ((u2 | 0) == (b2 | 0)) break;
            else {
              u2 = u2 + 1 | 0;
              v2 = a2 + v2 | 0;
              w2 = s2 + w2 | 0;
            }
          }
          return 0;
        }
        function Ob(a2, b2, d2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          var f2 = 0, g2 = 0, i3 = 0;
          f2 = d2 + -8 | 0;
          d2 = c[a2 >> 2] | 0;
          if ((d2 | 0) < 1) return 0;
          a2 = c[e2 >> 2] | 0;
          if ((a2 | 0) < 1) return 0;
          if ((a2 | 0) != 1) {
            e2 = S(a2, d2) | 0;
            if ((e2 | 0) > 0) g2 = 1;
            else return 0;
            do {
              i3 = f2 + (g2 << 3) | 0;
              h[i3 >> 3] = +h[b2 >> 3] * +h[i3 >> 3];
              g2 = g2 + a2 | 0;
            } while ((g2 | 0) <= (e2 | 0));
            return 0;
          }
          e2 = (d2 >>> 0) % 5 | 0;
          if (!e2) {
            if ((e2 | 0) >= (d2 | 0)) return 0;
          } else {
            g2 = 1;
            while (1) {
              a2 = f2 + (g2 << 3) | 0;
              h[a2 >> 3] = +h[b2 >> 3] * +h[a2 >> 3];
              if ((g2 | 0) < (e2 | 0)) g2 = g2 + 1 | 0;
              else break;
            }
            if (!((d2 | 0) > 4 & (e2 | 0) < (d2 | 0))) return 0;
          }
          g2 = e2 + 1 | 0;
          do {
            e2 = f2 + (g2 << 3) | 0;
            h[e2 >> 3] = +h[b2 >> 3] * +h[e2 >> 3];
            e2 = f2 + (g2 + 1 << 3) | 0;
            h[e2 >> 3] = +h[b2 >> 3] * +h[e2 >> 3];
            e2 = f2 + (g2 + 2 << 3) | 0;
            h[e2 >> 3] = +h[b2 >> 3] * +h[e2 >> 3];
            e2 = f2 + (g2 + 3 << 3) | 0;
            h[e2 >> 3] = +h[b2 >> 3] * +h[e2 >> 3];
            e2 = f2 + (g2 + 4 << 3) | 0;
            h[e2 >> 3] = +h[b2 >> 3] * +h[e2 >> 3];
            g2 = g2 + 5 | 0;
          } while ((g2 | 0) <= (d2 | 0));
          return 0;
        }
        function Pb(a2, b2, d2, e2, f2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          var g2 = 0, i3 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0;
          g2 = e2 + -8 | 0;
          e2 = b2 + -8 | 0;
          b2 = c[a2 >> 2] | 0;
          if ((b2 | 0) < 1) return 0;
          a2 = c[d2 >> 2] | 0;
          if ((a2 | 0) == 1) {
            d2 = c[f2 >> 2] | 0;
            if ((d2 | 0) == 1) {
              i3 = (b2 >>> 0) % 3 | 0;
              if (!i3) {
                if ((i3 | 0) >= (b2 | 0)) return 0;
              } else {
                j2 = 1;
                while (1) {
                  k2 = e2 + (j2 << 3) | 0;
                  l2 = +h[k2 >> 3];
                  m2 = g2 + (j2 << 3) | 0;
                  h[k2 >> 3] = +h[m2 >> 3];
                  h[m2 >> 3] = l2;
                  if ((j2 | 0) < (i3 | 0)) j2 = j2 + 1 | 0;
                  else break;
                }
                if (!((b2 | 0) > 2 & (i3 | 0) < (b2 | 0))) return 0;
              }
              j2 = i3 + 1 | 0;
              do {
                i3 = e2 + (j2 << 3) | 0;
                l2 = +h[i3 >> 3];
                m2 = g2 + (j2 << 3) | 0;
                h[i3 >> 3] = +h[m2 >> 3];
                h[m2 >> 3] = l2;
                m2 = j2 + 1 | 0;
                i3 = e2 + (m2 << 3) | 0;
                l2 = +h[i3 >> 3];
                k2 = g2 + (m2 << 3) | 0;
                h[i3 >> 3] = +h[k2 >> 3];
                h[k2 >> 3] = l2;
                k2 = j2 + 2 | 0;
                i3 = e2 + (k2 << 3) | 0;
                l2 = +h[i3 >> 3];
                m2 = g2 + (k2 << 3) | 0;
                h[i3 >> 3] = +h[m2 >> 3];
                h[m2 >> 3] = l2;
                j2 = j2 + 3 | 0;
              } while ((j2 | 0) <= (b2 | 0));
              return 0;
            } else {
              n2 = 1;
              o2 = d2;
            }
          } else {
            if ((a2 | 0) < 0) p2 = (S(1 - b2 | 0, a2) | 0) + 1 | 0;
            else p2 = 1;
            n2 = p2;
            o2 = c[f2 >> 2] | 0;
          }
          if ((o2 | 0) < 0) {
            q2 = 1;
            r2 = (S(1 - b2 | 0, o2) | 0) + 1 | 0;
            s2 = n2;
          } else {
            q2 = 1;
            r2 = 1;
            s2 = n2;
          }
          while (1) {
            n2 = e2 + (s2 << 3) | 0;
            l2 = +h[n2 >> 3];
            f2 = g2 + (r2 << 3) | 0;
            h[n2 >> 3] = +h[f2 >> 3];
            h[f2 >> 3] = l2;
            if ((q2 | 0) == (b2 | 0)) break;
            else {
              q2 = q2 + 1 | 0;
              r2 = o2 + r2 | 0;
              s2 = a2 + s2 | 0;
            }
          }
          return 0;
        }
        function Qb(a2, b2, d2, e2, f2, g2, j2, k2, l2, m2, n2, o2, p2, q2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          g2 = g2 | 0;
          j2 = j2 | 0;
          k2 = k2 | 0;
          l2 = l2 | 0;
          m2 = m2 | 0;
          n2 = n2 | 0;
          o2 = o2 | 0;
          p2 = p2 | 0;
          q2 = q2 | 0;
          var r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0, O2 = 0, P2 = 0, Q2 = 0, R2 = 0, T2 = 0, U2 = 0, V2 = 0, W2 = 0, X2 = 0, Y2 = 0, Z2 = 0, _2 = 0, $2 = 0, aa2 = 0, ba2 = 0, ca2 = 0, da2 = 0, ea2 = 0, fa2 = 0, ga2 = 0, ha2 = 0, ia2 = 0, ja2 = 0, ka2 = 0, la2 = 0, ma2 = 0, na2 = 0, oa2 = 0, pa2 = 0, qa2 = 0, ra2 = 0, sa2 = 0, ta2 = 0, ua2 = 0, va2 = 0, wa2 = 0, xa2 = 0, ya2 = 0, za2 = 0, Aa2 = 0, Ba2 = 0, Ca2 = 0, Da2 = 0, Ea2 = 0, Fa2 = 0, Ga2 = 0, Ha2 = 0, Ia2 = 0, Ja2 = 0, Ka2 = 0, La2 = 0, Ma2 = 0, Na2 = 0, Oa2 = 0, Pa2 = 0, Qa2 = 0, Ra2 = 0, Va2 = 0, Wa2 = 0, Xa2 = 0, Ya2 = 0, Za2 = 0, _a2 = 0, ab2 = 0, bb2 = 0, cb2 = 0, eb2 = 0, fb2 = 0, gb2 = 0, hb2 = 0, ib2 = 0, jb2 = 0, mb2 = 0, nb2 = 0, ob2 = 0, pb2 = 0, qb2 = 0, rb2 = 0, sb2 = 0, tb2 = 0, ub2 = 0, vb2 = 0, wb2 = 0, xb2 = 0, yb2 = 0, zb2 = 0, Ab2 = 0, Bb2 = 0, Cb2 = 0, Db2 = 0, Eb2 = 0, Fb2 = 0, Gb2 = 0, Hb2 = 0, Ib2 = 0, Jb2 = 0, Kb2 = 0, Lb2 = 0, Mb2 = 0, Nb2 = 0, Pb2 = 0, Qb2 = 0, Rb2 = 0, Sb2 = 0, Tb2 = 0, Ub2 = 0, Vb2 = 0;
          r2 = i2;
          i2 = i2 + 144 | 0;
          s2 = r2 + 128 | 0;
          t2 = r2 + 124 | 0;
          u2 = r2 + 120 | 0;
          v2 = r2 + 104 | 0;
          w2 = r2 + 72 | 0;
          x2 = r2 + 116 | 0;
          y2 = r2 + 64 | 0;
          z2 = r2 + 56 | 0;
          A2 = r2 + 48 | 0;
          B2 = r2 + 112 | 0;
          C2 = r2 + 40 | 0;
          D2 = r2 + 32 | 0;
          E2 = r2 + 24 | 0;
          F2 = r2 + 16 | 0;
          H2 = r2 + 8 | 0;
          I2 = r2;
          J2 = d2 + -4 | 0;
          d2 = c[g2 >> 2] | 0;
          K2 = f2 + (~d2 << 3) | 0;
          f2 = c[k2 >> 2] | 0;
          L2 = j2 + (~f2 << 3) | 0;
          M2 = c[m2 >> 2] | 0;
          N2 = M2 + 1 | 0;
          O2 = l2 + (~M2 << 3) | 0;
          P2 = p2 + -8 | 0;
          Q2 = nc(a2, 2022) | 0;
          R2 = nc(a2, 2067) | 0;
          T2 = (R2 | Q2 | 0) != 0;
          U2 = nc(a2, 2078) | 0 | Q2;
          Q2 = (U2 | 0) != 0;
          a2 = nc(b2, 2024) | 0;
          V2 = nc(b2, 2022) | 0;
          W2 = nc(b2, 2026) | 0;
          c[q2 >> 2] = 0;
          do
            if (U2 | R2) {
              b2 = (W2 | 0) == 0;
              if (!(V2 | a2 | W2)) {
                c[q2 >> 2] = -2;
                X2 = -2;
                break;
              }
              Y2 = c[e2 >> 2] | 0;
              if ((Y2 | 0) < 0) {
                c[q2 >> 2] = -4;
                X2 = -4;
                break;
              }
              if ((c[g2 >> 2] | 0) < (((Y2 | 0) > 1 ? Y2 : 1) | 0)) {
                c[q2 >> 2] = -6;
                X2 = -6;
                break;
              }
              Z2 = c[k2 >> 2] | 0;
              if ((Z2 | 0) < 1 | Q2 & (Z2 | 0) < (Y2 | 0)) {
                c[q2 >> 2] = -8;
                X2 = -8;
                break;
              }
              Z2 = c[m2 >> 2] | 0;
              if ((Z2 | 0) < 1 | T2 & (Z2 | 0) < (Y2 | 0)) {
                c[q2 >> 2] = -10;
                X2 = -10;
                break;
              }
              if (!b2) {
                c[o2 >> 2] = 0;
                Z2 = c[e2 >> 2] | 0;
                c[s2 >> 2] = Z2;
                if ((Z2 | 0) < 1) _2 = 0;
                else {
                  $2 = 0;
                  aa2 = 1;
                  while (1) {
                    do
                      if (!$2) {
                        ba2 = c[e2 >> 2] | 0;
                        if ((aa2 | 0) >= (ba2 | 0)) {
                          if (!(c[J2 + (ba2 << 2) >> 2] | 0)) {
                            ca2 = 0;
                            break;
                          }
                          c[o2 >> 2] = (c[o2 >> 2] | 0) + 1;
                          ca2 = 0;
                          break;
                        }
                        ba2 = aa2 + 1 | 0;
                        da2 = +h[K2 + (ba2 + (S(aa2, d2) | 0) << 3) >> 3] == 0;
                        ea2 = J2 + (aa2 << 2) | 0;
                        fa2 = (c[ea2 >> 2] | 0) == 0;
                        if (da2) {
                          if (fa2) {
                            ca2 = 0;
                            break;
                          }
                          c[o2 >> 2] = (c[o2 >> 2] | 0) + 1;
                          ca2 = 0;
                          break;
                        }
                        if (fa2 ? (c[J2 + (ba2 << 2) >> 2] | 0) == 0 : 0) {
                          ca2 = 1;
                          break;
                        }
                        c[ea2 >> 2] = 1;
                        c[o2 >> 2] = (c[o2 >> 2] | 0) + 2;
                        ca2 = 1;
                      } else {
                        c[J2 + (aa2 << 2) >> 2] = 0;
                        ca2 = 0;
                      }
                    while (0);
                    if ((aa2 | 0) < (Z2 | 0)) {
                      $2 = ca2;
                      aa2 = aa2 + 1 | 0;
                    } else break;
                  }
                  _2 = c[o2 >> 2] | 0;
                }
              } else {
                c[o2 >> 2] = Y2;
                _2 = Y2;
              }
              if ((c[n2 >> 2] | 0) < (_2 | 0)) {
                c[q2 >> 2] = -11;
                X2 = -11;
                break;
              }
              aa2 = c[q2 >> 2] | 0;
              if (!aa2) {
                if (!(c[e2 >> 2] | 0)) {
                  i2 = r2;
                  return 0;
                }
                ga2 = +lb(2035);
                h[C2 >> 3] = ga2;
                h[D2 >> 3] = 1 / ga2;
                db(C2, D2) | 0;
                ga2 = +lb(2048);
                $2 = c[e2 >> 2] | 0;
                ha2 = +h[C2 >> 3] * (+($2 | 0) / ga2);
                ia2 = (1 - ga2) / ha2;
                h[p2 >> 3] = 0;
                c[s2 >> 2] = $2;
                if (($2 | 0) >= 2) {
                  Z2 = 2;
                  while (1) {
                    ea2 = P2 + (Z2 << 3) | 0;
                    h[ea2 >> 3] = 0;
                    ba2 = S(Z2, d2) | 0;
                    fa2 = 1;
                    ja2 = 0;
                    do {
                      ka2 = +h[K2 + (fa2 + ba2 << 3) >> 3];
                      ja2 = ja2 + (ka2 >= 0 ? ka2 : -ka2);
                      h[ea2 >> 3] = ja2;
                      fa2 = fa2 + 1 | 0;
                    } while ((fa2 | 0) != (Z2 | 0));
                    if ((Z2 | 0) < ($2 | 0)) Z2 = Z2 + 1 | 0;
                    else break;
                  }
                  h[v2 >> 3] = ka2;
                  c[t2 >> 2] = Z2 + -1;
                }
                Y2 = $2 << 1;
                if (T2 ? (fa2 = c[o2 >> 2] | 0, c[x2 >> 2] = $2, ($2 | 0) > 0) : 0) {
                  ea2 = (V2 | 0) == 0;
                  ba2 = O2 + (N2 << 3) | 0;
                  da2 = w2 + 8 | 0;
                  la2 = Y2 + -1 | 0;
                  ma2 = P2 + ((Y2 | 1) << 3) | 0;
                  na2 = w2 + 16 | 0;
                  oa2 = w2 + 24 | 0;
                  pa2 = l2 + (0 - M2 << 3) | 0;
                  qa2 = fa2;
                  fa2 = 0;
                  ra2 = $2;
                  while (1) {
                    a: do
                      if ((fa2 | 0) == 1) {
                        sa2 = qa2;
                        ta2 = 1;
                        ua2 = ra2;
                      } else {
                        do
                          if ((ra2 | 0) == 1) va2 = fa2;
                          else {
                            if (+h[K2 + ((S(ra2 + -1 | 0, d2) | 0) + ra2 << 3) >> 3] == 0) {
                              va2 = fa2;
                              break;
                            }
                            va2 = -1;
                          }
                        while (0);
                        do
                          if (!b2)
                            if (!va2)
                              if (!(c[J2 + (ra2 << 2) >> 2] | 0)) {
                                sa2 = qa2;
                                ta2 = 0;
                                ua2 = ra2;
                                break a;
                              } else break;
                            else if (!(c[J2 + (ra2 + -1 << 2) >> 2] | 0)) {
                              sa2 = qa2;
                              ta2 = va2;
                              ua2 = ra2;
                              break a;
                            } else break;
                        while (0);
                        wa2 = S(ra2, d2) | 0;
                        ja2 = +h[K2 + (wa2 + ra2 << 3) >> 3];
                        h[z2 >> 3] = ja2;
                        h[y2 >> 3] = 0;
                        xa2 = (va2 | 0) != 0;
                        if (xa2) {
                          ya2 = ra2 + -1 | 0;
                          za2 = +h[K2 + ((S(ya2, d2) | 0) + ra2 << 3) >> 3];
                          h[v2 >> 3] = za2;
                          Aa2 = +G(+(za2 >= 0 ? za2 : -za2));
                          za2 = +h[K2 + (ya2 + wa2 << 3) >> 3];
                          Ba2 = Aa2 * +G(+(za2 >= 0 ? za2 : -za2));
                          h[y2 >> 3] = Ba2;
                          Ca2 = Ba2;
                        } else Ca2 = 0;
                        Ba2 = -Ca2;
                        za2 = ga2 * ((ja2 >= 0 ? ja2 : -ja2) + (Ca2 >= 0 ? Ca2 : Ba2));
                        h[v2 >> 3] = za2;
                        h[E2 >> 3] = za2 >= ha2 ? za2 : ha2;
                        b: do
                          if (!va2) {
                            ya2 = c[e2 >> 2] | 0;
                            h[P2 + (ya2 + ra2 << 3) >> 3] = 1;
                            Da2 = ra2 + -1 | 0;
                            c[s2 >> 2] = Da2;
                            do
                              if ((ra2 | 0) >= 2) {
                                Ea2 = 1;
                                while (1) {
                                  h[P2 + (ya2 + Ea2 << 3) >> 3] = -+h[K2 + (wa2 + Ea2 << 3) >> 3];
                                  if ((Ea2 | 0) < (Da2 | 0)) Ea2 = Ea2 + 1 | 0;
                                  else break;
                                }
                                if ((ra2 | 0) > 1) {
                                  Fa2 = Da2;
                                  Ga2 = Da2;
                                } else break;
                                c: while (1) {
                                  Ea2 = Ga2;
                                  Ga2 = Ga2 + -1 | 0;
                                  if ((Ea2 | 0) > (Fa2 | 0)) Ha2 = Fa2;
                                  else {
                                    do
                                      if ((Ea2 | 0) > 1) {
                                        Ia2 = S(Ga2, d2) | 0;
                                        Ja2 = Ea2 + -2 | 0;
                                        if (!(+h[K2 + (Ia2 + Ea2 << 3) >> 3] != 0)) break;
                                        kb(6252, 536, 532, E2, 104, K2 + (Ia2 + Ga2 << 3) | 0, g2, 104, 104, P2 + ((c[e2 >> 2] | 0) + Ga2 << 3) | 0, e2, z2, 6176, w2, 536, F2, I2, B2) | 0;
                                        za2 = +h[I2 >> 3];
                                        do
                                          if (za2 > 1) {
                                            ja2 = +h[P2 + (Ga2 << 3) >> 3];
                                            h[v2 >> 3] = ja2;
                                            Aa2 = +h[P2 + (Ea2 << 3) >> 3];
                                            if (!((ja2 >= Aa2 ? ja2 : Aa2) > ia2 / za2)) {
                                              Ka2 = 69;
                                              break;
                                            }
                                            h[w2 >> 3] = +h[w2 >> 3] / za2;
                                            h[da2 >> 3] = +h[da2 >> 3] / za2;
                                            Aa2 = +h[F2 >> 3] / za2;
                                            h[F2 >> 3] = Aa2;
                                            La2 = Aa2;
                                          } else Ka2 = 69;
                                        while (0);
                                        if ((Ka2 | 0) == 69) {
                                          Ka2 = 0;
                                          La2 = +h[F2 >> 3];
                                        }
                                        if (La2 != 1) Ob(x2, F2, P2 + ((c[e2 >> 2] | 0) + 1 << 3) | 0, 532) | 0;
                                        za2 = +h[w2 >> 3];
                                        Ma2 = c[e2 >> 2] | 0;
                                        h[P2 + (Ma2 + Ga2 << 3) >> 3] = za2;
                                        h[P2 + (Ma2 + Ea2 << 3) >> 3] = +h[da2 >> 3];
                                        c[s2 >> 2] = Ja2;
                                        h[v2 >> 3] = -za2;
                                        Sa(s2, v2, K2 + (Ia2 + 1 << 3) | 0, 532, P2 + (Ma2 + 1 << 3) | 0, 532) | 0;
                                        c[s2 >> 2] = Ja2;
                                        h[v2 >> 3] = -+h[da2 >> 3];
                                        Ma2 = K2 + ((S(Ea2, d2) | 0) + 1 << 3) | 0;
                                        Sa(s2, v2, Ma2, 532, P2 + ((c[e2 >> 2] | 0) + 1 << 3) | 0, 532) | 0;
                                        Fa2 = Ja2;
                                        Ga2 = Ga2;
                                        continue c;
                                      }
                                    while (0);
                                    Ma2 = S(Ea2, d2) | 0;
                                    kb(6252, 532, 532, E2, 104, K2 + (Ma2 + Ea2 << 3) | 0, g2, 104, 104, P2 + ((c[e2 >> 2] | 0) + Ea2 << 3) | 0, e2, z2, 6176, w2, 536, F2, I2, B2) | 0;
                                    za2 = +h[I2 >> 3];
                                    do
                                      if (za2 > 1) {
                                        if (!(+h[P2 + (Ea2 << 3) >> 3] > ia2 / za2)) {
                                          Ka2 = 62;
                                          break;
                                        }
                                        h[w2 >> 3] = +h[w2 >> 3] / za2;
                                        Aa2 = +h[F2 >> 3] / za2;
                                        h[F2 >> 3] = Aa2;
                                        Na2 = Aa2;
                                      } else Ka2 = 62;
                                    while (0);
                                    if ((Ka2 | 0) == 62) {
                                      Ka2 = 0;
                                      Na2 = +h[F2 >> 3];
                                    }
                                    if (Na2 != 1) Ob(x2, F2, P2 + ((c[e2 >> 2] | 0) + 1 << 3) | 0, 532) | 0;
                                    za2 = +h[w2 >> 3];
                                    Oa2 = c[e2 >> 2] | 0;
                                    h[P2 + (Oa2 + Ea2 << 3) >> 3] = za2;
                                    c[s2 >> 2] = Ga2;
                                    h[v2 >> 3] = -za2;
                                    Sa(s2, v2, K2 + (Ma2 + 1 << 3) | 0, 532, P2 + (Oa2 + 1 << 3) | 0, 532) | 0;
                                    Ha2 = Ga2;
                                  }
                                  if ((Ea2 | 0) <= 1) break;
                                  else Fa2 = Ha2;
                                }
                              }
                            while (0);
                            if (ea2) {
                              Da2 = S(qa2, M2) | 0;
                              ya2 = O2 + (Da2 + 1 << 3) | 0;
                              Ta(x2, P2 + ((c[e2 >> 2] | 0) + 1 << 3) | 0, 532, ya2, 532) | 0;
                              za2 = +h[O2 + ((hc(x2, ya2, 532) | 0) + Da2 << 3) >> 3];
                              h[v2 >> 3] = za2;
                              h[H2 >> 3] = 1 / (za2 >= 0 ? za2 : -za2);
                              Ob(x2, H2, ya2, 532) | 0;
                              ya2 = c[e2 >> 2] | 0;
                              c[s2 >> 2] = ya2;
                              Oa2 = c[x2 >> 2] | 0;
                              if ((Oa2 | 0) >= (ya2 | 0)) break;
                              Pa2 = Oa2 + 1 | 0;
                              je(pa2 + (Oa2 + Da2 << 3) | 0, 0, ((ya2 | 0) > (Pa2 | 0) ? ya2 : Pa2) - Oa2 << 3 | 0) | 0;
                              break;
                            }
                            Oa2 = c[x2 >> 2] | 0;
                            if ((Oa2 | 0) > 1) {
                              c[s2 >> 2] = Oa2 + -1;
                              Pa2 = c[e2 >> 2] | 0;
                              $a(2080, e2, s2, 104, ba2, m2, P2 + (Pa2 + 1 << 3) | 0, 532, P2 + (Oa2 + Pa2 << 3) | 0, O2 + ((S(Oa2, M2) | 0) + 1 << 3) | 0, 532) | 0;
                              Qa2 = c[x2 >> 2] | 0;
                            } else Qa2 = Oa2;
                            Oa2 = hc(e2, O2 + ((S(Qa2, M2) | 0) + 1 << 3) | 0, 532) | 0;
                            Pa2 = S(c[x2 >> 2] | 0, M2) | 0;
                            za2 = +h[O2 + (Pa2 + Oa2 << 3) >> 3];
                            h[v2 >> 3] = za2;
                            h[H2 >> 3] = 1 / (za2 >= 0 ? za2 : -za2);
                            Ob(e2, H2, O2 + (Pa2 + 1 << 3) | 0, 532) | 0;
                          } else {
                            Pa2 = ra2 + -1 | 0;
                            Oa2 = K2 + (Pa2 + wa2 << 3) | 0;
                            za2 = +h[Oa2 >> 3];
                            h[v2 >> 3] = za2;
                            ya2 = S(Pa2, d2) | 0;
                            Aa2 = +h[K2 + (ya2 + ra2 << 3) >> 3];
                            if (!((za2 >= 0 ? za2 : -za2) >= (Aa2 >= 0 ? Aa2 : -Aa2))) {
                              Da2 = c[e2 >> 2] | 0;
                              h[P2 + (Da2 + Pa2 << 3) >> 3] = Ba2 / Aa2;
                              h[P2 + (ra2 + Y2 << 3) >> 3] = 1;
                              Ra2 = Da2;
                            } else {
                              Da2 = c[e2 >> 2] | 0;
                              h[P2 + (Da2 + Pa2 << 3) >> 3] = 1;
                              h[P2 + (ra2 + Y2 << 3) >> 3] = Ca2 / +h[Oa2 >> 3];
                              Ra2 = Da2;
                            }
                            h[P2 + (Ra2 + ra2 << 3) >> 3] = 0;
                            h[P2 + (la2 + ra2 << 3) >> 3] = 0;
                            Da2 = ra2 + -2 | 0;
                            c[s2 >> 2] = Da2;
                            if ((Da2 | 0) >= 1) {
                              Oa2 = P2 + (ra2 + Y2 << 3) | 0;
                              Va2 = P2 + (Ra2 + Pa2 << 3) | 0;
                              Pa2 = 1;
                              while (1) {
                                h[P2 + (Ra2 + Pa2 << 3) >> 3] = -(+h[Va2 >> 3] * +h[K2 + (ya2 + Pa2 << 3) >> 3]);
                                h[P2 + (Pa2 + Y2 << 3) >> 3] = -(+h[Oa2 >> 3] * +h[K2 + (wa2 + Pa2 << 3) >> 3]);
                                if ((Pa2 | 0) < (Da2 | 0)) Pa2 = Pa2 + 1 | 0;
                                else break;
                              }
                            }
                            if ((ra2 | 0) > 2) {
                              Pa2 = Da2;
                              Oa2 = Da2;
                              d: while (1) {
                                ya2 = Oa2;
                                Oa2 = Oa2 + -1 | 0;
                                if ((ya2 | 0) > (Pa2 | 0)) Wa2 = Pa2;
                                else {
                                  do
                                    if ((ya2 | 0) > 1) {
                                      Va2 = S(Oa2, d2) | 0;
                                      Xa2 = ya2 + -2 | 0;
                                      if (!(+h[K2 + (Va2 + ya2 << 3) >> 3] != 0)) break;
                                      kb(6252, 536, 536, E2, 104, K2 + (Va2 + Oa2 << 3) | 0, g2, 104, 104, P2 + ((c[e2 >> 2] | 0) + Oa2 << 3) | 0, e2, z2, y2, w2, 536, F2, I2, B2) | 0;
                                      Aa2 = +h[I2 >> 3];
                                      do
                                        if (Aa2 > 1) {
                                          za2 = +h[P2 + (Oa2 << 3) >> 3];
                                          h[v2 >> 3] = za2;
                                          ja2 = +h[P2 + (ya2 << 3) >> 3];
                                          if (!((za2 >= ja2 ? za2 : ja2) > ia2 / Aa2)) {
                                            Ka2 = 100;
                                            break;
                                          }
                                          ja2 = 1 / Aa2;
                                          h[A2 >> 3] = ja2;
                                          h[w2 >> 3] = ja2 * +h[w2 >> 3];
                                          h[na2 >> 3] = ja2 * +h[na2 >> 3];
                                          h[da2 >> 3] = ja2 * +h[da2 >> 3];
                                          h[oa2 >> 3] = ja2 * +h[oa2 >> 3];
                                          za2 = ja2 * +h[F2 >> 3];
                                          h[F2 >> 3] = za2;
                                          Ya2 = za2;
                                        } else Ka2 = 100;
                                      while (0);
                                      if ((Ka2 | 0) == 100) {
                                        Ka2 = 0;
                                        Ya2 = +h[F2 >> 3];
                                      }
                                      if (Ya2 != 1) {
                                        Ob(x2, F2, P2 + ((c[e2 >> 2] | 0) + 1 << 3) | 0, 532) | 0;
                                        Ob(x2, F2, ma2, 532) | 0;
                                      }
                                      Aa2 = +h[w2 >> 3];
                                      Ea2 = c[e2 >> 2] | 0;
                                      h[P2 + (Ea2 + Oa2 << 3) >> 3] = Aa2;
                                      h[P2 + (Ea2 + ya2 << 3) >> 3] = +h[da2 >> 3];
                                      h[P2 + (Oa2 + Y2 << 3) >> 3] = +h[na2 >> 3];
                                      h[P2 + (ya2 + Y2 << 3) >> 3] = +h[oa2 >> 3];
                                      c[s2 >> 2] = Xa2;
                                      h[v2 >> 3] = -Aa2;
                                      Ma2 = K2 + (Va2 + 1 << 3) | 0;
                                      Sa(s2, v2, Ma2, 532, P2 + (Ea2 + 1 << 3) | 0, 532) | 0;
                                      c[s2 >> 2] = Xa2;
                                      h[v2 >> 3] = -+h[da2 >> 3];
                                      Ea2 = K2 + ((S(ya2, d2) | 0) + 1 << 3) | 0;
                                      Sa(s2, v2, Ea2, 532, P2 + ((c[e2 >> 2] | 0) + 1 << 3) | 0, 532) | 0;
                                      c[s2 >> 2] = Xa2;
                                      h[v2 >> 3] = -+h[na2 >> 3];
                                      Sa(s2, v2, Ma2, 532, ma2, 532) | 0;
                                      c[s2 >> 2] = Xa2;
                                      h[v2 >> 3] = -+h[oa2 >> 3];
                                      Sa(s2, v2, Ea2, 532, ma2, 532) | 0;
                                      Pa2 = Xa2;
                                      Oa2 = Oa2;
                                      continue d;
                                    }
                                  while (0);
                                  Ea2 = S(ya2, d2) | 0;
                                  kb(6252, 532, 536, E2, 104, K2 + (Ea2 + ya2 << 3) | 0, g2, 104, 104, P2 + ((c[e2 >> 2] | 0) + ya2 << 3) | 0, e2, z2, y2, w2, 536, F2, I2, B2) | 0;
                                  Aa2 = +h[I2 >> 3];
                                  do
                                    if (Aa2 > 1) {
                                      if (!(+h[P2 + (ya2 << 3) >> 3] > ia2 / Aa2)) {
                                        Ka2 = 93;
                                        break;
                                      }
                                      h[w2 >> 3] = +h[w2 >> 3] / Aa2;
                                      h[na2 >> 3] = +h[na2 >> 3] / Aa2;
                                      za2 = +h[F2 >> 3] / Aa2;
                                      h[F2 >> 3] = za2;
                                      Za2 = za2;
                                    } else Ka2 = 93;
                                  while (0);
                                  if ((Ka2 | 0) == 93) {
                                    Ka2 = 0;
                                    Za2 = +h[F2 >> 3];
                                  }
                                  if (Za2 != 1) {
                                    Ob(x2, F2, P2 + ((c[e2 >> 2] | 0) + 1 << 3) | 0, 532) | 0;
                                    Ob(x2, F2, ma2, 532) | 0;
                                  }
                                  Aa2 = +h[w2 >> 3];
                                  Ma2 = c[e2 >> 2] | 0;
                                  h[P2 + (Ma2 + ya2 << 3) >> 3] = Aa2;
                                  h[P2 + (ya2 + Y2 << 3) >> 3] = +h[na2 >> 3];
                                  c[s2 >> 2] = Oa2;
                                  h[v2 >> 3] = -Aa2;
                                  _a2 = K2 + (Ea2 + 1 << 3) | 0;
                                  Sa(s2, v2, _a2, 532, P2 + (Ma2 + 1 << 3) | 0, 532) | 0;
                                  c[s2 >> 2] = Oa2;
                                  h[v2 >> 3] = -+h[na2 >> 3];
                                  Sa(s2, v2, _a2, 532, ma2, 532) | 0;
                                  Wa2 = Oa2;
                                }
                                if ((ya2 | 0) <= 1) break;
                                else Pa2 = Wa2;
                              }
                            }
                            if (ea2) {
                              Pa2 = S(qa2 + -1 | 0, M2) | 0;
                              Oa2 = O2 + (Pa2 + 1 << 3) | 0;
                              Ta(x2, P2 + ((c[e2 >> 2] | 0) + 1 << 3) | 0, 532, Oa2, 532) | 0;
                              Da2 = S(qa2, M2) | 0;
                              _a2 = O2 + (Da2 + 1 << 3) | 0;
                              Ta(x2, ma2, 532, _a2, 532) | 0;
                              Ma2 = c[x2 >> 2] | 0;
                              c[s2 >> 2] = Ma2;
                              if ((Ma2 | 0) < 1) ab2 = 0;
                              else {
                                Aa2 = 0;
                                bb2 = 1;
                                while (1) {
                                  cb2 = +h[O2 + (bb2 + Pa2 << 3) >> 3];
                                  za2 = +h[O2 + (bb2 + Da2 << 3) >> 3];
                                  ja2 = (cb2 >= 0 ? cb2 : -cb2) + (za2 >= 0 ? za2 : -za2);
                                  Aa2 = Aa2 >= ja2 ? Aa2 : ja2;
                                  if ((bb2 | 0) >= (Ma2 | 0)) break;
                                  else bb2 = bb2 + 1 | 0;
                                }
                                h[v2 >> 3] = cb2;
                                ab2 = Aa2;
                              }
                              h[H2 >> 3] = 1 / ab2;
                              Ob(x2, H2, Oa2, 532) | 0;
                              Ob(x2, H2, _a2, 532) | 0;
                              bb2 = c[e2 >> 2] | 0;
                              c[s2 >> 2] = bb2;
                              Ma2 = c[x2 >> 2] | 0;
                              if ((Ma2 | 0) < (bb2 | 0)) eb2 = Ma2;
                              else break;
                              while (1) {
                                eb2 = eb2 + 1 | 0;
                                h[O2 + (eb2 + Pa2 << 3) >> 3] = 0;
                                h[O2 + (eb2 + Da2 << 3) >> 3] = 0;
                                if ((eb2 | 0) >= (bb2 | 0)) break b;
                              }
                            }
                            bb2 = c[x2 >> 2] | 0;
                            if ((bb2 | 0) > 2) {
                              c[s2 >> 2] = bb2 + -2;
                              Da2 = c[e2 >> 2] | 0;
                              Pa2 = bb2 + -1 | 0;
                              $a(2080, e2, s2, 104, ba2, m2, P2 + (Da2 + 1 << 3) | 0, 532, P2 + (Pa2 + Da2 << 3) | 0, O2 + ((S(Pa2, M2) | 0) + 1 << 3) | 0, 532) | 0;
                              Pa2 = c[x2 >> 2] | 0;
                              c[s2 >> 2] = Pa2 + -2;
                              $a(2080, e2, s2, 104, ba2, m2, ma2, 532, P2 + (Pa2 + Y2 << 3) | 0, O2 + ((S(Pa2, M2) | 0) + 1 << 3) | 0, 532) | 0;
                            } else {
                              Pa2 = bb2 + -1 | 0;
                              Ob(e2, P2 + ((c[e2 >> 2] | 0) + Pa2 << 3) | 0, O2 + ((S(Pa2, M2) | 0) + 1 << 3) | 0, 532) | 0;
                              Pa2 = c[x2 >> 2] | 0;
                              Ob(e2, P2 + (Pa2 + Y2 << 3) | 0, O2 + ((S(Pa2, M2) | 0) + 1 << 3) | 0, 532) | 0;
                            }
                            Pa2 = c[e2 >> 2] | 0;
                            c[s2 >> 2] = Pa2;
                            bb2 = c[x2 >> 2] | 0;
                            if ((Pa2 | 0) < 1) fb2 = 0;
                            else {
                              Da2 = S(bb2 + -1 | 0, M2) | 0;
                              _a2 = S(bb2, M2) | 0;
                              Aa2 = 0;
                              Oa2 = 1;
                              while (1) {
                                gb2 = +h[O2 + (Da2 + Oa2 << 3) >> 3];
                                ja2 = +h[O2 + (_a2 + Oa2 << 3) >> 3];
                                za2 = (gb2 >= 0 ? gb2 : -gb2) + (ja2 >= 0 ? ja2 : -ja2);
                                Aa2 = Aa2 >= za2 ? Aa2 : za2;
                                if ((Oa2 | 0) >= (Pa2 | 0)) break;
                                else Oa2 = Oa2 + 1 | 0;
                              }
                              h[v2 >> 3] = gb2;
                              fb2 = Aa2;
                            }
                            h[H2 >> 3] = 1 / fb2;
                            Ob(e2, H2, O2 + ((S(bb2 + -1 | 0, M2) | 0) + 1 << 3) | 0, 532) | 0;
                            Ob(e2, H2, O2 + ((S(c[x2 >> 2] | 0, M2) | 0) + 1 << 3) | 0, 532) | 0;
                          }
                        while (0);
                        sa2 = (xa2 ? -2 : -1) + qa2 | 0;
                        ta2 = va2;
                        ua2 = c[x2 >> 2] | 0;
                      }
                    while (0);
                    wa2 = (ta2 | 0) == 1 ? 0 : ta2;
                    ra2 = ua2 + -1 | 0;
                    c[x2 >> 2] = ra2;
                    if ((ua2 | 0) <= 1) break;
                    else {
                      qa2 = sa2;
                      fa2 = (wa2 | 0) == -1 ? 1 : wa2;
                    }
                  }
                }
                if (!Q2) {
                  i2 = r2;
                  return 0;
                }
                fa2 = c[e2 >> 2] | 0;
                c[s2 >> 2] = fa2;
                c[x2 >> 2] = 1;
                if ((fa2 | 0) < 1) {
                  i2 = r2;
                  return 0;
                }
                fa2 = w2 + 8 | 0;
                qa2 = (V2 | 0) == 0;
                ra2 = w2 + 16 | 0;
                ma2 = w2 + 24 | 0;
                ba2 = Y2 | 1;
                ea2 = 1;
                na2 = 0;
                oa2 = 1;
                while (1) {
                  do
                    if ((na2 | 0) == -1) {
                      hb2 = ea2;
                      ib2 = -1;
                      jb2 = oa2;
                    } else {
                      da2 = c[e2 >> 2] | 0;
                      do
                        if ((oa2 | 0) == (da2 | 0)) mb2 = na2;
                        else {
                          if (+h[K2 + (oa2 + 1 + (S(oa2, d2) | 0) << 3) >> 3] == 0) {
                            mb2 = na2;
                            break;
                          }
                          mb2 = 1;
                        }
                      while (0);
                      if (!b2 ? (c[J2 + (oa2 << 2) >> 2] | 0) == 0 : 0) {
                        hb2 = ea2;
                        ib2 = mb2;
                        jb2 = oa2;
                        break;
                      }
                      xa2 = S(oa2, d2) | 0;
                      Ba2 = +h[K2 + (xa2 + oa2 << 3) >> 3];
                      h[z2 >> 3] = Ba2;
                      h[y2 >> 3] = 0;
                      la2 = (mb2 | 0) != 0;
                      if (la2) {
                        pa2 = oa2 + 1 | 0;
                        za2 = +h[K2 + ((S(pa2, d2) | 0) + oa2 << 3) >> 3];
                        h[v2 >> 3] = za2;
                        ja2 = +G(+(za2 >= 0 ? za2 : -za2));
                        za2 = +h[K2 + (pa2 + xa2 << 3) >> 3];
                        nb2 = ja2 * +G(+(za2 >= 0 ? za2 : -za2));
                        h[y2 >> 3] = nb2;
                        ob2 = nb2;
                      } else ob2 = 0;
                      nb2 = -ob2;
                      za2 = ga2 * ((Ba2 >= 0 ? Ba2 : -Ba2) + (ob2 >= 0 ? ob2 : nb2));
                      h[v2 >> 3] = za2;
                      h[E2 >> 3] = za2 >= ha2 ? za2 : ha2;
                      e: do
                        if (!mb2) {
                          h[P2 + (da2 + oa2 << 3) >> 3] = 1;
                          c[t2 >> 2] = da2;
                          if ((oa2 | 0) < (da2 | 0)) {
                            pa2 = oa2;
                            do {
                              pa2 = pa2 + 1 | 0;
                              h[P2 + (da2 + pa2 << 3) >> 3] = -+h[K2 + (oa2 + (S(pa2, d2) | 0) << 3) >> 3];
                            } while ((pa2 | 0) < (da2 | 0));
                          }
                          c[t2 >> 2] = da2;
                          Aa2 = ia2;
                          za2 = 1;
                          pa2 = oa2;
                          bb2 = oa2 + 1 | 0;
                          $2 = da2;
                          Z2 = da2;
                          f: while (1) {
                            wa2 = pa2;
                            while (1) {
                              pb2 = wa2 + 1 | 0;
                              if ((wa2 | 0) >= ($2 | 0)) break f;
                              if ((pb2 | 0) < (bb2 | 0)) wa2 = pb2;
                              else break;
                            }
                            ya2 = wa2 + 2 | 0;
                            do
                              if ((pb2 | 0) < (Z2 | 0)) {
                                if (!(+h[K2 + ((S(pb2, d2) | 0) + ya2 << 3) >> 3] != 0)) {
                                  qb2 = pb2;
                                  rb2 = ya2;
                                  break;
                                }
                                qb2 = ya2;
                                rb2 = wa2 + 3 | 0;
                              } else {
                                qb2 = pb2;
                                rb2 = ya2;
                              }
                            while (0);
                            Ba2 = +h[P2 + (pb2 << 3) >> 3];
                            if ((pb2 | 0) == (qb2 | 0)) {
                              if (Ba2 > Aa2) {
                                h[A2 >> 3] = 1 / za2;
                                Ea2 = c[x2 >> 2] | 0;
                                c[u2 >> 2] = Z2 + 1 - Ea2;
                                Ob(u2, A2, P2 + (Ea2 + Z2 << 3) | 0, 532) | 0;
                                sb2 = 1;
                                tb2 = c[e2 >> 2] | 0;
                              } else {
                                sb2 = za2;
                                tb2 = Z2;
                              }
                              Ea2 = c[x2 >> 2] | 0;
                              c[u2 >> 2] = wa2 - Ea2;
                              Oa2 = Ea2 + 1 | 0;
                              Ea2 = S(pb2, d2) | 0;
                              ja2 = +Ua(u2, K2 + (Oa2 + Ea2 << 3) | 0, 532, P2 + (tb2 + Oa2 << 3) | 0, 532);
                              Oa2 = P2 + ((c[e2 >> 2] | 0) + pb2 << 3) | 0;
                              h[Oa2 >> 3] = +h[Oa2 >> 3] - ja2;
                              kb(6252, 532, 532, E2, 104, K2 + (Ea2 + pb2 << 3) | 0, g2, 104, 104, Oa2, e2, z2, 6176, w2, 536, F2, I2, B2) | 0;
                              if (+h[F2 >> 3] != 1) {
                                Oa2 = c[e2 >> 2] | 0;
                                Ea2 = c[x2 >> 2] | 0;
                                c[u2 >> 2] = Oa2 + 1 - Ea2;
                                Ob(u2, F2, P2 + (Ea2 + Oa2 << 3) | 0, 532) | 0;
                              }
                              ja2 = +h[w2 >> 3];
                              Oa2 = c[e2 >> 2] | 0;
                              h[P2 + (Oa2 + pb2 << 3) >> 3] = ja2;
                              h[v2 >> 3] = ja2;
                              ub2 = ja2 >= 0 ? ja2 : -ja2;
                              vb2 = ub2 >= sb2 ? ub2 : sb2;
                              wb2 = Oa2;
                            } else {
                              h[v2 >> 3] = Ba2;
                              ub2 = +h[P2 + (ya2 << 3) >> 3];
                              if ((Ba2 >= ub2 ? Ba2 : ub2) > Aa2) {
                                h[A2 >> 3] = 1 / za2;
                                Oa2 = c[x2 >> 2] | 0;
                                c[u2 >> 2] = Z2 + 1 - Oa2;
                                Ob(u2, A2, P2 + (Oa2 + Z2 << 3) | 0, 532) | 0;
                                xb2 = 1;
                                yb2 = c[e2 >> 2] | 0;
                              } else {
                                xb2 = za2;
                                yb2 = Z2;
                              }
                              Oa2 = c[x2 >> 2] | 0;
                              c[u2 >> 2] = wa2 - Oa2;
                              Ea2 = Oa2 + 1 | 0;
                              Oa2 = S(pb2, d2) | 0;
                              ub2 = +Ua(u2, K2 + (Ea2 + Oa2 << 3) | 0, 532, P2 + (yb2 + Ea2 << 3) | 0, 532);
                              Ea2 = c[e2 >> 2] | 0;
                              Pa2 = P2 + (Ea2 + pb2 << 3) | 0;
                              h[Pa2 >> 3] = +h[Pa2 >> 3] - ub2;
                              Pa2 = c[x2 >> 2] | 0;
                              c[u2 >> 2] = wa2 - Pa2;
                              _a2 = Pa2 + 1 | 0;
                              ub2 = +Ua(u2, K2 + (_a2 + (S(ya2, d2) | 0) << 3) | 0, 532, P2 + (Ea2 + _a2 << 3) | 0, 532);
                              _a2 = c[e2 >> 2] | 0;
                              Ea2 = P2 + (_a2 + ya2 << 3) | 0;
                              h[Ea2 >> 3] = +h[Ea2 >> 3] - ub2;
                              kb(540, 536, 532, E2, 104, K2 + (Oa2 + pb2 << 3) | 0, g2, 104, 104, P2 + (_a2 + pb2 << 3) | 0, e2, z2, 6176, w2, 536, F2, I2, B2) | 0;
                              if (+h[F2 >> 3] != 1) {
                                _a2 = c[e2 >> 2] | 0;
                                Oa2 = c[x2 >> 2] | 0;
                                c[u2 >> 2] = _a2 + 1 - Oa2;
                                Ob(u2, F2, P2 + (Oa2 + _a2 << 3) | 0, 532) | 0;
                              }
                              _a2 = c[e2 >> 2] | 0;
                              Oa2 = P2 + (_a2 + pb2 << 3) | 0;
                              h[Oa2 >> 3] = +h[w2 >> 3];
                              ub2 = +h[fa2 >> 3];
                              h[P2 + (_a2 + ya2 << 3) >> 3] = ub2;
                              Ba2 = +h[Oa2 >> 3];
                              h[v2 >> 3] = Ba2;
                              ja2 = Ba2 >= 0 ? Ba2 : -Ba2;
                              Ba2 = ub2 >= 0 ? ub2 : -ub2;
                              ub2 = ja2 >= Ba2 ? ja2 : Ba2;
                              vb2 = ub2 >= xb2 ? ub2 : xb2;
                              wb2 = _a2;
                            }
                            Aa2 = ia2 / vb2;
                            za2 = vb2;
                            pa2 = pb2;
                            bb2 = rb2;
                            $2 = c[t2 >> 2] | 0;
                            Z2 = wb2;
                          }
                          $2 = c[x2 >> 2] | 0;
                          if (qa2) {
                            c[t2 >> 2] = Z2 + 1 - $2;
                            bb2 = S(ea2, f2) | 0;
                            Ta(t2, P2 + ($2 + Z2 << 3) | 0, 532, L2 + ($2 + bb2 << 3) | 0, 532) | 0;
                            pa2 = c[x2 >> 2] | 0;
                            c[t2 >> 2] = (c[e2 >> 2] | 0) + 1 - pa2;
                            _a2 = hc(t2, L2 + (pa2 + bb2 << 3) | 0, 532) | 0;
                            pa2 = c[x2 >> 2] | 0;
                            za2 = +h[L2 + (bb2 + -1 + _a2 + pa2 << 3) >> 3];
                            h[v2 >> 3] = za2;
                            h[H2 >> 3] = 1 / (za2 >= 0 ? za2 : -za2);
                            c[t2 >> 2] = (c[e2 >> 2] | 0) + 1 - pa2;
                            Ob(t2, H2, L2 + (pa2 + bb2 << 3) | 0, 532) | 0;
                            bb2 = c[x2 >> 2] | 0;
                            pa2 = bb2 + -1 | 0;
                            c[t2 >> 2] = pa2;
                            if ((bb2 | 0) < 2) break;
                            bb2 = j2 + (S(f2, (ea2 << 3) + -8 | 0) | 0) | 0;
                            je(bb2 | 0, 0, ((pa2 | 0) > 1 ? pa2 : 1) << 3 | 0) | 0;
                            break;
                          }
                          if ((Z2 | 0) > ($2 | 0)) {
                            c[t2 >> 2] = Z2 - $2;
                            pa2 = $2 + 1 | 0;
                            $a(2080, e2, t2, 104, L2 + ((S(pa2, f2) | 0) + 1 << 3) | 0, k2, P2 + (pa2 + Z2 << 3) | 0, 532, P2 + (Z2 + $2 << 3) | 0, L2 + ((S($2, f2) | 0) + 1 << 3) | 0, 532) | 0;
                            zb2 = c[x2 >> 2] | 0;
                          } else zb2 = $2;
                          $2 = hc(e2, L2 + ((S(zb2, f2) | 0) + 1 << 3) | 0, 532) | 0;
                          pa2 = S(c[x2 >> 2] | 0, f2) | 0;
                          za2 = +h[L2 + (pa2 + $2 << 3) >> 3];
                          h[v2 >> 3] = za2;
                          h[H2 >> 3] = 1 / (za2 >= 0 ? za2 : -za2);
                          Ob(e2, H2, L2 + (pa2 + 1 << 3) | 0, 532) | 0;
                        } else {
                          pa2 = oa2 + 1 | 0;
                          za2 = +h[K2 + ((S(pa2, d2) | 0) + oa2 << 3) >> 3];
                          h[v2 >> 3] = za2;
                          $2 = K2 + (pa2 + xa2 << 3) | 0;
                          Aa2 = +h[$2 >> 3];
                          if (!((za2 >= 0 ? za2 : -za2) >= (Aa2 >= 0 ? Aa2 : -Aa2))) {
                            h[P2 + (da2 + oa2 << 3) >> 3] = 1;
                            h[P2 + (pa2 + Y2 << 3) >> 3] = nb2 / +h[$2 >> 3];
                          } else {
                            h[P2 + (da2 + oa2 << 3) >> 3] = ob2 / za2;
                            h[P2 + (ba2 + oa2 << 3) >> 3] = 1;
                          }
                          h[P2 + (pa2 + da2 << 3) >> 3] = 0;
                          h[P2 + (oa2 + Y2 << 3) >> 3] = 0;
                          c[t2 >> 2] = da2;
                          $2 = oa2 + 2 | 0;
                          bb2 = ($2 | 0) > (da2 | 0);
                          do
                            if (bb2) {
                              c[t2 >> 2] = da2;
                              Ab2 = da2;
                            } else {
                              _a2 = P2 + (pa2 + Y2 << 3) | 0;
                              Oa2 = P2 + (da2 + oa2 << 3) | 0;
                              Ea2 = $2;
                              while (1) {
                                Pa2 = S(Ea2, d2) | 0;
                                h[P2 + (da2 + Ea2 << 3) >> 3] = -(+h[Oa2 >> 3] * +h[K2 + (oa2 + Pa2 << 3) >> 3]);
                                h[P2 + (Ea2 + Y2 << 3) >> 3] = -(+h[_a2 >> 3] * +h[K2 + (pa2 + Pa2 << 3) >> 3]);
                                if ((Ea2 | 0) < (da2 | 0)) Ea2 = Ea2 + 1 | 0;
                                else break;
                              }
                              c[t2 >> 2] = da2;
                              if (bb2) {
                                Ab2 = da2;
                                break;
                              } else {
                                Bb2 = ia2;
                                Cb2 = 1;
                                Db2 = $2;
                                Eb2 = $2;
                                Fb2 = da2;
                              }
                              while (1) {
                                Ea2 = Db2;
                                Db2 = Db2 + 1 | 0;
                                do
                                  if ((Ea2 | 0) >= (Eb2 | 0)) {
                                    do
                                      if ((Ea2 | 0) < (Fb2 | 0)) {
                                        if (!(+h[K2 + (Db2 + (S(Ea2, d2) | 0) << 3) >> 3] != 0)) {
                                          Gb2 = Db2;
                                          Hb2 = Ea2;
                                          break;
                                        }
                                        Gb2 = Ea2 + 2 | 0;
                                        Hb2 = Db2;
                                      } else {
                                        Gb2 = Db2;
                                        Hb2 = Ea2;
                                      }
                                    while (0);
                                    za2 = +h[P2 + (Ea2 << 3) >> 3];
                                    if ((Ea2 | 0) == (Hb2 | 0)) {
                                      if (za2 > Bb2) {
                                        h[A2 >> 3] = 1 / Cb2;
                                        Ja2 = c[x2 >> 2] | 0;
                                        c[u2 >> 2] = Fb2 + 1 - Ja2;
                                        Ob(u2, A2, P2 + (Ja2 + Fb2 << 3) | 0, 532) | 0;
                                        Ja2 = c[x2 >> 2] | 0;
                                        c[u2 >> 2] = (c[e2 >> 2] | 0) + 1 - Ja2;
                                        Ob(u2, A2, P2 + (Ja2 + Y2 << 3) | 0, 532) | 0;
                                        Ib2 = 1;
                                        Jb2 = c[e2 >> 2] | 0;
                                      } else {
                                        Ib2 = Cb2;
                                        Jb2 = Fb2;
                                      }
                                      Ja2 = c[x2 >> 2] | 0;
                                      Ia2 = Ea2 + -2 | 0;
                                      c[u2 >> 2] = Ia2 - Ja2;
                                      _a2 = Ja2 + 2 | 0;
                                      Ja2 = S(Ea2, d2) | 0;
                                      Aa2 = +Ua(u2, K2 + (_a2 + Ja2 << 3) | 0, 532, P2 + (Jb2 + _a2 << 3) | 0, 532);
                                      _a2 = P2 + ((c[e2 >> 2] | 0) + Ea2 << 3) | 0;
                                      h[_a2 >> 3] = +h[_a2 >> 3] - Aa2;
                                      _a2 = c[x2 >> 2] | 0;
                                      c[u2 >> 2] = Ia2 - _a2;
                                      Ia2 = _a2 + 2 | 0;
                                      Aa2 = +Ua(u2, K2 + (Ia2 + Ja2 << 3) | 0, 532, P2 + (Ia2 + Y2 << 3) | 0, 532);
                                      Ia2 = P2 + (Ea2 + Y2 << 3) | 0;
                                      h[Ia2 >> 3] = +h[Ia2 >> 3] - Aa2;
                                      h[v2 >> 3] = -+h[y2 >> 3];
                                      kb(6252, 532, 536, E2, 104, K2 + (Ja2 + Ea2 << 3) | 0, g2, 104, 104, P2 + ((c[e2 >> 2] | 0) + Ea2 << 3) | 0, e2, z2, v2, w2, 536, F2, I2, B2) | 0;
                                      if (+h[F2 >> 3] != 1) {
                                        Ja2 = c[e2 >> 2] | 0;
                                        _a2 = c[x2 >> 2] | 0;
                                        c[u2 >> 2] = Ja2 + 1 - _a2;
                                        Ob(u2, F2, P2 + (_a2 + Ja2 << 3) | 0, 532) | 0;
                                        Ja2 = c[x2 >> 2] | 0;
                                        c[u2 >> 2] = (c[e2 >> 2] | 0) + 1 - Ja2;
                                        Ob(u2, F2, P2 + (Ja2 + Y2 << 3) | 0, 532) | 0;
                                      }
                                      Ja2 = c[e2 >> 2] | 0;
                                      _a2 = P2 + (Ja2 + Ea2 << 3) | 0;
                                      h[_a2 >> 3] = +h[w2 >> 3];
                                      Aa2 = +h[ra2 >> 3];
                                      h[Ia2 >> 3] = Aa2;
                                      ub2 = +h[_a2 >> 3];
                                      h[v2 >> 3] = ub2;
                                      Ba2 = ub2 >= 0 ? ub2 : -ub2;
                                      ub2 = Aa2 >= 0 ? Aa2 : -Aa2;
                                      Aa2 = Ba2 >= ub2 ? Ba2 : ub2;
                                      ub2 = Aa2 >= Ib2 ? Aa2 : Ib2;
                                      Kb2 = Gb2;
                                      Lb2 = ia2 / ub2;
                                      Mb2 = ub2;
                                      Nb2 = Ja2;
                                      break;
                                    } else {
                                      h[v2 >> 3] = za2;
                                      ub2 = +h[P2 + (Db2 << 3) >> 3];
                                      if ((za2 >= ub2 ? za2 : ub2) > Bb2) {
                                        h[A2 >> 3] = 1 / Cb2;
                                        Ja2 = c[x2 >> 2] | 0;
                                        c[u2 >> 2] = Fb2 + 1 - Ja2;
                                        Ob(u2, A2, P2 + (Ja2 + Fb2 << 3) | 0, 532) | 0;
                                        Ja2 = c[x2 >> 2] | 0;
                                        c[u2 >> 2] = (c[e2 >> 2] | 0) + 1 - Ja2;
                                        Ob(u2, A2, P2 + (Ja2 + Y2 << 3) | 0, 532) | 0;
                                        Pb2 = 1;
                                        Qb2 = c[e2 >> 2] | 0;
                                      } else {
                                        Pb2 = Cb2;
                                        Qb2 = Fb2;
                                      }
                                      Ja2 = c[x2 >> 2] | 0;
                                      _a2 = Ea2 + -2 | 0;
                                      c[u2 >> 2] = _a2 - Ja2;
                                      Ia2 = Ja2 + 2 | 0;
                                      Ja2 = S(Ea2, d2) | 0;
                                      ub2 = +Ua(u2, K2 + (Ia2 + Ja2 << 3) | 0, 532, P2 + (Qb2 + Ia2 << 3) | 0, 532);
                                      Ia2 = P2 + ((c[e2 >> 2] | 0) + Ea2 << 3) | 0;
                                      h[Ia2 >> 3] = +h[Ia2 >> 3] - ub2;
                                      Ia2 = c[x2 >> 2] | 0;
                                      c[u2 >> 2] = _a2 - Ia2;
                                      Oa2 = Ia2 + 2 | 0;
                                      ub2 = +Ua(u2, K2 + (Oa2 + Ja2 << 3) | 0, 532, P2 + (Oa2 + Y2 << 3) | 0, 532);
                                      Oa2 = P2 + (Ea2 + Y2 << 3) | 0;
                                      h[Oa2 >> 3] = +h[Oa2 >> 3] - ub2;
                                      Ia2 = c[x2 >> 2] | 0;
                                      c[u2 >> 2] = _a2 - Ia2;
                                      ya2 = Ia2 + 2 | 0;
                                      Ia2 = S(Db2, d2) | 0;
                                      ub2 = +Ua(u2, K2 + (ya2 + Ia2 << 3) | 0, 532, P2 + ((c[e2 >> 2] | 0) + ya2 << 3) | 0, 532);
                                      ya2 = P2 + ((c[e2 >> 2] | 0) + Db2 << 3) | 0;
                                      h[ya2 >> 3] = +h[ya2 >> 3] - ub2;
                                      ya2 = c[x2 >> 2] | 0;
                                      c[u2 >> 2] = _a2 - ya2;
                                      _a2 = ya2 + 2 | 0;
                                      ub2 = +Ua(u2, K2 + (_a2 + Ia2 << 3) | 0, 532, P2 + (_a2 + Y2 << 3) | 0, 532);
                                      _a2 = P2 + (Db2 + Y2 << 3) | 0;
                                      h[_a2 >> 3] = +h[_a2 >> 3] - ub2;
                                      h[v2 >> 3] = -+h[y2 >> 3];
                                      kb(540, 536, 536, E2, 104, K2 + (Ja2 + Ea2 << 3) | 0, g2, 104, 104, P2 + ((c[e2 >> 2] | 0) + Ea2 << 3) | 0, e2, z2, v2, w2, 536, F2, I2, B2) | 0;
                                      if (+h[F2 >> 3] != 1) {
                                        Ja2 = c[e2 >> 2] | 0;
                                        Ia2 = c[x2 >> 2] | 0;
                                        c[u2 >> 2] = Ja2 + 1 - Ia2;
                                        Ob(u2, F2, P2 + (Ia2 + Ja2 << 3) | 0, 532) | 0;
                                        Ja2 = c[x2 >> 2] | 0;
                                        c[u2 >> 2] = (c[e2 >> 2] | 0) + 1 - Ja2;
                                        Ob(u2, F2, P2 + (Ja2 + Y2 << 3) | 0, 532) | 0;
                                      }
                                      ub2 = +h[w2 >> 3];
                                      Ja2 = c[e2 >> 2] | 0;
                                      h[P2 + (Ja2 + Ea2 << 3) >> 3] = ub2;
                                      za2 = +h[ra2 >> 3];
                                      h[Oa2 >> 3] = za2;
                                      Aa2 = +h[fa2 >> 3];
                                      h[P2 + (Ja2 + Db2 << 3) >> 3] = Aa2;
                                      Ba2 = +h[ma2 >> 3];
                                      h[_a2 >> 3] = Ba2;
                                      ja2 = ub2 >= 0 ? ub2 : -ub2;
                                      ub2 = za2 >= 0 ? za2 : -za2;
                                      za2 = ja2 >= ub2 ? ja2 : ub2;
                                      ub2 = Aa2 >= 0 ? Aa2 : -Aa2;
                                      Aa2 = za2 >= ub2 ? za2 : ub2;
                                      ub2 = Ba2 >= 0 ? Ba2 : -Ba2;
                                      Ba2 = Aa2 >= ub2 ? Aa2 : ub2;
                                      h[v2 >> 3] = Ba2;
                                      ub2 = Ba2 >= Pb2 ? Ba2 : Pb2;
                                      Kb2 = Gb2;
                                      Lb2 = ia2 / ub2;
                                      Mb2 = ub2;
                                      Nb2 = Ja2;
                                      break;
                                    }
                                  } else {
                                    Kb2 = Eb2;
                                    Lb2 = Bb2;
                                    Mb2 = Cb2;
                                    Nb2 = Fb2;
                                  }
                                while (0);
                                if ((Ea2 | 0) >= (c[t2 >> 2] | 0)) {
                                  Ab2 = Nb2;
                                  break;
                                } else {
                                  Bb2 = Lb2;
                                  Cb2 = Mb2;
                                  Eb2 = Kb2;
                                  Fb2 = Nb2;
                                }
                              }
                            }
                          while (0);
                          $2 = c[x2 >> 2] | 0;
                          if (qa2) {
                            c[t2 >> 2] = Ab2 + 1 - $2;
                            bb2 = S(ea2, f2) | 0;
                            Ta(t2, P2 + ($2 + Ab2 << 3) | 0, 532, L2 + ($2 + bb2 << 3) | 0, 532) | 0;
                            pa2 = c[x2 >> 2] | 0;
                            c[t2 >> 2] = (c[e2 >> 2] | 0) + 1 - pa2;
                            Z2 = S(ea2 + 1 | 0, f2) | 0;
                            Ta(t2, P2 + (pa2 + Y2 << 3) | 0, 532, L2 + (pa2 + Z2 << 3) | 0, 532) | 0;
                            pa2 = c[e2 >> 2] | 0;
                            c[t2 >> 2] = pa2;
                            Xa2 = c[x2 >> 2] | 0;
                            if ((Xa2 | 0) > (pa2 | 0)) Rb2 = 0;
                            else {
                              ub2 = 0;
                              Va2 = Xa2;
                              while (1) {
                                Sb2 = +h[L2 + (Va2 + bb2 << 3) >> 3];
                                Ba2 = +h[L2 + (Va2 + Z2 << 3) >> 3];
                                Aa2 = (Sb2 >= 0 ? Sb2 : -Sb2) + (Ba2 >= 0 ? Ba2 : -Ba2);
                                ub2 = ub2 >= Aa2 ? ub2 : Aa2;
                                if ((Va2 | 0) >= (pa2 | 0)) break;
                                else Va2 = Va2 + 1 | 0;
                              }
                              h[v2 >> 3] = Sb2;
                              Rb2 = ub2;
                            }
                            h[H2 >> 3] = 1 / Rb2;
                            c[t2 >> 2] = pa2 + 1 - Xa2;
                            Ob(t2, H2, L2 + (Xa2 + bb2 << 3) | 0, 532) | 0;
                            Va2 = c[x2 >> 2] | 0;
                            c[t2 >> 2] = (c[e2 >> 2] | 0) + 1 - Va2;
                            Ob(t2, H2, L2 + (Va2 + Z2 << 3) | 0, 532) | 0;
                            Va2 = c[x2 >> 2] | 0;
                            Ja2 = Va2 + -1 | 0;
                            c[t2 >> 2] = Ja2;
                            if ((Va2 | 0) < 2) break;
                            else Tb2 = 1;
                            while (1) {
                              h[L2 + (Tb2 + bb2 << 3) >> 3] = 0;
                              h[L2 + (Tb2 + Z2 << 3) >> 3] = 0;
                              if ((Tb2 | 0) < (Ja2 | 0)) Tb2 = Tb2 + 1 | 0;
                              else break e;
                            }
                          }
                          if (($2 | 0) < (Ab2 + -1 | 0)) {
                            c[t2 >> 2] = Ab2 + ~$2;
                            Ja2 = $2 + 2 | 0;
                            $a(2080, e2, t2, 104, L2 + ((S(Ja2, f2) | 0) + 1 << 3) | 0, k2, P2 + (Ja2 + Ab2 << 3) | 0, 532, P2 + (Ab2 + $2 << 3) | 0, L2 + ((S($2, f2) | 0) + 1 << 3) | 0, 532) | 0;
                            Ja2 = c[x2 >> 2] | 0;
                            c[t2 >> 2] = (c[e2 >> 2] | 0) + -1 - Ja2;
                            Z2 = Ja2 + 2 | 0;
                            bb2 = Ja2 + 1 | 0;
                            $a(2080, e2, t2, 104, L2 + ((S(Z2, f2) | 0) + 1 << 3) | 0, k2, P2 + (Z2 + Y2 << 3) | 0, 532, P2 + (bb2 + Y2 << 3) | 0, L2 + ((S(bb2, f2) | 0) + 1 << 3) | 0, 532) | 0;
                          } else {
                            Ob(e2, P2 + (Ab2 + $2 << 3) | 0, L2 + ((S($2, f2) | 0) + 1 << 3) | 0, 532) | 0;
                            bb2 = (c[x2 >> 2] | 0) + 1 | 0;
                            Ob(e2, P2 + (bb2 + Y2 << 3) | 0, L2 + ((S(bb2, f2) | 0) + 1 << 3) | 0, 532) | 0;
                          }
                          bb2 = c[e2 >> 2] | 0;
                          c[t2 >> 2] = bb2;
                          Z2 = c[x2 >> 2] | 0;
                          if ((bb2 | 0) < 1) Ub2 = 0;
                          else {
                            Ja2 = S(Z2, f2) | 0;
                            Xa2 = S(Z2 + 1 | 0, f2) | 0;
                            pa2 = 1;
                            ub2 = 0;
                            while (1) {
                              Vb2 = +h[L2 + (Ja2 + pa2 << 3) >> 3];
                              Aa2 = +h[L2 + (Xa2 + pa2 << 3) >> 3];
                              Ba2 = (Vb2 >= 0 ? Vb2 : -Vb2) + (Aa2 >= 0 ? Aa2 : -Aa2);
                              ub2 = ub2 >= Ba2 ? ub2 : Ba2;
                              if ((pa2 | 0) >= (bb2 | 0)) break;
                              else pa2 = pa2 + 1 | 0;
                            }
                            h[v2 >> 3] = Vb2;
                            Ub2 = ub2;
                          }
                          h[H2 >> 3] = 1 / Ub2;
                          Ob(e2, H2, L2 + ((S(Z2, f2) | 0) + 1 << 3) | 0, 532) | 0;
                          Ob(e2, H2, L2 + ((S((c[x2 >> 2] | 0) + 1 | 0, f2) | 0) + 1 << 3) | 0, 532) | 0;
                        }
                      while (0);
                      hb2 = (la2 ? 2 : 1) + ea2 | 0;
                      ib2 = mb2;
                      jb2 = c[x2 >> 2] | 0;
                    }
                  while (0);
                  da2 = (ib2 | 0) == -1 ? 0 : ib2;
                  oa2 = jb2 + 1 | 0;
                  c[x2 >> 2] = oa2;
                  if ((jb2 | 0) >= (c[s2 >> 2] | 0)) break;
                  else {
                    ea2 = hb2;
                    na2 = (da2 | 0) == 1 ? -1 : da2;
                  }
                }
                i2 = r2;
                return 0;
              } else X2 = aa2;
            } else {
              c[q2 >> 2] = -1;
              X2 = -1;
            }
          while (0);
          c[s2 >> 2] = 0 - X2;
          Oc(2028, s2) | 0;
          i2 = r2;
          return 0;
        }
        function Rb(a2, b2, d2, e2, f2, g2, j2, k2, l2, m2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          g2 = g2 | 0;
          j2 = j2 | 0;
          k2 = k2 | 0;
          l2 = l2 | 0;
          m2 = m2 | 0;
          var n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0, O2 = 0, P2 = 0, Q2 = 0, R2 = 0, T2 = 0, U2 = 0, V2 = 0, W2 = 0;
          n2 = i2;
          i2 = i2 + 32 | 0;
          o2 = n2 + 16 | 0;
          p2 = n2 + 12 | 0;
          q2 = n2 + 8 | 0;
          r2 = n2 + 4 | 0;
          s2 = n2;
          t2 = c[e2 >> 2] | 0;
          u2 = t2 + 1 | 0;
          v2 = d2 + (~t2 << 3) | 0;
          d2 = c[g2 >> 2] | 0;
          w2 = d2 + 1 | 0;
          x2 = f2 + (~d2 << 3) | 0;
          c[m2 >> 2] = 0;
          d2 = nc(a2, 2058) | 0;
          c[r2 >> 2] = d2;
          if ((d2 | 0) == 0 ? (nc(a2, 2080) | 0) == 0 : 0) {
            c[m2 >> 2] = -1;
            y2 = -1;
          } else z2 = 4;
          do
            if ((z2 | 0) == 4) {
              a2 = c[b2 >> 2] | 0;
              if ((a2 | 0) < 0) {
                c[m2 >> 2] = -2;
                y2 = -2;
                break;
              }
              f2 = (a2 | 0) > 1 ? a2 : 1;
              if ((c[e2 >> 2] | 0) < (f2 | 0)) {
                c[m2 >> 2] = -4;
                y2 = -4;
                break;
              }
              A2 = c[g2 >> 2] | 0;
              if ((A2 | 0) >= 1 ? !((A2 | 0) < (f2 | 0) & (d2 | 0) != 0) : 0) {
                f2 = c[j2 >> 2] | 0;
                if ((f2 | 0) < 1 | (f2 | 0) > (a2 | 0)) {
                  c[m2 >> 2] = -7;
                  y2 = -7;
                  break;
                }
                A2 = c[k2 >> 2] | 0;
                if ((A2 | 0) < 1 | (A2 | 0) > (a2 | 0)) {
                  c[m2 >> 2] = -8;
                  y2 = -8;
                  break;
                }
                A2 = c[m2 >> 2] | 0;
                if (A2 | 0) {
                  y2 = A2;
                  break;
                }
                if ((a2 | 0) < 2) {
                  i2 = n2;
                  return 0;
                }
                if ((f2 | 0) > 1) {
                  A2 = f2 + -1 | 0;
                  if (+h[v2 + ((S(A2, t2) | 0) + f2 << 3) >> 3] != 0) {
                    c[j2 >> 2] = A2;
                    B2 = A2;
                    C2 = c[b2 >> 2] | 0;
                  } else {
                    B2 = f2;
                    C2 = a2;
                  }
                } else {
                  B2 = 1;
                  C2 = a2;
                }
                c[p2 >> 2] = 1;
                if ((B2 | 0) < (C2 | 0) ? +h[v2 + (B2 + 1 + (S(B2, t2) | 0) << 3) >> 3] != 0 : 0) {
                  c[p2 >> 2] = 2;
                  D2 = 2;
                } else D2 = 1;
                a2 = c[k2 >> 2] | 0;
                if ((a2 | 0) > 1 ? (f2 = a2 + -1 | 0, +h[v2 + ((S(f2, t2) | 0) + a2 << 3) >> 3] != 0) : 0) {
                  c[k2 >> 2] = f2;
                  E2 = f2;
                  F2 = c[b2 >> 2] | 0;
                } else {
                  E2 = a2;
                  F2 = C2;
                }
                if ((E2 | 0) < (F2 | 0) ? +h[v2 + (E2 + 1 + (S(E2, t2) | 0) << 3) >> 3] != 0 : 0) G2 = 2;
                else G2 = 1;
                a2 = c[j2 >> 2] | 0;
                if ((a2 | 0) == (E2 | 0)) {
                  i2 = n2;
                  return 0;
                }
                a: do
                  if ((a2 | 0) < (E2 | 0)) {
                    if ((G2 | 0) == 1 & (D2 | 0) == 2) {
                      f2 = E2 + -1 | 0;
                      c[k2 >> 2] = f2;
                      H2 = f2;
                    } else H2 = E2;
                    if ((G2 | 0) == 2 & (D2 | 0) == 1) c[k2 >> 2] = H2 + 1;
                    f2 = c[j2 >> 2] | 0;
                    c[q2 >> 2] = f2;
                    A2 = v2 + (u2 << 3) | 0;
                    I2 = x2 + (w2 << 3) | 0;
                    J2 = D2;
                    K2 = f2;
                    b: while (1) {
                      c[s2 >> 2] = 1;
                      c: do
                        if ((J2 + -1 | 0) >>> 0 < 2) {
                          f2 = J2 + K2 | 0;
                          do
                            if ((f2 | 0) < (c[b2 >> 2] | 0)) {
                              if (!(+h[v2 + (f2 + 1 + (S(f2, t2) | 0) << 3) >> 3] != 0)) break;
                              c[s2 >> 2] = 2;
                            }
                          while (0);
                          gb(r2, b2, A2, e2, I2, g2, q2, p2, s2, l2, m2) | 0;
                          if (c[m2 >> 2] | 0) {
                            z2 = 42;
                            break b;
                          }
                          f2 = (c[q2 >> 2] | 0) + (c[s2 >> 2] | 0) | 0;
                          c[q2 >> 2] = f2;
                          if ((c[p2 >> 2] | 0) != 2) {
                            L2 = f2;
                            break;
                          }
                          if (!(+h[v2 + (f2 + 1 + (S(f2, t2) | 0) << 3) >> 3] == 0)) {
                            L2 = f2;
                            break;
                          }
                          c[p2 >> 2] = 3;
                          L2 = f2;
                        } else {
                          f2 = K2 + 3 | 0;
                          do
                            if ((f2 | 0) <= (c[b2 >> 2] | 0)) {
                              if (!(+h[v2 + ((S(K2 + 2 | 0, t2) | 0) + f2 << 3) >> 3] != 0)) break;
                              c[s2 >> 2] = 2;
                            }
                          while (0);
                          c[o2 >> 2] = K2 + 1;
                          gb(r2, b2, A2, e2, I2, g2, o2, 544, s2, l2, m2) | 0;
                          if (c[m2 >> 2] | 0) {
                            z2 = 50;
                            break b;
                          }
                          f2 = c[s2 >> 2] | 0;
                          if ((f2 | 0) == 1) {
                            gb(r2, b2, A2, e2, I2, g2, q2, 544, s2, l2, m2) | 0;
                            M2 = (c[q2 >> 2] | 0) + 1 | 0;
                            c[q2 >> 2] = M2;
                            L2 = M2;
                            break;
                          }
                          M2 = c[q2 >> 2] | 0;
                          do
                            if (+h[v2 + (M2 + 2 + (S(M2 + 1 | 0, t2) | 0) << 3) >> 3] == 0) c[s2 >> 2] = 1;
                            else {
                              if ((f2 | 0) != 2) break;
                              gb(r2, b2, A2, e2, I2, g2, q2, 544, s2, l2, m2) | 0;
                              N2 = c[q2 >> 2] | 0;
                              if (c[m2 >> 2] | 0) {
                                z2 = 57;
                                break b;
                              }
                              O2 = N2 + 2 | 0;
                              c[q2 >> 2] = O2;
                              L2 = O2;
                              break c;
                            }
                          while (0);
                          gb(r2, b2, A2, e2, I2, g2, q2, 544, 544, l2, m2) | 0;
                          c[o2 >> 2] = (c[q2 >> 2] | 0) + 1;
                          gb(r2, b2, A2, e2, I2, g2, o2, 544, 544, l2, m2) | 0;
                          f2 = (c[q2 >> 2] | 0) + 2 | 0;
                          c[q2 >> 2] = f2;
                          L2 = f2;
                        }
                      while (0);
                      if ((L2 | 0) >= (c[k2 >> 2] | 0)) {
                        P2 = L2;
                        break a;
                      }
                      J2 = c[p2 >> 2] | 0;
                      K2 = L2;
                    }
                    if ((z2 | 0) == 42) {
                      c[k2 >> 2] = c[q2 >> 2];
                      i2 = n2;
                      return 0;
                    } else if ((z2 | 0) == 50) {
                      c[k2 >> 2] = c[q2 >> 2];
                      i2 = n2;
                      return 0;
                    } else if ((z2 | 0) == 57) {
                      c[k2 >> 2] = N2;
                      i2 = n2;
                      return 0;
                    }
                  } else {
                    c[q2 >> 2] = a2;
                    K2 = v2 + (u2 << 3) | 0;
                    J2 = x2 + (w2 << 3) | 0;
                    I2 = D2;
                    A2 = a2;
                    d: while (1) {
                      c[s2 >> 2] = 1;
                      f2 = (A2 | 0) > 2;
                      e: do
                        if ((I2 + -1 | 0) >>> 0 < 2) {
                          do
                            if (f2) {
                              if (!(+h[v2 + (A2 + -1 + (S(A2 + -2 | 0, t2) | 0) << 3) >> 3] != 0)) {
                                Q2 = 1;
                                break;
                              }
                              c[s2 >> 2] = 2;
                              Q2 = 2;
                            } else Q2 = 1;
                          while (0);
                          c[o2 >> 2] = A2 - Q2;
                          gb(r2, b2, K2, e2, J2, g2, o2, s2, p2, l2, m2) | 0;
                          if (c[m2 >> 2] | 0) {
                            z2 = 68;
                            break d;
                          }
                          M2 = (c[q2 >> 2] | 0) - (c[s2 >> 2] | 0) | 0;
                          c[q2 >> 2] = M2;
                          if ((c[p2 >> 2] | 0) != 2) {
                            R2 = M2;
                            break;
                          }
                          if (!(+h[v2 + (M2 + 1 + (S(M2, t2) | 0) << 3) >> 3] == 0)) {
                            R2 = M2;
                            break;
                          }
                          c[p2 >> 2] = 3;
                          R2 = M2;
                        } else {
                          do
                            if (f2) {
                              if (!(+h[v2 + (A2 + -1 + (S(A2 + -2 | 0, t2) | 0) << 3) >> 3] != 0)) {
                                T2 = 1;
                                break;
                              }
                              c[s2 >> 2] = 2;
                              T2 = 2;
                            } else T2 = 1;
                          while (0);
                          c[o2 >> 2] = A2 - T2;
                          gb(r2, b2, K2, e2, J2, g2, o2, s2, 544, l2, m2) | 0;
                          if (c[m2 >> 2] | 0) {
                            z2 = 76;
                            break d;
                          }
                          M2 = c[s2 >> 2] | 0;
                          if ((M2 | 0) == 1) {
                            gb(r2, b2, K2, e2, J2, g2, q2, s2, 544, l2, m2) | 0;
                            O2 = (c[q2 >> 2] | 0) + -1 | 0;
                            c[q2 >> 2] = O2;
                            R2 = O2;
                            break;
                          }
                          O2 = c[q2 >> 2] | 0;
                          U2 = O2 + -1 | 0;
                          do
                            if (+h[v2 + ((S(U2, t2) | 0) + O2 << 3) >> 3] == 0) c[s2 >> 2] = 1;
                            else {
                              if ((M2 | 0) != 2) break;
                              c[o2 >> 2] = U2;
                              gb(r2, b2, K2, e2, J2, g2, o2, 548, 544, l2, m2) | 0;
                              V2 = c[q2 >> 2] | 0;
                              if (c[m2 >> 2] | 0) {
                                z2 = 83;
                                break d;
                              }
                              W2 = V2 + -2 | 0;
                              c[q2 >> 2] = W2;
                              R2 = W2;
                              break e;
                            }
                          while (0);
                          gb(r2, b2, K2, e2, J2, g2, q2, 544, 544, l2, m2) | 0;
                          c[o2 >> 2] = (c[q2 >> 2] | 0) + -1;
                          gb(r2, b2, K2, e2, J2, g2, o2, 544, 544, l2, m2) | 0;
                          U2 = (c[q2 >> 2] | 0) + -2 | 0;
                          c[q2 >> 2] = U2;
                          R2 = U2;
                        }
                      while (0);
                      if ((R2 | 0) <= (c[k2 >> 2] | 0)) {
                        P2 = R2;
                        break a;
                      }
                      I2 = c[p2 >> 2] | 0;
                      A2 = R2;
                    }
                    if ((z2 | 0) == 68) {
                      c[k2 >> 2] = c[q2 >> 2];
                      i2 = n2;
                      return 0;
                    } else if ((z2 | 0) == 76) {
                      c[k2 >> 2] = c[q2 >> 2];
                      i2 = n2;
                      return 0;
                    } else if ((z2 | 0) == 83) {
                      c[k2 >> 2] = V2;
                      i2 = n2;
                      return 0;
                    }
                  }
                while (0);
                c[k2 >> 2] = P2;
                i2 = n2;
                return 0;
              }
              c[m2 >> 2] = -6;
              y2 = -6;
            }
          while (0);
          c[o2 >> 2] = 0 - y2;
          Oc(2060, o2) | 0;
          i2 = n2;
          return 0;
        }
        function Sb(a2, b2, d2, e2, f2, g2, j2, k2, l2, m2, n2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          g2 = g2 | 0;
          j2 = j2 | 0;
          k2 = k2 | 0;
          l2 = l2 | 0;
          m2 = m2 | 0;
          n2 = n2 | 0;
          var o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0, O2 = 0, P2 = 0, Q2 = 0, R2 = 0, T2 = 0, U2 = 0, V2 = 0, W2 = 0, X2 = 0, Y2 = 0, Z2 = 0, _2 = 0, $2 = 0, aa2 = 0, ba2 = 0, ca2 = 0, da2 = 0;
          o2 = i2;
          i2 = i2 + 16 | 0;
          p2 = o2;
          q2 = c[l2 >> 2] | 0;
          r2 = k2 + (~q2 << 3) | 0;
          k2 = c[n2 >> 2] | 0;
          s2 = m2 + (~k2 << 3) | 0;
          t2 = (nc(a2, 2078) | 0) != 0;
          u2 = c[(t2 ? f2 : g2) >> 2] | 0;
          v2 = nc(e2, 2080) | 0;
          w2 = nc(b2, 2076) | 0;
          c[p2 >> 2] = 0;
          if (!t2 ? (nc(a2, 2067) | 0) == 0 : 0) c[p2 >> 2] = 1;
          else x2 = 4;
          do
            if ((x2 | 0) == 4) {
              if ((w2 | 0) == 0 ? (nc(b2, 2078) | 0) == 0 : 0) {
                c[p2 >> 2] = 2;
                break;
              }
              if (((nc(d2, 2080) | 0) == 0 ? (nc(d2, 2082) | 0) == 0 : 0) ? (nc(d2, 2084) | 0) == 0 : 0) {
                c[p2 >> 2] = 3;
                break;
              }
              if ((nc(e2, 2076) | 0) == 0 ? (nc(e2, 2080) | 0) == 0 : 0) {
                c[p2 >> 2] = 4;
                break;
              }
              a2 = c[f2 >> 2] | 0;
              if ((a2 | 0) < 0) {
                c[p2 >> 2] = 5;
                break;
              }
              y2 = c[g2 >> 2] | 0;
              if ((y2 | 0) < 0) {
                c[p2 >> 2] = 6;
                break;
              }
              if ((c[l2 >> 2] | 0) < (((u2 | 0) > 1 ? u2 : 1) | 0)) {
                c[p2 >> 2] = 9;
                break;
              }
              if ((c[n2 >> 2] | 0) < (((a2 | 0) > 1 ? a2 : 1) | 0)) {
                c[p2 >> 2] = 11;
                break;
              }
              if ((a2 | 0) == 0 | (y2 | 0) == 0) {
                i2 = o2;
                return 0;
              }
              if (+h[j2 >> 3] == 0) {
                z2 = a2 << 3;
                a2 = 0;
                do {
                  je(m2 + ((S(k2, a2) | 0) << 3) | 0, 0, z2 | 0) | 0;
                  a2 = a2 + 1 | 0;
                } while ((a2 | 0) != (y2 | 0));
                i2 = o2;
                return 0;
              }
              y2 = (nc(d2, 2080) | 0) != 0;
              a2 = (w2 | 0) != 0;
              z2 = c[g2 >> 2] | 0;
              if (t2) {
                A2 = (z2 | 0) < 1;
                if (!y2) {
                  if (!a2) {
                    if (A2) {
                      i2 = o2;
                      return 0;
                    }
                    B2 = c[f2 >> 2] | 0;
                    C2 = (B2 | 0) < 1;
                    D2 = (v2 | 0) == 0;
                    E2 = B2 + 1 | 0;
                    F2 = 1;
                    while (1) {
                      a: do
                        if (!C2) {
                          G2 = S(F2, k2) | 0;
                          if (D2) H2 = 1;
                          else {
                            I2 = 1;
                            while (1) {
                              J2 = s2 + (I2 + G2 << 3) | 0;
                              K2 = S(I2, q2) | 0;
                              L2 = +h[J2 >> 3] * +h[r2 + (K2 + I2 << 3) >> 3];
                              M2 = I2;
                              I2 = I2 + 1 | 0;
                              if ((M2 | 0) < (B2 | 0)) {
                                M2 = I2;
                                N2 = L2;
                                while (1) {
                                  O2 = N2 + +h[r2 + (M2 + K2 << 3) >> 3] * +h[s2 + (M2 + G2 << 3) >> 3];
                                  M2 = M2 + 1 | 0;
                                  if ((M2 | 0) == (E2 | 0)) {
                                    P2 = O2;
                                    break;
                                  } else N2 = O2;
                                }
                              } else P2 = L2;
                              h[J2 >> 3] = P2 * +h[j2 >> 3];
                              if ((I2 | 0) == (E2 | 0)) break a;
                            }
                          }
                          do {
                            I2 = s2 + (H2 + G2 << 3) | 0;
                            N2 = +h[I2 >> 3];
                            M2 = H2;
                            H2 = H2 + 1 | 0;
                            if ((M2 | 0) < (B2 | 0)) {
                              K2 = S(M2, q2) | 0;
                              M2 = H2;
                              O2 = N2;
                              while (1) {
                                Q2 = O2 + +h[r2 + (M2 + K2 << 3) >> 3] * +h[s2 + (M2 + G2 << 3) >> 3];
                                M2 = M2 + 1 | 0;
                                if ((M2 | 0) == (E2 | 0)) {
                                  R2 = Q2;
                                  break;
                                } else O2 = Q2;
                              }
                            } else R2 = N2;
                            h[I2 >> 3] = R2 * +h[j2 >> 3];
                          } while ((H2 | 0) != (E2 | 0));
                        }
                      while (0);
                      if ((F2 | 0) == (z2 | 0)) break;
                      else F2 = F2 + 1 | 0;
                    }
                    i2 = o2;
                    return 0;
                  }
                  if (A2) {
                    i2 = o2;
                    return 0;
                  }
                  F2 = c[f2 >> 2] | 0;
                  E2 = (F2 | 0) > 0;
                  B2 = (v2 | 0) == 0;
                  D2 = 1;
                  while (1) {
                    b: do
                      if (E2) {
                        C2 = S(D2, k2) | 0;
                        if (B2) T2 = F2;
                        else {
                          G2 = F2;
                          while (1) {
                            U2 = s2 + (G2 + C2 << 3) | 0;
                            M2 = S(G2, q2) | 0;
                            V2 = +h[U2 >> 3] * +h[r2 + (M2 + G2 << 3) >> 3];
                            K2 = (G2 | 0) > 1;
                            if (K2) {
                              W2 = 1;
                              X2 = V2;
                            } else break;
                            do {
                              X2 = X2 + +h[r2 + (W2 + M2 << 3) >> 3] * +h[s2 + (W2 + C2 << 3) >> 3];
                              W2 = W2 + 1 | 0;
                            } while ((W2 | 0) != (G2 | 0));
                            h[U2 >> 3] = X2 * +h[j2 >> 3];
                            if (K2) G2 = G2 + -1 | 0;
                            else break b;
                          }
                          h[U2 >> 3] = V2 * +h[j2 >> 3];
                          break;
                        }
                        while (1) {
                          Y2 = s2 + (T2 + C2 << 3) | 0;
                          Z2 = +h[Y2 >> 3];
                          G2 = (T2 | 0) > 1;
                          if (!G2) break;
                          M2 = S(T2, q2) | 0;
                          I2 = 1;
                          N2 = Z2;
                          do {
                            N2 = N2 + +h[r2 + (I2 + M2 << 3) >> 3] * +h[s2 + (I2 + C2 << 3) >> 3];
                            I2 = I2 + 1 | 0;
                          } while ((I2 | 0) != (T2 | 0));
                          h[Y2 >> 3] = N2 * +h[j2 >> 3];
                          if (G2) T2 = T2 + -1 | 0;
                          else break b;
                        }
                        h[Y2 >> 3] = Z2 * +h[j2 >> 3];
                      }
                    while (0);
                    if ((D2 | 0) == (z2 | 0)) break;
                    else D2 = D2 + 1 | 0;
                  }
                  i2 = o2;
                  return 0;
                }
                if (!a2) {
                  if (A2) {
                    i2 = o2;
                    return 0;
                  }
                  D2 = c[f2 >> 2] | 0;
                  F2 = (D2 | 0) > 0;
                  B2 = (v2 | 0) == 0;
                  E2 = 1;
                  while (1) {
                    c: do
                      if (F2) {
                        C2 = S(E2, k2) | 0;
                        if (B2) _2 = D2;
                        else {
                          I2 = D2;
                          while (1) {
                            M2 = s2 + (I2 + C2 << 3) | 0;
                            O2 = +h[M2 >> 3];
                            do
                              if (O2 != 0) {
                                L2 = O2 * +h[j2 >> 3];
                                h[M2 >> 3] = L2;
                                K2 = S(I2, q2) | 0;
                                h[M2 >> 3] = L2 * +h[r2 + (K2 + I2 << 3) >> 3];
                                if ((I2 | 0) < (D2 | 0)) $2 = I2;
                                else break;
                                do {
                                  $2 = $2 + 1 | 0;
                                  J2 = s2 + ($2 + C2 << 3) | 0;
                                  h[J2 >> 3] = +h[J2 >> 3] + L2 * +h[r2 + ($2 + K2 << 3) >> 3];
                                } while (($2 | 0) != (D2 | 0));
                              }
                            while (0);
                            if ((I2 | 0) > 1) I2 = I2 + -1 | 0;
                            else break c;
                          }
                        }
                        while (1) {
                          I2 = s2 + (_2 + C2 << 3) | 0;
                          O2 = +h[I2 >> 3];
                          do
                            if (O2 != 0) {
                              N2 = O2 * +h[j2 >> 3];
                              h[I2 >> 3] = N2;
                              if ((_2 | 0) >= (D2 | 0)) break;
                              M2 = S(_2, q2) | 0;
                              G2 = _2;
                              do {
                                G2 = G2 + 1 | 0;
                                K2 = s2 + (G2 + C2 << 3) | 0;
                                h[K2 >> 3] = +h[K2 >> 3] + N2 * +h[r2 + (G2 + M2 << 3) >> 3];
                              } while ((G2 | 0) != (D2 | 0));
                            }
                          while (0);
                          if ((_2 | 0) > 1) _2 = _2 + -1 | 0;
                          else break;
                        }
                      }
                    while (0);
                    if ((E2 | 0) == (z2 | 0)) break;
                    else E2 = E2 + 1 | 0;
                  }
                  i2 = o2;
                  return 0;
                }
                if (A2) {
                  i2 = o2;
                  return 0;
                }
                E2 = c[f2 >> 2] | 0;
                D2 = (E2 | 0) < 1;
                B2 = (v2 | 0) == 0;
                F2 = E2 + 1 | 0;
                E2 = 1;
                while (1) {
                  d: do
                    if (!D2) {
                      C2 = S(E2, k2) | 0;
                      if (B2) aa2 = 1;
                      else {
                        I2 = 1;
                        while (1) {
                          G2 = s2 + (I2 + C2 << 3) | 0;
                          O2 = +h[G2 >> 3];
                          if (O2 != 0) {
                            N2 = O2 * +h[j2 >> 3];
                            M2 = S(I2, q2) | 0;
                            if ((I2 | 0) > 1) {
                              K2 = 1;
                              do {
                                J2 = s2 + (K2 + C2 << 3) | 0;
                                h[J2 >> 3] = +h[J2 >> 3] + N2 * +h[r2 + (K2 + M2 << 3) >> 3];
                                K2 = K2 + 1 | 0;
                              } while ((K2 | 0) != (I2 | 0));
                            }
                            h[G2 >> 3] = N2 * +h[r2 + (M2 + I2 << 3) >> 3];
                          }
                          I2 = I2 + 1 | 0;
                          if ((I2 | 0) == (F2 | 0)) break d;
                        }
                      }
                      do {
                        I2 = s2 + (aa2 + C2 << 3) | 0;
                        O2 = +h[I2 >> 3];
                        if (O2 != 0) {
                          L2 = O2 * +h[j2 >> 3];
                          if ((aa2 | 0) > 1) {
                            K2 = S(aa2, q2) | 0;
                            J2 = 1;
                            do {
                              ba2 = s2 + (J2 + C2 << 3) | 0;
                              h[ba2 >> 3] = +h[ba2 >> 3] + L2 * +h[r2 + (J2 + K2 << 3) >> 3];
                              J2 = J2 + 1 | 0;
                            } while ((J2 | 0) != (aa2 | 0));
                          }
                          h[I2 >> 3] = L2;
                        }
                        aa2 = aa2 + 1 | 0;
                      } while ((aa2 | 0) != (F2 | 0));
                    }
                  while (0);
                  if ((E2 | 0) == (z2 | 0)) break;
                  else E2 = E2 + 1 | 0;
                }
                i2 = o2;
                return 0;
              }
              if (!y2)
                if (a2) {
                  if ((z2 | 0) < 1) {
                    i2 = o2;
                    return 0;
                  }
                  E2 = (v2 | 0) == 0;
                  F2 = 1;
                  while (1) {
                    if ((F2 | 0) > 1) {
                      B2 = S(F2, q2) | 0;
                      D2 = S(F2, k2) | 0;
                      A2 = 1;
                      do {
                        N2 = +h[r2 + (A2 + B2 << 3) >> 3];
                        do
                          if (N2 != 0) {
                            O2 = N2 * +h[j2 >> 3];
                            C2 = c[f2 >> 2] | 0;
                            if ((C2 | 0) < 1) break;
                            J2 = S(A2, k2) | 0;
                            K2 = 1;
                            while (1) {
                              M2 = s2 + (K2 + J2 << 3) | 0;
                              h[M2 >> 3] = +h[M2 >> 3] + O2 * +h[s2 + (K2 + D2 << 3) >> 3];
                              if ((K2 | 0) == (C2 | 0)) break;
                              else K2 = K2 + 1 | 0;
                            }
                          }
                        while (0);
                        A2 = A2 + 1 | 0;
                      } while ((A2 | 0) != (F2 | 0));
                    }
                    N2 = +h[j2 >> 3];
                    if (E2) ca2 = N2;
                    else ca2 = N2 * +h[r2 + ((S(F2, q2) | 0) + F2 << 3) >> 3];
                    do
                      if (ca2 != 1) {
                        A2 = c[f2 >> 2] | 0;
                        if ((A2 | 0) < 1) break;
                        D2 = S(F2, k2) | 0;
                        B2 = 1;
                        while (1) {
                          K2 = s2 + (B2 + D2 << 3) | 0;
                          h[K2 >> 3] = ca2 * +h[K2 >> 3];
                          if ((B2 | 0) == (A2 | 0)) break;
                          else B2 = B2 + 1 | 0;
                        }
                      }
                    while (0);
                    if ((F2 | 0) == (z2 | 0)) break;
                    else F2 = F2 + 1 | 0;
                  }
                  i2 = o2;
                  return 0;
                } else {
                  if ((z2 | 0) <= 0) {
                    i2 = o2;
                    return 0;
                  }
                  F2 = (v2 | 0) == 0;
                  E2 = z2;
                  while (1) {
                    if ((E2 | 0) < (z2 | 0)) {
                      y2 = S(E2, q2) | 0;
                      B2 = S(E2, k2) | 0;
                      A2 = E2;
                      do {
                        A2 = A2 + 1 | 0;
                        N2 = +h[r2 + (A2 + y2 << 3) >> 3];
                        do
                          if (N2 != 0) {
                            O2 = N2 * +h[j2 >> 3];
                            D2 = c[f2 >> 2] | 0;
                            if ((D2 | 0) < 1) break;
                            K2 = S(A2, k2) | 0;
                            C2 = 1;
                            while (1) {
                              J2 = s2 + (C2 + K2 << 3) | 0;
                              h[J2 >> 3] = +h[J2 >> 3] + O2 * +h[s2 + (C2 + B2 << 3) >> 3];
                              if ((C2 | 0) == (D2 | 0)) break;
                              else C2 = C2 + 1 | 0;
                            }
                          }
                        while (0);
                      } while ((A2 | 0) != (z2 | 0));
                    }
                    N2 = +h[j2 >> 3];
                    if (F2) da2 = N2;
                    else da2 = N2 * +h[r2 + ((S(E2, q2) | 0) + E2 << 3) >> 3];
                    do
                      if (da2 != 1) {
                        A2 = c[f2 >> 2] | 0;
                        if ((A2 | 0) < 1) break;
                        B2 = S(E2, k2) | 0;
                        y2 = 1;
                        while (1) {
                          C2 = s2 + (y2 + B2 << 3) | 0;
                          h[C2 >> 3] = da2 * +h[C2 >> 3];
                          if ((y2 | 0) == (A2 | 0)) break;
                          else y2 = y2 + 1 | 0;
                        }
                      }
                    while (0);
                    if ((E2 | 0) > 1) E2 = E2 + -1 | 0;
                    else break;
                  }
                  i2 = o2;
                  return 0;
                }
              if (!a2) {
                if ((z2 | 0) < 1) {
                  i2 = o2;
                  return 0;
                }
                E2 = c[f2 >> 2] | 0;
                F2 = (E2 | 0) < 1;
                y2 = E2 + 1 | 0;
                E2 = z2 + 1 | 0;
                if (!v2) {
                  A2 = 1;
                  do {
                    N2 = +h[j2 >> 3];
                    if (!F2) {
                      B2 = S(A2, k2) | 0;
                      C2 = 1;
                      do {
                        D2 = s2 + (C2 + B2 << 3) | 0;
                        h[D2 >> 3] = N2 * +h[D2 >> 3];
                        C2 = C2 + 1 | 0;
                      } while ((C2 | 0) != (y2 | 0));
                    }
                    C2 = A2;
                    A2 = A2 + 1 | 0;
                    if ((C2 | 0) < (z2 | 0)) {
                      B2 = S(C2, q2) | 0;
                      D2 = S(C2, k2) | 0;
                      C2 = A2;
                      do {
                        N2 = +h[r2 + (C2 + B2 << 3) >> 3];
                        do
                          if (N2 != 0) {
                            O2 = N2 * +h[j2 >> 3];
                            if (F2) break;
                            K2 = S(C2, k2) | 0;
                            J2 = 1;
                            do {
                              I2 = s2 + (J2 + D2 << 3) | 0;
                              h[I2 >> 3] = +h[I2 >> 3] + O2 * +h[s2 + (J2 + K2 << 3) >> 3];
                              J2 = J2 + 1 | 0;
                            } while ((J2 | 0) != (y2 | 0));
                          }
                        while (0);
                        C2 = C2 + 1 | 0;
                      } while ((C2 | 0) != (E2 | 0));
                    }
                  } while ((A2 | 0) != (E2 | 0));
                  i2 = o2;
                  return 0;
                } else {
                  A2 = 1;
                  do {
                    a2 = S(A2, q2) | 0;
                    N2 = +h[j2 >> 3] * +h[r2 + (a2 + A2 << 3) >> 3];
                    if (!F2) {
                      C2 = S(A2, k2) | 0;
                      D2 = 1;
                      do {
                        B2 = s2 + (D2 + C2 << 3) | 0;
                        h[B2 >> 3] = N2 * +h[B2 >> 3];
                        D2 = D2 + 1 | 0;
                      } while ((D2 | 0) != (y2 | 0));
                    }
                    D2 = A2;
                    A2 = A2 + 1 | 0;
                    if ((D2 | 0) < (z2 | 0)) {
                      C2 = S(D2, k2) | 0;
                      D2 = A2;
                      do {
                        N2 = +h[r2 + (D2 + a2 << 3) >> 3];
                        do
                          if (N2 != 0) {
                            O2 = N2 * +h[j2 >> 3];
                            if (F2) break;
                            B2 = S(D2, k2) | 0;
                            J2 = 1;
                            do {
                              K2 = s2 + (J2 + C2 << 3) | 0;
                              h[K2 >> 3] = +h[K2 >> 3] + O2 * +h[s2 + (J2 + B2 << 3) >> 3];
                              J2 = J2 + 1 | 0;
                            } while ((J2 | 0) != (y2 | 0));
                          }
                        while (0);
                        D2 = D2 + 1 | 0;
                      } while ((D2 | 0) != (E2 | 0));
                    }
                  } while ((A2 | 0) != (E2 | 0));
                  i2 = o2;
                  return 0;
                }
              }
              if ((z2 | 0) <= 0) {
                i2 = o2;
                return 0;
              }
              E2 = c[f2 >> 2] | 0;
              A2 = (E2 | 0) < 1;
              y2 = E2 + 1 | 0;
              if (!v2) {
                E2 = z2;
                while (1) {
                  N2 = +h[j2 >> 3];
                  if (!A2) {
                    F2 = S(E2, k2) | 0;
                    D2 = 1;
                    do {
                      C2 = s2 + (D2 + F2 << 3) | 0;
                      h[C2 >> 3] = N2 * +h[C2 >> 3];
                      D2 = D2 + 1 | 0;
                    } while ((D2 | 0) != (y2 | 0));
                  }
                  D2 = (E2 | 0) > 1;
                  if (!D2) {
                    x2 = 170;
                    break;
                  }
                  F2 = S(E2, q2) | 0;
                  C2 = S(E2, k2) | 0;
                  a2 = 1;
                  do {
                    N2 = +h[r2 + (a2 + F2 << 3) >> 3];
                    do
                      if (N2 != 0) {
                        O2 = N2 * +h[j2 >> 3];
                        if (A2) break;
                        J2 = S(a2, k2) | 0;
                        B2 = 1;
                        do {
                          K2 = s2 + (B2 + C2 << 3) | 0;
                          h[K2 >> 3] = +h[K2 >> 3] + O2 * +h[s2 + (B2 + J2 << 3) >> 3];
                          B2 = B2 + 1 | 0;
                        } while ((B2 | 0) != (y2 | 0));
                      }
                    while (0);
                    a2 = a2 + 1 | 0;
                  } while ((a2 | 0) != (E2 | 0));
                  if (D2) E2 = E2 + -1 | 0;
                  else {
                    x2 = 170;
                    break;
                  }
                }
                if ((x2 | 0) == 170) {
                  i2 = o2;
                  return 0;
                }
              } else {
                E2 = z2;
                while (1) {
                  a2 = S(E2, q2) | 0;
                  N2 = +h[j2 >> 3] * +h[r2 + (a2 + E2 << 3) >> 3];
                  if (!A2) {
                    C2 = S(E2, k2) | 0;
                    F2 = 1;
                    do {
                      B2 = s2 + (F2 + C2 << 3) | 0;
                      h[B2 >> 3] = N2 * +h[B2 >> 3];
                      F2 = F2 + 1 | 0;
                    } while ((F2 | 0) != (y2 | 0));
                  }
                  F2 = (E2 | 0) > 1;
                  if (!F2) {
                    x2 = 170;
                    break;
                  }
                  C2 = S(E2, k2) | 0;
                  D2 = 1;
                  do {
                    N2 = +h[r2 + (D2 + a2 << 3) >> 3];
                    do
                      if (N2 != 0) {
                        O2 = N2 * +h[j2 >> 3];
                        if (A2) break;
                        B2 = S(D2, k2) | 0;
                        J2 = 1;
                        do {
                          K2 = s2 + (J2 + C2 << 3) | 0;
                          h[K2 >> 3] = +h[K2 >> 3] + O2 * +h[s2 + (J2 + B2 << 3) >> 3];
                          J2 = J2 + 1 | 0;
                        } while ((J2 | 0) != (y2 | 0));
                      }
                    while (0);
                    D2 = D2 + 1 | 0;
                  } while ((D2 | 0) != (E2 | 0));
                  if (F2) E2 = E2 + -1 | 0;
                  else {
                    x2 = 170;
                    break;
                  }
                }
                if ((x2 | 0) == 170) {
                  i2 = o2;
                  return 0;
                }
              }
            }
          while (0);
          Oc(2069, p2) | 0;
          i2 = o2;
          return 0;
        }
        function Tb(a2, b2, d2, e2, f2, g2, j2, k2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          g2 = g2 | 0;
          j2 = j2 | 0;
          k2 = k2 | 0;
          var l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0, O2 = 0, P2 = 0, Q2 = 0, R2 = 0, T2 = 0, U2 = 0, V2 = 0, W2 = 0, X2 = 0, Y2 = 0, Z2 = 0, _2 = 0, $2 = 0, aa2 = 0, ba2 = 0, ca2 = 0, da2 = 0, ea2 = 0, fa2 = 0, ga2 = 0;
          l2 = i2;
          i2 = i2 + 16 | 0;
          m2 = l2;
          n2 = c[g2 >> 2] | 0;
          o2 = f2 + (~n2 << 3) | 0;
          f2 = j2 + -8 | 0;
          c[m2 >> 2] = 0;
          if ((nc(a2, 2076) | 0) == 0 ? (nc(a2, 2078) | 0) == 0 : 0) c[m2 >> 2] = 1;
          else p2 = 4;
          do
            if ((p2 | 0) == 4) {
              if (((nc(b2, 2080) | 0) == 0 ? (nc(b2, 2082) | 0) == 0 : 0) ? (nc(b2, 2084) | 0) == 0 : 0) {
                c[m2 >> 2] = 2;
                break;
              }
              if ((nc(d2, 2076) | 0) == 0 ? (nc(d2, 2080) | 0) == 0 : 0) {
                c[m2 >> 2] = 3;
                break;
              }
              j2 = c[e2 >> 2] | 0;
              if ((j2 | 0) < 0) {
                c[m2 >> 2] = 4;
                break;
              }
              if ((c[g2 >> 2] | 0) < (((j2 | 0) > 1 ? j2 : 1) | 0)) {
                c[m2 >> 2] = 6;
                break;
              }
              if (!(c[k2 >> 2] | 0)) {
                c[m2 >> 2] = 8;
                break;
              }
              if (!j2) {
                i2 = l2;
                return 0;
              }
              j2 = nc(d2, 2080) | 0;
              q2 = c[k2 >> 2] | 0;
              if ((q2 | 0) < 1) r2 = 1 - (S((c[e2 >> 2] | 0) + -1 | 0, q2) | 0) | 0;
              else r2 = 1;
              q2 = (nc(b2, 2080) | 0) == 0;
              s2 = (nc(a2, 2076) | 0) != 0;
              t2 = c[k2 >> 2] | 0;
              u2 = (t2 | 0) == 1;
              v2 = c[e2 >> 2] | 0;
              if (q2) {
                if (!s2) {
                  q2 = (v2 | 0) < 1;
                  if (u2) {
                    if (q2) {
                      i2 = l2;
                      return 0;
                    }
                    w2 = v2 + 1 | 0;
                    if (!j2) x2 = 1;
                    else {
                      y2 = 1;
                      do {
                        z2 = f2 + (y2 << 3) | 0;
                        A2 = S(y2, n2) | 0;
                        B2 = +h[z2 >> 3] * +h[o2 + (A2 + y2 << 3) >> 3];
                        C2 = y2;
                        y2 = y2 + 1 | 0;
                        if ((C2 | 0) < (v2 | 0)) {
                          D2 = B2;
                          C2 = y2;
                          while (1) {
                            E2 = D2 + +h[o2 + (C2 + A2 << 3) >> 3] * +h[f2 + (C2 << 3) >> 3];
                            C2 = C2 + 1 | 0;
                            if ((C2 | 0) == (w2 | 0)) {
                              F2 = E2;
                              break;
                            } else D2 = E2;
                          }
                        } else F2 = B2;
                        h[z2 >> 3] = F2;
                      } while ((y2 | 0) != (w2 | 0));
                      i2 = l2;
                      return 0;
                    }
                    do {
                      y2 = f2 + (x2 << 3) | 0;
                      D2 = +h[y2 >> 3];
                      C2 = x2;
                      x2 = x2 + 1 | 0;
                      if ((C2 | 0) < (v2 | 0)) {
                        A2 = S(C2, n2) | 0;
                        E2 = D2;
                        C2 = x2;
                        while (1) {
                          G2 = E2 + +h[o2 + (C2 + A2 << 3) >> 3] * +h[f2 + (C2 << 3) >> 3];
                          C2 = C2 + 1 | 0;
                          if ((C2 | 0) == (w2 | 0)) {
                            H2 = G2;
                            break;
                          } else E2 = G2;
                        }
                      } else H2 = D2;
                      h[y2 >> 3] = H2;
                    } while ((x2 | 0) != (w2 | 0));
                    i2 = l2;
                    return 0;
                  } else {
                    if (q2) {
                      i2 = l2;
                      return 0;
                    }
                    w2 = v2 + 1 | 0;
                    if (!j2) {
                      I2 = r2;
                      J2 = 1;
                    } else {
                      C2 = r2;
                      A2 = 1;
                      while (1) {
                        z2 = f2 + (C2 << 3) | 0;
                        K2 = S(A2, n2) | 0;
                        E2 = +h[z2 >> 3] * +h[o2 + (K2 + A2 << 3) >> 3];
                        L2 = A2;
                        A2 = A2 + 1 | 0;
                        if ((L2 | 0) < (v2 | 0)) {
                          L2 = C2;
                          M2 = A2;
                          B2 = E2;
                          while (1) {
                            L2 = t2 + L2 | 0;
                            G2 = B2 + +h[o2 + (M2 + K2 << 3) >> 3] * +h[f2 + (L2 << 3) >> 3];
                            M2 = M2 + 1 | 0;
                            if ((M2 | 0) == (w2 | 0)) {
                              N2 = G2;
                              break;
                            } else B2 = G2;
                          }
                        } else N2 = E2;
                        h[z2 >> 3] = N2;
                        if ((A2 | 0) == (w2 | 0)) break;
                        else C2 = t2 + C2 | 0;
                      }
                      i2 = l2;
                      return 0;
                    }
                    while (1) {
                      C2 = f2 + (I2 << 3) | 0;
                      B2 = +h[C2 >> 3];
                      A2 = J2;
                      J2 = J2 + 1 | 0;
                      if ((A2 | 0) < (v2 | 0)) {
                        q2 = S(A2, n2) | 0;
                        A2 = I2;
                        M2 = J2;
                        D2 = B2;
                        while (1) {
                          A2 = t2 + A2 | 0;
                          G2 = D2 + +h[o2 + (M2 + q2 << 3) >> 3] * +h[f2 + (A2 << 3) >> 3];
                          M2 = M2 + 1 | 0;
                          if ((M2 | 0) == (w2 | 0)) {
                            O2 = G2;
                            break;
                          } else D2 = G2;
                        }
                      } else O2 = B2;
                      h[C2 >> 3] = O2;
                      if ((J2 | 0) == (w2 | 0)) break;
                      else I2 = t2 + I2 | 0;
                    }
                    i2 = l2;
                    return 0;
                  }
                }
                if (u2) {
                  if ((v2 | 0) <= 0) {
                    i2 = l2;
                    return 0;
                  }
                  if (!j2) {
                    w2 = v2;
                    while (1) {
                      M2 = f2 + (w2 << 3) | 0;
                      A2 = (w2 | 0) > 1;
                      if (!A2) {
                        p2 = 114;
                        break;
                      }
                      q2 = S(w2, n2) | 0;
                      D2 = +h[M2 >> 3];
                      z2 = w2;
                      do {
                        z2 = z2 + -1 | 0;
                        D2 = D2 + +h[o2 + (z2 + q2 << 3) >> 3] * +h[f2 + (z2 << 3) >> 3];
                      } while ((z2 | 0) > 1);
                      h[M2 >> 3] = D2;
                      if (A2) w2 = w2 + -1 | 0;
                      else {
                        p2 = 114;
                        break;
                      }
                    }
                    if ((p2 | 0) == 114) {
                      i2 = l2;
                      return 0;
                    }
                  } else {
                    w2 = v2;
                    while (1) {
                      P2 = f2 + (w2 << 3) | 0;
                      z2 = S(w2, n2) | 0;
                      Q2 = +h[P2 >> 3] * +h[o2 + (z2 + w2 << 3) >> 3];
                      q2 = (w2 | 0) > 1;
                      if (q2) {
                        R2 = Q2;
                        T2 = w2;
                      } else break;
                      do {
                        T2 = T2 + -1 | 0;
                        R2 = R2 + +h[o2 + (T2 + z2 << 3) >> 3] * +h[f2 + (T2 << 3) >> 3];
                      } while ((T2 | 0) > 1);
                      h[P2 >> 3] = R2;
                      if (q2) w2 = w2 + -1 | 0;
                      else {
                        p2 = 114;
                        break;
                      }
                    }
                    if ((p2 | 0) == 114) {
                      i2 = l2;
                      return 0;
                    }
                    h[P2 >> 3] = Q2;
                    i2 = l2;
                    return 0;
                  }
                } else {
                  w2 = (S(v2 + -1 | 0, t2) | 0) + r2 | 0;
                  if ((v2 | 0) <= 0) {
                    i2 = l2;
                    return 0;
                  }
                  if (!j2) {
                    z2 = w2;
                    A2 = v2;
                    while (1) {
                      M2 = f2 + (z2 << 3) | 0;
                      C2 = (A2 | 0) > 1;
                      if (!C2) {
                        p2 = 114;
                        break;
                      }
                      L2 = S(A2, n2) | 0;
                      K2 = z2;
                      D2 = +h[M2 >> 3];
                      y2 = A2;
                      do {
                        y2 = y2 + -1 | 0;
                        K2 = K2 - t2 | 0;
                        D2 = D2 + +h[o2 + (y2 + L2 << 3) >> 3] * +h[f2 + (K2 << 3) >> 3];
                      } while ((y2 | 0) > 1);
                      h[M2 >> 3] = D2;
                      if (C2) {
                        z2 = z2 - t2 | 0;
                        A2 = A2 + -1 | 0;
                      } else {
                        p2 = 114;
                        break;
                      }
                    }
                    if ((p2 | 0) == 114) {
                      i2 = l2;
                      return 0;
                    }
                  } else {
                    A2 = w2;
                    z2 = v2;
                    while (1) {
                      U2 = f2 + (A2 << 3) | 0;
                      y2 = S(z2, n2) | 0;
                      V2 = +h[U2 >> 3] * +h[o2 + (y2 + z2 << 3) >> 3];
                      K2 = (z2 | 0) > 1;
                      if (K2) {
                        W2 = A2;
                        X2 = V2;
                        Y2 = z2;
                      } else break;
                      do {
                        Y2 = Y2 + -1 | 0;
                        W2 = W2 - t2 | 0;
                        X2 = X2 + +h[o2 + (Y2 + y2 << 3) >> 3] * +h[f2 + (W2 << 3) >> 3];
                      } while ((Y2 | 0) > 1);
                      h[U2 >> 3] = X2;
                      if (K2) {
                        A2 = A2 - t2 | 0;
                        z2 = z2 + -1 | 0;
                      } else {
                        p2 = 114;
                        break;
                      }
                    }
                    if ((p2 | 0) == 114) {
                      i2 = l2;
                      return 0;
                    }
                    h[U2 >> 3] = V2;
                    i2 = l2;
                    return 0;
                  }
                }
              }
              if (s2) {
                z2 = (v2 | 0) < 1;
                if (u2) {
                  if (z2) {
                    i2 = l2;
                    return 0;
                  }
                  if (!j2) {
                    A2 = 1;
                    while (1) {
                      D2 = +h[f2 + (A2 << 3) >> 3];
                      if (D2 != 0 & (A2 | 0) > 1) {
                        w2 = S(A2, n2) | 0;
                        y2 = 1;
                        do {
                          C2 = f2 + (y2 << 3) | 0;
                          h[C2 >> 3] = +h[C2 >> 3] + D2 * +h[o2 + (y2 + w2 << 3) >> 3];
                          y2 = y2 + 1 | 0;
                        } while ((y2 | 0) != (A2 | 0));
                      }
                      if ((A2 | 0) == (v2 | 0)) break;
                      else A2 = A2 + 1 | 0;
                    }
                    i2 = l2;
                    return 0;
                  } else Z2 = 1;
                  while (1) {
                    A2 = f2 + (Z2 << 3) | 0;
                    D2 = +h[A2 >> 3];
                    if (D2 != 0) {
                      s2 = S(Z2, n2) | 0;
                      if ((Z2 | 0) > 1) {
                        y2 = 1;
                        do {
                          w2 = f2 + (y2 << 3) | 0;
                          h[w2 >> 3] = +h[w2 >> 3] + D2 * +h[o2 + (y2 + s2 << 3) >> 3];
                          y2 = y2 + 1 | 0;
                        } while ((y2 | 0) != (Z2 | 0));
                        _2 = +h[A2 >> 3];
                      } else _2 = D2;
                      h[A2 >> 3] = +h[o2 + (s2 + Z2 << 3) >> 3] * _2;
                    }
                    if ((Z2 | 0) == (v2 | 0)) break;
                    else Z2 = Z2 + 1 | 0;
                  }
                  i2 = l2;
                  return 0;
                } else {
                  if (z2) {
                    i2 = l2;
                    return 0;
                  }
                  if (!j2) {
                    y2 = r2;
                    w2 = 1;
                    while (1) {
                      B2 = +h[f2 + (y2 << 3) >> 3];
                      if (B2 != 0 & (w2 | 0) > 1) {
                        K2 = S(w2, n2) | 0;
                        C2 = r2;
                        M2 = 1;
                        while (1) {
                          L2 = f2 + (C2 << 3) | 0;
                          h[L2 >> 3] = +h[L2 >> 3] + B2 * +h[o2 + (M2 + K2 << 3) >> 3];
                          M2 = M2 + 1 | 0;
                          if ((M2 | 0) == (w2 | 0)) break;
                          else C2 = t2 + C2 | 0;
                        }
                      }
                      if ((w2 | 0) == (v2 | 0)) break;
                      else {
                        y2 = t2 + y2 | 0;
                        w2 = w2 + 1 | 0;
                      }
                    }
                    i2 = l2;
                    return 0;
                  } else {
                    $2 = r2;
                    aa2 = 1;
                  }
                  while (1) {
                    w2 = f2 + ($2 << 3) | 0;
                    B2 = +h[w2 >> 3];
                    if (B2 != 0) {
                      y2 = S(aa2, n2) | 0;
                      if ((aa2 | 0) > 1) {
                        z2 = r2;
                        C2 = 1;
                        while (1) {
                          M2 = f2 + (z2 << 3) | 0;
                          h[M2 >> 3] = +h[M2 >> 3] + B2 * +h[o2 + (C2 + y2 << 3) >> 3];
                          C2 = C2 + 1 | 0;
                          if ((C2 | 0) == (aa2 | 0)) break;
                          else z2 = t2 + z2 | 0;
                        }
                        ba2 = +h[w2 >> 3];
                      } else ba2 = B2;
                      h[w2 >> 3] = +h[o2 + (y2 + aa2 << 3) >> 3] * ba2;
                    }
                    if ((aa2 | 0) == (v2 | 0)) break;
                    else {
                      $2 = t2 + $2 | 0;
                      aa2 = aa2 + 1 | 0;
                    }
                  }
                  i2 = l2;
                  return 0;
                }
              } else if (u2) {
                if ((v2 | 0) <= 0) {
                  i2 = l2;
                  return 0;
                }
                if (!j2) {
                  z2 = v2;
                  while (1) {
                    D2 = +h[f2 + (z2 << 3) >> 3];
                    if (D2 != 0 & (v2 | 0) > (z2 | 0)) {
                      C2 = S(z2, n2) | 0;
                      M2 = v2;
                      do {
                        K2 = f2 + (M2 << 3) | 0;
                        h[K2 >> 3] = +h[K2 >> 3] + D2 * +h[o2 + (M2 + C2 << 3) >> 3];
                        M2 = M2 + -1 | 0;
                      } while ((M2 | 0) > (z2 | 0));
                    }
                    if ((z2 | 0) > 1) z2 = z2 + -1 | 0;
                    else break;
                  }
                  i2 = l2;
                  return 0;
                } else ca2 = v2;
                while (1) {
                  z2 = f2 + (ca2 << 3) | 0;
                  D2 = +h[z2 >> 3];
                  if (D2 != 0) {
                    u2 = S(ca2, n2) | 0;
                    if ((v2 | 0) > (ca2 | 0)) {
                      M2 = v2;
                      do {
                        C2 = f2 + (M2 << 3) | 0;
                        h[C2 >> 3] = +h[C2 >> 3] + D2 * +h[o2 + (M2 + u2 << 3) >> 3];
                        M2 = M2 + -1 | 0;
                      } while ((M2 | 0) > (ca2 | 0));
                      da2 = +h[z2 >> 3];
                    } else da2 = D2;
                    h[z2 >> 3] = +h[o2 + (u2 + ca2 << 3) >> 3] * da2;
                  }
                  if ((ca2 | 0) > 1) ca2 = ca2 + -1 | 0;
                  else break;
                }
                i2 = l2;
                return 0;
              } else {
                M2 = (S(v2 + -1 | 0, t2) | 0) + r2 | 0;
                if ((v2 | 0) <= 0) {
                  i2 = l2;
                  return 0;
                }
                if (!j2) {
                  C2 = M2;
                  y2 = v2;
                  while (1) {
                    B2 = +h[f2 + (C2 << 3) >> 3];
                    if (B2 != 0 & (v2 | 0) > (y2 | 0)) {
                      w2 = S(y2, n2) | 0;
                      K2 = M2;
                      s2 = v2;
                      while (1) {
                        A2 = f2 + (K2 << 3) | 0;
                        h[A2 >> 3] = +h[A2 >> 3] + B2 * +h[o2 + (s2 + w2 << 3) >> 3];
                        s2 = s2 + -1 | 0;
                        if ((s2 | 0) <= (y2 | 0)) break;
                        else K2 = K2 - t2 | 0;
                      }
                    }
                    if ((y2 | 0) > 1) {
                      C2 = C2 - t2 | 0;
                      y2 = y2 + -1 | 0;
                    } else break;
                  }
                  i2 = l2;
                  return 0;
                } else {
                  ea2 = M2;
                  fa2 = v2;
                }
                while (1) {
                  y2 = f2 + (ea2 << 3) | 0;
                  B2 = +h[y2 >> 3];
                  if (B2 != 0) {
                    C2 = S(fa2, n2) | 0;
                    if ((v2 | 0) > (fa2 | 0)) {
                      j2 = M2;
                      K2 = v2;
                      while (1) {
                        s2 = f2 + (j2 << 3) | 0;
                        h[s2 >> 3] = +h[s2 >> 3] + B2 * +h[o2 + (K2 + C2 << 3) >> 3];
                        K2 = K2 + -1 | 0;
                        if ((K2 | 0) <= (fa2 | 0)) break;
                        else j2 = j2 - t2 | 0;
                      }
                      ga2 = +h[y2 >> 3];
                    } else ga2 = B2;
                    h[y2 >> 3] = +h[o2 + (C2 + fa2 << 3) >> 3] * ga2;
                  }
                  if ((fa2 | 0) > 1) {
                    ea2 = ea2 - t2 | 0;
                    fa2 = fa2 + -1 | 0;
                  } else break;
                }
                i2 = l2;
                return 0;
              }
            }
          while (0);
          Oc(2086, m2) | 0;
          i2 = l2;
          return 0;
        }
        function Ub(a2) {
          a2 = a2 | 0;
          var b2 = 0, d2 = 0, e2 = 0, f2 = 0, g2 = 0;
          b2 = c[a2 + 4 >> 2] | 0;
          if (c[6260 + (b2 * 48 | 0) + 16 >> 2] | 0) {
            d2 = 0;
            return d2 | 0;
          }
          e2 = 6260 + (b2 * 48 | 0) | 0;
          f2 = c[e2 >> 2] | 0;
          g2 = ce(f2) | 0;
          Kd(f2, 0, 2) | 0;
          if ((g2 | 0) >= (ce(f2) | 0)) {
            d2 = 0;
            return d2 | 0;
          }
          if (!(c[6260 + (b2 * 48 | 0) + 20 >> 2] | 0)) {
            d2 = 0;
            return d2 | 0;
          }
          if (c[6260 + (b2 * 48 | 0) + 28 >> 2] & 2 | 0) Cd(c[e2 >> 2] | 0) | 0;
          b2 = ad(_d(c[e2 >> 2] | 0) | 0, g2) | 0;
          Kd(c[e2 >> 2] | 0, 0, 2) | 0;
          if (!b2) {
            d2 = 0;
            return d2 | 0;
          }
          if (!(c[a2 >> 2] | 0)) {
            Wb(111, 2093);
            d2 = 111;
            return d2 | 0;
          } else {
            c[(Tc() | 0) >> 2] = 111;
            d2 = 111;
            return d2 | 0;
          }
          return 0;
        }
        function Vb(a2) {
          a2 = a2 | 0;
          var b2 = 0, d2 = 0, e2 = 0, f2 = 0, g2 = 0;
          b2 = i2;
          i2 = i2 + 80 | 0;
          d2 = b2;
          a: do
            if ((Ad(_d(a2) | 0, d2) | 0) >= 0) {
              e2 = c[d2 + 12 >> 2] & 61440;
              b: do
                if (e2 << 16 >> 16 >= 16384)
                  if (e2 << 16 >> 16 < 24576) switch (e2 << 16 >> 16) {
                    case 16384: {
                      f2 = 3;
                      break b;
                      break;
                    }
                    default: {
                      f2 = 5;
                      break b;
                    }
                  }
                  else switch (e2 << 16 >> 16) {
                    case 24576: {
                      g2 = 1;
                      break a;
                      break;
                    }
                    default: {
                      f2 = 5;
                      break b;
                    }
                  }
                else {
                  if (e2 << 16 >> 16 < 8192) switch (e2 << 16 >> 16) {
                    case -32768: {
                      f2 = 3;
                      break b;
                      break;
                    }
                    default: {
                      f2 = 5;
                      break b;
                    }
                  }
                  switch (e2 << 16 >> 16) {
                    case 8192:
                      break;
                    default: {
                      f2 = 5;
                      break b;
                    }
                  }
                  g2 = (_c(_d(a2) | 0) | 0) == 0;
                  break a;
                }
              while (0);
              if ((f2 | 0) == 3) {
                g2 = (c[d2 + 16 >> 2] | 0) != 0;
                break;
              } else if ((f2 | 0) == 5) {
                g2 = 0;
                break;
              }
            } else g2 = 0;
          while (0);
          i2 = b2;
          return g2 & 1 | 0;
        }
        function Wb(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0;
          d2 = i2;
          i2 = i2 + 64 | 0;
          e2 = d2 + 48 | 0;
          f2 = d2 + 40 | 0;
          g2 = d2 + 32 | 0;
          h2 = d2 + 24 | 0;
          j2 = d2 + 16 | 0;
          k2 = d2 + 8 | 0;
          l2 = d2;
          do
            if (a2 >>> 0 >= 100) {
              if ((a2 + 1 | 0) >>> 0 > 132) {
                d2 = c[210] | 0;
                c[l2 >> 2] = b2;
                c[l2 + 4 >> 2] = a2;
                Ld(d2, 2766, l2) | 0;
                m2 = d2;
                break;
              }
              d2 = c[210] | 0;
              if ((a2 | 0) == -1) {
                c[k2 >> 2] = b2;
                Ld(d2, 2795, k2) | 0;
                m2 = d2;
                break;
              } else {
                n2 = c[552 + (a2 + -100 << 2) >> 2] | 0;
                c[j2 >> 2] = b2;
                c[j2 + 4 >> 2] = n2;
                Ld(d2, 2812, j2) | 0;
                m2 = d2;
                break;
              }
            } else {
              Td(b2);
              m2 = c[210] | 0;
            }
          while (0);
          b2 = c[1564] | 0;
          if (!b2) Od(2866, 29, 1, m2) | 0;
          else {
            c[h2 >> 2] = (b2 - 6260 | 0) / 48 | 0;
            Ld(m2, 2820, h2) | 0;
            h2 = c[(c[1564] | 0) + 4 >> 2] | 0;
            c[g2 >> 2] = h2;
            Ld(m2, h2 | 0 ? 2845 : 2855, g2) | 0;
          }
          g2 = c[2765] | 0;
          if (g2 | 0) {
            c[f2 >> 2] = g2;
            Ld(m2, 2896, f2) | 0;
          }
          f2 = c[2767] | 0 ? 2929 : 2940;
          g2 = c[2768] | 0 ? 2947 : 2957;
          h2 = c[2769] | 0 ? 2969 : 2978;
          c[e2 >> 2] = c[2766] | 0 ? 2913 : 2921;
          c[e2 + 4 >> 2] = f2;
          c[e2 + 8 >> 2] = g2;
          c[e2 + 12 >> 2] = h2;
          Ld(m2, 2987, e2) | 0;
          zc(3006, 1);
        }
        function Xb() {
          var a2 = 0, b2 = 0, d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0, j2 = 0;
          a2 = i2;
          i2 = i2 + 80 | 0;
          b2 = a2;
          c[2770] = 1;
          d2 = c[210] | 0;
          c[1565] = d2;
          e2 = d2;
          a: do
            if ((Ad(_d(e2) | 0, b2) | 0) >= 0) {
              d2 = c[b2 + 12 >> 2] & 61440;
              b: do
                if (d2 << 16 >> 16 >= 16384)
                  if (d2 << 16 >> 16 < 24576) switch (d2 << 16 >> 16) {
                    case 16384: {
                      f2 = 3;
                      break b;
                      break;
                    }
                    default: {
                      f2 = 5;
                      break b;
                    }
                  }
                  else switch (d2 << 16 >> 16) {
                    case 24576: {
                      g2 = 1;
                      break a;
                      break;
                    }
                    default: {
                      f2 = 5;
                      break b;
                    }
                  }
                else {
                  if (d2 << 16 >> 16 < 8192) switch (d2 << 16 >> 16) {
                    case -32768: {
                      f2 = 3;
                      break b;
                      break;
                    }
                    default: {
                      f2 = 5;
                      break b;
                    }
                  }
                  switch (d2 << 16 >> 16) {
                    case 8192:
                      break;
                    default: {
                      f2 = 5;
                      break b;
                    }
                  }
                  g2 = (_c(_d(e2) | 0) | 0) == 0;
                  break a;
                }
              while (0);
              if ((f2 | 0) == 3) {
                g2 = (c[b2 + 16 >> 2] | 0) != 0;
                break;
              } else if ((f2 | 0) == 5) {
                g2 = 0;
                break;
              }
            } else g2 = 0;
          while (0);
          c[1570] = g2 & 1;
          c[1571] = 1;
          c[1575] = 1;
          g2 = c[181] | 0;
          c[1625] = g2;
          e2 = g2;
          c: do
            if ((Ad(_d(e2) | 0, b2) | 0) >= 0) {
              g2 = c[b2 + 12 >> 2] & 61440;
              d: do
                if (g2 << 16 >> 16 >= 16384)
                  if (g2 << 16 >> 16 < 24576) switch (g2 << 16 >> 16) {
                    case 16384: {
                      f2 = 8;
                      break d;
                      break;
                    }
                    default: {
                      f2 = 10;
                      break d;
                    }
                  }
                  else switch (g2 << 16 >> 16) {
                    case 24576: {
                      h2 = 1;
                      break c;
                      break;
                    }
                    default: {
                      f2 = 10;
                      break d;
                    }
                  }
                else {
                  if (g2 << 16 >> 16 < 8192) switch (g2 << 16 >> 16) {
                    case -32768: {
                      f2 = 8;
                      break d;
                      break;
                    }
                    default: {
                      f2 = 10;
                      break d;
                    }
                  }
                  switch (g2 << 16 >> 16) {
                    case 8192:
                      break;
                    default: {
                      f2 = 10;
                      break d;
                    }
                  }
                  h2 = (_c(_d(e2) | 0) | 0) == 0;
                  break c;
                }
              while (0);
              if ((f2 | 0) == 8) {
                h2 = (c[b2 + 16 >> 2] | 0) != 0;
                break;
              } else if ((f2 | 0) == 10) {
                h2 = 0;
                break;
              }
            } else h2 = 0;
          while (0);
          c[1630] = h2 & 1;
          c[1631] = 1;
          c[1635] = 0;
          h2 = c[239] | 0;
          c[1637] = h2;
          e2 = h2;
          e: do
            if ((Ad(_d(e2) | 0, b2) | 0) >= 0) {
              h2 = c[b2 + 12 >> 2] & 61440;
              f: do
                if (h2 << 16 >> 16 >= 16384)
                  if (h2 << 16 >> 16 < 24576) switch (h2 << 16 >> 16) {
                    case 16384: {
                      f2 = 13;
                      break f;
                      break;
                    }
                    default: {
                      f2 = 15;
                      break f;
                    }
                  }
                  else switch (h2 << 16 >> 16) {
                    case 24576: {
                      j2 = 1;
                      break e;
                      break;
                    }
                    default: {
                      f2 = 15;
                      break f;
                    }
                  }
                else {
                  if (h2 << 16 >> 16 < 8192) switch (h2 << 16 >> 16) {
                    case -32768: {
                      f2 = 13;
                      break f;
                      break;
                    }
                    default: {
                      f2 = 15;
                      break f;
                    }
                  }
                  switch (h2 << 16 >> 16) {
                    case 8192:
                      break;
                    default: {
                      f2 = 15;
                      break f;
                    }
                  }
                  j2 = (_c(_d(e2) | 0) | 0) == 0;
                  break e;
                }
              while (0);
              if ((f2 | 0) == 13) {
                j2 = (c[b2 + 16 >> 2] | 0) != 0;
                break;
              } else if ((f2 | 0) == 15) {
                j2 = 0;
                break;
              }
            } else j2 = 0;
          while (0);
          c[1642] = j2 & 1;
          c[1643] = 1;
          c[1647] = 1;
          i2 = a2;
          return;
        }
        function Yb(a2) {
          a2 = a2 | 0;
          var b2 = 0, d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0;
          b2 = a2 + 28 | 0;
          d2 = c[b2 >> 2] | 0;
          a: do
            if (d2 & 2) {
              if (d2 & 1 | 0) Kd(c[a2 >> 2] | 0, 0, 1) | 0;
            } else {
              e2 = a2 + 4 | 0;
              f2 = c[e2 >> 2] | 0;
              do
                if (f2 | 0) {
                  if (!(c[a2 + 16 >> 2] | 0)) g2 = c[a2 + 24 >> 2] | 0;
                  else g2 = 0;
                  if ((c[a2 + 40 >> 2] | 0) == 3) {
                    h2 = ae(f2, c[700 + (g2 << 2) >> 2] | 0, c[a2 >> 2] | 0) | 0;
                    c[a2 >> 2] = h2;
                    c[2771] = h2;
                    if (!h2) break;
                    c[b2 >> 2] = 2;
                    break a;
                  }
                  h2 = ce(c[a2 >> 2] | 0) | 0;
                  i3 = ae(c[e2 >> 2] | 0, c[700 + ((g2 | 2) << 2) >> 2] | 0, c[a2 >> 2] | 0) | 0;
                  c[a2 >> 2] = i3;
                  c[2771] = i3;
                  if (!i3) {
                    c[a2 >> 2] = 0;
                    break;
                  } else {
                    c[b2 >> 2] = 3;
                    Kd(c[a2 >> 2] | 0, h2, 0) | 0;
                    break a;
                  }
                }
              while (0);
              c[(Tc() | 0) >> 2] = 127;
              j2 = 1;
              return j2 | 0;
            }
          while (0);
          c[a2 + 40 >> 2] = 1;
          j2 = 0;
          return j2 | 0;
        }
        function Zb(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          if (!a2) Wb(b2, d2);
          d2 = c[2772] | 0;
          if (d2 | 0) Da[d2 & 3]() | 0;
          c[(Tc() | 0) >> 2] = b2;
          return b2 | 0;
        }
        function _b(a2) {
          a2 = a2 | 0;
          za(c[a2 >> 2] | 0);
        }
        function $b(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          var d2 = 0, e2 = 0, f2 = 0, g2 = 0;
          d2 = i2;
          i2 = i2 + 16 | 0;
          e2 = d2;
          f2 = ee(a2) | 0;
          if (!f2) {
            g2 = c[210] | 0;
            c[e2 >> 2] = a2;
            c[e2 + 4 >> 2] = b2;
            Ld(g2, 3010, e2) | 0;
            _b(680);
          } else {
            i2 = d2;
            return f2 | 0;
          }
          return 0;
        }
        function ac(a2) {
          a2 = a2 | 0;
          c[2787] = 0;
          c[2788] = 0;
          c[2789] = 0;
          return ((bc(a2, 0) | 0) == 0) << 31 >> 31 | 0;
        }
        function bc(b2, d2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0, O2 = 0, P2 = 0, Q2 = 0, R2 = 0, S2 = 0, T2 = 0, U2 = 0, V2 = 0, W2 = 0, X2 = 0, Y2 = 0, Z2 = 0, _2 = 0, $2 = 0, aa2 = 0, ba2 = 0, ca2 = 0, da2 = 0, ea2 = 0, fa2 = 0, ga2 = 0, ha2 = 0, ia2 = 0, ja2 = 0, ka2 = 0, la2 = 0, ma2 = 0, na2 = 0, oa2 = 0, pa2 = 0, qa2 = 0, ra2 = 0, sa2 = 0, ta2 = 0, ua2 = 0, va2 = 0, wa2 = 0, xa2 = 0, ya2 = 0, za2 = 0, Aa2 = 0, Ba2 = 0, Ca2 = 0, Da2 = 0, Ea2 = 0, Fa2 = 0, Ga2 = 0, Ha2 = 0, Ia2 = 0, Ja2 = 0, Ka2 = 0, La2 = 0, Ma2 = 0, Na2 = 0, Oa2 = 0;
          e2 = b2;
          a: while (1) {
            f2 = e2 + 1 | 0;
            switch (a[e2 >> 0] | 0) {
              case 32: {
                e2 = f2;
                break;
              }
              case 40: {
                break a;
                break;
              }
              default: {
                g2 = 0;
                h2 = 211;
                break a;
              }
            }
          }
          if ((h2 | 0) == 211) return g2 | 0;
          e2 = c[2789] | 0;
          c[2789] = e2 + 1;
          if ((e2 | 0) == 1) c[2788] = d2;
          e2 = c[2787] | 0;
          if ((e2 | 0) > 299) {
            Od(3036, 24, 1, c[210] | 0) | 0;
            zc(c[2765] | 0, 1);
          }
          c[11256 + (e2 << 4) >> 2] = 1;
          c[11256 + (e2 << 4) + 4 >> 2] = d2;
          c[11256 + (e2 << 4) + 8 >> 2] = 0;
          c[11256 + (e2 << 4) + 12 >> 2] = 0;
          c[2787] = e2 + 1;
          if ((e2 | 0) < 0) {
            g2 = 0;
            return g2 | 0;
          }
          e2 = a[f2 >> 0] | 0;
          if (!(e2 << 24 >> 24)) {
            g2 = 0;
            return g2 | 0;
          }
          d2 = c[210] | 0;
          b2 = f2;
          f2 = e2;
          b: while (1) {
            e2 = b2;
            i3 = f2;
            c: while (1) {
              switch (i3 << 24 >> 24) {
                case 41: {
                  j2 = e2;
                  h2 = 197;
                  break c;
                  break;
                }
                case 32:
                  break;
                default: {
                  h2 = 13;
                  break c;
                }
              }
              k2 = e2 + 1 | 0;
              e2 = k2;
              i3 = a[k2 >> 0] | 0;
            }
            d: do
              if ((h2 | 0) == 13) {
                h2 = 0;
                e: do
                  switch (i3 << 24 >> 24 | 0) {
                    case 58: {
                      k2 = c[2787] | 0;
                      if ((k2 | 0) > 299) {
                        h2 = 15;
                        break b;
                      }
                      c[11256 + (k2 << 4) >> 2] = 16;
                      c[11256 + (k2 << 4) + 4 >> 2] = 0;
                      c[11256 + (k2 << 4) + 8 >> 2] = 0;
                      c[11256 + (k2 << 4) + 12 >> 2] = 0;
                      c[2787] = k2 + 1;
                      l2 = e2;
                      h2 = 81;
                      break;
                    }
                    case 36: {
                      k2 = c[2787] | 0;
                      if ((k2 | 0) > 299) {
                        h2 = 18;
                        break b;
                      }
                      c[11256 + (k2 << 4) >> 2] = 33;
                      c[11256 + (k2 << 4) + 4 >> 2] = 0;
                      c[11256 + (k2 << 4) + 8 >> 2] = 0;
                      c[11256 + (k2 << 4) + 12 >> 2] = 0;
                      c[2787] = k2 + 1;
                      l2 = e2;
                      h2 = 81;
                      break;
                    }
                    case 98:
                    case 66: {
                      k2 = e2 + 1 | 0;
                      switch (a[k2 >> 0] | 0) {
                        case 90:
                        case 122: {
                          m2 = c[2787] | 0;
                          if ((m2 | 0) > 299) {
                            h2 = 22;
                            break b;
                          }
                          c[11256 + (m2 << 4) >> 2] = 22;
                          c[11256 + (m2 << 4) + 4 >> 2] = 0;
                          c[11256 + (m2 << 4) + 8 >> 2] = 0;
                          c[11256 + (m2 << 4) + 12 >> 2] = 0;
                          c[2787] = m2 + 1;
                          l2 = k2;
                          h2 = 81;
                          break e;
                          break;
                        }
                        default: {
                          m2 = c[2787] | 0;
                          if ((m2 | 0) > 299) {
                            h2 = 25;
                            break b;
                          }
                          c[11256 + (m2 << 4) >> 2] = 21;
                          c[11256 + (m2 << 4) + 4 >> 2] = 0;
                          c[11256 + (m2 << 4) + 8 >> 2] = 0;
                          c[11256 + (m2 << 4) + 12 >> 2] = 0;
                          c[2787] = m2 + 1;
                          l2 = k2;
                          h2 = 81;
                          break e;
                        }
                      }
                      break;
                    }
                    case 115:
                    case 83: {
                      k2 = e2 + 1 | 0;
                      switch (a[k2 >> 0] | 0) {
                        case 83:
                        case 115: {
                          n2 = 19;
                          o2 = k2;
                          break;
                        }
                        case 80:
                        case 112: {
                          n2 = 18;
                          o2 = k2;
                          break;
                        }
                        default: {
                          n2 = 17;
                          o2 = e2;
                        }
                      }
                      k2 = c[2787] | 0;
                      if ((k2 | 0) > 299) {
                        h2 = 31;
                        break b;
                      }
                      c[11256 + (k2 << 4) >> 2] = n2;
                      c[11256 + (k2 << 4) + 4 >> 2] = 0;
                      c[11256 + (k2 << 4) + 8 >> 2] = 0;
                      c[11256 + (k2 << 4) + 12 >> 2] = 0;
                      c[2787] = k2 + 1;
                      l2 = o2;
                      h2 = 81;
                      break;
                    }
                    case 47: {
                      k2 = c[2787] | 0;
                      if ((k2 | 0) > 299) {
                        h2 = 34;
                        break b;
                      }
                      c[11256 + (k2 << 4) >> 2] = 5;
                      c[11256 + (k2 << 4) + 4 >> 2] = 0;
                      c[11256 + (k2 << 4) + 8 >> 2] = 0;
                      c[11256 + (k2 << 4) + 12 >> 2] = 0;
                      c[2787] = k2 + 1;
                      l2 = e2;
                      h2 = 81;
                      break;
                    }
                    case 45: {
                      p2 = 1;
                      h2 = 37;
                      break;
                    }
                    case 43: {
                      p2 = 0;
                      h2 = 37;
                      break;
                    }
                    case 57:
                    case 56:
                    case 55:
                    case 54:
                    case 53:
                    case 52:
                    case 51:
                    case 50:
                    case 49:
                    case 48: {
                      q2 = 0;
                      r2 = e2;
                      h2 = 38;
                      break;
                    }
                    case 39:
                    case 34:
                    case 2: {
                      k2 = c[2787] | 0;
                      if ((k2 | 0) > 299) {
                        h2 = 55;
                        break b;
                      }
                      c[11256 + (k2 << 4) >> 2] = 11;
                      c[11256 + (k2 << 4) + 4 >> 2] = 0;
                      c[11256 + (k2 << 4) + 8 >> 2] = 0;
                      c[11256 + (k2 << 4) + 12 >> 2] = 0;
                      c[2787] = k2 + 1;
                      c[11256 + (k2 << 4) + 8 >> 2] = e2;
                      k2 = a[e2 >> 0] | 0;
                      m2 = e2 + 1 | 0;
                      s2 = a[m2 >> 0] | 0;
                      if (s2 << 24 >> 24) {
                        t2 = m2;
                        m2 = e2;
                        u2 = s2;
                        while (1) {
                          if (u2 << 24 >> 24 == k2 << 24 >> 24) {
                            s2 = m2 + 2 | 0;
                            if ((a[s2 >> 0] | 0) == k2 << 24 >> 24) v2 = s2;
                            else {
                              w2 = s2;
                              break d;
                            }
                          } else v2 = t2;
                          t2 = v2 + 1 | 0;
                          u2 = a[t2 >> 0] | 0;
                          if (!(u2 << 24 >> 24)) break;
                          else m2 = v2;
                        }
                      }
                      if (!(c[c[2773] >> 2] | 0)) {
                        Wb(100, 3061);
                        x2 = 0;
                        y2 = 0;
                        z2 = e2;
                        break e;
                      } else {
                        c[(Tc() | 0) >> 2] = 100;
                        x2 = 0;
                        y2 = 0;
                        z2 = e2;
                        break e;
                      }
                      break;
                    }
                    case 116:
                    case 84: {
                      m2 = e2 + 1 | 0;
                      switch (a[m2 >> 0] | 0) {
                        case 76:
                        case 108: {
                          A2 = 13;
                          B2 = m2;
                          break;
                        }
                        case 82:
                        case 114: {
                          A2 = 14;
                          B2 = m2;
                          break;
                        }
                        default: {
                          A2 = 15;
                          B2 = e2;
                        }
                      }
                      m2 = 0;
                      u2 = 0;
                      t2 = B2;
                      while (1) {
                        C2 = t2;
                        while (1) {
                          D2 = C2 + 1 | 0;
                          E2 = a[D2 >> 0] | 0;
                          if (E2 << 24 >> 24 == 32) C2 = D2;
                          else break;
                        }
                        if ((E2 + -48 & 255) > 9) break;
                        m2 = m2 + 1 | 0;
                        u2 = (u2 * 10 | 0) + -48 + (E2 << 24 >> 24) | 0;
                        t2 = D2;
                      }
                      t2 = (m2 | 0) == 0;
                      if (t2) {
                        g2 = 0;
                        h2 = 211;
                        break b;
                      }
                      k2 = c[2787] | 0;
                      if ((k2 | 0) > 299) {
                        h2 = 73;
                        break b;
                      }
                      c[11256 + (k2 << 4) >> 2] = A2;
                      c[11256 + (k2 << 4) + 4 >> 2] = t2 ? 0 : u2;
                      c[11256 + (k2 << 4) + 8 >> 2] = 0;
                      c[11256 + (k2 << 4) + 12 >> 2] = 0;
                      c[2787] = k2 + 1;
                      l2 = C2;
                      h2 = 81;
                      break;
                    }
                    case 120:
                    case 88: {
                      k2 = c[2787] | 0;
                      if ((k2 | 0) > 299) {
                        h2 = 76;
                        break b;
                      }
                      c[11256 + (k2 << 4) >> 2] = 4;
                      c[11256 + (k2 << 4) + 4 >> 2] = 1;
                      c[11256 + (k2 << 4) + 8 >> 2] = 0;
                      c[11256 + (k2 << 4) + 12 >> 2] = 0;
                      c[2787] = k2 + 1;
                      l2 = e2;
                      h2 = 81;
                      break;
                    }
                    case 112:
                    case 80: {
                      k2 = c[2787] | 0;
                      if ((k2 | 0) > 299) {
                        h2 = 79;
                        break b;
                      }
                      c[11256 + (k2 << 4) >> 2] = 20;
                      c[11256 + (k2 << 4) + 4 >> 2] = 1;
                      c[11256 + (k2 << 4) + 8 >> 2] = 0;
                      c[11256 + (k2 << 4) + 12 >> 2] = 0;
                      c[2787] = k2 + 1;
                      l2 = e2;
                      h2 = 81;
                      break;
                    }
                    default: {
                      x2 = 0;
                      y2 = 0;
                      z2 = e2;
                    }
                  }
                while (0);
                if ((h2 | 0) == 37) {
                  h2 = 0;
                  q2 = p2;
                  r2 = e2 + 1 | 0;
                  h2 = 38;
                }
                f: do
                  if ((h2 | 0) == 38) {
                    h2 = 0;
                    k2 = 0;
                    t2 = 0;
                    s2 = r2;
                    while (1) {
                      F2 = a[s2 >> 0] | 0;
                      G2 = F2 << 24 >> 24;
                      if (F2 << 24 >> 24 == 32) {
                        H2 = k2;
                        I2 = t2;
                      } else {
                        if ((F2 + -48 & 255) > 9) break;
                        H2 = k2 + 1 | 0;
                        I2 = (t2 * 10 | 0) + -48 + G2 | 0;
                      }
                      k2 = H2;
                      t2 = I2;
                      s2 = s2 + 1 | 0;
                    }
                    u2 = (k2 | 0) == 0;
                    m2 = u2 ? 0 : t2;
                    G2 = u2 ? 0 : s2;
                    if (!G2) {
                      g2 = 0;
                      h2 = 211;
                      break b;
                    }
                    switch (a[G2 >> 0] | 0) {
                      case 112:
                      case 80: {
                        u2 = c[2787] | 0;
                        if ((u2 | 0) > 299) {
                          h2 = 46;
                          break b;
                        }
                        c[11256 + (u2 << 4) >> 2] = 20;
                        c[11256 + (u2 << 4) + 4 >> 2] = (q2 | 0) == 0 ? m2 : 0 - m2 | 0;
                        c[11256 + (u2 << 4) + 8 >> 2] = 0;
                        c[11256 + (u2 << 4) + 12 >> 2] = 0;
                        c[2787] = u2 + 1;
                        l2 = G2;
                        h2 = 81;
                        break f;
                        break;
                      }
                      case 120:
                      case 88: {
                        u2 = c[2787] | 0;
                        if ((u2 | 0) > 299) {
                          h2 = 49;
                          break b;
                        }
                        c[11256 + (u2 << 4) >> 2] = 4;
                        c[11256 + (u2 << 4) + 4 >> 2] = m2;
                        c[11256 + (u2 << 4) + 8 >> 2] = 0;
                        c[11256 + (u2 << 4) + 12 >> 2] = 0;
                        c[2787] = u2 + 1;
                        l2 = G2;
                        h2 = 81;
                        break f;
                        break;
                      }
                      case 104:
                      case 72: {
                        u2 = c[2787] | 0;
                        if ((u2 | 0) > 299) {
                          h2 = 52;
                          break b;
                        }
                        c[11256 + (u2 << 4) >> 2] = 12;
                        c[11256 + (u2 << 4) + 4 >> 2] = m2;
                        c[11256 + (u2 << 4) + 8 >> 2] = 0;
                        c[11256 + (u2 << 4) + 12 >> 2] = 0;
                        c[2787] = u2 + 1;
                        c[11256 + (u2 << 4) + 8 >> 2] = G2 + 1;
                        l2 = G2 + m2 | 0;
                        h2 = 81;
                        break f;
                        break;
                      }
                      default: {
                        x2 = 0;
                        y2 = 0;
                        z2 = e2;
                        break f;
                      }
                    }
                  }
                while (0);
                if ((h2 | 0) == 81) {
                  h2 = 0;
                  w2 = l2 + 1 | 0;
                  break;
                }
                while (1) {
                  m2 = a[z2 >> 0] | 0;
                  G2 = m2 << 24 >> 24;
                  if (m2 << 24 >> 24 == 32) {
                    J2 = x2;
                    K2 = y2;
                  } else {
                    if ((m2 + -48 & 255) > 9) break;
                    J2 = x2 + 1 | 0;
                    K2 = (y2 * 10 | 0) + -48 + G2 | 0;
                  }
                  x2 = J2;
                  y2 = K2;
                  z2 = z2 + 1 | 0;
                }
                G2 = c[2787] | 0;
                if ((G2 | 0) > 299) {
                  h2 = 87;
                  break b;
                }
                c[11256 + (G2 << 4) >> 2] = 6;
                c[11256 + (G2 << 4) + 4 >> 2] = (x2 | 0) == 0 ? 1 : y2;
                c[11256 + (G2 << 4) + 8 >> 2] = 0;
                c[11256 + (G2 << 4) + 12 >> 2] = 0;
                m2 = G2 + 1 | 0;
                c[2787] = m2;
                u2 = z2 + 1 | 0;
                switch (a[z2 >> 0] | 0) {
                  case 101:
                  case 69: {
                    L2 = 1;
                    break;
                  }
                  case 103:
                  case 71: {
                    L2 = 0;
                    break;
                  }
                  case 111:
                  case 79: {
                    M2 = 34;
                    N2 = 32;
                    h2 = 169;
                    break;
                  }
                  case 122:
                  case 90: {
                    M2 = 36;
                    N2 = 35;
                    h2 = 169;
                    break;
                  }
                  case 108:
                  case 76: {
                    F2 = 0;
                    O2 = 0;
                    P2 = u2;
                    while (1) {
                      Q2 = a[P2 >> 0] | 0;
                      R2 = Q2 << 24 >> 24;
                      if (Q2 << 24 >> 24 == 32) {
                        S2 = F2;
                        T2 = O2;
                      } else {
                        if ((Q2 + -48 & 255) > 9) break;
                        S2 = F2 + 1 | 0;
                        T2 = (O2 * 10 | 0) + -48 + R2 | 0;
                      }
                      F2 = S2;
                      O2 = T2;
                      P2 = P2 + 1 | 0;
                    }
                    R2 = (F2 | 0) == 0;
                    Q2 = R2 ? 0 : O2;
                    if (R2) {
                      g2 = 0;
                      h2 = 211;
                      break b;
                    }
                    if (!Q2) {
                      w2 = P2;
                      break d;
                    }
                    if ((G2 | 0) > 298) {
                      h2 = 123;
                      break b;
                    }
                    c[11256 + (m2 << 4) >> 2] = 29;
                    c[11256 + (m2 << 4) + 4 >> 2] = Q2;
                    c[11256 + (m2 << 4) + 8 >> 2] = 0;
                    c[11256 + (m2 << 4) + 12 >> 2] = 0;
                    c[2787] = m2 + 1;
                    w2 = P2;
                    break d;
                    break;
                  }
                  case 97:
                  case 65: {
                    Q2 = u2;
                    while (1) {
                      U2 = a[Q2 >> 0] | 0;
                      if (U2 << 24 >> 24 == 32) Q2 = Q2 + 1 | 0;
                      else break;
                    }
                    if ((U2 + -48 & 255) < 10) {
                      V2 = U2;
                      W2 = 0;
                      X2 = 0;
                      Y2 = Q2;
                    } else {
                      if ((G2 | 0) > 298) {
                        h2 = 136;
                        break b;
                      }
                      c[11256 + (m2 << 4) >> 2] = 30;
                      c[11256 + (m2 << 4) + 4 >> 2] = 0;
                      c[11256 + (m2 << 4) + 8 >> 2] = 0;
                      c[11256 + (m2 << 4) + 12 >> 2] = 0;
                      c[2787] = m2 + 1;
                      w2 = Q2;
                      break d;
                    }
                    while (1) {
                      P2 = V2 << 24 >> 24;
                      if (V2 << 24 >> 24 == 32) {
                        Z2 = W2;
                        _2 = X2;
                      } else {
                        if ((V2 + -48 & 255) > 9) break;
                        Z2 = W2 + 1 | 0;
                        _2 = P2 + -48 + (X2 * 10 | 0) | 0;
                      }
                      P2 = Y2 + 1 | 0;
                      V2 = a[P2 >> 0] | 0;
                      W2 = Z2;
                      X2 = _2;
                      Y2 = P2;
                    }
                    Q2 = (W2 | 0) == 0 ? 1 : X2;
                    if (!Q2) {
                      w2 = Y2;
                      break d;
                    }
                    if ((G2 | 0) > 298) {
                      h2 = 133;
                      break b;
                    }
                    c[11256 + (m2 << 4) >> 2] = 31;
                    c[11256 + (m2 << 4) + 4 >> 2] = Q2;
                    c[11256 + (m2 << 4) + 8 >> 2] = 0;
                    c[11256 + (m2 << 4) + 12 >> 2] = 0;
                    c[2787] = m2 + 1;
                    w2 = Y2;
                    break d;
                    break;
                  }
                  case 102:
                  case 70: {
                    Q2 = 0;
                    P2 = 0;
                    O2 = u2;
                    while (1) {
                      $2 = a[O2 >> 0] | 0;
                      F2 = $2 << 24 >> 24;
                      if ($2 << 24 >> 24 == 32) {
                        aa2 = Q2;
                        ba2 = P2;
                      } else {
                        if (($2 + -48 & 255) > 9) break;
                        aa2 = Q2 + 1 | 0;
                        ba2 = (P2 * 10 | 0) + -48 + F2 | 0;
                      }
                      Q2 = aa2;
                      P2 = ba2;
                      O2 = O2 + 1 | 0;
                    }
                    F2 = (Q2 | 0) == 0;
                    R2 = F2 ? 0 : P2;
                    if (F2) {
                      g2 = 0;
                      h2 = 211;
                      break b;
                    }
                    if (!R2) {
                      w2 = O2;
                      break d;
                    }
                    if ($2 << 24 >> 24 == 46) {
                      F2 = 0;
                      ca2 = 0;
                      da2 = O2;
                      while (1) {
                        ea2 = da2;
                        do {
                          ea2 = ea2 + 1 | 0;
                          fa2 = a[ea2 >> 0] | 0;
                        } while (fa2 << 24 >> 24 == 32);
                        if ((fa2 + -48 & 255) > 9) break;
                        F2 = F2 + 1 | 0;
                        ca2 = (ca2 * 10 | 0) + -48 + (fa2 << 24 >> 24) | 0;
                        da2 = ea2;
                      }
                      if (!F2) {
                        g2 = 0;
                        h2 = 211;
                        break b;
                      } else {
                        ga2 = ca2;
                        ha2 = ea2;
                      }
                    } else {
                      ga2 = 0;
                      ha2 = O2;
                    }
                    if ((G2 | 0) > 298) {
                      h2 = 151;
                      break b;
                    }
                    c[11256 + (m2 << 4) >> 2] = 23;
                    c[11256 + (m2 << 4) + 4 >> 2] = R2;
                    c[11256 + (m2 << 4) + 8 >> 2] = ga2;
                    c[11256 + (m2 << 4) + 12 >> 2] = 0;
                    c[2787] = m2 + 1;
                    w2 = ha2;
                    break d;
                    break;
                  }
                  case 100:
                  case 68: {
                    da2 = 0;
                    P2 = 0;
                    Q2 = u2;
                    while (1) {
                      ia2 = a[Q2 >> 0] | 0;
                      s2 = ia2 << 24 >> 24;
                      if (ia2 << 24 >> 24 == 32) {
                        ja2 = da2;
                        ka2 = P2;
                      } else {
                        if ((ia2 + -48 & 255) > 9) break;
                        ja2 = da2 + 1 | 0;
                        ka2 = (P2 * 10 | 0) + -48 + s2 | 0;
                      }
                      da2 = ja2;
                      P2 = ka2;
                      Q2 = Q2 + 1 | 0;
                    }
                    R2 = (da2 | 0) == 0;
                    O2 = R2 ? 0 : P2;
                    if (R2) {
                      g2 = 0;
                      h2 = 211;
                      break b;
                    }
                    if (!O2) {
                      w2 = Q2;
                      break d;
                    }
                    if (ia2 << 24 >> 24 == 46) {
                      R2 = 0;
                      ca2 = 0;
                      F2 = Q2;
                      while (1) {
                        la2 = F2;
                        do {
                          la2 = la2 + 1 | 0;
                          ma2 = a[la2 >> 0] | 0;
                        } while (ma2 << 24 >> 24 == 32);
                        if ((ma2 + -48 & 255) > 9) break;
                        R2 = R2 + 1 | 0;
                        ca2 = (ca2 * 10 | 0) + -48 + (ma2 << 24 >> 24) | 0;
                        F2 = la2;
                      }
                      if (!R2) {
                        g2 = 0;
                        h2 = 211;
                        break b;
                      } else {
                        na2 = ca2;
                        oa2 = la2;
                      }
                    } else {
                      na2 = 0;
                      oa2 = Q2;
                    }
                    if ((G2 | 0) > 298) {
                      h2 = 166;
                      break b;
                    }
                    c[11256 + (m2 << 4) >> 2] = 26;
                    c[11256 + (m2 << 4) + 4 >> 2] = O2;
                    c[11256 + (m2 << 4) + 8 >> 2] = na2;
                    c[11256 + (m2 << 4) + 12 >> 2] = 0;
                    c[2787] = m2 + 1;
                    w2 = oa2;
                    break d;
                    break;
                  }
                  case 105:
                  case 73: {
                    M2 = 10;
                    N2 = 7;
                    h2 = 169;
                    break;
                  }
                  default: {
                    c[2787] = G2;
                    F2 = 0;
                    P2 = 0;
                    da2 = e2;
                    while (1) {
                      s2 = a[da2 >> 0] | 0;
                      t2 = s2 << 24 >> 24;
                      if (s2 << 24 >> 24 == 32) {
                        pa2 = F2;
                        qa2 = P2;
                      } else {
                        if ((s2 + -48 & 255) > 9) break;
                        pa2 = F2 + 1 | 0;
                        qa2 = (P2 * 10 | 0) + -48 + t2 | 0;
                      }
                      F2 = pa2;
                      P2 = qa2;
                      da2 = da2 + 1 | 0;
                    }
                    if ((G2 | 0) > 299) {
                      h2 = 194;
                      break b;
                    }
                    c[11256 + (G2 << 4) >> 2] = 6;
                    c[11256 + (G2 << 4) + 4 >> 2] = (F2 | 0) == 0 ? 1 : P2;
                    c[11256 + (G2 << 4) + 8 >> 2] = 0;
                    c[11256 + (G2 << 4) + 12 >> 2] = 0;
                    c[2787] = G2 + 1;
                    if ((G2 | 0) < 0) {
                      g2 = 0;
                      h2 = 211;
                      break b;
                    }
                    j2 = bc(da2, G2) | 0;
                    h2 = 197;
                    break d;
                  }
                }
                if ((h2 | 0) == 169) {
                  h2 = 0;
                  O2 = 0;
                  Q2 = 0;
                  ca2 = u2;
                  while (1) {
                    ra2 = a[ca2 >> 0] | 0;
                    R2 = ra2 << 24 >> 24;
                    if (ra2 << 24 >> 24 == 32) {
                      sa2 = O2;
                      ta2 = Q2;
                    } else {
                      if ((ra2 + -48 & 255) > 9) break;
                      sa2 = O2 + 1 | 0;
                      ta2 = (Q2 * 10 | 0) + -48 + R2 | 0;
                    }
                    O2 = sa2;
                    Q2 = ta2;
                    ca2 = ca2 + 1 | 0;
                  }
                  da2 = (O2 | 0) == 0;
                  P2 = da2 ? 0 : Q2;
                  if (da2) {
                    g2 = 0;
                    h2 = 211;
                    break b;
                  }
                  if (!P2) {
                    w2 = ca2;
                    break;
                  }
                  if (ra2 << 24 >> 24 == 46) {
                    ua2 = 0;
                    va2 = 0;
                    wa2 = ca2;
                  } else {
                    if ((G2 | 0) > 298) {
                      h2 = 178;
                      break b;
                    }
                    c[11256 + (m2 << 4) >> 2] = N2;
                    c[11256 + (m2 << 4) + 4 >> 2] = P2;
                    c[11256 + (m2 << 4) + 8 >> 2] = 0;
                    c[11256 + (m2 << 4) + 12 >> 2] = 0;
                    c[2787] = m2 + 1;
                    w2 = ca2;
                    break;
                  }
                  while (1) {
                    xa2 = wa2;
                    do {
                      xa2 = xa2 + 1 | 0;
                      ya2 = a[xa2 >> 0] | 0;
                    } while (ya2 << 24 >> 24 == 32);
                    if ((ya2 + -48 & 255) > 9) break;
                    ua2 = ua2 + 1 | 0;
                    va2 = (va2 * 10 | 0) + -48 + (ya2 << 24 >> 24) | 0;
                    wa2 = xa2;
                  }
                  ca2 = (ua2 | 0) == 0;
                  if (ca2) {
                    g2 = 0;
                    h2 = 211;
                    break b;
                  }
                  if ((G2 | 0) > 298) {
                    h2 = 186;
                    break b;
                  }
                  c[11256 + (m2 << 4) >> 2] = M2;
                  c[11256 + (m2 << 4) + 4 >> 2] = P2;
                  c[11256 + (m2 << 4) + 8 >> 2] = ca2 ? 0 : va2;
                  c[11256 + (m2 << 4) + 12 >> 2] = 0;
                  c[2787] = m2 + 1;
                  w2 = xa2;
                  break;
                }
                ca2 = 0;
                Q2 = 0;
                O2 = u2;
                while (1) {
                  za2 = a[O2 >> 0] | 0;
                  da2 = za2 << 24 >> 24;
                  if (za2 << 24 >> 24 == 32) {
                    Aa2 = ca2;
                    Ba2 = Q2;
                  } else {
                    if ((za2 + -48 & 255) > 9) break;
                    Aa2 = ca2 + 1 | 0;
                    Ba2 = (Q2 * 10 | 0) + -48 + da2 | 0;
                  }
                  ca2 = Aa2;
                  Q2 = Ba2;
                  O2 = O2 + 1 | 0;
                }
                u2 = (ca2 | 0) == 0;
                P2 = u2 ? 0 : Q2;
                if (u2) {
                  g2 = 0;
                  h2 = 211;
                  break b;
                }
                if (!P2) w2 = O2;
                else {
                  if (za2 << 24 >> 24 == 46) {
                    u2 = 0;
                    da2 = 0;
                    F2 = O2;
                    while (1) {
                      Ca2 = F2;
                      do {
                        Ca2 = Ca2 + 1 | 0;
                        Da2 = a[Ca2 >> 0] | 0;
                      } while (Da2 << 24 >> 24 == 32);
                      if ((Da2 + -48 & 255) > 9) break;
                      u2 = u2 + 1 | 0;
                      da2 = (da2 * 10 | 0) + -48 + (Da2 << 24 >> 24) | 0;
                      F2 = Ca2;
                    }
                    if (!u2) {
                      g2 = 0;
                      h2 = 211;
                      break b;
                    } else {
                      Ea2 = da2;
                      Fa2 = Ca2;
                      Ga2 = Da2;
                    }
                  } else {
                    Ea2 = 0;
                    Fa2 = O2;
                    Ga2 = za2;
                  }
                  switch (Ga2 << 24 >> 24) {
                    case 101:
                    case 69: {
                      Ha2 = 0;
                      Ia2 = 0;
                      Ja2 = Fa2;
                      break;
                    }
                    default: {
                      if ((G2 | 0) > 298) {
                        h2 = 105;
                        break b;
                      }
                      c[11256 + (m2 << 4) >> 2] = (L2 | 0) == 1 ? 24 : 27;
                      c[11256 + (m2 << 4) + 4 >> 2] = P2;
                      c[11256 + (m2 << 4) + 8 >> 2] = Ea2;
                      c[11256 + (m2 << 4) + 12 >> 2] = 0;
                      c[2787] = m2 + 1;
                      w2 = Fa2;
                      break d;
                    }
                  }
                  while (1) {
                    Ka2 = Ja2;
                    do {
                      Ka2 = Ka2 + 1 | 0;
                      La2 = a[Ka2 >> 0] | 0;
                    } while (La2 << 24 >> 24 == 32);
                    if ((La2 + -48 & 255) > 9) break;
                    Ha2 = Ha2 + 1 | 0;
                    Ia2 = (Ia2 * 10 | 0) + -48 + (La2 << 24 >> 24) | 0;
                    Ja2 = Ka2;
                  }
                  O2 = (Ha2 | 0) == 0;
                  if (O2) {
                    g2 = 0;
                    h2 = 211;
                    break b;
                  }
                  if ((G2 | 0) > 298) {
                    h2 = 113;
                    break b;
                  }
                  c[11256 + (m2 << 4) >> 2] = (L2 | 0) == 1 ? 25 : 28;
                  c[11256 + (m2 << 4) + 4 >> 2] = P2;
                  c[11256 + (m2 << 4) + 8 >> 2] = Ea2;
                  c[11256 + (m2 << 4) + 12 >> 2] = O2 ? 0 : Ia2;
                  c[2787] = m2 + 1;
                  w2 = Ka2;
                }
              }
            while (0);
            if ((h2 | 0) == 197) {
              h2 = 0;
              if (!j2) {
                g2 = 0;
                h2 = 211;
                break;
              } else w2 = j2;
            }
            g: while (1) {
              e2 = a[w2 >> 0] | 0;
              switch (e2 << 24 >> 24) {
                case 41: {
                  h2 = 202;
                  break b;
                  break;
                }
                case 44: {
                  h2 = 200;
                  break g;
                  break;
                }
                case 32:
                  break;
                default: {
                  Ma2 = w2;
                  Na2 = e2;
                  break g;
                }
              }
              w2 = w2 + 1 | 0;
            }
            if ((h2 | 0) == 200) {
              h2 = 0;
              e2 = w2 + 1 | 0;
              Ma2 = e2;
              Na2 = a[e2 >> 0] | 0;
            }
            if (!(Na2 << 24 >> 24)) {
              g2 = 0;
              h2 = 211;
              break;
            } else {
              b2 = Ma2;
              f2 = Na2;
            }
          }
          switch (h2 | 0) {
            case 15: {
              Od(3036, 24, 1, d2) | 0;
              zc(c[2765] | 0, 1);
              break;
            }
            case 18: {
              Od(3036, 24, 1, d2) | 0;
              zc(c[2765] | 0, 1);
              break;
            }
            case 22: {
              Od(3036, 24, 1, d2) | 0;
              zc(c[2765] | 0, 1);
              break;
            }
            case 25: {
              Od(3036, 24, 1, d2) | 0;
              zc(c[2765] | 0, 1);
              break;
            }
            case 31: {
              Od(3036, 24, 1, d2) | 0;
              zc(c[2765] | 0, 1);
              break;
            }
            case 34: {
              Od(3036, 24, 1, d2) | 0;
              zc(c[2765] | 0, 1);
              break;
            }
            case 46: {
              Od(3036, 24, 1, d2) | 0;
              zc(c[2765] | 0, 1);
              break;
            }
            case 49: {
              Od(3036, 24, 1, d2) | 0;
              zc(c[2765] | 0, 1);
              break;
            }
            case 52: {
              Od(3036, 24, 1, d2) | 0;
              zc(c[2765] | 0, 1);
              break;
            }
            case 55: {
              Od(3036, 24, 1, d2) | 0;
              zc(c[2765] | 0, 1);
              break;
            }
            case 73: {
              Od(3036, 24, 1, d2) | 0;
              zc(c[2765] | 0, 1);
              break;
            }
            case 76: {
              Od(3036, 24, 1, d2) | 0;
              zc(c[2765] | 0, 1);
              break;
            }
            case 79: {
              Od(3036, 24, 1, d2) | 0;
              zc(c[2765] | 0, 1);
              break;
            }
            case 87: {
              Od(3036, 24, 1, d2) | 0;
              zc(c[2765] | 0, 1);
              break;
            }
            case 105: {
              Od(3036, 24, 1, d2) | 0;
              zc(c[2765] | 0, 1);
              break;
            }
            case 113: {
              Od(3036, 24, 1, d2) | 0;
              zc(c[2765] | 0, 1);
              break;
            }
            case 123: {
              Od(3036, 24, 1, d2) | 0;
              zc(c[2765] | 0, 1);
              break;
            }
            case 133: {
              Od(3036, 24, 1, d2) | 0;
              zc(c[2765] | 0, 1);
              break;
            }
            case 136: {
              Od(3036, 24, 1, d2) | 0;
              zc(c[2765] | 0, 1);
              break;
            }
            case 151: {
              Od(3036, 24, 1, d2) | 0;
              zc(c[2765] | 0, 1);
              break;
            }
            case 166: {
              Od(3036, 24, 1, d2) | 0;
              zc(c[2765] | 0, 1);
              break;
            }
            case 178: {
              Od(3036, 24, 1, d2) | 0;
              zc(c[2765] | 0, 1);
              break;
            }
            case 186: {
              Od(3036, 24, 1, d2) | 0;
              zc(c[2765] | 0, 1);
              break;
            }
            case 194: {
              Od(3036, 24, 1, d2) | 0;
              zc(c[2765] | 0, 1);
              break;
            }
            case 202: {
              h2 = (c[2789] | 0) + -1 | 0;
              c[2789] = h2;
              do
                if (!h2) {
                  Na2 = c[2788] | 0;
                  f2 = c[2787] | 0;
                  if ((f2 | 0) > 299) {
                    Od(3036, 24, 1, d2) | 0;
                    zc(c[2765] | 0, 1);
                  } else {
                    c[11256 + (f2 << 4) >> 2] = 2;
                    c[11256 + (f2 << 4) + 4 >> 2] = Na2;
                    c[11256 + (f2 << 4) + 8 >> 2] = 0;
                    c[11256 + (f2 << 4) + 12 >> 2] = 0;
                    Oa2 = f2;
                    break;
                  }
                } else {
                  f2 = c[2787] | 0;
                  if ((f2 | 0) > 299) {
                    Od(3036, 24, 1, d2) | 0;
                    zc(c[2765] | 0, 1);
                  } else {
                    c[11256 + (f2 << 4) >> 2] = 3;
                    c[11256 + (f2 << 4) + 4 >> 2] = 0;
                    c[11256 + (f2 << 4) + 8 >> 2] = 0;
                    c[11256 + (f2 << 4) + 12 >> 2] = 0;
                    Oa2 = f2;
                    break;
                  }
                }
              while (0);
              c[2787] = Oa2 + 1;
              Oa2 = w2;
              while (1) {
                w2 = Oa2 + 1 | 0;
                if ((a[w2 >> 0] | 0) == 32) Oa2 = w2;
                else {
                  g2 = w2;
                  break;
                }
              }
              return g2 | 0;
            }
            case 211:
              return g2 | 0;
          }
          return 0;
        }
        function cc(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, g2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0;
          e2 = i2;
          i2 = i2 + 16 | 0;
          f2 = e2;
          if ((c[a2 >> 2] | 0) > 0) {
            g2 = b2;
            h2 = 0;
          } else {
            j2 = 0;
            i2 = e2;
            return j2 | 0;
          }
          a: while (1) {
            b2 = (g2 | 0) == 0;
            b: while (1) {
              k2 = c[2787] | 0;
              l2 = 11256 + (k2 << 4) | 0;
              m2 = c[l2 >> 2] | 0;
              do
                switch (m2 | 0) {
                  case 8:
                  case 26:
                  case 25:
                  case 24:
                  case 29:
                  case 34:
                  case 32:
                  case 31:
                  case 30:
                  case 10:
                  case 7:
                  case 23:
                  case 27:
                  case 28:
                  case 35:
                  case 36: {
                    n2 = c[2790] | 0;
                    o2 = 11164 + (n2 << 2) | 0;
                    p2 = c[o2 >> 2] | 0;
                    if ((p2 | 0) >= 1) {
                      q2 = 10;
                      break b;
                    }
                    c[2790] = n2 + -1;
                    c[2787] = k2 + 1;
                    continue b;
                    break;
                  }
                  case 9:
                  case 14:
                  case 13:
                  case 15:
                  case 12:
                  case 11:
                  case 5:
                  case 4: {
                    n2 = (Ea[c[2779] & 3](l2) | 0) == 0;
                    c[2787] = (c[2787] | 0) + 1;
                    if (n2) break b;
                    else continue b;
                    break;
                  }
                  case 6: {
                    n2 = c[11256 + (k2 << 4) + 4 >> 2] | 0;
                    r2 = (c[2790] | 0) + 1 | 0;
                    c[2790] = r2;
                    c[11164 + (r2 << 2) >> 2] = n2;
                    c[2787] = k2 + 1;
                    continue b;
                    break;
                  }
                  case 1: {
                    n2 = c[11256 + (k2 << 4) + 4 >> 2] | 0;
                    r2 = (c[2802] | 0) + 1 | 0;
                    c[2802] = r2;
                    c[11212 + (r2 << 2) >> 2] = n2;
                    c[2787] = k2 + 1;
                    continue b;
                    break;
                  }
                  case 3: {
                    n2 = c[2790] | 0;
                    r2 = 11164 + (n2 << 2) | 0;
                    s2 = c[r2 >> 2] | 0;
                    c[r2 >> 2] = s2 + -1;
                    if ((s2 | 0) < 2) {
                      c[2790] = n2 + -1;
                      c[2802] = (c[2802] | 0) + -1;
                      c[2787] = k2 + 1;
                      continue b;
                    } else {
                      n2 = c[2802] | 0;
                      c[2802] = n2 + -1;
                      c[2787] = (c[11212 + (n2 << 2) >> 2] | 0) + 1;
                      continue b;
                    }
                    break;
                  }
                  case 2: {
                    c[2790] = 0;
                    c[2802] = 0;
                    c[2787] = c[11256 + (k2 << 4) + 4 >> 2];
                    if (b2) {
                      q2 = 24;
                      break a;
                    }
                    if (!(c[2801] | 0)) {
                      j2 = 0;
                      q2 = 37;
                      break a;
                    }
                    n2 = Da[c[2780] & 3]() | 0;
                    if (!n2) continue b;
                    else {
                      j2 = n2;
                      q2 = 37;
                      break a;
                    }
                    break;
                  }
                  case 16: {
                    if (b2) {
                      q2 = 28;
                      break a;
                    }
                    c[2787] = k2 + 1;
                    continue b;
                    break;
                  }
                  case 33: {
                    c[2813] = 1;
                    c[2787] = k2 + 1;
                    continue b;
                    break;
                  }
                  case 19:
                  case 17: {
                    c[2775] = 0;
                    c[2787] = k2 + 1;
                    continue b;
                    break;
                  }
                  case 18: {
                    c[2775] = 1;
                    c[2787] = k2 + 1;
                    continue b;
                    break;
                  }
                  case 20: {
                    c[2785] = c[11256 + (k2 << 4) + 4 >> 2];
                    c[2787] = k2 + 1;
                    continue b;
                    break;
                  }
                  case 21: {
                    c[2776] = 0;
                    c[2787] = k2 + 1;
                    continue b;
                    break;
                  }
                  case 22: {
                    c[2776] = 1;
                    c[2787] = k2 + 1;
                    continue b;
                    break;
                  }
                  default: {
                    q2 = 4;
                    break a;
                  }
                }
              while (0);
            }
            if ((q2 | 0) == 10) {
              q2 = 0;
              if (b2) {
                q2 = 11;
                break;
              }
              c[o2 >> 2] = p2 + -1;
              c[2801] = 1;
              k2 = Fa[c[2778] & 7](l2, g2, d2) | 0;
              if ((k2 | 0) > 0) {
                q2 = 13;
                break;
              }
              if ((k2 | 0) < 0) {
                q2 = 15;
                break;
              }
            }
            h2 = h2 + 1 | 0;
            if ((h2 | 0) >= (c[a2 >> 2] | 0)) {
              j2 = 0;
              q2 = 37;
              break;
            } else g2 = g2 + d2 | 0;
          }
          if ((q2 | 0) == 4) {
            d2 = c[210] | 0;
            g2 = c[2765] | 0;
            c[f2 >> 2] = m2;
            c[f2 + 4 >> 2] = g2;
            Ld(d2, 3072, f2) | 0;
            if (!(c[c[2773] >> 2] | 0)) {
              Wb(100, 3103);
              j2 = 100;
              i2 = e2;
              return j2 | 0;
            } else {
              c[(Tc() | 0) >> 2] = 100;
              j2 = 100;
              i2 = e2;
              return j2 | 0;
            }
          } else if ((q2 | 0) == 11) {
            j2 = Da[c[2772] & 3]() | 0;
            i2 = e2;
            return j2 | 0;
          } else if ((q2 | 0) == 13) {
            f2 = c[c[2773] >> 2] | 0;
            j2 = Zb(f2, c[(Tc() | 0) >> 2] | 0, 3110) | 0;
            i2 = e2;
            return j2 | 0;
          } else if ((q2 | 0) == 15)
            if (!(c[(c[2773] | 0) + 8 >> 2] | 0)) {
              Wb(-1, 3110);
              j2 = -1;
              i2 = e2;
              return j2 | 0;
            } else {
              c[(Tc() | 0) >> 2] = -1;
              j2 = -1;
              i2 = e2;
              return j2 | 0;
            }
          else if ((q2 | 0) == 24) {
            j2 = Da[c[2772] & 3]() | 0;
            i2 = e2;
            return j2 | 0;
          } else if ((q2 | 0) == 28) {
            j2 = Da[c[2772] & 3]() | 0;
            i2 = e2;
            return j2 | 0;
          } else if ((q2 | 0) == 37) {
            i2 = e2;
            return j2 | 0;
          }
          return 0;
        }
        function dc() {
          var a2 = 0, b2 = 0, d2 = 0;
          a2 = i2;
          i2 = i2 + 16 | 0;
          b2 = a2;
          c[b2 >> 2] = 1;
          d2 = cc(b2, 0, 0) | 0;
          i2 = a2;
          return d2 | 0;
        }
        function ec() {
          c[2783] = 0;
          c[2787] = 0;
          c[2802] = 0;
          c[2790] = 0;
          c[2801] = 0;
          c[2803] = 0;
          c[2791] = 0;
          return;
        }
        function fc(b2, d2, e2, f2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          var g2 = 0, h2 = 0, i3 = 0, j2 = 0;
          do
            if ((b2 | 0) > 0) {
              g2 = b2;
              h2 = 0;
            } else {
              if ((b2 | 0) < 0) {
                g2 = 0 - b2 | 0;
                h2 = 1;
                break;
              }
              c[e2 >> 2] = 0;
              c[d2 >> 2] = 1;
              a[16634] = 48;
              i3 = 16634;
              return i3 | 0;
            }
          while (0);
          c[e2 >> 2] = h2;
          h2 = 23;
          e2 = g2;
          while (1) {
            g2 = h2 + -1 | 0;
            j2 = 16612 + g2 | 0;
            a[j2 >> 0] = ((e2 >>> 0) % (f2 >>> 0) | 0) + 48;
            if (e2 >>> 0 < f2 >>> 0) break;
            else {
              h2 = g2;
              e2 = (e2 >>> 0) / (f2 >>> 0) | 0;
            }
          }
          c[d2 >> 2] = 24 - h2;
          i3 = j2;
          return i3 | 0;
        }
        function gc(a2) {
          a2 = a2 | 0;
          var b2 = 0, c2 = 0, d2 = 0, e2 = 0;
          b2 = +g[a2 >> 2];
          c2 = b2;
          if (!(b2 >= 0)) {
            d2 = -+E(+(0.5 - c2));
            e2 = ~~d2;
            return e2 | 0;
          } else {
            d2 = +E(+(c2 + 0.5));
            e2 = ~~d2;
            return e2 | 0;
          }
          return 0;
        }
        function hc(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, g2 = 0, i3 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0;
          e2 = b2 + -8 | 0;
          f2 = c[a2 >> 2] | 0;
          if ((f2 | 0) < 1) {
            g2 = 0;
            return g2 | 0;
          }
          a2 = c[d2 >> 2] | 0;
          if ((a2 | 0) < 1) {
            g2 = 0;
            return g2 | 0;
          }
          if ((f2 | 0) == 1) {
            g2 = 1;
            return g2 | 0;
          }
          i3 = +h[b2 >> 3];
          j2 = i3 >= 0 ? i3 : -i3;
          if ((a2 | 0) == 1) {
            b2 = 2;
            d2 = 1;
            i3 = j2;
            while (1) {
              k2 = +h[e2 + (b2 << 3) >> 3];
              l2 = k2 >= 0 ? k2 : -k2;
              m2 = !(l2 <= i3);
              n2 = m2 ? b2 : d2;
              if ((b2 | 0) == (f2 | 0)) {
                g2 = n2;
                break;
              } else {
                b2 = b2 + 1 | 0;
                d2 = n2;
                i3 = m2 ? l2 : i3;
              }
            }
            return g2 | 0;
          }
          d2 = a2 + 1 | 0;
          b2 = 2;
          m2 = 1;
          i3 = j2;
          while (1) {
            j2 = +h[e2 + (d2 << 3) >> 3];
            l2 = j2 >= 0 ? j2 : -j2;
            n2 = !(l2 <= i3);
            o2 = n2 ? b2 : m2;
            if ((b2 | 0) == (f2 | 0)) {
              g2 = o2;
              break;
            } else {
              d2 = a2 + d2 | 0;
              b2 = b2 + 1 | 0;
              m2 = o2;
              i3 = n2 ? l2 : i3;
            }
          }
          return g2 | 0;
        }
        function ic(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0;
          e2 = +g[d2 >> 2];
          f2 = +g[b2 >> 2];
          if (e2 / f2 <= e2) {
            h2 = 0;
            return h2 | 0;
          }
          i3 = -e2 / f2;
          if (i3 >= f2) {
            h2 = 0;
            return h2 | 0;
          }
          j2 = e2 / (e2 + i3);
          if (j2 != f2) {
            h2 = 0;
            return h2 | 0;
          }
          i3 = e2 / j2;
          if (i3 >= f2) {
            h2 = 0;
            return h2 | 0;
          }
          k2 = f2 + j2;
          if (k2 != f2) {
            h2 = 0;
            return h2 | 0;
          }
          l2 = e2 / k2;
          if (l2 <= e2) {
            h2 = 0;
            return h2 | 0;
          }
          k2 = i3 * l2;
          if (k2 >= f2) {
            h2 = 0;
            return h2 | 0;
          }
          i3 = l2 * l2;
          if (i3 <= e2) {
            h2 = 0;
            return h2 | 0;
          }
          if (!(c[a2 >> 2] | 0)) {
            h2 = 1;
            return h2 | 0;
          }
          e2 = i3 + k2;
          l2 = i3 / i3;
          m2 = f2 * i3;
          f2 = j2 * k2;
          j2 = i3 / k2;
          if (f2 == f2 & true | (m2 == m2 & true | (l2 == l2 & true | (e2 == e2 & true | j2 == j2 & true)))) {
            h2 = 0;
            return h2 | 0;
          }
          j2 = f2 * 0;
          h2 = (j2 != j2 | false) & 1;
          return h2 | 0;
        }
        function jc(a2, b2, d2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          var f2 = 0, g2 = 0, i3 = 0, j2 = 0, k2 = 0;
          f2 = c[e2 >> 2] | 0;
          e2 = d2 + (~f2 << 3) | 0;
          d2 = c[b2 >> 2] | 0;
          if (!d2) {
            g2 = 0;
            return g2 | 0;
          }
          b2 = S(d2, f2) | 0;
          if (+h[e2 + (b2 + 1 << 3) >> 3] != 0) {
            g2 = d2;
            return g2 | 0;
          }
          i3 = c[a2 >> 2] | 0;
          if (!((d2 | 0) > 0 ? +h[e2 + (i3 + b2 << 3) >> 3] == 0 : 0)) {
            g2 = d2;
            return g2 | 0;
          }
          if ((i3 | 0) < 1) {
            g2 = 0;
            return g2 | 0;
          } else j2 = d2;
          a: while (1) {
            d2 = S(j2, f2) | 0;
            b2 = 1;
            while (1) {
              if (+h[e2 + (b2 + d2 << 3) >> 3] != 0) {
                g2 = j2;
                k2 = 9;
                break a;
              }
              if ((b2 | 0) < (i3 | 0)) b2 = b2 + 1 | 0;
              else break;
            }
            b2 = j2 + -1 | 0;
            if ((j2 | 0) > 1) j2 = b2;
            else {
              g2 = b2;
              k2 = 9;
              break;
            }
          }
          if ((k2 | 0) == 9) return g2 | 0;
          return 0;
        }
        function kc(a2, b2, d2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          var f2 = 0, g2 = 0, i3 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0;
          f2 = c[e2 >> 2] | 0;
          e2 = d2 + (~f2 << 3) | 0;
          d2 = c[a2 >> 2] | 0;
          if (!d2) {
            g2 = 0;
            return g2 | 0;
          }
          if (+h[e2 + (d2 + f2 << 3) >> 3] != 0) {
            g2 = d2;
            return g2 | 0;
          }
          a2 = c[b2 >> 2] | 0;
          if (+h[e2 + ((S(a2, f2) | 0) + d2 << 3) >> 3] != 0) {
            g2 = d2;
            return g2 | 0;
          }
          if ((a2 | 0) < 1) {
            g2 = 0;
            return g2 | 0;
          }
          if ((d2 | 0) > 0) {
            i3 = 0;
            j2 = 1;
          } else {
            b2 = 0;
            k2 = 1;
            while (1) {
              l2 = (b2 | 0) >= (d2 | 0) ? b2 : d2;
              if ((k2 | 0) == (a2 | 0)) {
                g2 = l2;
                break;
              } else {
                b2 = l2;
                k2 = k2 + 1 | 0;
              }
            }
            return g2 | 0;
          }
          while (1) {
            k2 = S(j2, f2) | 0;
            b2 = d2;
            while (1) {
              if (+h[e2 + (b2 + k2 << 3) >> 3] != 0) {
                m2 = b2;
                break;
              }
              l2 = b2 + -1 | 0;
              if ((b2 | 0) > 1) b2 = l2;
              else {
                m2 = l2;
                break;
              }
            }
            b2 = (i3 | 0) >= (m2 | 0) ? i3 : m2;
            if ((j2 | 0) == (a2 | 0)) {
              g2 = b2;
              break;
            } else {
              i3 = b2;
              j2 = j2 + 1 | 0;
            }
          }
          return g2 | 0;
        }
        function lc(b2, d2, e2, f2, g2, h2, j2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          g2 = g2 | 0;
          h2 = h2 | 0;
          j2 = j2 | 0;
          var k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0;
          k2 = i2;
          i2 = i2 + 16 | 0;
          l2 = k2 + 3 | 0;
          m2 = k2 + 2 | 0;
          n2 = k2 + 1 | 0;
          o2 = k2;
          p2 = bd(d2) | 0;
          a: do
            switch (c[b2 >> 2] | 0) {
              case 3:
              case 2:
              case 1: {
                wc(o2, d2, 1, p2);
                q2 = a[o2 >> 0] | 0;
                if ((q2 + -97 & 255) < 26) {
                  r2 = q2 & 255;
                  s2 = r2 + 224 & 255;
                  t2 = (s2 + -97 & 255) < 26 ? r2 + 192 & 255 : s2;
                  if ((t2 + -97 & 255) < 26) u2 = (t2 & 255) + 224 & 255;
                  else u2 = t2;
                  if ((u2 + -97 & 255) < 26) v2 = (u2 & 255) + 224 & 255;
                  else v2 = u2;
                  if ((v2 + -97 & 255) < 26) w2 = (v2 & 255) + 224 & 255;
                  else w2 = v2;
                  if ((w2 + -97 & 255) < 26) x2 = (w2 & 255) + 224 & 255;
                  else x2 = w2;
                  a[o2 >> 0] = x2;
                  y2 = x2;
                } else y2 = q2;
                q2 = y2 << 24 >> 24 == 83;
                t2 = y2 << 24 >> 24 == 68;
                s2 = q2 | t2;
                switch (y2 << 24 >> 24) {
                  case 67:
                  case 68:
                  case 83:
                  case 90:
                    break;
                  default: {
                    z2 = 1;
                    break a;
                  }
                }
                wc(l2, o2 + 1 | 0, 1, 2);
                wc(m2, o2 + 3 | 0, 1, 3);
                wc(n2, m2 + 1 | 0, 1, 2);
                switch (c[b2 >> 2] | 0) {
                  case 3: {
                    if (!(vc(l2, 3114, 1, 2) | 0)) {
                      if (!(vc(m2, 3121, 1, 3) | 0)) {
                        z2 = 128;
                        break a;
                      }
                      if (!(vc(m2, 3125, 1, 3) | 0)) {
                        z2 = 128;
                        break a;
                      }
                      if (!(vc(m2, 3129, 1, 3) | 0)) {
                        z2 = 128;
                        break a;
                      }
                      if (!(vc(m2, 3133, 1, 3) | 0)) {
                        z2 = 128;
                        break a;
                      }
                      if (!(vc(m2, 3137, 1, 3) | 0)) {
                        z2 = 128;
                        break a;
                      }
                      r2 = (vc(m2, 3141, 1, 3) | 0) == 0;
                      z2 = r2 ? 128 : 0;
                      break a;
                    }
                    if (!(vc(l2, 3152, 1, 2) | 0)) {
                      switch (y2 << 24 >> 24) {
                        case 68:
                        case 83:
                          break;
                        default: {
                          z2 = 0;
                          break a;
                        }
                      }
                      r2 = (vc(m2, 3155, 1, 3) | 0) == 0;
                      z2 = r2 ? 32 : 0;
                      break a;
                    }
                    b: do
                      switch (y2 << 24 >> 24) {
                        case 67:
                        case 90: {
                          if (!(vc(l2, 3163, 1, 2) | 0)) {
                            r2 = (vc(m2, 3155, 1, 3) | 0) == 0;
                            z2 = r2 ? 32 : 0;
                            break a;
                          }
                          switch (y2 << 24 >> 24) {
                            case 68:
                            case 83: {
                              break b;
                              break;
                            }
                            case 67:
                            case 90:
                              break;
                            default: {
                              z2 = 0;
                              break a;
                            }
                          }
                          if (!((vc(l2, 3190, 1, 2) | 0) == 0 & (a[m2 >> 0] | 0) == 71)) {
                            z2 = 0;
                            break a;
                          }
                          if ((((((vc(n2, 3169, 1, 2) | 0 ? vc(n2, 3172, 1, 2) | 0 : 0) ? vc(n2, 3175, 1, 2) | 0 : 0) ? vc(n2, 3178, 1, 2) | 0 : 0) ? vc(n2, 3181, 1, 2) | 0 : 0) ? vc(n2, 3184, 1, 2) | 0 : 0) ? vc(n2, 3187, 1, 2) | 0 : 0) {
                            z2 = 0;
                            break a;
                          }
                          z2 = 128;
                          break a;
                          break;
                        }
                        case 68:
                        case 83:
                          break;
                        default: {
                          z2 = 0;
                          break a;
                        }
                      }
                    while (0);
                    if (!((vc(l2, 3166, 1, 2) | 0) == 0 & (a[m2 >> 0] | 0) == 71)) {
                      z2 = 0;
                      break a;
                    }
                    if ((((((vc(n2, 3169, 1, 2) | 0 ? vc(n2, 3172, 1, 2) | 0 : 0) ? vc(n2, 3175, 1, 2) | 0 : 0) ? vc(n2, 3178, 1, 2) | 0 : 0) ? vc(n2, 3181, 1, 2) | 0 : 0) ? vc(n2, 3184, 1, 2) | 0 : 0) ? vc(n2, 3187, 1, 2) | 0 : 0) {
                      z2 = 0;
                      break a;
                    }
                    z2 = 128;
                    break a;
                    break;
                  }
                  case 2: {
                    if (!(vc(l2, 3114, 1, 2) | 0)) {
                      if (!(vc(m2, 3121, 1, 3) | 0)) {
                        z2 = 2;
                        break a;
                      }
                      if (!(vc(m2, 3125, 1, 3) | 0)) {
                        z2 = 2;
                        break a;
                      }
                      if (!(vc(m2, 3129, 1, 3) | 0)) {
                        z2 = 2;
                        break a;
                      }
                      if (!(vc(m2, 3133, 1, 3) | 0)) {
                        z2 = 2;
                        break a;
                      }
                      if (!(vc(m2, 3137, 1, 3) | 0)) {
                        z2 = 2;
                        break a;
                      }
                      if (!(vc(m2, 3141, 1, 3) | 0)) {
                        z2 = 2;
                        break a;
                      }
                      z2 = 2;
                      break a;
                    }
                    if (!(vc(l2, 3152, 1, 2) | 0)) {
                      r2 = (vc(m2, 3117, 1, 3) | 0) == 0;
                      if (q2 ^ (t2 ^ 1) | r2) {
                        z2 = r2 ? 8 : 2;
                        break a;
                      }
                      z2 = 2;
                      break a;
                    }
                    c: do
                      switch (y2 << 24 >> 24) {
                        case 67:
                        case 90: {
                          if (!(vc(l2, 3163, 1, 2) | 0)) {
                            z2 = 2;
                            break a;
                          }
                          switch (y2 << 24 >> 24) {
                            case 68:
                            case 83: {
                              break c;
                              break;
                            }
                            case 67:
                            case 90:
                              break;
                            default: {
                              z2 = 2;
                              break a;
                            }
                          }
                          if (vc(l2, 3190, 1, 2) | 0) {
                            z2 = 2;
                            break a;
                          }
                          switch (a[m2 >> 0] | 0) {
                            case 71: {
                              if (!(vc(n2, 3169, 1, 2) | 0)) {
                                z2 = 2;
                                break a;
                              }
                              if (!(vc(n2, 3172, 1, 2) | 0)) {
                                z2 = 2;
                                break a;
                              }
                              if (!(vc(n2, 3175, 1, 2) | 0)) {
                                z2 = 2;
                                break a;
                              }
                              if (!(vc(n2, 3178, 1, 2) | 0)) {
                                z2 = 2;
                                break a;
                              }
                              if (!(vc(n2, 3181, 1, 2) | 0)) {
                                z2 = 2;
                                break a;
                              }
                              if (!(vc(n2, 3184, 1, 2) | 0)) {
                                z2 = 2;
                                break a;
                              }
                              z2 = 2;
                              break a;
                              break;
                            }
                            case 77: {
                              if (!(vc(n2, 3169, 1, 2) | 0)) {
                                z2 = 2;
                                break a;
                              }
                              if (!(vc(n2, 3172, 1, 2) | 0)) {
                                z2 = 2;
                                break a;
                              }
                              if (!(vc(n2, 3175, 1, 2) | 0)) {
                                z2 = 2;
                                break a;
                              }
                              if (!(vc(n2, 3178, 1, 2) | 0)) {
                                z2 = 2;
                                break a;
                              }
                              if (!(vc(n2, 3181, 1, 2) | 0)) {
                                z2 = 2;
                                break a;
                              }
                              if (!(vc(n2, 3184, 1, 2) | 0)) {
                                z2 = 2;
                                break a;
                              }
                              z2 = 2;
                              break a;
                              break;
                            }
                            default: {
                              z2 = 2;
                              break a;
                            }
                          }
                          break;
                        }
                        case 68:
                        case 83:
                          break;
                        default: {
                          z2 = 2;
                          break a;
                        }
                      }
                    while (0);
                    if (vc(l2, 3166, 1, 2) | 0) {
                      z2 = 2;
                      break a;
                    }
                    switch (a[m2 >> 0] | 0) {
                      case 71: {
                        if (!(vc(n2, 3169, 1, 2) | 0)) {
                          z2 = 2;
                          break a;
                        }
                        if (!(vc(n2, 3172, 1, 2) | 0)) {
                          z2 = 2;
                          break a;
                        }
                        if (!(vc(n2, 3175, 1, 2) | 0)) {
                          z2 = 2;
                          break a;
                        }
                        if (!(vc(n2, 3178, 1, 2) | 0)) {
                          z2 = 2;
                          break a;
                        }
                        if (!(vc(n2, 3181, 1, 2) | 0)) {
                          z2 = 2;
                          break a;
                        }
                        if (!(vc(n2, 3184, 1, 2) | 0)) {
                          z2 = 2;
                          break a;
                        }
                        z2 = 2;
                        break a;
                        break;
                      }
                      case 77: {
                        if (!(vc(n2, 3169, 1, 2) | 0)) {
                          z2 = 2;
                          break a;
                        }
                        if (!(vc(n2, 3172, 1, 2) | 0)) {
                          z2 = 2;
                          break a;
                        }
                        if (!(vc(n2, 3175, 1, 2) | 0)) {
                          z2 = 2;
                          break a;
                        }
                        if (!(vc(n2, 3178, 1, 2) | 0)) {
                          z2 = 2;
                          break a;
                        }
                        if (!(vc(n2, 3181, 1, 2) | 0)) {
                          z2 = 2;
                          break a;
                        }
                        if (!(vc(n2, 3184, 1, 2) | 0)) {
                          z2 = 2;
                          break a;
                        }
                        z2 = 2;
                        break a;
                        break;
                      }
                      default: {
                        z2 = 2;
                        break a;
                      }
                    }
                    break;
                  }
                  default: {
                    if (!(vc(l2, 3114, 1, 2) | 0)) {
                      if (!(vc(m2, 3117, 1, 3) | 0)) {
                        z2 = 64;
                        break a;
                      }
                      if (!(vc(m2, 3121, 1, 3) | 0)) {
                        z2 = 32;
                        break a;
                      }
                      if (!(vc(m2, 3125, 1, 3) | 0)) {
                        z2 = 32;
                        break a;
                      }
                      if (!(vc(m2, 3129, 1, 3) | 0)) {
                        z2 = 32;
                        break a;
                      }
                      if (!(vc(m2, 3133, 1, 3) | 0)) {
                        z2 = 32;
                        break a;
                      }
                      if (!(vc(m2, 3137, 1, 3) | 0)) {
                        z2 = 32;
                        break a;
                      }
                      if (!(vc(m2, 3141, 1, 3) | 0)) {
                        z2 = 32;
                        break a;
                      }
                      t2 = (vc(m2, 3145, 1, 3) | 0) == 0;
                      z2 = t2 ? 64 : 1;
                      break a;
                    }
                    if (!(vc(l2, 3149, 1, 2) | 0)) {
                      t2 = (vc(m2, 3117, 1, 3) | 0) == 0;
                      z2 = t2 ? 64 : 1;
                      break a;
                    }
                    if (!(vc(l2, 3152, 1, 2) | 0)) {
                      t2 = (vc(m2, 3117, 1, 3) | 0) == 0;
                      if (t2 | s2 ^ 1) {
                        z2 = t2 ? 64 : 1;
                        break a;
                      }
                      if (!(vc(m2, 3155, 1, 3) | 0)) {
                        z2 = 32;
                        break a;
                      }
                      t2 = (vc(m2, 3159, 1, 3) | 0) == 0;
                      z2 = t2 ? 64 : 1;
                      break a;
                    }
                    d: do
                      switch (y2 << 24 >> 24) {
                        case 67:
                        case 90: {
                          if (!(vc(l2, 3163, 1, 2) | 0)) {
                            if (!(vc(m2, 3117, 1, 3) | 0)) {
                              z2 = 64;
                              break a;
                            }
                            if (!(vc(m2, 3155, 1, 3) | 0)) {
                              z2 = 32;
                              break a;
                            }
                            t2 = (vc(m2, 3159, 1, 3) | 0) == 0;
                            z2 = t2 ? 64 : 1;
                            break a;
                          }
                          switch (y2 << 24 >> 24) {
                            case 68:
                            case 83: {
                              A2 = 27;
                              break d;
                              break;
                            }
                            case 67:
                            case 90:
                              break;
                            default:
                              break d;
                          }
                          if (!(vc(l2, 3190, 1, 2) | 0)) switch (a[m2 >> 0] | 0) {
                            case 71: {
                              if ((((((vc(n2, 3169, 1, 2) | 0 ? vc(n2, 3172, 1, 2) | 0 : 0) ? vc(n2, 3175, 1, 2) | 0 : 0) ? vc(n2, 3178, 1, 2) | 0 : 0) ? vc(n2, 3181, 1, 2) | 0 : 0) ? vc(n2, 3184, 1, 2) | 0 : 0) ? vc(n2, 3187, 1, 2) | 0 : 0) {
                                z2 = 1;
                                break a;
                              }
                              z2 = 32;
                              break a;
                              break;
                            }
                            case 77: {
                              if ((((((vc(n2, 3169, 1, 2) | 0 ? vc(n2, 3172, 1, 2) | 0 : 0) ? vc(n2, 3175, 1, 2) | 0 : 0) ? vc(n2, 3178, 1, 2) | 0 : 0) ? vc(n2, 3181, 1, 2) | 0 : 0) ? vc(n2, 3184, 1, 2) | 0 : 0) ? vc(n2, 3187, 1, 2) | 0 : 0) {
                                z2 = 1;
                                break a;
                              }
                              z2 = 32;
                              break a;
                              break;
                            }
                            default: {
                              z2 = 1;
                              break a;
                            }
                          }
                          break;
                        }
                        case 68:
                        case 83: {
                          A2 = 27;
                          break;
                        }
                        default: {
                        }
                      }
                    while (0);
                    if ((A2 | 0) == 27 ? (vc(l2, 3166, 1, 2) | 0) == 0 : 0) switch (a[m2 >> 0] | 0) {
                      case 71: {
                        if ((((((vc(n2, 3169, 1, 2) | 0 ? vc(n2, 3172, 1, 2) | 0 : 0) ? vc(n2, 3175, 1, 2) | 0 : 0) ? vc(n2, 3178, 1, 2) | 0 : 0) ? vc(n2, 3181, 1, 2) | 0 : 0) ? vc(n2, 3184, 1, 2) | 0 : 0) ? vc(n2, 3187, 1, 2) | 0 : 0) {
                          z2 = 1;
                          break a;
                        }
                        z2 = 32;
                        break a;
                        break;
                      }
                      case 77: {
                        if ((((((vc(n2, 3169, 1, 2) | 0 ? vc(n2, 3172, 1, 2) | 0 : 0) ? vc(n2, 3175, 1, 2) | 0 : 0) ? vc(n2, 3178, 1, 2) | 0 : 0) ? vc(n2, 3181, 1, 2) | 0 : 0) ? vc(n2, 3184, 1, 2) | 0 : 0) ? vc(n2, 3187, 1, 2) | 0 : 0) {
                          z2 = 1;
                          break a;
                        }
                        z2 = 32;
                        break a;
                        break;
                      }
                      default: {
                        z2 = 1;
                        break a;
                      }
                    }
                    if (!(vc(l2, 3193, 1, 2) | 0)) {
                      if (vc(m2, 3117, 1, 3) | 0) {
                        z2 = 1;
                        break a;
                      }
                      z2 = (c[j2 >> 2] | 0) < 65 ? 1 : 32;
                      break a;
                    }
                    if (!(vc(l2, 3196, 1, 2) | 0)) {
                      if (vc(m2, 3117, 1, 3) | 0) {
                        z2 = 1;
                        break a;
                      }
                      z2 = (c[g2 >> 2] | 0) < 65 ? 1 : 32;
                      break a;
                    }
                    if (!(vc(l2, 3184, 1, 2) | 0)) {
                      s2 = (vc(m2, 3145, 1, 3) | 0) == 0;
                      z2 = s2 ? 64 : 1;
                      break a;
                    }
                    if (!(vc(l2, 3199, 1, 2) | 0)) {
                      s2 = (vc(m2, 3202, 1, 3) | 0) == 0;
                      z2 = s2 ? 64 : 1;
                      break a;
                    }
                    switch (y2 << 24 >> 24) {
                      case 68:
                      case 83:
                        break;
                      default: {
                        z2 = 1;
                        break a;
                      }
                    }
                    if (vc(l2, 3206, 1, 2) | 0) {
                      z2 = 1;
                      break a;
                    }
                    z2 = 1;
                    break a;
                  }
                }
                break;
              }
              case 4: {
                z2 = 6;
                break;
              }
              case 5: {
                z2 = 2;
                break;
              }
              case 6: {
                s2 = c[f2 >> 2] | 0;
                t2 = c[g2 >> 2] | 0;
                z2 = ~~(+(((s2 | 0) > (t2 | 0) ? t2 : s2) | 0) * 1.600000023841858);
                break;
              }
              case 7: {
                z2 = 1;
                break;
              }
              case 8: {
                z2 = 50;
                break;
              }
              case 9: {
                z2 = 25;
                break;
              }
              case 10: {
                z2 = ic(684, 16056, 688) | 0;
                break;
              }
              case 11: {
                z2 = ic(16060, 16056, 688) | 0;
                break;
              }
              case 16:
              case 15:
              case 14:
              case 13:
              case 12: {
                z2 = mc(b2, d2, e2, f2, g2, h2, j2) | 0;
                break;
              }
              default:
                z2 = -1;
            }
          while (0);
          i2 = k2;
          return z2 | 0;
        }
        function mc(a2, b2, d2, e2, f2, h2, j2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          h2 = h2 | 0;
          j2 = j2 | 0;
          var k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0;
          j2 = i2;
          i2 = i2 + 16 | 0;
          e2 = j2;
          d2 = c[a2 >> 2] | 0;
          switch (d2 | 0) {
            case 16:
            case 13:
            case 15: {
              b2 = (c[h2 >> 2] | 0) - (c[f2 >> 2] | 0) | 0;
              f2 = b2 + 1 | 0;
              if ((b2 | 0) > 148) {
                g[e2 >> 2] = +Q(+ +(f2 | 0)) / 0.6931471805599453;
                h2 = (f2 | 0) / (gc(e2) | 0) | 0;
                k2 = (h2 | 0) > 10 ? h2 : 10;
                l2 = c[a2 >> 2] | 0;
              } else {
                k2 = (b2 | 0) > 58 ? 10 : (b2 | 0) > 28 ? 4 : 2;
                l2 = d2;
              }
              a2 = (b2 | 0) > 5998 ? 256 : (b2 | 0) > 2998 ? 128 : (b2 | 0) > 588 ? 64 : k2;
              k2 = a2 - ((a2 | 0) % 2 | 0) | 0;
              m2 = f2;
              n2 = (k2 | 0) > 2 ? k2 : 2;
              o2 = l2;
              break;
            }
            default: {
              m2 = 0;
              n2 = 0;
              o2 = d2;
            }
          }
          switch (o2 | 0) {
            case 12: {
              p2 = 75;
              break;
            }
            case 14: {
              p2 = 14;
              break;
            }
            case 15: {
              p2 = n2;
              break;
            }
            case 13: {
              if ((m2 | 0) < 501) p2 = n2;
              else p2 = (n2 * 3 | 0) / 2 | 0;
              break;
            }
            case 16: {
              m2 = (n2 | 0) > 13;
              p2 = m2 ? 2 : m2 & 1;
              break;
            }
            default:
              p2 = -1;
          }
          i2 = j2;
          return p2 | 0;
        }
        function nc(b2, c2) {
          b2 = b2 | 0;
          c2 = c2 | 0;
          var d2 = 0, e2 = 0, f2 = 0, g2 = 0;
          d2 = a[b2 >> 0] | 0;
          b2 = d2 & 255;
          e2 = a[c2 >> 0] | 0;
          c2 = e2 & 255;
          if (d2 << 24 >> 24 == e2 << 24 >> 24) {
            f2 = 1;
            g2 = f2 & 1;
            return g2 | 0;
          }
          f2 = (((d2 + -97 & 255) < 26 ? b2 + -32 | 0 : b2) | 0) == (((e2 + -97 & 255) < 26 ? c2 + -32 | 0 : c2) | 0);
          g2 = f2 & 1;
          return g2 | 0;
        }
        function oc(b2) {
          b2 = b2 | 0;
          var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0;
          d2 = c[2784] | 0;
          e2 = c[2782] | 0;
          if ((d2 | 0) > (e2 | 0)) {
            c[2782] = d2;
            f2 = d2;
          } else f2 = e2;
          e2 = f2 + 1 | 0;
          d2 = c[179] | 0;
          g2 = c[180] | 0;
          if ((e2 | 0) < (d2 | 0)) {
            h2 = g2;
            i3 = f2;
          } else {
            if ((g2 | 0) == 16636) {
              c[179] = 1024;
              j2 = 1024;
            } else j2 = d2;
            if ((j2 | 0) > (e2 | 0)) k2 = j2;
            else {
              d2 = j2;
              do
                d2 = d2 << 1;
              while ((d2 | 0) <= (e2 | 0));
              c[179] = d2;
              k2 = d2;
            }
            d2 = ee(k2) | 0;
            if (!d2) {
              Wb(113, 3230);
              l2 = c[180] | 0;
            } else l2 = g2;
            g2 = l2 + f2 | 0;
            if ((f2 | 0) > 0) {
              f2 = l2;
              k2 = d2;
              while (1) {
                a[k2 >> 0] = a[f2 >> 0] | 0;
                f2 = f2 + 1 | 0;
                if (f2 >>> 0 >= g2 >>> 0) break;
                else k2 = k2 + 1 | 0;
              }
            }
            if ((l2 | 0) != 16636) fe(l2);
            c[180] = d2;
            h2 = d2;
            i3 = c[2782] | 0;
          }
          d2 = h2 + i3 | 0;
          if (!b2) m2 = d2;
          else {
            a[d2 >> 0] = b2;
            m2 = d2 + 1 | 0;
          }
          a[m2 >> 0] = 0;
          Xd(h2, c[2771] | 0) | 0;
          d2 = h2 + (bd(h2) | 0) | 0;
          if (d2 >>> 0 < m2 >>> 0) n2 = d2;
          else return 0;
          do {
            d2 = n2 + 1 | 0;
            Rd(a[n2 >> 0] | 0, c[2771] | 0) | 0;
            Xd(d2, c[2771] | 0) | 0;
            n2 = d2 + (bd(d2) | 0) | 0;
          } while (n2 >>> 0 < m2 >>> 0);
          return 0;
        }
        function pc(b2) {
          b2 = b2 | 0;
          var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0;
          d2 = c[2782] | 0;
          e2 = c[179] | 0;
          f2 = c[180] | 0;
          if ((d2 | 0) < (e2 | 0)) {
            g2 = d2;
            h2 = f2;
            i3 = b2 & 255;
            j2 = g2 + 1 | 0;
            c[2782] = j2;
            k2 = h2 + g2 | 0;
            a[k2 >> 0] = i3;
            return;
          }
          if ((f2 | 0) == 16636) {
            c[179] = 1024;
            l2 = 1024;
          } else l2 = e2;
          if ((l2 | 0) > (d2 | 0)) m2 = l2;
          else {
            n2 = l2;
            do
              n2 = n2 << 1;
            while ((n2 | 0) <= (d2 | 0));
            c[179] = n2;
            m2 = n2;
          }
          n2 = ee(m2) | 0;
          if (!n2) {
            Wb(113, 3230);
            o2 = c[180] | 0;
          } else o2 = f2;
          f2 = o2 + e2 | 0;
          if ((e2 | 0) > 0) {
            e2 = o2;
            m2 = n2;
            while (1) {
              a[m2 >> 0] = a[e2 >> 0] | 0;
              e2 = e2 + 1 | 0;
              if (e2 >>> 0 >= f2 >>> 0) break;
              else m2 = m2 + 1 | 0;
            }
          }
          if ((o2 | 0) != 16636) fe(o2);
          c[180] = n2;
          g2 = c[2782] | 0;
          h2 = n2;
          i3 = b2 & 255;
          j2 = g2 + 1 | 0;
          c[2782] = j2;
          k2 = h2 + g2 | 0;
          a[k2 >> 0] = i3;
          return;
        }
        function qc(b2) {
          b2 = b2 | 0;
          var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0;
          d2 = i2;
          i2 = i2 + 288 | 0;
          e2 = d2;
          f2 = d2 + 24 | 0;
          g2 = d2 + 8 | 0;
          h2 = d2 + 4 | 0;
          c[2769] = 1;
          j2 = b2 + 4 | 0;
          k2 = c[j2 >> 2] | 0;
          if (k2 >>> 0 > 99)
            if (!(c[b2 >> 2] | 0)) {
              Wb(101, 3245);
              l2 = 101;
              i2 = d2;
              return l2 | 0;
            } else {
              c[(Tc() | 0) >> 2] = 101;
              l2 = 101;
              i2 = d2;
              return l2 | 0;
            }
          if (!(c[2770] | 0)) {
            Xb();
            m2 = c[j2 >> 2] | 0;
          } else m2 = k2;
          k2 = 6260 + (m2 * 48 | 0) | 0;
          c[1564] = k2;
          a: do
            if (c[k2 >> 2] | 0) {
              n2 = c[b2 + 8 >> 2] | 0;
              do
                if (n2 | 0) {
                  Ac(n2, c[b2 + 12 >> 2] | 0, f2);
                  o2 = Bc(f2, h2) | 0;
                  if ((o2 | 0) == (c[6260 + (m2 * 48 | 0) + 8 >> 2] | 0) ? (c[h2 >> 2] | 0) == (c[6260 + (m2 * 48 | 0) + 12 >> 2] | 0) : 0) break;
                  c[g2 + 4 >> 2] = c[j2 >> 2];
                  c[g2 + 8 >> 2] = 0;
                  c[g2 >> 2] = c[b2 >> 2];
                  o2 = Oa(g2) | 0;
                  if (!o2) break a;
                  else l2 = o2;
                  i2 = d2;
                  return l2 | 0;
                }
              while (0);
              n2 = c[b2 + 32 >> 2] | 0;
              if (!n2) {
                l2 = 0;
                i2 = d2;
                return l2 | 0;
              }
              c[6260 + (m2 * 48 | 0) + 32 >> 2] = (a[n2 >> 0] | 32) << 24 >> 24 == 122 & 1;
              l2 = 0;
              i2 = d2;
              return l2 | 0;
            }
          while (0);
          g2 = b2 + 28 | 0;
          h2 = c[g2 >> 2] | 0;
          n2 = 6260 + (m2 * 48 | 0) + 16 | 0;
          c[n2 >> 2] = h2;
          o2 = c[b2 + 32 >> 2] | 0;
          if (!o2) p2 = 0;
          else p2 = (a[o2 >> 0] | 32) << 24 >> 24 == 122;
          c[6260 + (m2 * 48 | 0) + 32 >> 2] = p2 & 1;
          p2 = c[b2 + 24 >> 2] | 0;
          b: do
            if (!p2) {
              o2 = 6260 + (m2 * 48 | 0) + 24 | 0;
              if ((h2 | 0) > 0) {
                c[o2 >> 2] = 0;
                q2 = 0;
                break;
              } else {
                c[o2 >> 2] = 1;
                q2 = 1;
                break;
              }
            } else switch (a[p2 >> 0] | 0) {
              case 70:
              case 102: {
                c[6260 + (m2 * 48 | 0) + 24 >> 2] = 1;
                q2 = 1;
                break b;
                break;
              }
              default: {
                c[6260 + (m2 * 48 | 0) + 24 >> 2] = 0;
                q2 = 0;
                break b;
              }
            }
          while (0);
          p2 = c[b2 + 8 >> 2] | 0;
          if (p2) {
            Ac(p2, c[b2 + 12 >> 2] | 0, f2);
            if (!(a[f2 >> 0] | 0))
              if (!(c[b2 >> 2] | 0)) {
                rc(107, 3245, b2);
                l2 = 107;
                i2 = d2;
                return l2 | 0;
              } else {
                c[(Tc() | 0) >> 2] = 107;
                l2 = 107;
                i2 = d2;
                return l2 | 0;
              }
          } else {
            c[e2 >> 2] = c[j2 >> 2];
            Vd(f2, 3250, e2) | 0;
          }
          e2 = 6260 + (m2 * 48 | 0) + 44 | 0;
          c[e2 >> 2] = 0;
          c[6260 + (m2 * 48 | 0) + 36 >> 2] = 0;
          j2 = 6260 + (m2 * 48 | 0) + 40 | 0;
          c[j2 >> 2] = 0;
          c[k2 >> 2] = 0;
          p2 = 6260 + (m2 * 48 | 0) + 28 | 0;
          c[p2 >> 2] = 3;
          h2 = c[b2 + 16 >> 2] | 0;
          c: do
            if (h2 | 0) {
              switch (a[h2 >> 0] | 0) {
                case 79:
                case 111: {
                  if (!(hd(f2, 0) | 0)) break c;
                  o2 = (c[b2 >> 2] | 0) == 0;
                  r2 = Tc() | 0;
                  if (o2) rc(c[r2 >> 2] | 0, 3245, b2);
                  l2 = c[r2 >> 2] | 0;
                  i2 = d2;
                  return l2 | 0;
                }
                case 83:
                case 115: {
                  c[e2 >> 2] = 1;
                  r2 = $d() | 0;
                  c[k2 >> 2] = r2;
                  if (r2 | 0) {
                    c[6260 + (m2 * 48 | 0) + 4 >> 2] = 0;
                    c[6260 + (m2 * 48 | 0) + 12 >> 2] = -1;
                    c[6260 + (m2 * 48 | 0) + 8 >> 2] = -1;
                    c[6260 + (m2 * 48 | 0) + 20 >> 2] = 1;
                    l2 = 0;
                    i2 = d2;
                    return l2 | 0;
                  }
                  r2 = (c[b2 >> 2] | 0) == 0;
                  o2 = Tc() | 0;
                  if (r2) rc(c[o2 >> 2] | 0, 3245, b2);
                  l2 = c[o2 >> 2] | 0;
                  i2 = d2;
                  return l2 | 0;
                }
                case 78:
                case 110: {
                  if (!(hd(f2, 0) | 0))
                    if (!(c[b2 >> 2] | 0)) {
                      rc(128, 3245, b2);
                      l2 = 128;
                      i2 = d2;
                      return l2 | 0;
                    } else {
                      c[(Tc() | 0) >> 2] = 128;
                      l2 = 128;
                      i2 = d2;
                      return l2 | 0;
                    }
                  break;
                }
                case 82:
                case 114:
                  break;
                default:
                  break c;
              }
              o2 = Hd(f2, c[175] | 0) | 0;
              if (o2 | 0) Bd(o2) | 0;
            }
          while (0);
          e2 = ee((bd(f2) | 0) + 1 | 0) | 0;
          c[6260 + (m2 * 48 | 0) + 4 >> 2] = e2;
          if (!e2)
            if (!(c[b2 >> 2] | 0)) {
              rc(113, 3259, b2);
              l2 = 113;
              i2 = d2;
              return l2 | 0;
            } else {
              c[(Tc() | 0) >> 2] = 113;
              l2 = 113;
              i2 = d2;
              return l2 | 0;
            }
          fd(e2, f2) | 0;
          e2 = b2 + 20 | 0;
          if (!(c[e2 >> 2] | 0)) s2 = q2;
          else s2 = (c[n2 >> 2] | 0) == 0 ? q2 : 0;
          q2 = Hd(f2, c[700 + ((s2 | 2) << 2) >> 2] | 0) | 0;
          do
            if (!q2) {
              n2 = Hd(f2, c[692 + (s2 << 2) >> 2] | 0) | 0;
              if (n2 | 0) {
                c[p2 >> 2] = 1;
                t2 = n2;
                break;
              }
              n2 = Hd(f2, c[700 + (s2 << 2) >> 2] | 0) | 0;
              if (n2 | 0) {
                c[j2 >> 2] = 1;
                c[p2 >> 2] = 2;
                t2 = n2;
                break;
              }
              n2 = (c[b2 >> 2] | 0) == 0;
              h2 = Tc() | 0;
              if (n2) Wb(c[h2 >> 2] | 0, 3245);
              l2 = c[h2 >> 2] | 0;
              i2 = d2;
              return l2 | 0;
            } else t2 = q2;
          while (0);
          c[k2 >> 2] = t2;
          q2 = 6260 + (m2 * 48 | 0) + 20 | 0;
          c[q2 >> 2] = Vb(t2) | 0;
          t2 = Bc(f2, 6260 + (m2 * 48 | 0) + 12 | 0) | 0;
          c[6260 + (m2 * 48 | 0) + 8 >> 2] = t2;
          if ((t2 | 0) == -1)
            if (!(c[b2 >> 2] | 0)) {
              rc(108, 3245, b2);
              l2 = 108;
              i2 = d2;
              return l2 | 0;
            } else {
              c[(Tc() | 0) >> 2] = 108;
              l2 = 108;
              i2 = d2;
              return l2 | 0;
            }
          if (!(c[q2 >> 2] | 0)) {
            l2 = 0;
            i2 = d2;
            return l2 | 0;
          }
          if (c[g2 >> 2] | 0) {
            Sd(c[k2 >> 2] | 0);
            l2 = 0;
            i2 = d2;
            return l2 | 0;
          }
          g2 = c[e2 >> 2] | 0;
          if (!g2) {
            l2 = 0;
            i2 = d2;
            return l2 | 0;
          }
          switch (a[g2 >> 0] | 0) {
            case 65:
            case 97:
              break;
            default: {
              l2 = 0;
              i2 = d2;
              return l2 | 0;
            }
          }
          if (!(Kd(c[k2 >> 2] | 0, 0, 2) | 0)) {
            l2 = 0;
            i2 = d2;
            return l2 | 0;
          }
          if (!(c[b2 >> 2] | 0)) {
            rc(129, 3245, b2);
            l2 = 129;
            i2 = d2;
            return l2 | 0;
          } else {
            c[(Tc() | 0) >> 2] = 129;
            l2 = 129;
            i2 = d2;
            return l2 | 0;
          }
          return 0;
        }
        function rc(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0;
          e2 = d2 + 8 | 0;
          f2 = c[e2 >> 2] | 0;
          if (!f2) {
            Wb(a2, b2);
            return;
          }
          g2 = d2 + 12 | 0;
          d2 = c[g2 >> 2] | 0;
          h2 = c[179] | 0;
          i3 = c[180] | 0;
          if ((d2 | 0) < (h2 | 0)) {
            j2 = i3;
            k2 = f2;
            l2 = d2;
          } else {
            if ((i3 | 0) == 16636) {
              c[179] = 1024;
              m2 = 1024;
            } else m2 = h2;
            if ((m2 | 0) > (d2 | 0)) n2 = m2;
            else {
              h2 = m2;
              do
                h2 = h2 << 1;
              while ((h2 | 0) <= (d2 | 0));
              c[179] = h2;
              n2 = h2;
            }
            h2 = ee(n2) | 0;
            if (!h2) {
              Wb(113, 3230);
              o2 = c[180] | 0;
            } else o2 = i3;
            if ((o2 | 0) != 16636) fe(o2);
            c[180] = h2;
            j2 = h2;
            k2 = c[e2 >> 2] | 0;
            l2 = c[g2 >> 2] | 0;
          }
          c[(c[1564] | 0) + 4 >> 2] = j2;
          Ac(k2, l2, j2);
          Wb(a2, b2);
          return;
        }
        function sc(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, g2 = 0, h2 = 0;
          e2 = i2;
          i2 = i2 + 64 | 0;
          f2 = e2;
          g2 = e2 + 40 | 0;
          h2 = e2 + 4 | 0;
          c[f2 >> 2] = d2;
          Vd(g2, 3250, f2) | 0;
          c[h2 >> 2] = 1;
          c[h2 + 4 >> 2] = d2;
          c[h2 + 8 >> 2] = g2;
          c[h2 + 12 >> 2] = bd(g2) | 0;
          c[h2 + 16 >> 2] = 0;
          c[h2 + 20 >> 2] = (a2 | 0) == 3 ? 3268 : 3270;
          c[h2 + 24 >> 2] = (b2 | 0) == 5 ? 3272 : 3274;
          c[h2 + 28 >> 2] = (a2 | 0) == 4 & 1;
          c[h2 + 32 >> 2] = 0;
          a2 = qc(h2) | 0;
          i2 = e2;
          return a2 | 0;
        }
        function tc(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          var d2 = 0, e2 = 0, f2 = 0, g2 = 0, i3 = 0, j2 = 0, k2 = 0;
          d2 = +h[a2 >> 3];
          a2 = c[b2 >> 2] | 0;
          if (!a2) {
            e2 = 1;
            return +e2;
          }
          if ((a2 | 0) < 0) {
            f2 = 0 - a2 | 0;
            g2 = 1 / d2;
          } else {
            f2 = a2;
            g2 = d2;
          }
          d2 = (f2 & 1 | 0) == 0 ? 1 : g2;
          a2 = f2 >>> 1;
          if (!a2) {
            e2 = d2;
            return +e2;
          } else {
            i3 = d2;
            j2 = g2;
            k2 = a2;
          }
          while (1) {
            j2 = j2 * j2;
            g2 = (k2 & 1 | 0) == 0 ? i3 : i3 * j2;
            k2 = k2 >>> 1;
            if (!k2) {
              e2 = g2;
              break;
            } else i3 = g2;
          }
          return +e2;
        }
        function uc(b2, d2, e2, f2, g2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          g2 = g2 | 0;
          var h2 = 0, i3 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0;
          h2 = c[f2 >> 2] | 0;
          if ((h2 | 0) > 0) {
            f2 = g2;
            i3 = 0;
            j2 = b2;
            while (1) {
              k2 = c[d2 + (i3 << 2) >> 2] | 0;
              l2 = c[e2 + (i3 << 2) >> 2] | 0;
              i3 = i3 + 1 | 0;
              if (k2 >>> 0 < j2 >>> 0 & (k2 + l2 | 0) >>> 0 > b2 >>> 0) {
                m2 = 5;
                break;
              }
              k2 = f2 - l2 | 0;
              if ((k2 | 0) < 1) {
                n2 = 0;
                o2 = b2;
                p2 = i3;
                q2 = k2;
                break;
              }
              if ((i3 | 0) >= (h2 | 0)) {
                n2 = 0;
                o2 = b2;
                p2 = h2;
                q2 = k2;
                break;
              } else {
                f2 = k2;
                j2 = j2 + l2 | 0;
              }
            }
            if ((m2 | 0) == 5) {
              n2 = b2;
              o2 = $b(g2, 3276) | 0;
              p2 = h2;
              q2 = g2;
            }
            if ((p2 | 0) > 0) {
              h2 = g2;
              m2 = 0;
              j2 = o2;
              while (1) {
                f2 = c[e2 + (m2 << 2) >> 2] | 0;
                i3 = (f2 | 0) < (h2 | 0) ? f2 : h2;
                f2 = h2 - i3 | 0;
                if ((i3 | 0) > 0) {
                  l2 = c[d2 + (m2 << 2) >> 2] | 0;
                  k2 = i3;
                  i3 = j2;
                  while (1) {
                    r2 = i3 + 1 | 0;
                    a[i3 >> 0] = a[l2 >> 0] | 0;
                    if ((k2 | 0) > 1) {
                      l2 = l2 + 1 | 0;
                      k2 = k2 + -1 | 0;
                      i3 = r2;
                    } else {
                      s2 = r2;
                      break;
                    }
                  }
                } else s2 = j2;
                m2 = m2 + 1 | 0;
                if ((m2 | 0) == (p2 | 0)) {
                  t2 = n2;
                  u2 = o2;
                  v2 = f2;
                  w2 = s2;
                  x2 = q2;
                  break;
                } else {
                  h2 = f2;
                  j2 = s2;
                }
              }
            } else {
              t2 = n2;
              u2 = o2;
              v2 = g2;
              w2 = o2;
              x2 = q2;
            }
          } else {
            t2 = 0;
            u2 = b2;
            v2 = g2;
            w2 = b2;
            x2 = g2;
          }
          if ((v2 | 0) > 0) je(w2 | 0, 32, v2 | 0) | 0;
          if (!t2) return;
          me(t2 | 0, u2 | 0, x2 | 0) | 0;
          fe(u2);
          return;
        }
        function vc(b2, c2, d2, e2) {
          b2 = b2 | 0;
          c2 = c2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          var f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0;
          f2 = b2 + d2 | 0;
          g2 = c2 + e2 | 0;
          if ((d2 | 0) > (e2 | 0)) {
            a: do
              if ((e2 | 0) > 0) {
                h2 = b2;
                i3 = c2;
                while (1) {
                  j2 = a[h2 >> 0] | 0;
                  k2 = a[i3 >> 0] | 0;
                  if (j2 << 24 >> 24 != k2 << 24 >> 24) break;
                  l2 = h2 + 1 | 0;
                  i3 = i3 + 1 | 0;
                  if (i3 >>> 0 >= g2 >>> 0) {
                    m2 = l2;
                    break a;
                  } else h2 = l2;
                }
                n2 = (j2 & 255) - (k2 & 255) | 0;
                return n2 | 0;
              } else m2 = b2;
            while (0);
            if (m2 >>> 0 < f2 >>> 0) o2 = m2;
            else {
              n2 = 0;
              return n2 | 0;
            }
            while (1) {
              p2 = a[o2 >> 0] | 0;
              o2 = o2 + 1 | 0;
              if (p2 << 24 >> 24 != 32) break;
              if (o2 >>> 0 >= f2 >>> 0) {
                n2 = 0;
                q2 = 18;
                break;
              }
            }
            if ((q2 | 0) == 18) return n2 | 0;
            n2 = (p2 & 255) + -32 | 0;
            return n2 | 0;
          } else {
            b: do
              if ((d2 | 0) > 0) {
                p2 = c2;
                o2 = b2;
                while (1) {
                  r2 = a[o2 >> 0] | 0;
                  s2 = a[p2 >> 0] | 0;
                  if (r2 << 24 >> 24 != s2 << 24 >> 24) break;
                  o2 = o2 + 1 | 0;
                  m2 = p2 + 1 | 0;
                  if (o2 >>> 0 >= f2 >>> 0) {
                    t2 = m2;
                    break b;
                  } else p2 = m2;
                }
                n2 = (r2 & 255) - (s2 & 255) | 0;
                return n2 | 0;
              } else t2 = c2;
            while (0);
            if (t2 >>> 0 < g2 >>> 0) u2 = t2;
            else {
              n2 = 0;
              return n2 | 0;
            }
            while (1) {
              v2 = a[u2 >> 0] | 0;
              u2 = u2 + 1 | 0;
              if (v2 << 24 >> 24 != 32) break;
              if (u2 >>> 0 >= g2 >>> 0) {
                n2 = 0;
                q2 = 18;
                break;
              }
            }
            if ((q2 | 0) == 18) return n2 | 0;
            n2 = 32 - (v2 & 255) | 0;
            return n2 | 0;
          }
          return 0;
        }
        function wc(b2, c2, d2, e2) {
          b2 = b2 | 0;
          c2 = c2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          var f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0;
          f2 = b2 + d2 | 0;
          if ((d2 | 0) > (e2 | 0)) {
            g2 = c2 + e2 | 0;
            if (!(b2 >>> 0 > c2 >>> 0 & g2 >>> 0 > b2 >>> 0))
              if ((e2 | 0) > 0) {
                h2 = b2;
                i3 = c2;
                while (1) {
                  j2 = h2 + 1 | 0;
                  a[h2 >> 0] = a[i3 >> 0] | 0;
                  i3 = i3 + 1 | 0;
                  if (i3 >>> 0 >= g2 >>> 0) {
                    k2 = j2;
                    break;
                  } else h2 = j2;
                }
              } else k2 = b2;
            else {
              h2 = b2 + e2 | 0;
              if ((e2 | 0) > 0) {
                i3 = g2;
                g2 = h2;
                while (1) {
                  i3 = i3 + -1 | 0;
                  j2 = g2 + -1 | 0;
                  a[j2 >> 0] = a[i3 >> 0] | 0;
                  if (i3 >>> 0 <= c2 >>> 0) {
                    l2 = j2;
                    break;
                  } else g2 = j2;
                }
              } else l2 = h2;
              k2 = l2 + e2 | 0;
            }
            if (k2 >>> 0 >= f2 >>> 0) return;
            je(k2 | 0, 32, b2 + (d2 - k2) | 0) | 0;
            return;
          } else {
            if (b2 >>> 0 > c2 >>> 0 ? (k2 = c2 + d2 | 0, k2 >>> 0 > b2 >>> 0) : 0) {
              if ((d2 | 0) > 0) {
                m2 = f2;
                n2 = k2;
              } else return;
              do {
                n2 = n2 + -1 | 0;
                m2 = m2 + -1 | 0;
                a[m2 >> 0] = a[n2 >> 0] | 0;
              } while (m2 >>> 0 > b2 >>> 0);
              return;
            }
            if ((d2 | 0) > 0) {
              o2 = b2;
              p2 = c2;
            } else return;
            while (1) {
              a[o2 >> 0] = a[p2 >> 0] | 0;
              o2 = o2 + 1 | 0;
              if (o2 >>> 0 >= f2 >>> 0) break;
              else p2 = p2 + 1 | 0;
            }
            return;
          }
        }
        function xc(a2) {
          a2 = a2 | 0;
          var b2 = 0, d2 = 0, e2 = 0;
          b2 = c[a2 + 4 >> 2] | 0;
          d2 = 6260 + (b2 * 48 | 0) | 0;
          c[1564] = d2;
          if (b2 >>> 0 > 99)
            if (!(c[a2 >> 2] | 0)) {
              Wb(101, 3396);
              e2 = 101;
              return e2 | 0;
            } else {
              c[(Tc() | 0) >> 2] = 101;
              e2 = 101;
              return e2 | 0;
            }
          if ((c[d2 >> 2] | 0) == 0 ? sc(3, 5, b2) | 0 : 0)
            if (!(c[a2 >> 2] | 0)) {
              Wb(114, 3282);
              e2 = 114;
              return e2 | 0;
            } else {
              c[(Tc() | 0) >> 2] = 114;
              e2 = 114;
              return e2 | 0;
            }
          if (c[6260 + (b2 * 48 | 0) + 24 >> 2] | 0) {
            e2 = 0;
            return e2 | 0;
          }
          if (!(c[a2 >> 2] | 0)) {
            Wb(102, 3282);
            e2 = 102;
            return e2 | 0;
          } else {
            c[(Tc() | 0) >> 2] = 102;
            e2 = 102;
            return e2 | 0;
          }
          return 0;
        }
        function yc() {
          var a2 = 0;
          a2 = dc() | 0;
          c[2765] = 0;
          return a2 | 0;
        }
        function zc(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          var d2 = 0, e2 = 0;
          d2 = i2;
          i2 = i2 + 16 | 0;
          e2 = d2;
          d2 = c[210] | 0;
          c[e2 >> 2] = a2;
          Ld(d2, 3286, e2) | 0;
          if (!b2) za(1);
          else {
            Cd(d2) | 0;
            Pa();
            Cd(d2) | 0;
            ja(6, 0) | 0;
            ha();
          }
        }
        function Ac(b2, c2, d2) {
          b2 = b2 | 0;
          c2 = c2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, g2 = 0, h2 = 0;
          e2 = d2 + c2 | 0;
          f2 = b2 + c2 | 0;
          while (1) {
            if (f2 >>> 0 <= b2 >>> 0) {
              g2 = 3;
              break;
            }
            f2 = f2 + -1 | 0;
            h2 = e2 + -1 | 0;
            if ((a[f2 >> 0] | 0) != 32) break;
            else e2 = h2;
          }
          if ((g2 | 0) == 3) {
            a[d2 >> 0] = 0;
            return;
          }
          a[e2 >> 0] = 0;
          e2 = h2;
          h2 = f2;
          while (1) {
            a[e2 >> 0] = a[h2 >> 0] | 0;
            if (h2 >>> 0 > b2 >>> 0) {
              e2 = e2 + -1 | 0;
              h2 = h2 + -1 | 0;
            } else break;
          }
          return;
        }
        function Bc(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          var d2 = 0, e2 = 0, f2 = 0;
          d2 = i2;
          i2 = i2 + 80 | 0;
          e2 = d2;
          if ((zd(a2, e2) | 0) < 0) {
            f2 = -1;
            i2 = d2;
            return f2 | 0;
          }
          c[b2 >> 2] = c[e2 >> 2];
          f2 = c[e2 + 72 >> 2] | 0;
          i2 = d2;
          return f2 | 0;
        }
        function Cc(b2, d2, e2, f2, j2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          j2 = j2 | 0;
          var k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0, O2 = 0, P2 = 0, Q2 = 0, R2 = 0;
          k2 = i2;
          i2 = i2 + 80 | 0;
          l2 = k2 + 16 | 0;
          m2 = k2;
          n2 = k2 + 20 | 0;
          o2 = (f2 | 0) < 1 ? 2 : f2;
          p2 = c[2785] | 0;
          if (!((p2 | 0) != 0 ? !((p2 | 0) < (e2 + 2 | 0) & (p2 | 0) > (0 - e2 | 0)) : 0)) q2 = 3;
          a: do
            if ((q2 | 0) == 3) {
              r2 = (((p2 | 0) < 1) << 31 >> 31) + e2 | 0;
              if ((j2 | 0) == 4) s2 = +g[b2 >> 2];
              else s2 = +h[b2 >> 3];
              if (!(s2 < 0)) {
                t2 = c[2775] | 0;
                if (s2 != 0) {
                  u2 = 0;
                  v2 = t2;
                  w2 = s2;
                } else {
                  u2 = 0;
                  v2 = t2;
                  w2 = 0;
                }
              } else {
                u2 = 1;
                v2 = 1;
                w2 = -s2;
              }
              t2 = d2 + -4 - o2 - r2 - v2 | 0;
              if ((t2 | 0) >= 0) {
                x2 = ((p2 | 0) < 0 ? p2 : 0) + r2 | 0;
                r2 = (x2 | 0) > 40;
                y2 = r2 ? 40 : x2;
                z2 = r2 ? x2 + -40 | 0 : 0;
                c[m2 >> 2] = y2;
                h[m2 + 8 >> 3] = w2;
                Vd(n2, 3290, m2) | 0;
                x2 = a[n2 >> 0] | 0;
                r2 = x2 << 24 >> 24;
                if (!(a[1188 + (r2 + 8) >> 0] & 1)) {
                  switch (r2 | 0) {
                    case 78:
                    case 110: {
                      A2 = 0;
                      break;
                    }
                    default:
                      A2 = v2;
                  }
                  r2 = d2 - (bd(n2) | 0) - A2 | 0;
                  if ((r2 | 0) < 0) break;
                  if (r2 | 0) {
                    B2 = r2;
                    while (1) {
                      Ga[c[2777] & 3](32);
                      if ((B2 | 0) > 1) B2 = B2 + -1 | 0;
                      else break;
                    }
                  }
                  if (A2 | 0) Ga[c[2777] & 3](u2 | 0 ? 45 : 43);
                  if (!(x2 << 24 >> 24)) {
                    i2 = k2;
                    return 0;
                  } else {
                    C2 = n2;
                    D2 = x2;
                  }
                  do {
                    Ga[c[2777] & 3](D2 << 24 >> 24);
                    C2 = C2 + 1 | 0;
                    D2 = a[C2 >> 0] | 0;
                  } while (D2 << 24 >> 24 != 0);
                  i2 = k2;
                  return 0;
                }
                x2 = n2 + y2 | 0;
                B2 = x2 + 3 | 0;
                if (w2 != 0) {
                  r2 = (de(B2) | 0) + 1 | 0;
                  c[l2 >> 2] = r2 - (c[2785] | 0);
                  Vd(B2, 3296, l2) | 0;
                } else {
                  a[B2 >> 0] = 43;
                  a[B2 + 1 >> 0] = 48;
                  a[B2 + 2 >> 0] = 48;
                  a[B2 + 3 >> 0] = 0;
                }
                B2 = x2 + 4 | 0;
                r2 = (o2 | 0) < 2;
                if (r2 ? (a[B2 >> 0] | 0) != 48 : 0) break;
                E2 = x2 + 6 | 0;
                b: do
                  if (a[E2 >> 0] | 0) {
                    if (!f2) {
                      F2 = x2 + 2 | 0;
                      while (1) {
                        G2 = F2;
                        F2 = F2 + 1 | 0;
                        H2 = a[F2 >> 0] | 0;
                        a[G2 >> 0] = H2;
                        if (!(H2 << 24 >> 24)) {
                          I2 = 2;
                          break b;
                        }
                      }
                    }
                    if ((f2 | 0) > -1) {
                      F2 = 2;
                      H2 = E2;
                      while (1) {
                        if ((F2 | 0) >= (o2 | 0)) break a;
                        G2 = F2 + 1 | 0;
                        H2 = H2 + 1 | 0;
                        if (!(a[H2 >> 0] | 0)) {
                          I2 = G2;
                          break;
                        } else F2 = G2;
                      }
                    } else I2 = o2;
                  } else I2 = 2;
                while (0);
                if ((t2 | 0) > 0) {
                  E2 = t2;
                  while (1) {
                    Ga[c[2777] & 3](32);
                    if ((E2 | 0) > 1) E2 = E2 + -1 | 0;
                    else break;
                  }
                }
                if (v2 | 0) Ga[c[2777] & 3](u2 | 0 ? 45 : 43);
                E2 = c[2785] | 0;
                if ((E2 | 0) >= 1)
                  if ((E2 | 0) == 1) J2 = n2;
                  else {
                    Ga[c[2777] & 3](a[n2 >> 0] | 0);
                    t2 = n2 + 2 | 0;
                    y2 = E2 + 1 | 0;
                    F2 = t2 + (E2 + -1) | 0;
                    H2 = t2;
                    t2 = c[2777] | 0;
                    do {
                      Ga[t2 & 3](a[H2 >> 0] | 0);
                      H2 = H2 + 1 | 0;
                      t2 = c[2777] | 0;
                    } while ((H2 | 0) != (F2 | 0));
                    Ga[t2 & 3](46);
                    J2 = n2 + y2 | 0;
                  }
                else {
                  Ga[c[2777] & 3](46);
                  F2 = c[2777] | 0;
                  if ((E2 | 0) < 0) {
                    H2 = E2;
                    G2 = F2;
                    while (1) {
                      Ga[G2 & 3](48);
                      K2 = c[2777] | 0;
                      if ((H2 | 0) < -1) {
                        H2 = H2 + 1 | 0;
                        G2 = K2;
                      } else {
                        L2 = K2;
                        break;
                      }
                    }
                  } else L2 = F2;
                  Ga[L2 & 3](a[n2 >> 0] | 0);
                  J2 = n2 + 2 | 0;
                }
                if (!z2) M2 = J2;
                else {
                  G2 = x2 + 2 | 0;
                  if (J2 >>> 0 < G2 >>> 0) {
                    H2 = J2;
                    while (1) {
                      E2 = H2 + 1 | 0;
                      Ga[c[2777] & 3](a[H2 >> 0] | 0);
                      if (E2 >>> 0 < G2 >>> 0) H2 = E2;
                      else {
                        N2 = E2;
                        break;
                      }
                    }
                  } else N2 = J2;
                  H2 = z2;
                  while (1) {
                    Ga[c[2777] & 3](48);
                    if ((H2 | 0) > 1) H2 = H2 + -1 | 0;
                    else {
                      M2 = N2;
                      break;
                    }
                  }
                }
                if (M2 >>> 0 < B2 >>> 0) {
                  H2 = M2;
                  while (1) {
                    z2 = H2 + 1 | 0;
                    Ga[c[2777] & 3](a[H2 >> 0] | 0);
                    if (z2 >>> 0 < B2 >>> 0) H2 = z2;
                    else {
                      O2 = z2;
                      break;
                    }
                  }
                } else O2 = M2;
                if (r2) {
                  Ga[c[2777] & 3](a[O2 + 1 >> 0] | 0);
                  i2 = k2;
                  return 0;
                }
                if ((I2 | 0) < (o2 | 0)) {
                  H2 = I2;
                  do {
                    H2 = H2 + 1 | 0;
                    Ga[c[2777] & 3](48);
                  } while ((H2 | 0) != (o2 | 0));
                }
                H2 = a[O2 >> 0] | 0;
                if (!(H2 << 24 >> 24)) {
                  i2 = k2;
                  return 0;
                } else {
                  P2 = O2;
                  Q2 = H2;
                }
                do {
                  P2 = P2 + 1 | 0;
                  Ga[c[2777] & 3](Q2 << 24 >> 24);
                  Q2 = a[P2 >> 0] | 0;
                } while (Q2 << 24 >> 24 != 0);
                i2 = k2;
                return 0;
              }
            }
          while (0);
          if ((d2 | 0) > 0) R2 = d2;
          else {
            i2 = k2;
            return 0;
          }
          while (1) {
            Ga[c[2777] & 3](42);
            if ((R2 | 0) > 1) R2 = R2 + -1 | 0;
            else break;
          }
          i2 = k2;
          return 0;
        }
        function Dc(b2, d2, e2, f2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          var j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0;
          j2 = i2;
          i2 = i2 + 672 | 0;
          k2 = j2;
          l2 = j2 + 16 | 0;
          if ((f2 | 0) == 4) m2 = +g[b2 >> 2];
          else m2 = +h[b2 >> 3];
          b2 = (e2 | 0) < 344;
          f2 = b2 ? e2 : 344;
          n2 = b2 ? 0 : e2 + -344 | 0;
          if (!(m2 < 0))
            if (m2 != 0) {
              o2 = m2;
              p2 = 0;
            } else {
              o2 = 0;
              p2 = 0;
            }
          else {
            o2 = -m2;
            p2 = 1;
          }
          e2 = c[2785] | 0;
          if (e2)
            if ((e2 | 0) > 0) {
              b2 = e2;
              m2 = o2;
              while (1) {
                q2 = m2 * 10;
                if ((b2 | 0) > 1) {
                  b2 = b2 + -1 | 0;
                  m2 = q2;
                } else {
                  r2 = q2;
                  break;
                }
              }
            } else {
              b2 = e2;
              m2 = o2;
              while (1) {
                q2 = m2 * 0.1;
                if ((b2 | 0) < -1) {
                  b2 = b2 + 1 | 0;
                  m2 = q2;
                } else {
                  r2 = q2;
                  break;
                }
              }
            }
          else r2 = o2;
          c[k2 >> 2] = f2;
          h[k2 + 8 >> 3] = r2;
          b2 = (Vd(l2, 3302, k2) | 0) + n2 | 0;
          k2 = (f2 | 0) != 0 & (a[l2 >> 0] | 0) == 48;
          f2 = b2 + (k2 << 31 >> 31) | 0;
          b2 = k2 ? l2 + 1 | 0 : l2;
          a: do
            if ((p2 | 0) == 1) {
              l2 = b2;
              b: while (1) {
                k2 = l2;
                do {
                  s2 = a[k2 >> 0] | 0;
                  k2 = k2 + 1 | 0;
                } while (s2 << 24 >> 24 == 48);
                switch (s2 << 24 >> 24 | 0) {
                  case 0: {
                    t2 = 0;
                    break a;
                    break;
                  }
                  case 46: {
                    l2 = k2;
                    break;
                  }
                  default:
                    break b;
                }
              }
              t2 = 1;
            } else t2 = p2;
          while (0);
          p2 = (t2 | 0) == 0;
          s2 = f2 + ((c[2775] | t2 | 0) != 0 & 1) | 0;
          if ((s2 | 0) > (d2 | 0)) {
            if ((d2 | 0) > 0) u2 = d2;
            else {
              i2 = j2;
              return 0;
            }
            while (1) {
              Ga[c[2777] & 3](42);
              if ((u2 | 0) > 1) u2 = u2 + -1 | 0;
              else break;
            }
            i2 = j2;
            return 0;
          }
          u2 = d2 - s2 | 0;
          if ((u2 | 0) > 0) {
            s2 = u2;
            while (1) {
              Ga[c[2777] & 3](32);
              if ((s2 | 0) > 1) s2 = s2 + -1 | 0;
              else break;
            }
          }
          if (p2) {
            if (c[2775] | 0) Ga[c[2777] & 3](43);
          } else Ga[c[2777] & 3](45);
          p2 = a[b2 >> 0] | 0;
          if (p2 << 24 >> 24) {
            s2 = b2;
            b2 = p2;
            do {
              s2 = s2 + 1 | 0;
              Ga[c[2777] & 3](b2 << 24 >> 24);
              b2 = a[s2 >> 0] | 0;
            } while (b2 << 24 >> 24 != 0);
          }
          if ((n2 | 0) > 0) v2 = n2;
          else {
            i2 = j2;
            return 0;
          }
          while (1) {
            Ga[c[2777] & 3](48);
            if ((v2 | 0) > 1) v2 = v2 + -1 | 0;
            else break;
          }
          i2 = j2;
          return 0;
        }
        function Ec(d2, e2, f2) {
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          var j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0;
          j2 = i2;
          i2 = i2 + 16 | 0;
          k2 = j2;
          if (c[2783] | 0 ? (l2 = Fc() | 0, l2 | 0) : 0) {
            m2 = l2;
            i2 = j2;
            return m2 | 0;
          }
          l2 = c[d2 >> 2] | 0;
          do
            switch (l2 | 0) {
              case 7: {
                Gc(e2, c[d2 + 4 >> 2] | 0, f2, 10);
                m2 = 0;
                i2 = j2;
                return m2 | 0;
              }
              case 10: {
                Hc(e2, c[d2 + 4 >> 2] | 0, c[d2 + 8 >> 2] | 0, f2, 10);
                m2 = 0;
                i2 = j2;
                return m2 | 0;
              }
              case 32: {
                Gc(e2, c[d2 + 4 >> 2] | 0, f2, 8);
                m2 = 0;
                i2 = j2;
                return m2 | 0;
              }
              case 34: {
                Hc(e2, c[d2 + 4 >> 2] | 0, c[d2 + 8 >> 2] | 0, f2, 8);
                m2 = 0;
                i2 = j2;
                return m2 | 0;
              }
              case 29: {
                n2 = c[d2 + 4 >> 2] | 0;
                switch (f2 | 0) {
                  case 4: {
                    o2 = c[e2 >> 2] | 0;
                    break;
                  }
                  case 1: {
                    o2 = a[e2 >> 0] | 0;
                    break;
                  }
                  default:
                    o2 = b[e2 >> 1] | 0;
                }
                p2 = n2 + -1 | 0;
                if ((n2 | 0) > 1) {
                  n2 = 0;
                  do {
                    Ga[c[2777] & 3](32);
                    n2 = n2 + 1 | 0;
                  } while ((n2 | 0) != (p2 | 0));
                }
                p2 = c[2777] | 0;
                if (!o2) {
                  Ga[p2 & 3](70);
                  m2 = 0;
                  i2 = j2;
                  return m2 | 0;
                } else {
                  Ga[p2 & 3](84);
                  m2 = 0;
                  i2 = j2;
                  return m2 | 0;
                }
                break;
              }
              case 30: {
                if ((f2 | 0) > 0) {
                  q2 = e2;
                  r2 = f2;
                } else {
                  m2 = 0;
                  i2 = j2;
                  return m2 | 0;
                }
                while (1) {
                  Ga[c[2777] & 3](a[q2 >> 0] | 0);
                  if ((r2 | 0) > 1) {
                    q2 = q2 + 1 | 0;
                    r2 = r2 + -1 | 0;
                  } else {
                    m2 = 0;
                    break;
                  }
                }
                i2 = j2;
                return m2 | 0;
              }
              case 31: {
                p2 = c[d2 + 4 >> 2] | 0;
                if ((p2 | 0) > (f2 | 0)) {
                  n2 = p2;
                  do {
                    n2 = n2 + -1 | 0;
                    Ga[c[2777] & 3](32);
                  } while ((n2 | 0) > (f2 | 0));
                  s2 = f2;
                } else s2 = p2;
                if ((s2 | 0) > 0) {
                  t2 = e2;
                  u2 = s2;
                } else {
                  m2 = 0;
                  i2 = j2;
                  return m2 | 0;
                }
                while (1) {
                  Ga[c[2777] & 3](a[t2 >> 0] | 0);
                  if ((u2 | 0) > 1) {
                    t2 = t2 + 1 | 0;
                    u2 = u2 + -1 | 0;
                  } else {
                    m2 = 0;
                    break;
                  }
                }
                i2 = j2;
                return m2 | 0;
              }
              case 25:
              case 24:
              case 26: {
                m2 = Cc(e2, c[d2 + 4 >> 2] | 0, c[d2 + 8 >> 2] | 0, c[d2 + 12 >> 2] | 0, f2) | 0;
                i2 = j2;
                return m2 | 0;
              }
              case 28:
              case 27: {
                p2 = c[d2 + 4 >> 2] | 0;
                n2 = c[d2 + 8 >> 2] | 0;
                v2 = c[d2 + 12 >> 2] | 0;
                if ((f2 | 0) == 4) w2 = +g[e2 >> 2];
                else w2 = +h[e2 >> 3];
                x2 = w2 < 0 ? -w2 : w2;
                a: do
                  if (x2 < 0.1)
                    if (x2 != 0) {
                      m2 = Cc(e2, p2, n2, v2, f2) | 0;
                      i2 = j2;
                      return m2 | 0;
                    } else y2 = 1;
                  else {
                    if ((n2 | 0) >= 0) {
                      z2 = 0;
                      A2 = 1;
                      while (1) {
                        if (!(x2 >= A2)) {
                          y2 = z2;
                          break a;
                        }
                        if ((z2 | 0) < (n2 | 0)) {
                          z2 = z2 + 1 | 0;
                          A2 = A2 * 10;
                        } else break;
                      }
                    }
                    m2 = Cc(e2, p2, n2, v2, f2) | 0;
                    i2 = j2;
                    return m2 | 0;
                  }
                while (0);
                z2 = c[2785] | 0;
                c[2785] = 0;
                B2 = (v2 | 0) == 0 ? 4 : v2 + 2 | 0;
                C2 = Dc(e2, p2 - B2 | 0, n2 - y2 | 0, f2) | 0;
                if ((B2 | 0) > 0) {
                  D2 = 0;
                  do {
                    Ga[c[2777] & 3](32);
                    D2 = D2 + 1 | 0;
                  } while ((D2 | 0) != (B2 | 0));
                }
                c[2785] = z2;
                m2 = C2;
                i2 = j2;
                return m2 | 0;
              }
              case 23: {
                m2 = Dc(e2, c[d2 + 4 >> 2] | 0, c[d2 + 8 >> 2] | 0, f2) | 0;
                i2 = j2;
                return m2 | 0;
              }
              case 35: {
                Ic(e2, c[d2 + 4 >> 2] | 0, 0, f2);
                m2 = 0;
                i2 = j2;
                return m2 | 0;
              }
              case 36: {
                Ic(e2, c[d2 + 4 >> 2] | 0, c[d2 + 8 >> 2] | 0, f2);
                m2 = 0;
                i2 = j2;
                return m2 | 0;
              }
              default: {
                B2 = c[210] | 0;
                c[k2 >> 2] = l2;
                Ld(B2, 3308, k2) | 0;
                zc(c[2765] | 0, 1);
              }
            }
          while (0);
          return 0;
        }
        function Fc() {
          var a2 = 0, b2 = 0, d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0;
          a2 = c[2783] | 0;
          c[2783] = 0;
          if (c[2769] | 0) {
            if ((a2 | 0) > 0) {
              b2 = c[2784] | 0;
              d2 = c[2782] | 0;
              if ((d2 | 0) >= (b2 | 0)) {
                e2 = a2;
                while (1) {
                  Ga[c[2777] & 3](32);
                  if ((e2 | 0) > 1) e2 = e2 + -1 | 0;
                  else {
                    f2 = 0;
                    break;
                  }
                }
                return f2 | 0;
              }
              e2 = d2 + a2 | 0;
              if ((b2 | 0) > (e2 | 0)) {
                c[2782] = e2;
                f2 = 0;
                return f2 | 0;
              }
              e2 = a2 - b2 + d2 | 0;
              c[2782] = b2;
              if ((e2 | 0) > 0) g2 = e2;
              else {
                f2 = 0;
                return f2 | 0;
              }
              while (1) {
                Ga[c[2777] & 3](32);
                if ((g2 | 0) > 1) g2 = g2 + -1 | 0;
                else {
                  f2 = 0;
                  break;
                }
              }
              return f2 | 0;
            }
            if ((a2 | 0) >= 0) {
              f2 = 0;
              return f2 | 0;
            }
            g2 = c[2782] | 0;
            e2 = g2 + a2 | 0;
            if ((e2 | 0) >= 0) {
              if ((c[2784] | 0) < (g2 | 0)) c[2784] = g2;
              c[2782] = e2;
              f2 = 0;
              return f2 | 0;
            }
            if (!(c[c[2773] >> 2] | 0)) {
              Wb(110, 3352);
              f2 = 110;
              return f2 | 0;
            } else {
              c[(Tc() | 0) >> 2] = 110;
              f2 = 110;
              return f2 | 0;
            }
          }
          if ((a2 | 0) < 0) {
            e2 = c[2782] | 0;
            if ((c[2784] | 0) < (e2 | 0)) c[2784] = e2;
            g2 = e2 + a2 | 0;
            c[2782] = g2;
            c[2786] = (c[2786] | 0) + a2;
            if ((g2 | 0) >= 0) {
              f2 = 0;
              return f2 | 0;
            }
            if (!(c[c[2773] >> 2] | 0)) {
              Wb(110, 3352);
              f2 = 110;
              return f2 | 0;
            } else {
              c[(Tc() | 0) >> 2] = 110;
              f2 = 110;
              return f2 | 0;
            }
          }
          if (!a2) {
            f2 = 0;
            return f2 | 0;
          }
          g2 = c[2782] | 0;
          e2 = g2 + a2 | 0;
          if ((e2 | 0) >= (c[(c[2774] | 0) + 16 >> 2] | 0))
            if (!(c[c[2773] >> 2] | 0)) {
              Wb(110, 3361);
              f2 = 110;
              return f2 | 0;
            } else {
              c[(Tc() | 0) >> 2] = 110;
              f2 = 110;
              return f2 | 0;
            }
          b2 = c[2784] | 0;
          if ((b2 | 0) <= (g2 | 0)) {
            d2 = a2;
            while (1) {
              Ga[c[2777] & 3](32);
              if ((d2 | 0) > 1) d2 = d2 + -1 | 0;
              else {
                f2 = 0;
                break;
              }
            }
            return f2 | 0;
          }
          if ((b2 | 0) > (e2 | 0)) {
            c[2786] = (c[2786] | 0) + a2;
            c[2782] = e2;
            f2 = 0;
            return f2 | 0;
          }
          e2 = b2 - g2 | 0;
          g2 = a2 - e2 | 0;
          c[2786] = (c[2786] | 0) + e2;
          c[2782] = b2;
          if ((g2 | 0) > 0) h2 = g2;
          else {
            f2 = 0;
            return f2 | 0;
          }
          while (1) {
            Ga[c[2777] & 3](32);
            if ((h2 | 0) > 1) h2 = h2 + -1 | 0;
            else {
              f2 = 0;
              break;
            }
          }
          return f2 | 0;
        }
        function Gc(d2, e2, f2, g2) {
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          g2 = g2 | 0;
          var h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0;
          h2 = i2;
          i2 = i2 + 16 | 0;
          j2 = h2 + 4 | 0;
          k2 = h2;
          switch (f2 | 0) {
            case 4: {
              l2 = c[d2 >> 2] | 0;
              break;
            }
            case 1: {
              l2 = a[d2 >> 0] | 0;
              break;
            }
            default:
              l2 = b[d2 >> 1] | 0;
          }
          d2 = fc(l2, j2, k2, g2) | 0;
          g2 = c[k2 >> 2] | 0;
          l2 = (((c[2775] | g2 | 0) != 0) << 31 >> 31) + (e2 - (c[j2 >> 2] | 0)) | 0;
          if ((l2 | 0) < 0) {
            if ((e2 | 0) > 0) m2 = 0;
            else {
              i2 = h2;
              return;
            }
            do {
              Ga[c[2777] & 3](42);
              m2 = m2 + 1 | 0;
            } while ((m2 | 0) != (e2 | 0));
            i2 = h2;
            return;
          }
          if (!l2) n2 = g2;
          else {
            g2 = 0;
            do {
              Ga[c[2777] & 3](32);
              g2 = g2 + 1 | 0;
            } while ((g2 | 0) < (l2 | 0));
            n2 = c[k2 >> 2] | 0;
          }
          if (!n2) {
            if (c[2775] | 0) Ga[c[2777] & 3](43);
          } else Ga[c[2777] & 3](45);
          if ((c[j2 >> 2] | 0) > 0) {
            o2 = d2;
            p2 = 0;
          } else {
            i2 = h2;
            return;
          }
          while (1) {
            Ga[c[2777] & 3](a[o2 >> 0] | 0);
            p2 = p2 + 1 | 0;
            if ((p2 | 0) >= (c[j2 >> 2] | 0)) break;
            else o2 = o2 + 1 | 0;
          }
          i2 = h2;
          return;
        }
        function Hc(d2, e2, f2, g2, h2) {
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          g2 = g2 | 0;
          h2 = h2 | 0;
          var j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0;
          j2 = i2;
          i2 = i2 + 16 | 0;
          k2 = j2 + 4 | 0;
          l2 = j2;
          switch (g2 | 0) {
            case 4: {
              m2 = c[d2 >> 2] | 0;
              break;
            }
            case 1: {
              m2 = a[d2 >> 0] | 0;
              break;
            }
            default:
              m2 = b[d2 >> 1] | 0;
          }
          d2 = fc(m2, k2, l2, h2) | 0;
          h2 = c[l2 >> 2] | 0;
          g2 = (c[2775] | h2 | 0) != 0;
          n2 = g2 & 1;
          o2 = c[k2 >> 2] | 0;
          if ((n2 + o2 | 0) > (e2 | 0) | (n2 + f2 | 0) > (e2 | 0)) {
            if ((e2 | 0) > 0) p2 = 0;
            else {
              i2 = j2;
              return;
            }
            do {
              Ga[c[2777] & 3](42);
              p2 = p2 + 1 | 0;
            } while ((p2 | 0) != (e2 | 0));
            i2 = j2;
            return;
          }
          if (!(m2 | f2)) {
            if ((e2 | 0) > 0) q2 = 0;
            else {
              i2 = j2;
              return;
            }
            do {
              Ga[c[2777] & 3](32);
              q2 = q2 + 1 | 0;
            } while ((q2 | 0) != (e2 | 0));
            i2 = j2;
            return;
          }
          q2 = e2 - ((o2 | 0) < (f2 | 0) ? f2 : o2) + (g2 << 31 >> 31) | 0;
          if ((q2 | 0) > 0) {
            g2 = 0;
            do {
              Ga[c[2777] & 3](32);
              g2 = g2 + 1 | 0;
            } while ((g2 | 0) < (q2 | 0));
            r2 = c[l2 >> 2] | 0;
          } else r2 = h2;
          if (!r2) {
            if (c[2775] | 0) Ga[c[2777] & 3](43);
          } else Ga[c[2777] & 3](45);
          r2 = c[k2 >> 2] | 0;
          if ((r2 | 0) < (f2 | 0)) {
            h2 = 0;
            do {
              Ga[c[2777] & 3](48);
              h2 = h2 + 1 | 0;
              l2 = c[k2 >> 2] | 0;
            } while ((h2 | 0) < (f2 - l2 | 0));
            s2 = l2;
          } else s2 = r2;
          if ((s2 | 0) > 0) {
            t2 = d2;
            u2 = 0;
          } else {
            i2 = j2;
            return;
          }
          while (1) {
            Ga[c[2777] & 3](a[t2 >> 0] | 0);
            u2 = u2 + 1 | 0;
            if ((u2 | 0) >= (c[k2 >> 2] | 0)) break;
            else t2 = t2 + 1 | 0;
          }
          i2 = j2;
          return;
        }
        function Ic(b2, e2, f2, g2) {
          b2 = b2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          g2 = g2 | 0;
          var h2 = 0, i3 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0;
          h2 = b2 + (g2 + -1) | 0;
          a: do
            if ((h2 | 0) == (b2 | 0)) {
              i3 = b2;
              j2 = 1;
            } else {
              g2 = h2;
              while (1) {
                if (a[g2 >> 0] | 0) {
                  i3 = g2;
                  j2 = 0;
                  break a;
                }
                g2 = g2 + -1 | 0;
                if ((g2 | 0) == (b2 | 0)) {
                  i3 = b2;
                  j2 = 1;
                  break;
                }
              }
            }
          while (0);
          h2 = ((d[i3 >> 0] | 0) > 15 & 1) + (i3 - b2 << 1 | 1) | 0;
          if ((h2 | 0) > (e2 | 0)) {
            if ((e2 | 0) > 0) k2 = 0;
            else return;
            do {
              Ga[c[2777] & 3](42);
              k2 = k2 + 1 | 0;
            } while ((k2 | 0) != (e2 | 0));
            return;
          }
          k2 = f2 - h2 | 0;
          g2 = (k2 | 0) > 0;
          l2 = g2 ? f2 : h2;
          if ((l2 | 0) < (e2 | 0)) {
            h2 = e2;
            do {
              h2 = h2 + -1 | 0;
              Ga[c[2777] & 3](32);
            } while ((h2 | 0) > (l2 | 0));
          }
          if (g2) {
            g2 = k2;
            while (1) {
              Ga[c[2777] & 3](48);
              if ((g2 | 0) > 1) g2 = g2 + -1 | 0;
              else break;
            }
          }
          g2 = a[i3 >> 0] | 0;
          do
            if (!(g2 & 240)) {
              Ga[c[2777] & 3](a[3335 + (g2 & 15) >> 0] | 0);
              if (j2) return;
              else {
                m2 = i3 + -1 | 0;
                break;
              }
            } else m2 = i3;
          while (0);
          while (1) {
            Ga[c[2777] & 3](a[3335 + ((d[m2 >> 0] | 0) >>> 4) >> 0] | 0);
            Ga[c[2777] & 3](a[3335 + (d[m2 >> 0] & 15) >> 0] | 0);
            if ((m2 | 0) == (b2 | 0)) break;
            else m2 = m2 + -1 | 0;
          }
          return;
        }
        function Jc(b2) {
          b2 = b2 | 0;
          var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0;
          d2 = i2;
          i2 = i2 + 16 | 0;
          e2 = d2;
          f2 = c[b2 >> 2] | 0;
          switch (f2 | 0) {
            case 5: {
              g2 = Da[c[2781] & 3]() | 0;
              i2 = d2;
              return g2 | 0;
            }
            case 15: {
              c[2783] = (c[b2 + 4 >> 2] | 0) + -1 - (c[2782] | 0);
              g2 = 1;
              i2 = d2;
              return g2 | 0;
            }
            case 13: {
              h2 = (c[2783] | 0) - (c[b2 + 4 >> 2] | 0) | 0;
              j2 = 0 - (c[2782] | 0) | 0;
              c[2783] = (h2 | 0) < (j2 | 0) ? j2 : h2;
              g2 = 1;
              i2 = d2;
              return g2 | 0;
            }
            case 4:
            case 14: {
              c[2783] = (c[2783] | 0) + (c[b2 + 4 >> 2] | 0);
              g2 = 1;
              i2 = d2;
              return g2 | 0;
            }
            case 11: {
              h2 = c[b2 + 8 >> 2] | 0;
              if (c[2783] | 0 ? (j2 = Fc() | 0, j2 | 0) : 0) {
                g2 = j2;
                i2 = d2;
                return g2 | 0;
              }
              j2 = a[h2 >> 0] | 0;
              k2 = h2 + 1 | 0;
              l2 = a[k2 >> 0] | 0;
              if (!(l2 << 24 >> 24)) {
                g2 = 1;
                i2 = d2;
                return g2 | 0;
              }
              m2 = j2 << 24 >> 24;
              n2 = k2;
              k2 = h2;
              h2 = l2;
              while (1) {
                if (h2 << 24 >> 24 == j2 << 24 >> 24) {
                  l2 = k2 + 2 | 0;
                  if ((a[l2 >> 0] | 0) != j2 << 24 >> 24) {
                    g2 = 1;
                    o2 = 20;
                    break;
                  }
                  Ga[c[2777] & 3](m2);
                  p2 = l2;
                } else {
                  Ga[c[2777] & 3](h2 << 24 >> 24);
                  p2 = n2;
                }
                n2 = p2 + 1 | 0;
                h2 = a[n2 >> 0] | 0;
                if (!(h2 << 24 >> 24)) {
                  g2 = 1;
                  o2 = 20;
                  break;
                } else k2 = p2;
              }
              if ((o2 | 0) == 20) {
                i2 = d2;
                return g2 | 0;
              }
              break;
            }
            case 12: {
              o2 = c[b2 + 4 >> 2] | 0;
              p2 = c[b2 + 8 >> 2] | 0;
              if (c[2783] | 0 ? (b2 = Fc() | 0, b2 | 0) : 0) {
                g2 = b2;
                i2 = d2;
                return g2 | 0;
              }
              if (!o2) {
                g2 = 1;
                i2 = d2;
                return g2 | 0;
              } else {
                q2 = p2;
                r2 = o2;
              }
              while (1) {
                r2 = r2 + -1 | 0;
                Ga[c[2777] & 3](a[q2 >> 0] | 0);
                if (!r2) {
                  g2 = 1;
                  break;
                } else q2 = q2 + 1 | 0;
              }
              i2 = d2;
              return g2 | 0;
            }
            default: {
              g2 = c[210] | 0;
              c[e2 >> 2] = f2;
              Ld(g2, 3368, e2) | 0;
              zc(c[2765] | 0, 1);
            }
          }
          return 0;
        }
        function Kc() {
          var a2 = 0;
          a2 = oc(10) | 0;
          c[2783] = 0;
          c[2782] = 0;
          c[2784] = 0;
          return (a2 | 0) == 0 | 0;
        }
        function Lc(a2) {
          a2 = a2 | 0;
          var b2 = 0, d2 = 0;
          if (!(c[2770] | 0)) Xb();
          c[2766] = 0;
          c[2767] = 1;
          c[2768] = 1;
          c[2769] = 1;
          b2 = xc(a2) | 0;
          if (b2 | 0) {
            d2 = b2;
            return d2 | 0;
          }
          c[2773] = a2;
          c[2782] = 0;
          c[2783] = 0;
          c[2784] = 0;
          c[2813] = 0;
          c[2785] = 0;
          b2 = c[a2 + 12 >> 2] | 0;
          c[2765] = b2;
          c[2771] = c[c[1564] >> 2];
          if ((ac(b2) | 0) < 0)
            if (!(c[a2 >> 2] | 0)) {
              Wb(100, 3396);
              d2 = 100;
              return d2 | 0;
            } else {
              c[(Tc() | 0) >> 2] = 100;
              d2 = 100;
              return d2 | 0;
            }
          c[2777] = 1;
          c[2778] = 6;
          c[2779] = 2;
          c[2772] = 1;
          c[2780] = 2;
          c[2781] = 3;
          ec();
          c[2775] = 0;
          b2 = c[1564] | 0;
          c[2776] = c[b2 + 32 >> 2];
          if ((c[b2 + 40 >> 2] | 0) == 1) {
            d2 = 0;
            return d2 | 0;
          }
          if (!(Yb(b2) | 0)) {
            d2 = 0;
            return d2 | 0;
          }
          b2 = (c[a2 >> 2] | 0) == 0;
          a2 = Tc() | 0;
          if (b2) Wb(c[a2 >> 2] | 0, 3404);
          d2 = c[a2 >> 2] | 0;
          return d2 | 0;
        }
        function Mc() {
          var a2 = 0;
          if (!(c[2813] | 0)) a2 = oc(10) | 0;
          else {
            oc(0) | 0;
            Cd(c[2771] | 0) | 0;
            a2 = 0;
          }
          c[2783] = 0;
          c[2782] = 0;
          c[2784] = 0;
          return a2 | 0;
        }
        function Nc() {
          var a2 = 0, b2 = 0;
          if (!(c[2801] | 0)) a2 = 0;
          else {
            b2 = oc(10) | 0;
            c[2801] = 0;
            a2 = b2;
          }
          c[2783] = 0;
          c[2782] = 0;
          c[2784] = 0;
          return a2 | 0;
        }
        function Oc(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          var d2 = 0, e2 = 0, f2 = 0;
          d2 = i2;
          i2 = i2 + 16 | 0;
          e2 = d2;
          f2 = c[b2 >> 2] | 0;
          c[e2 >> 2] = a2;
          c[e2 + 4 >> 2] = f2;
          be(3416, e2) | 0;
          i2 = d2;
          return 0;
        }
        function Pc(a2) {
          a2 = a2 | 0;
          var b2 = 0, d2 = 0;
          b2 = i2;
          i2 = i2 + 16 | 0;
          d2 = b2;
          c[d2 >> 2] = c[a2 + 60 >> 2];
          a2 = Sc(wa(6, d2 | 0) | 0) | 0;
          i2 = b2;
          return a2 | 0;
        }
        function Qc(b2, d2, e2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          var f2 = 0, g2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0;
          f2 = i2;
          i2 = i2 + 48 | 0;
          g2 = f2 + 16 | 0;
          h2 = f2;
          j2 = f2 + 32 | 0;
          c[j2 >> 2] = d2;
          k2 = j2 + 4 | 0;
          l2 = b2 + 48 | 0;
          m2 = c[l2 >> 2] | 0;
          c[k2 >> 2] = e2 - ((m2 | 0) != 0 & 1);
          n2 = b2 + 44 | 0;
          c[j2 + 8 >> 2] = c[n2 >> 2];
          c[j2 + 12 >> 2] = m2;
          if (!(c[4016] | 0)) {
            c[g2 >> 2] = c[b2 + 60 >> 2];
            c[g2 + 4 >> 2] = j2;
            c[g2 + 8 >> 2] = 2;
            o2 = Sc(Aa(145, g2 | 0) | 0) | 0;
          } else {
            ia(2, b2 | 0);
            c[h2 >> 2] = c[b2 + 60 >> 2];
            c[h2 + 4 >> 2] = j2;
            c[h2 + 8 >> 2] = 2;
            j2 = Sc(Aa(145, h2 | 0) | 0) | 0;
            da(0);
            o2 = j2;
          }
          if ((o2 | 0) >= 1) {
            j2 = c[k2 >> 2] | 0;
            if (o2 >>> 0 > j2 >>> 0) {
              k2 = c[n2 >> 2] | 0;
              n2 = b2 + 4 | 0;
              c[n2 >> 2] = k2;
              h2 = k2;
              c[b2 + 8 >> 2] = h2 + (o2 - j2);
              if (!(c[l2 >> 2] | 0)) p2 = e2;
              else {
                c[n2 >> 2] = h2 + 1;
                a[d2 + (e2 + -1) >> 0] = a[h2 >> 0] | 0;
                p2 = e2;
              }
            } else p2 = o2;
          } else {
            c[b2 >> 2] = c[b2 >> 2] | o2 & 48 ^ 16;
            c[b2 + 8 >> 2] = 0;
            c[b2 + 4 >> 2] = 0;
            p2 = o2;
          }
          i2 = f2;
          return p2 | 0;
        }
        function Rc(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, g2 = 0, h2 = 0;
          e2 = i2;
          i2 = i2 + 32 | 0;
          f2 = e2;
          g2 = e2 + 20 | 0;
          c[f2 >> 2] = c[a2 + 60 >> 2];
          c[f2 + 4 >> 2] = 0;
          c[f2 + 8 >> 2] = b2;
          c[f2 + 12 >> 2] = g2;
          c[f2 + 16 >> 2] = d2;
          if ((Sc(ya(140, f2 | 0) | 0) | 0) < 0) {
            c[g2 >> 2] = -1;
            h2 = -1;
          } else h2 = c[g2 >> 2] | 0;
          i2 = e2;
          return h2 | 0;
        }
        function Sc(a2) {
          a2 = a2 | 0;
          var b2 = 0;
          if (a2 >>> 0 > 4294963200) {
            c[(Tc() | 0) >> 2] = 0 - a2;
            b2 = -1;
          } else b2 = a2;
          return b2 | 0;
        }
        function Tc() {
          var a2 = 0;
          if (!(c[4016] | 0)) a2 = 16108;
          else a2 = c[(se() | 0) + 64 >> 2] | 0;
          return a2 | 0;
        }
        function Uc(a2) {
          a2 = a2 | 0;
          if (!(c[a2 + 68 >> 2] | 0)) Vc(a2);
          return;
        }
        function Vc(a2) {
          a2 = a2 | 0;
          return;
        }
        function Wc(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, g2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0;
          e2 = i2;
          i2 = i2 + 48 | 0;
          f2 = e2 + 16 | 0;
          g2 = e2;
          h2 = e2 + 32 | 0;
          j2 = a2 + 28 | 0;
          k2 = c[j2 >> 2] | 0;
          c[h2 >> 2] = k2;
          l2 = a2 + 20 | 0;
          m2 = (c[l2 >> 2] | 0) - k2 | 0;
          c[h2 + 4 >> 2] = m2;
          c[h2 + 8 >> 2] = b2;
          c[h2 + 12 >> 2] = d2;
          b2 = a2 + 60 | 0;
          k2 = a2 + 44 | 0;
          n2 = 2;
          o2 = m2 + d2 | 0;
          m2 = h2;
          while (1) {
            if (!(c[4016] | 0)) {
              c[f2 >> 2] = c[b2 >> 2];
              c[f2 + 4 >> 2] = m2;
              c[f2 + 8 >> 2] = n2;
              p2 = Sc(Ba(146, f2 | 0) | 0) | 0;
            } else {
              ia(3, a2 | 0);
              c[g2 >> 2] = c[b2 >> 2];
              c[g2 + 4 >> 2] = m2;
              c[g2 + 8 >> 2] = n2;
              h2 = Sc(Ba(146, g2 | 0) | 0) | 0;
              da(0);
              p2 = h2;
            }
            if ((o2 | 0) == (p2 | 0)) {
              q2 = 6;
              break;
            }
            if ((p2 | 0) < 0) {
              q2 = 8;
              break;
            }
            h2 = o2 - p2 | 0;
            r2 = c[m2 + 4 >> 2] | 0;
            if (p2 >>> 0 <= r2 >>> 0)
              if ((n2 | 0) == 2) {
                c[j2 >> 2] = (c[j2 >> 2] | 0) + p2;
                s2 = p2;
                t2 = 2;
                u2 = m2;
                v2 = r2;
              } else {
                s2 = p2;
                t2 = n2;
                u2 = m2;
                v2 = r2;
              }
            else {
              w2 = c[k2 >> 2] | 0;
              c[j2 >> 2] = w2;
              c[l2 >> 2] = w2;
              s2 = p2 - r2 | 0;
              t2 = n2 + -1 | 0;
              u2 = m2 + 8 | 0;
              v2 = c[m2 + 12 >> 2] | 0;
            }
            c[u2 >> 2] = (c[u2 >> 2] | 0) + s2;
            c[u2 + 4 >> 2] = v2 - s2;
            n2 = t2;
            o2 = h2;
            m2 = u2;
          }
          if ((q2 | 0) == 6) {
            u2 = c[k2 >> 2] | 0;
            c[a2 + 16 >> 2] = u2 + (c[a2 + 48 >> 2] | 0);
            k2 = u2;
            c[j2 >> 2] = k2;
            c[l2 >> 2] = k2;
            x2 = d2;
          } else if ((q2 | 0) == 8) {
            c[a2 + 16 >> 2] = 0;
            c[j2 >> 2] = 0;
            c[l2 >> 2] = 0;
            c[a2 >> 2] = c[a2 >> 2] | 32;
            if ((n2 | 0) == 2) x2 = 0;
            else x2 = d2 - (c[m2 + 4 >> 2] | 0) | 0;
          }
          i2 = e2;
          return x2 | 0;
        }
        function Xc(a2) {
          a2 = a2 | 0;
          if (!(c[a2 + 68 >> 2] | 0)) Vc(a2);
          return;
        }
        function Yc(b2, d2, e2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          var f2 = 0, g2 = 0;
          f2 = i2;
          i2 = i2 + 80 | 0;
          g2 = f2;
          c[b2 + 36 >> 2] = 3;
          if ((c[b2 >> 2] & 64 | 0) == 0 ? (c[g2 >> 2] = c[b2 + 60 >> 2], c[g2 + 4 >> 2] = 21505, c[g2 + 8 >> 2] = f2 + 12, sa(54, g2 | 0) | 0) : 0) a[b2 + 75 >> 0] = -1;
          g2 = Wc(b2, d2, e2) | 0;
          i2 = f2;
          return g2 | 0;
        }
        function Zc(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, g2 = 0, h2 = 0;
          e2 = i2;
          i2 = i2 + 32 | 0;
          f2 = e2;
          g2 = e2 + 16 | 0;
          c[g2 >> 2] = d2;
          d2 = (c[g2 >> 2] | 0) + (4 - 1) & ~(4 - 1);
          h2 = c[d2 >> 2] | 0;
          c[g2 >> 2] = d2 + 4;
          c[f2 >> 2] = a2;
          c[f2 + 4 >> 2] = b2;
          c[f2 + 8 >> 2] = h2;
          h2 = Sc(sa(54, f2 | 0) | 0) | 0;
          i2 = e2;
          return h2 | 0;
        }
        function _c(a2) {
          a2 = a2 | 0;
          var b2 = 0, c2 = 0;
          b2 = i2;
          i2 = i2 + 64 | 0;
          c2 = ($c(a2, b2) | 0) == 0 & 1;
          i2 = b2;
          return c2 | 0;
        }
        function $c(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          var d2 = 0, e2 = 0;
          d2 = i2;
          i2 = i2 + 16 | 0;
          e2 = d2;
          c[e2 >> 2] = b2;
          b2 = ((Zc(a2, 21505, e2) | 0) != 0) << 31 >> 31;
          i2 = d2;
          return b2 | 0;
        }
        function ad(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          var d2 = 0, e2 = 0;
          d2 = i2;
          i2 = i2 + 16 | 0;
          e2 = d2;
          c[e2 >> 2] = a2;
          c[e2 + 4 >> 2] = 0;
          c[e2 + 8 >> 2] = b2;
          c[e2 + 12 >> 2] = ((b2 | 0) < 0) << 31 >> 31;
          b2 = Sc(oa(194, e2 | 0) | 0) | 0;
          i2 = d2;
          return b2 | 0;
        }
        function bd(b2) {
          b2 = b2 | 0;
          var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, l2 = 0;
          d2 = b2;
          a: do
            if (!(d2 & 3)) {
              e2 = b2;
              f2 = 4;
            } else {
              g2 = b2;
              h2 = d2;
              while (1) {
                if (!(a[g2 >> 0] | 0)) {
                  i3 = h2;
                  break a;
                }
                j2 = g2 + 1 | 0;
                h2 = j2;
                if (!(h2 & 3)) {
                  e2 = j2;
                  f2 = 4;
                  break;
                } else g2 = j2;
              }
            }
          while (0);
          if ((f2 | 0) == 4) {
            f2 = e2;
            while (1) {
              k2 = c[f2 >> 2] | 0;
              if (!((k2 & -2139062144 ^ -2139062144) & k2 + -16843009)) f2 = f2 + 4 | 0;
              else break;
            }
            if (!((k2 & 255) << 24 >> 24)) l2 = f2;
            else {
              k2 = f2;
              while (1) {
                f2 = k2 + 1 | 0;
                if (!(a[f2 >> 0] | 0)) {
                  l2 = f2;
                  break;
                } else k2 = f2;
              }
            }
            i3 = l2;
          }
          return i3 - d2 | 0;
        }
        function cd(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, g2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0;
          e2 = i2;
          i2 = i2 + 48 | 0;
          f2 = e2 + 24 | 0;
          g2 = e2 + 16 | 0;
          h2 = e2;
          a: do
            if ((a2 | 0) == (b2 | 0)) j2 = Sc(-22) | 0;
            else {
              k2 = (d2 & 524288 | 0) != 0;
              b: do
                if (k2) {
                  c: while (1) {
                    c[h2 >> 2] = a2;
                    c[h2 + 4 >> 2] = b2;
                    c[h2 + 8 >> 2] = d2;
                    l2 = la(330, h2 | 0) | 0;
                    switch (l2 | 0) {
                      case -38: {
                        break b;
                        break;
                      }
                      case -16:
                        break;
                      default:
                        break c;
                    }
                  }
                  j2 = Sc(l2) | 0;
                  break a;
                }
              while (0);
              do {
                c[g2 >> 2] = a2;
                c[g2 + 4 >> 2] = b2;
                m2 = ga(63, g2 | 0) | 0;
              } while ((m2 | 0) == -16);
              if (k2) {
                c[f2 >> 2] = b2;
                c[f2 + 4 >> 2] = 2;
                c[f2 + 8 >> 2] = 1;
                ea(221, f2 | 0) | 0;
              }
              j2 = Sc(m2) | 0;
            }
          while (0);
          i2 = e2;
          return j2 | 0;
        }
        function dd(b2, c2) {
          b2 = b2 | 0;
          c2 = c2 | 0;
          var d2 = 0, e2 = 0, f2 = 0;
          d2 = b2;
          e2 = 3479;
          f2 = d2 + 15 | 0;
          do {
            a[d2 >> 0] = a[e2 >> 0] | 0;
            d2 = d2 + 1 | 0;
            e2 = e2 + 1 | 0;
          } while ((d2 | 0) < (f2 | 0));
          if (!c2) {
            a[b2 + 14 >> 0] = 48;
            a[b2 + 15 >> 0] = 0;
          } else {
            e2 = c2;
            d2 = 14;
            while (1) {
              d2 = d2 + 1 | 0;
              if (e2 >>> 0 < 10) break;
              else e2 = (e2 >>> 0) / 10 | 0;
            }
            a[b2 + d2 >> 0] = 0;
            e2 = c2;
            c2 = d2;
            while (1) {
              c2 = c2 + -1 | 0;
              a[b2 + c2 >> 0] = (e2 >>> 0) % 10 | 0 | 48;
              if (e2 >>> 0 < 10) break;
              else e2 = (e2 >>> 0) / 10 | 0;
            }
          }
          return;
        }
        function ed(a2) {
          a2 = a2 | 0;
          var b2 = 0, d2 = 0;
          b2 = i2;
          i2 = i2 + 16 | 0;
          d2 = b2;
          c[d2 >> 2] = a2;
          a2 = Sc(ua(10, d2 | 0) | 0) | 0;
          i2 = b2;
          return a2 | 0;
        }
        function fd(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          gd(a2, b2) | 0;
          return a2 | 0;
        }
        function gd(b2, d2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0;
          e2 = d2;
          a: do
            if (!((e2 ^ b2) & 3)) {
              if (!(e2 & 3)) {
                f2 = d2;
                g2 = b2;
              } else {
                h2 = d2;
                i3 = b2;
                while (1) {
                  j2 = a[h2 >> 0] | 0;
                  a[i3 >> 0] = j2;
                  if (!(j2 << 24 >> 24)) {
                    k2 = i3;
                    break a;
                  }
                  j2 = h2 + 1 | 0;
                  l2 = i3 + 1 | 0;
                  if (!(j2 & 3)) {
                    f2 = j2;
                    g2 = l2;
                    break;
                  } else {
                    h2 = j2;
                    i3 = l2;
                  }
                }
              }
              i3 = c[f2 >> 2] | 0;
              if (!((i3 & -2139062144 ^ -2139062144) & i3 + -16843009)) {
                h2 = g2;
                l2 = f2;
                j2 = i3;
                while (1) {
                  i3 = l2 + 4 | 0;
                  m2 = h2 + 4 | 0;
                  c[h2 >> 2] = j2;
                  j2 = c[i3 >> 2] | 0;
                  if ((j2 & -2139062144 ^ -2139062144) & j2 + -16843009 | 0) {
                    n2 = i3;
                    o2 = m2;
                    break;
                  } else {
                    h2 = m2;
                    l2 = i3;
                  }
                }
              } else {
                n2 = f2;
                o2 = g2;
              }
              p2 = n2;
              q2 = o2;
              r2 = 8;
            } else {
              p2 = d2;
              q2 = b2;
              r2 = 8;
            }
          while (0);
          if ((r2 | 0) == 8) {
            r2 = a[p2 >> 0] | 0;
            a[q2 >> 0] = r2;
            if (!(r2 << 24 >> 24)) k2 = q2;
            else {
              r2 = q2;
              q2 = p2;
              while (1) {
                q2 = q2 + 1 | 0;
                p2 = r2 + 1 | 0;
                b2 = a[q2 >> 0] | 0;
                a[p2 >> 0] = b2;
                if (!(b2 << 24 >> 24)) {
                  k2 = p2;
                  break;
                } else r2 = p2;
              }
            }
          }
          return k2 | 0;
        }
        function hd(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          var d2 = 0, e2 = 0;
          d2 = i2;
          i2 = i2 + 16 | 0;
          e2 = d2;
          c[e2 >> 2] = a2;
          c[e2 + 4 >> 2] = b2;
          b2 = Sc(ra(33, e2 | 0) | 0) | 0;
          i2 = d2;
          return b2 | 0;
        }
        function id(a2, b2, d2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          var f2 = 0, g2 = 0;
          f2 = i2;
          i2 = i2 + 16 | 0;
          g2 = f2;
          c[g2 >> 2] = e2;
          e2 = jd(a2, b2, d2, g2) | 0;
          i2 = f2;
          return e2 | 0;
        }
        function jd(b2, d2, e2, f2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          var g2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0;
          g2 = i2;
          i2 = i2 + 128 | 0;
          h2 = g2 + 112 | 0;
          j2 = g2;
          k2 = j2;
          l2 = 1076;
          m2 = k2 + 112 | 0;
          do {
            c[k2 >> 2] = c[l2 >> 2];
            k2 = k2 + 4 | 0;
            l2 = l2 + 4 | 0;
          } while ((k2 | 0) < (m2 | 0));
          if ((d2 + -1 | 0) >>> 0 > 2147483646)
            if (!d2) {
              n2 = h2;
              o2 = 1;
              p2 = 4;
            } else {
              c[(Tc() | 0) >> 2] = 75;
              q2 = -1;
            }
          else {
            n2 = b2;
            o2 = d2;
            p2 = 4;
          }
          if ((p2 | 0) == 4) {
            p2 = -2 - n2 | 0;
            d2 = o2 >>> 0 > p2 >>> 0 ? p2 : o2;
            c[j2 + 48 >> 2] = d2;
            o2 = j2 + 20 | 0;
            c[o2 >> 2] = n2;
            c[j2 + 44 >> 2] = n2;
            p2 = n2 + d2 | 0;
            n2 = j2 + 16 | 0;
            c[n2 >> 2] = p2;
            c[j2 + 28 >> 2] = p2;
            p2 = kd(j2, e2, f2) | 0;
            if (!d2) q2 = p2;
            else {
              d2 = c[o2 >> 2] | 0;
              a[d2 + (((d2 | 0) == (c[n2 >> 2] | 0)) << 31 >> 31) >> 0] = 0;
              q2 = p2;
            }
          }
          i2 = g2;
          return q2 | 0;
        }
        function kd(b2, d2, e2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          var f2 = 0, g2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0;
          f2 = i2;
          i2 = i2 + 224 | 0;
          g2 = f2 + 120 | 0;
          h2 = f2 + 80 | 0;
          j2 = f2;
          k2 = f2 + 136 | 0;
          l2 = h2;
          m2 = l2 + 40 | 0;
          do {
            c[l2 >> 2] = 0;
            l2 = l2 + 4 | 0;
          } while ((l2 | 0) < (m2 | 0));
          c[g2 >> 2] = c[e2 >> 2];
          if ((ld(0, d2, g2, j2, h2) | 0) < 0) n2 = -1;
          else {
            if ((c[b2 + 76 >> 2] | 0) > -1) o2 = md(b2) | 0;
            else o2 = 0;
            e2 = c[b2 >> 2] | 0;
            l2 = e2 & 32;
            if ((a[b2 + 74 >> 0] | 0) < 1) c[b2 >> 2] = e2 & -33;
            e2 = b2 + 48 | 0;
            if (!(c[e2 >> 2] | 0)) {
              m2 = b2 + 44 | 0;
              p2 = c[m2 >> 2] | 0;
              c[m2 >> 2] = k2;
              q2 = b2 + 28 | 0;
              c[q2 >> 2] = k2;
              r2 = b2 + 20 | 0;
              c[r2 >> 2] = k2;
              c[e2 >> 2] = 80;
              s2 = b2 + 16 | 0;
              c[s2 >> 2] = k2 + 80;
              k2 = ld(b2, d2, g2, j2, h2) | 0;
              if (!p2) t2 = k2;
              else {
                Fa[c[b2 + 36 >> 2] & 7](b2, 0, 0) | 0;
                u2 = (c[r2 >> 2] | 0) == 0 ? -1 : k2;
                c[m2 >> 2] = p2;
                c[e2 >> 2] = 0;
                c[s2 >> 2] = 0;
                c[q2 >> 2] = 0;
                c[r2 >> 2] = 0;
                t2 = u2;
              }
            } else t2 = ld(b2, d2, g2, j2, h2) | 0;
            h2 = c[b2 >> 2] | 0;
            c[b2 >> 2] = h2 | l2;
            if (o2 | 0) Vc(b2);
            n2 = (h2 & 32 | 0) == 0 ? t2 : -1;
          }
          i2 = f2;
          return n2 | 0;
        }
        function ld(e2, f2, g2, j2, k2) {
          e2 = e2 | 0;
          f2 = f2 | 0;
          g2 = g2 | 0;
          j2 = j2 | 0;
          k2 = k2 | 0;
          var m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0, O2 = 0, P2 = 0, Q2 = 0, R2 = 0, T2 = 0, U2 = 0, V2 = 0, W2 = 0, X2 = 0, Y2 = 0, Z2 = 0, _2 = 0, $2 = 0, aa2 = 0, ba2 = 0, ca2 = 0, da2 = 0, ea2 = 0, fa2 = 0, ga2 = 0, ha2 = 0, ia2 = 0, ja2 = 0, ka2 = 0, la2 = 0, ma2 = 0, na2 = 0, oa2 = 0, pa2 = 0, qa2 = 0, ra2 = 0, sa2 = 0, ta2 = 0, ua2 = 0, va2 = 0, wa2 = 0, xa2 = 0, ya2 = 0, za2 = 0, Aa2 = 0, Ba2 = 0, Ca2 = 0, Da2 = 0, Ea2 = 0, Fa2 = 0, Ga2 = 0, Ha2 = 0, Ia2 = 0, Ja2 = 0, Ka2 = 0, La2 = 0, Ma2 = 0, Na2 = 0, Oa2 = 0, Pa2 = 0, Qa2 = 0, Ra2 = 0, Sa2 = 0, Ta2 = 0, Ua2 = 0, Va2 = 0, Wa2 = 0, Xa2 = 0, Ya2 = 0, Za2 = 0, _a2 = 0, $a2 = 0, ab2 = 0, bb2 = 0, cb2 = 0, db2 = 0, eb2 = 0, fb2 = 0, gb2 = 0, hb2 = 0, ib2 = 0, jb2 = 0, kb2 = 0, lb2 = 0, mb2 = 0, nb2 = 0, ob2 = 0, pb2 = 0, qb2 = 0, rb2 = 0, sb2 = 0, tb2 = 0, ub2 = 0, vb2 = 0, wb2 = 0, xb2 = 0, yb2 = 0, zb2 = 0, Ab2 = 0, Bb2 = 0, Cb2 = 0, Db2 = 0, Eb2 = 0, Fb2 = 0, Gb2 = 0, Hb2 = 0, Ib2 = 0, Jb2 = 0, Kb2 = 0, Lb2 = 0, Mb2 = 0, Nb2 = 0, Ob2 = 0, Pb2 = 0, Qb2 = 0, Rb2 = 0, Sb2 = 0, Tb2 = 0, Ub2 = 0, Vb2 = 0, Wb2 = 0, Xb2 = 0, Yb2 = 0, Zb2 = 0, _b2 = 0, $b2 = 0, ac2 = 0, bc2 = 0, cc2 = 0, dc2 = 0, ec2 = 0, fc2 = 0, gc2 = 0, hc2 = 0, ic2 = 0, jc2 = 0, kc2 = 0, lc2 = 0, mc2 = 0, nc2 = 0, oc2 = 0, pc2 = 0, qc2 = 0, rc2 = 0, sc2 = 0, tc2 = 0, uc2 = 0, vc2 = 0;
          m2 = i2;
          i2 = i2 + 624 | 0;
          n2 = m2 + 24 | 0;
          o2 = m2 + 16 | 0;
          p2 = m2 + 588 | 0;
          q2 = m2 + 576 | 0;
          r2 = m2;
          s2 = m2 + 536 | 0;
          t2 = m2 + 8 | 0;
          u2 = m2 + 528 | 0;
          v2 = (e2 | 0) != 0;
          w2 = s2 + 40 | 0;
          x2 = w2;
          y2 = s2 + 39 | 0;
          s2 = t2 + 4 | 0;
          z2 = p2;
          A2 = 0 - z2 | 0;
          B2 = q2 + 12 | 0;
          C2 = q2 + 11 | 0;
          q2 = B2;
          E2 = q2 - z2 | 0;
          F2 = -2 - z2 | 0;
          G2 = q2 + 2 | 0;
          H2 = n2 + 288 | 0;
          I2 = p2 + 9 | 0;
          J2 = I2;
          K2 = p2 + 8 | 0;
          L2 = 0;
          M2 = 0;
          N2 = 0;
          O2 = f2;
          a: while (1) {
            do
              if ((M2 | 0) > -1)
                if ((L2 | 0) > (2147483647 - M2 | 0)) {
                  c[(Tc() | 0) >> 2] = 75;
                  P2 = -1;
                  break;
                } else {
                  P2 = L2 + M2 | 0;
                  break;
                }
              else P2 = M2;
            while (0);
            f2 = a[O2 >> 0] | 0;
            if (!(f2 << 24 >> 24)) {
              Q2 = 243;
              break;
            } else {
              R2 = O2;
              T2 = f2;
            }
            b: while (1) {
              switch (T2 << 24 >> 24) {
                case 37: {
                  U2 = R2;
                  V2 = R2;
                  Q2 = 9;
                  break b;
                  break;
                }
                case 0: {
                  W2 = R2;
                  X2 = R2;
                  break b;
                  break;
                }
                default: {
                }
              }
              f2 = R2 + 1 | 0;
              R2 = f2;
              T2 = a[f2 >> 0] | 0;
            }
            c: do
              if ((Q2 | 0) == 9)
                while (1) {
                  Q2 = 0;
                  if ((a[V2 + 1 >> 0] | 0) != 37) {
                    W2 = U2;
                    X2 = V2;
                    break c;
                  }
                  f2 = U2 + 1 | 0;
                  Y2 = V2 + 2 | 0;
                  if ((a[Y2 >> 0] | 0) == 37) {
                    U2 = f2;
                    V2 = Y2;
                    Q2 = 9;
                  } else {
                    W2 = f2;
                    X2 = Y2;
                    break;
                  }
                }
            while (0);
            Y2 = W2 - O2 | 0;
            if (v2 ? (c[e2 >> 2] & 32 | 0) == 0 : 0) nd(O2, Y2, e2) | 0;
            if (Y2 | 0) {
              L2 = Y2;
              M2 = P2;
              O2 = X2;
              continue;
            }
            Y2 = X2 + 1 | 0;
            f2 = a[Y2 >> 0] | 0;
            Z2 = (f2 << 24 >> 24) + -48 | 0;
            if (Z2 >>> 0 < 10) {
              _2 = (a[X2 + 2 >> 0] | 0) == 36;
              $2 = _2 ? X2 + 3 | 0 : Y2;
              aa2 = _2 ? Z2 : -1;
              ba2 = _2 ? 1 : N2;
              ca2 = a[$2 >> 0] | 0;
              da2 = $2;
            } else {
              aa2 = -1;
              ba2 = N2;
              ca2 = f2;
              da2 = Y2;
            }
            Y2 = (ca2 << 24 >> 24) + -32 | 0;
            d: do
              if (Y2 >>> 0 < 32) {
                f2 = 0;
                $2 = Y2;
                _2 = ca2;
                Z2 = da2;
                while (1) {
                  if (!(1 << $2 & 75913)) {
                    ea2 = f2;
                    fa2 = _2;
                    ga2 = Z2;
                    break d;
                  }
                  ha2 = 1 << (_2 << 24 >> 24) + -32 | f2;
                  ia2 = Z2 + 1 | 0;
                  ja2 = a[ia2 >> 0] | 0;
                  $2 = (ja2 << 24 >> 24) + -32 | 0;
                  if ($2 >>> 0 >= 32) {
                    ea2 = ha2;
                    fa2 = ja2;
                    ga2 = ia2;
                    break;
                  } else {
                    f2 = ha2;
                    _2 = ja2;
                    Z2 = ia2;
                  }
                }
              } else {
                ea2 = 0;
                fa2 = ca2;
                ga2 = da2;
              }
            while (0);
            do
              if (fa2 << 24 >> 24 != 42) {
                Y2 = (fa2 << 24 >> 24) + -48 | 0;
                if (Y2 >>> 0 < 10) {
                  Z2 = 0;
                  _2 = ga2;
                  f2 = Y2;
                  do {
                    Z2 = (Z2 * 10 | 0) + f2 | 0;
                    _2 = _2 + 1 | 0;
                    ka2 = a[_2 >> 0] | 0;
                    f2 = (ka2 << 24 >> 24) + -48 | 0;
                  } while (f2 >>> 0 < 10);
                  if ((Z2 | 0) < 0) {
                    la2 = -1;
                    break a;
                  } else {
                    ma2 = Z2;
                    na2 = ea2;
                    oa2 = ba2;
                    pa2 = _2;
                    qa2 = ka2;
                  }
                } else {
                  ma2 = 0;
                  na2 = ea2;
                  oa2 = ba2;
                  pa2 = ga2;
                  qa2 = fa2;
                }
              } else {
                f2 = ga2 + 1 | 0;
                Y2 = a[f2 >> 0] | 0;
                $2 = (Y2 << 24 >> 24) + -48 | 0;
                if ($2 >>> 0 < 10 ? (a[ga2 + 2 >> 0] | 0) == 36 : 0) {
                  c[k2 + ($2 << 2) >> 2] = 10;
                  ra2 = c[j2 + ((a[f2 >> 0] | 0) + -48 << 3) >> 2] | 0;
                  sa2 = 1;
                  ta2 = ga2 + 3 | 0;
                } else {
                  if (ba2 | 0) {
                    la2 = -1;
                    break a;
                  }
                  if (!v2) {
                    ma2 = 0;
                    na2 = ea2;
                    oa2 = 0;
                    pa2 = f2;
                    qa2 = Y2;
                    break;
                  }
                  Y2 = (c[g2 >> 2] | 0) + (4 - 1) & ~(4 - 1);
                  $2 = c[Y2 >> 2] | 0;
                  c[g2 >> 2] = Y2 + 4;
                  ra2 = $2;
                  sa2 = 0;
                  ta2 = f2;
                }
                f2 = (ra2 | 0) < 0;
                ma2 = f2 ? 0 - ra2 | 0 : ra2;
                na2 = f2 ? ea2 | 8192 : ea2;
                oa2 = sa2;
                pa2 = ta2;
                qa2 = a[ta2 >> 0] | 0;
              }
            while (0);
            e: do
              if (qa2 << 24 >> 24 == 46) {
                f2 = pa2 + 1 | 0;
                $2 = a[f2 >> 0] | 0;
                if ($2 << 24 >> 24 != 42) {
                  Y2 = ($2 << 24 >> 24) + -48 | 0;
                  if (Y2 >>> 0 < 10) {
                    ua2 = 0;
                    va2 = f2;
                    wa2 = Y2;
                  } else {
                    xa2 = 0;
                    ya2 = f2;
                    break;
                  }
                  while (1) {
                    f2 = (ua2 * 10 | 0) + wa2 | 0;
                    Y2 = va2 + 1 | 0;
                    wa2 = (a[Y2 >> 0] | 0) + -48 | 0;
                    if (wa2 >>> 0 >= 10) {
                      xa2 = f2;
                      ya2 = Y2;
                      break e;
                    } else {
                      ua2 = f2;
                      va2 = Y2;
                    }
                  }
                }
                _2 = pa2 + 2 | 0;
                Z2 = (a[_2 >> 0] | 0) + -48 | 0;
                if (Z2 >>> 0 < 10 ? (a[pa2 + 3 >> 0] | 0) == 36 : 0) {
                  c[k2 + (Z2 << 2) >> 2] = 10;
                  xa2 = c[j2 + ((a[_2 >> 0] | 0) + -48 << 3) >> 2] | 0;
                  ya2 = pa2 + 4 | 0;
                  break;
                }
                if (oa2 | 0) {
                  la2 = -1;
                  break a;
                }
                if (v2) {
                  Z2 = (c[g2 >> 2] | 0) + (4 - 1) & ~(4 - 1);
                  Y2 = c[Z2 >> 2] | 0;
                  c[g2 >> 2] = Z2 + 4;
                  xa2 = Y2;
                  ya2 = _2;
                } else {
                  xa2 = 0;
                  ya2 = _2;
                }
              } else {
                xa2 = -1;
                ya2 = pa2;
              }
            while (0);
            _2 = 0;
            Y2 = ya2;
            while (1) {
              Z2 = (a[Y2 >> 0] | 0) + -65 | 0;
              if (Z2 >>> 0 > 57) {
                la2 = -1;
                break a;
              }
              za2 = Y2 + 1 | 0;
              Aa2 = a[3494 + (_2 * 58 | 0) + Z2 >> 0] | 0;
              Ba2 = Aa2 & 255;
              if ((Ba2 + -1 | 0) >>> 0 < 8) {
                _2 = Ba2;
                Y2 = za2;
              } else break;
            }
            if (!(Aa2 << 24 >> 24)) {
              la2 = -1;
              break;
            }
            Z2 = (aa2 | 0) > -1;
            do
              if (Aa2 << 24 >> 24 == 19)
                if (Z2) {
                  la2 = -1;
                  break a;
                } else Q2 = 51;
              else {
                if (Z2) {
                  c[k2 + (aa2 << 2) >> 2] = Ba2;
                  f2 = j2 + (aa2 << 3) | 0;
                  $2 = c[f2 + 4 >> 2] | 0;
                  ia2 = r2;
                  c[ia2 >> 2] = c[f2 >> 2];
                  c[ia2 + 4 >> 2] = $2;
                  Q2 = 51;
                  break;
                }
                if (!v2) {
                  la2 = 0;
                  break a;
                }
                od(r2, Ba2, g2);
              }
            while (0);
            if ((Q2 | 0) == 51 ? (Q2 = 0, !v2) : 0) {
              L2 = 0;
              M2 = P2;
              N2 = oa2;
              O2 = za2;
              continue;
            }
            Z2 = a[Y2 >> 0] | 0;
            $2 = (_2 | 0) != 0 & (Z2 & 15 | 0) == 3 ? Z2 & -33 : Z2;
            Z2 = na2 & -65537;
            ia2 = (na2 & 8192 | 0) == 0 ? na2 : Z2;
            f: do
              switch ($2 | 0) {
                case 110: {
                  switch ((_2 & 255) << 24 >> 24) {
                    case 0: {
                      c[c[r2 >> 2] >> 2] = P2;
                      L2 = 0;
                      M2 = P2;
                      N2 = oa2;
                      O2 = za2;
                      continue a;
                      break;
                    }
                    case 1: {
                      c[c[r2 >> 2] >> 2] = P2;
                      L2 = 0;
                      M2 = P2;
                      N2 = oa2;
                      O2 = za2;
                      continue a;
                      break;
                    }
                    case 2: {
                      f2 = c[r2 >> 2] | 0;
                      c[f2 >> 2] = P2;
                      c[f2 + 4 >> 2] = ((P2 | 0) < 0) << 31 >> 31;
                      L2 = 0;
                      M2 = P2;
                      N2 = oa2;
                      O2 = za2;
                      continue a;
                      break;
                    }
                    case 3: {
                      b[c[r2 >> 2] >> 1] = P2;
                      L2 = 0;
                      M2 = P2;
                      N2 = oa2;
                      O2 = za2;
                      continue a;
                      break;
                    }
                    case 4: {
                      a[c[r2 >> 2] >> 0] = P2;
                      L2 = 0;
                      M2 = P2;
                      N2 = oa2;
                      O2 = za2;
                      continue a;
                      break;
                    }
                    case 6: {
                      c[c[r2 >> 2] >> 2] = P2;
                      L2 = 0;
                      M2 = P2;
                      N2 = oa2;
                      O2 = za2;
                      continue a;
                      break;
                    }
                    case 7: {
                      f2 = c[r2 >> 2] | 0;
                      c[f2 >> 2] = P2;
                      c[f2 + 4 >> 2] = ((P2 | 0) < 0) << 31 >> 31;
                      L2 = 0;
                      M2 = P2;
                      N2 = oa2;
                      O2 = za2;
                      continue a;
                      break;
                    }
                    default: {
                      L2 = 0;
                      M2 = P2;
                      N2 = oa2;
                      O2 = za2;
                      continue a;
                    }
                  }
                  break;
                }
                case 112: {
                  Ca2 = 120;
                  Da2 = xa2 >>> 0 > 8 ? xa2 : 8;
                  Ea2 = ia2 | 8;
                  Q2 = 63;
                  break;
                }
                case 88:
                case 120: {
                  Ca2 = $2;
                  Da2 = xa2;
                  Ea2 = ia2;
                  Q2 = 63;
                  break;
                }
                case 111: {
                  f2 = r2;
                  ja2 = c[f2 >> 2] | 0;
                  ha2 = c[f2 + 4 >> 2] | 0;
                  if ((ja2 | 0) == 0 & (ha2 | 0) == 0) Fa2 = w2;
                  else {
                    f2 = w2;
                    Ga2 = ja2;
                    ja2 = ha2;
                    while (1) {
                      ha2 = f2 + -1 | 0;
                      a[ha2 >> 0] = Ga2 & 7 | 48;
                      Ga2 = le(Ga2 | 0, ja2 | 0, 3) | 0;
                      ja2 = D;
                      if ((Ga2 | 0) == 0 & (ja2 | 0) == 0) {
                        Fa2 = ha2;
                        break;
                      } else f2 = ha2;
                    }
                  }
                  if (!(ia2 & 8)) {
                    Ha2 = Fa2;
                    Ia2 = 0;
                    Ja2 = 3974;
                    Ka2 = xa2;
                    La2 = ia2;
                    Q2 = 76;
                  } else {
                    f2 = x2 - Fa2 | 0;
                    Ha2 = Fa2;
                    Ia2 = 0;
                    Ja2 = 3974;
                    Ka2 = (xa2 | 0) > (f2 | 0) ? xa2 : f2 + 1 | 0;
                    La2 = ia2;
                    Q2 = 76;
                  }
                  break;
                }
                case 105:
                case 100: {
                  f2 = r2;
                  ja2 = c[f2 >> 2] | 0;
                  Ga2 = c[f2 + 4 >> 2] | 0;
                  if ((Ga2 | 0) < 0) {
                    f2 = he(0, 0, ja2 | 0, Ga2 | 0) | 0;
                    ha2 = D;
                    Ma2 = r2;
                    c[Ma2 >> 2] = f2;
                    c[Ma2 + 4 >> 2] = ha2;
                    Na2 = 1;
                    Oa2 = 3974;
                    Pa2 = f2;
                    Qa2 = ha2;
                    Q2 = 75;
                    break f;
                  }
                  if (!(ia2 & 2048)) {
                    ha2 = ia2 & 1;
                    Na2 = ha2;
                    Oa2 = (ha2 | 0) == 0 ? 3974 : 3976;
                    Pa2 = ja2;
                    Qa2 = Ga2;
                    Q2 = 75;
                  } else {
                    Na2 = 1;
                    Oa2 = 3975;
                    Pa2 = ja2;
                    Qa2 = Ga2;
                    Q2 = 75;
                  }
                  break;
                }
                case 117: {
                  Ga2 = r2;
                  Na2 = 0;
                  Oa2 = 3974;
                  Pa2 = c[Ga2 >> 2] | 0;
                  Qa2 = c[Ga2 + 4 >> 2] | 0;
                  Q2 = 75;
                  break;
                }
                case 99: {
                  a[y2 >> 0] = c[r2 >> 2];
                  Ra2 = y2;
                  Sa2 = 0;
                  Ta2 = 3974;
                  Ua2 = w2;
                  Va2 = 1;
                  Wa2 = Z2;
                  break;
                }
                case 109: {
                  Xa2 = qd(c[(Tc() | 0) >> 2] | 0) | 0;
                  Q2 = 81;
                  break;
                }
                case 115: {
                  Ga2 = c[r2 >> 2] | 0;
                  Xa2 = Ga2 | 0 ? Ga2 : 3984;
                  Q2 = 81;
                  break;
                }
                case 67: {
                  c[t2 >> 2] = c[r2 >> 2];
                  c[s2 >> 2] = 0;
                  c[r2 >> 2] = t2;
                  Ya2 = -1;
                  Za2 = t2;
                  Q2 = 85;
                  break;
                }
                case 83: {
                  Ga2 = c[r2 >> 2] | 0;
                  if (!xa2) {
                    sd(e2, 32, ma2, 0, ia2);
                    _a2 = 0;
                    Q2 = 96;
                  } else {
                    Ya2 = xa2;
                    Za2 = Ga2;
                    Q2 = 85;
                  }
                  break;
                }
                case 65:
                case 71:
                case 70:
                case 69:
                case 97:
                case 103:
                case 102:
                case 101: {
                  $a2 = +h[r2 >> 3];
                  c[o2 >> 2] = 0;
                  h[l >> 3] = $a2;
                  if ((c[l + 4 >> 2] | 0) >= 0) {
                    Ga2 = ia2 & 1;
                    if (!(ia2 & 2048)) {
                      ab2 = $a2;
                      bb2 = Ga2;
                      cb2 = (Ga2 | 0) == 0 ? 3992 : 3997;
                    } else {
                      ab2 = $a2;
                      bb2 = 1;
                      cb2 = 3994;
                    }
                  } else {
                    ab2 = -$a2;
                    bb2 = 1;
                    cb2 = 3991;
                  }
                  h[l >> 3] = ab2;
                  Ga2 = c[l + 4 >> 2] & 2146435072;
                  do
                    if (Ga2 >>> 0 < 2146435072 | (Ga2 | 0) == 2146435072 & 0 < 0) {
                      $a2 = +ud(ab2, o2) * 2;
                      ja2 = $a2 != 0;
                      if (ja2) c[o2 >> 2] = (c[o2 >> 2] | 0) + -1;
                      ha2 = $2 | 32;
                      if ((ha2 | 0) == 97) {
                        f2 = $2 & 32;
                        Ma2 = (f2 | 0) == 0 ? cb2 : cb2 + 9 | 0;
                        db2 = bb2 | 2;
                        eb2 = 12 - xa2 | 0;
                        do
                          if (!(xa2 >>> 0 > 11 | (eb2 | 0) == 0)) {
                            fb2 = 8;
                            gb2 = eb2;
                            do {
                              gb2 = gb2 + -1 | 0;
                              fb2 = fb2 * 16;
                            } while ((gb2 | 0) != 0);
                            if ((a[Ma2 >> 0] | 0) == 45) {
                              hb2 = -(fb2 + (-$a2 - fb2));
                              break;
                            } else {
                              hb2 = $a2 + fb2 - fb2;
                              break;
                            }
                          } else hb2 = $a2;
                        while (0);
                        eb2 = c[o2 >> 2] | 0;
                        gb2 = (eb2 | 0) < 0 ? 0 - eb2 | 0 : eb2;
                        ib2 = pd(gb2, ((gb2 | 0) < 0) << 31 >> 31, B2) | 0;
                        if ((ib2 | 0) == (B2 | 0)) {
                          a[C2 >> 0] = 48;
                          jb2 = C2;
                        } else jb2 = ib2;
                        a[jb2 + -1 >> 0] = (eb2 >> 31 & 2) + 43;
                        eb2 = jb2 + -2 | 0;
                        a[eb2 >> 0] = $2 + 15;
                        ib2 = (xa2 | 0) < 1;
                        gb2 = (ia2 & 8 | 0) == 0;
                        kb2 = p2;
                        lb2 = hb2;
                        while (1) {
                          mb2 = ~~lb2;
                          nb2 = kb2 + 1 | 0;
                          a[kb2 >> 0] = d[3958 + mb2 >> 0] | f2;
                          lb2 = (lb2 - +(mb2 | 0)) * 16;
                          do
                            if ((nb2 - z2 | 0) == 1) {
                              if (gb2 & (ib2 & lb2 == 0)) {
                                ob2 = nb2;
                                break;
                              }
                              a[nb2 >> 0] = 46;
                              ob2 = kb2 + 2 | 0;
                            } else ob2 = nb2;
                          while (0);
                          if (!(lb2 != 0)) break;
                          else kb2 = ob2;
                        }
                        kb2 = ob2;
                        ib2 = eb2;
                        gb2 = (xa2 | 0) != 0 & (F2 + kb2 | 0) < (xa2 | 0) ? G2 + xa2 - ib2 | 0 : E2 - ib2 + kb2 | 0;
                        f2 = gb2 + db2 | 0;
                        sd(e2, 32, ma2, f2, ia2);
                        if (!(c[e2 >> 2] & 32)) nd(Ma2, db2, e2) | 0;
                        sd(e2, 48, ma2, f2, ia2 ^ 65536);
                        nb2 = kb2 - z2 | 0;
                        if (!(c[e2 >> 2] & 32)) nd(p2, nb2, e2) | 0;
                        kb2 = q2 - ib2 | 0;
                        sd(e2, 48, gb2 - (nb2 + kb2) | 0, 0, 0);
                        if (!(c[e2 >> 2] & 32)) nd(eb2, kb2, e2) | 0;
                        sd(e2, 32, ma2, f2, ia2 ^ 8192);
                        pb2 = (f2 | 0) < (ma2 | 0) ? ma2 : f2;
                        break;
                      }
                      f2 = (xa2 | 0) < 0 ? 6 : xa2;
                      if (ja2) {
                        kb2 = (c[o2 >> 2] | 0) + -28 | 0;
                        c[o2 >> 2] = kb2;
                        qb2 = $a2 * 268435456;
                        rb2 = kb2;
                      } else {
                        qb2 = $a2;
                        rb2 = c[o2 >> 2] | 0;
                      }
                      kb2 = (rb2 | 0) < 0 ? n2 : H2;
                      nb2 = kb2;
                      lb2 = qb2;
                      do {
                        gb2 = ~~lb2 >>> 0;
                        c[nb2 >> 2] = gb2;
                        nb2 = nb2 + 4 | 0;
                        lb2 = (lb2 - +(gb2 >>> 0)) * 1e9;
                      } while (lb2 != 0);
                      if ((rb2 | 0) > 0) {
                        ja2 = kb2;
                        eb2 = nb2;
                        db2 = rb2;
                        while (1) {
                          Ma2 = (db2 | 0) > 29 ? 29 : db2;
                          gb2 = eb2 + -4 | 0;
                          do
                            if (gb2 >>> 0 < ja2 >>> 0) sb2 = ja2;
                            else {
                              ib2 = gb2;
                              mb2 = 0;
                              do {
                                tb2 = ke(c[ib2 >> 2] | 0, 0, Ma2 | 0) | 0;
                                ub2 = ie(tb2 | 0, D | 0, mb2 | 0, 0) | 0;
                                tb2 = D;
                                vb2 = re(ub2 | 0, tb2 | 0, 1e9, 0) | 0;
                                c[ib2 >> 2] = vb2;
                                mb2 = pe(ub2 | 0, tb2 | 0, 1e9, 0) | 0;
                                ib2 = ib2 + -4 | 0;
                              } while (ib2 >>> 0 >= ja2 >>> 0);
                              if (!mb2) {
                                sb2 = ja2;
                                break;
                              }
                              ib2 = ja2 + -4 | 0;
                              c[ib2 >> 2] = mb2;
                              sb2 = ib2;
                            }
                          while (0);
                          gb2 = eb2;
                          while (1) {
                            if (gb2 >>> 0 <= sb2 >>> 0) break;
                            ib2 = gb2 + -4 | 0;
                            if (!(c[ib2 >> 2] | 0)) gb2 = ib2;
                            else break;
                          }
                          ib2 = (c[o2 >> 2] | 0) - Ma2 | 0;
                          c[o2 >> 2] = ib2;
                          if ((ib2 | 0) > 0) {
                            ja2 = sb2;
                            eb2 = gb2;
                            db2 = ib2;
                          } else {
                            wb2 = sb2;
                            xb2 = gb2;
                            yb2 = ib2;
                            break;
                          }
                        }
                      } else {
                        wb2 = kb2;
                        xb2 = nb2;
                        yb2 = rb2;
                      }
                      if ((yb2 | 0) < 0) {
                        db2 = ((f2 + 25 | 0) / 9 | 0) + 1 | 0;
                        eb2 = (ha2 | 0) == 102;
                        ja2 = wb2;
                        ib2 = xb2;
                        tb2 = yb2;
                        while (1) {
                          ub2 = 0 - tb2 | 0;
                          vb2 = (ub2 | 0) > 9 ? 9 : ub2;
                          do
                            if (ja2 >>> 0 < ib2 >>> 0) {
                              ub2 = (1 << vb2) + -1 | 0;
                              zb2 = 1e9 >>> vb2;
                              Ab2 = 0;
                              Bb2 = ja2;
                              do {
                                Cb2 = c[Bb2 >> 2] | 0;
                                c[Bb2 >> 2] = (Cb2 >>> vb2) + Ab2;
                                Ab2 = S(Cb2 & ub2, zb2) | 0;
                                Bb2 = Bb2 + 4 | 0;
                              } while (Bb2 >>> 0 < ib2 >>> 0);
                              Bb2 = (c[ja2 >> 2] | 0) == 0 ? ja2 + 4 | 0 : ja2;
                              if (!Ab2) {
                                Db2 = Bb2;
                                Eb2 = ib2;
                                break;
                              }
                              c[ib2 >> 2] = Ab2;
                              Db2 = Bb2;
                              Eb2 = ib2 + 4 | 0;
                            } else {
                              Db2 = (c[ja2 >> 2] | 0) == 0 ? ja2 + 4 | 0 : ja2;
                              Eb2 = ib2;
                            }
                          while (0);
                          gb2 = eb2 ? kb2 : Db2;
                          Ma2 = (Eb2 - gb2 >> 2 | 0) > (db2 | 0) ? gb2 + (db2 << 2) | 0 : Eb2;
                          tb2 = (c[o2 >> 2] | 0) + vb2 | 0;
                          c[o2 >> 2] = tb2;
                          if ((tb2 | 0) >= 0) {
                            Fb2 = Db2;
                            Gb2 = Ma2;
                            break;
                          } else {
                            ja2 = Db2;
                            ib2 = Ma2;
                          }
                        }
                      } else {
                        Fb2 = wb2;
                        Gb2 = xb2;
                      }
                      ib2 = kb2;
                      do
                        if (Fb2 >>> 0 < Gb2 >>> 0) {
                          ja2 = (ib2 - Fb2 >> 2) * 9 | 0;
                          tb2 = c[Fb2 >> 2] | 0;
                          if (tb2 >>> 0 < 10) {
                            Hb2 = ja2;
                            break;
                          } else {
                            Ib2 = ja2;
                            Jb2 = 10;
                          }
                          while (1) {
                            Jb2 = Jb2 * 10 | 0;
                            ja2 = Ib2 + 1 | 0;
                            if (tb2 >>> 0 < Jb2 >>> 0) {
                              Hb2 = ja2;
                              break;
                            } else Ib2 = ja2;
                          }
                        } else Hb2 = 0;
                      while (0);
                      tb2 = (ha2 | 0) == 103;
                      vb2 = (f2 | 0) != 0;
                      ja2 = f2 - ((ha2 | 0) != 102 ? Hb2 : 0) + ((vb2 & tb2) << 31 >> 31) | 0;
                      if ((ja2 | 0) < (((Gb2 - ib2 >> 2) * 9 | 0) + -9 | 0)) {
                        db2 = ja2 + 9216 | 0;
                        ja2 = kb2 + 4 + (((db2 | 0) / 9 | 0) + -1024 << 2) | 0;
                        eb2 = ((db2 | 0) % 9 | 0) + 1 | 0;
                        if ((eb2 | 0) < 9) {
                          db2 = eb2;
                          eb2 = 10;
                          while (1) {
                            nb2 = eb2 * 10 | 0;
                            db2 = db2 + 1 | 0;
                            if ((db2 | 0) == 9) {
                              Kb2 = nb2;
                              break;
                            } else eb2 = nb2;
                          }
                        } else Kb2 = 10;
                        eb2 = c[ja2 >> 2] | 0;
                        db2 = (eb2 >>> 0) % (Kb2 >>> 0) | 0;
                        ha2 = (ja2 + 4 | 0) == (Gb2 | 0);
                        do
                          if (ha2 & (db2 | 0) == 0) {
                            Lb2 = ja2;
                            Mb2 = Hb2;
                            Nb2 = Fb2;
                          } else {
                            lb2 = (((eb2 >>> 0) / (Kb2 >>> 0) | 0) & 1 | 0) == 0 ? 9007199254740992 : 9007199254740994;
                            nb2 = (Kb2 | 0) / 2 | 0;
                            if (db2 >>> 0 < nb2 >>> 0) Ob2 = 0.5;
                            else Ob2 = ha2 & (db2 | 0) == (nb2 | 0) ? 1 : 1.5;
                            do
                              if (!bb2) {
                                Pb2 = Ob2;
                                Qb2 = lb2;
                              } else {
                                if ((a[cb2 >> 0] | 0) != 45) {
                                  Pb2 = Ob2;
                                  Qb2 = lb2;
                                  break;
                                }
                                Pb2 = -Ob2;
                                Qb2 = -lb2;
                              }
                            while (0);
                            nb2 = eb2 - db2 | 0;
                            c[ja2 >> 2] = nb2;
                            if (!(Qb2 + Pb2 != Qb2)) {
                              Lb2 = ja2;
                              Mb2 = Hb2;
                              Nb2 = Fb2;
                              break;
                            }
                            Ma2 = nb2 + Kb2 | 0;
                            c[ja2 >> 2] = Ma2;
                            if (Ma2 >>> 0 > 999999999) {
                              Ma2 = ja2;
                              nb2 = Fb2;
                              while (1) {
                                gb2 = Ma2 + -4 | 0;
                                c[Ma2 >> 2] = 0;
                                if (gb2 >>> 0 < nb2 >>> 0) {
                                  Bb2 = nb2 + -4 | 0;
                                  c[Bb2 >> 2] = 0;
                                  Rb2 = Bb2;
                                } else Rb2 = nb2;
                                Bb2 = (c[gb2 >> 2] | 0) + 1 | 0;
                                c[gb2 >> 2] = Bb2;
                                if (Bb2 >>> 0 > 999999999) {
                                  Ma2 = gb2;
                                  nb2 = Rb2;
                                } else {
                                  Sb2 = gb2;
                                  Tb2 = Rb2;
                                  break;
                                }
                              }
                            } else {
                              Sb2 = ja2;
                              Tb2 = Fb2;
                            }
                            nb2 = (ib2 - Tb2 >> 2) * 9 | 0;
                            Ma2 = c[Tb2 >> 2] | 0;
                            if (Ma2 >>> 0 < 10) {
                              Lb2 = Sb2;
                              Mb2 = nb2;
                              Nb2 = Tb2;
                              break;
                            } else {
                              Ub2 = nb2;
                              Vb2 = 10;
                            }
                            while (1) {
                              Vb2 = Vb2 * 10 | 0;
                              nb2 = Ub2 + 1 | 0;
                              if (Ma2 >>> 0 < Vb2 >>> 0) {
                                Lb2 = Sb2;
                                Mb2 = nb2;
                                Nb2 = Tb2;
                                break;
                              } else Ub2 = nb2;
                            }
                          }
                        while (0);
                        ja2 = Lb2 + 4 | 0;
                        Wb2 = Mb2;
                        Xb2 = Gb2 >>> 0 > ja2 >>> 0 ? ja2 : Gb2;
                        Yb2 = Nb2;
                      } else {
                        Wb2 = Hb2;
                        Xb2 = Gb2;
                        Yb2 = Fb2;
                      }
                      ja2 = 0 - Wb2 | 0;
                      db2 = Xb2;
                      while (1) {
                        if (db2 >>> 0 <= Yb2 >>> 0) {
                          Zb2 = 0;
                          break;
                        }
                        eb2 = db2 + -4 | 0;
                        if (!(c[eb2 >> 2] | 0)) db2 = eb2;
                        else {
                          Zb2 = 1;
                          break;
                        }
                      }
                      do
                        if (tb2) {
                          eb2 = (vb2 & 1 ^ 1) + f2 | 0;
                          if ((eb2 | 0) > (Wb2 | 0) & (Wb2 | 0) > -5) {
                            _b2 = $2 + -1 | 0;
                            $b2 = eb2 + -1 - Wb2 | 0;
                          } else {
                            _b2 = $2 + -2 | 0;
                            $b2 = eb2 + -1 | 0;
                          }
                          eb2 = ia2 & 8;
                          if (eb2 | 0) {
                            ac2 = _b2;
                            bc2 = $b2;
                            cc2 = eb2;
                            break;
                          }
                          do
                            if (Zb2) {
                              eb2 = c[db2 + -4 >> 2] | 0;
                              if (!eb2) {
                                dc2 = 9;
                                break;
                              }
                              if (!((eb2 >>> 0) % 10 | 0)) {
                                ec2 = 0;
                                fc2 = 10;
                              } else {
                                dc2 = 0;
                                break;
                              }
                              while (1) {
                                fc2 = fc2 * 10 | 0;
                                ha2 = ec2 + 1 | 0;
                                if ((eb2 >>> 0) % (fc2 >>> 0) | 0 | 0) {
                                  dc2 = ha2;
                                  break;
                                } else ec2 = ha2;
                              }
                            } else dc2 = 9;
                          while (0);
                          eb2 = ((db2 - ib2 >> 2) * 9 | 0) + -9 | 0;
                          if ((_b2 | 32 | 0) == 102) {
                            Ab2 = eb2 - dc2 | 0;
                            ha2 = (Ab2 | 0) < 0 ? 0 : Ab2;
                            ac2 = _b2;
                            bc2 = ($b2 | 0) < (ha2 | 0) ? $b2 : ha2;
                            cc2 = 0;
                            break;
                          } else {
                            ha2 = eb2 + Wb2 - dc2 | 0;
                            eb2 = (ha2 | 0) < 0 ? 0 : ha2;
                            ac2 = _b2;
                            bc2 = ($b2 | 0) < (eb2 | 0) ? $b2 : eb2;
                            cc2 = 0;
                            break;
                          }
                        } else {
                          ac2 = $2;
                          bc2 = f2;
                          cc2 = ia2 & 8;
                        }
                      while (0);
                      f2 = bc2 | cc2;
                      ib2 = (f2 | 0) != 0 & 1;
                      vb2 = (ac2 | 32 | 0) == 102;
                      if (vb2) {
                        gc2 = 0;
                        hc2 = (Wb2 | 0) > 0 ? Wb2 : 0;
                      } else {
                        tb2 = (Wb2 | 0) < 0 ? ja2 : Wb2;
                        eb2 = pd(tb2, ((tb2 | 0) < 0) << 31 >> 31, B2) | 0;
                        if ((q2 - eb2 | 0) < 2) {
                          tb2 = eb2;
                          while (1) {
                            ha2 = tb2 + -1 | 0;
                            a[ha2 >> 0] = 48;
                            if ((q2 - ha2 | 0) < 2) tb2 = ha2;
                            else {
                              ic2 = ha2;
                              break;
                            }
                          }
                        } else ic2 = eb2;
                        a[ic2 + -1 >> 0] = (Wb2 >> 31 & 2) + 43;
                        tb2 = ic2 + -2 | 0;
                        a[tb2 >> 0] = ac2;
                        gc2 = tb2;
                        hc2 = q2 - tb2 | 0;
                      }
                      tb2 = bb2 + 1 + bc2 + ib2 + hc2 | 0;
                      sd(e2, 32, ma2, tb2, ia2);
                      if (!(c[e2 >> 2] & 32)) nd(cb2, bb2, e2) | 0;
                      sd(e2, 48, ma2, tb2, ia2 ^ 65536);
                      do
                        if (vb2) {
                          ja2 = Yb2 >>> 0 > kb2 >>> 0 ? kb2 : Yb2;
                          ha2 = ja2;
                          do {
                            Ab2 = pd(c[ha2 >> 2] | 0, 0, I2) | 0;
                            do
                              if ((ha2 | 0) == (ja2 | 0)) {
                                if ((Ab2 | 0) != (I2 | 0)) {
                                  jc2 = Ab2;
                                  break;
                                }
                                a[K2 >> 0] = 48;
                                jc2 = K2;
                              } else {
                                if (Ab2 >>> 0 <= p2 >>> 0) {
                                  jc2 = Ab2;
                                  break;
                                }
                                je(p2 | 0, 48, Ab2 - z2 | 0) | 0;
                                Ma2 = Ab2;
                                while (1) {
                                  nb2 = Ma2 + -1 | 0;
                                  if (nb2 >>> 0 > p2 >>> 0) Ma2 = nb2;
                                  else {
                                    jc2 = nb2;
                                    break;
                                  }
                                }
                              }
                            while (0);
                            if (!(c[e2 >> 2] & 32)) nd(jc2, J2 - jc2 | 0, e2) | 0;
                            ha2 = ha2 + 4 | 0;
                          } while (ha2 >>> 0 <= kb2 >>> 0);
                          do
                            if (f2 | 0) {
                              if (c[e2 >> 2] & 32 | 0) break;
                              nd(4026, 1, e2) | 0;
                            }
                          while (0);
                          if ((bc2 | 0) > 0 & ha2 >>> 0 < db2 >>> 0) {
                            ja2 = bc2;
                            Ab2 = ha2;
                            while (1) {
                              Ma2 = pd(c[Ab2 >> 2] | 0, 0, I2) | 0;
                              if (Ma2 >>> 0 > p2 >>> 0) {
                                je(p2 | 0, 48, Ma2 - z2 | 0) | 0;
                                nb2 = Ma2;
                                while (1) {
                                  gb2 = nb2 + -1 | 0;
                                  if (gb2 >>> 0 > p2 >>> 0) nb2 = gb2;
                                  else {
                                    kc2 = gb2;
                                    break;
                                  }
                                }
                              } else kc2 = Ma2;
                              if (!(c[e2 >> 2] & 32)) nd(kc2, (ja2 | 0) > 9 ? 9 : ja2, e2) | 0;
                              Ab2 = Ab2 + 4 | 0;
                              nb2 = ja2 + -9 | 0;
                              if (!((ja2 | 0) > 9 & Ab2 >>> 0 < db2 >>> 0)) {
                                lc2 = nb2;
                                break;
                              } else ja2 = nb2;
                            }
                          } else lc2 = bc2;
                          sd(e2, 48, lc2 + 9 | 0, 9, 0);
                        } else {
                          ja2 = Zb2 ? db2 : Yb2 + 4 | 0;
                          if ((bc2 | 0) > -1) {
                            Ab2 = (cc2 | 0) == 0;
                            ha2 = bc2;
                            nb2 = Yb2;
                            while (1) {
                              gb2 = pd(c[nb2 >> 2] | 0, 0, I2) | 0;
                              if ((gb2 | 0) == (I2 | 0)) {
                                a[K2 >> 0] = 48;
                                mc2 = K2;
                              } else mc2 = gb2;
                              do
                                if ((nb2 | 0) == (Yb2 | 0)) {
                                  gb2 = mc2 + 1 | 0;
                                  if (!(c[e2 >> 2] & 32)) nd(mc2, 1, e2) | 0;
                                  if (Ab2 & (ha2 | 0) < 1) {
                                    nc2 = gb2;
                                    break;
                                  }
                                  if (c[e2 >> 2] & 32 | 0) {
                                    nc2 = gb2;
                                    break;
                                  }
                                  nd(4026, 1, e2) | 0;
                                  nc2 = gb2;
                                } else {
                                  if (mc2 >>> 0 <= p2 >>> 0) {
                                    nc2 = mc2;
                                    break;
                                  }
                                  je(p2 | 0, 48, mc2 + A2 | 0) | 0;
                                  gb2 = mc2;
                                  while (1) {
                                    Bb2 = gb2 + -1 | 0;
                                    if (Bb2 >>> 0 > p2 >>> 0) gb2 = Bb2;
                                    else {
                                      nc2 = Bb2;
                                      break;
                                    }
                                  }
                                }
                              while (0);
                              Ma2 = J2 - nc2 | 0;
                              if (!(c[e2 >> 2] & 32)) nd(nc2, (ha2 | 0) > (Ma2 | 0) ? Ma2 : ha2, e2) | 0;
                              gb2 = ha2 - Ma2 | 0;
                              nb2 = nb2 + 4 | 0;
                              if (!(nb2 >>> 0 < ja2 >>> 0 & (gb2 | 0) > -1)) {
                                oc2 = gb2;
                                break;
                              } else ha2 = gb2;
                            }
                          } else oc2 = bc2;
                          sd(e2, 48, oc2 + 18 | 0, 18, 0);
                          if (c[e2 >> 2] & 32 | 0) break;
                          nd(gc2, q2 - gc2 | 0, e2) | 0;
                        }
                      while (0);
                      sd(e2, 32, ma2, tb2, ia2 ^ 8192);
                      pb2 = (tb2 | 0) < (ma2 | 0) ? ma2 : tb2;
                    } else {
                      db2 = ($2 & 32 | 0) != 0;
                      f2 = ab2 != ab2 | false;
                      kb2 = f2 ? 0 : bb2;
                      vb2 = kb2 + 3 | 0;
                      sd(e2, 32, ma2, vb2, Z2);
                      ib2 = c[e2 >> 2] | 0;
                      if (!(ib2 & 32)) {
                        nd(cb2, kb2, e2) | 0;
                        pc2 = c[e2 >> 2] | 0;
                      } else pc2 = ib2;
                      if (!(pc2 & 32)) nd(f2 ? db2 ? 4018 : 4022 : db2 ? 4010 : 4014, 3, e2) | 0;
                      sd(e2, 32, ma2, vb2, ia2 ^ 8192);
                      pb2 = (vb2 | 0) < (ma2 | 0) ? ma2 : vb2;
                    }
                  while (0);
                  L2 = pb2;
                  M2 = P2;
                  N2 = oa2;
                  O2 = za2;
                  continue a;
                  break;
                }
                default: {
                  Ra2 = O2;
                  Sa2 = 0;
                  Ta2 = 3974;
                  Ua2 = w2;
                  Va2 = xa2;
                  Wa2 = ia2;
                }
              }
            while (0);
            g: do
              if ((Q2 | 0) == 63) {
                Q2 = 0;
                $2 = r2;
                _2 = c[$2 >> 2] | 0;
                Y2 = c[$2 + 4 >> 2] | 0;
                $2 = Ca2 & 32;
                if ((_2 | 0) == 0 & (Y2 | 0) == 0) {
                  qc2 = w2;
                  rc2 = 0;
                  sc2 = 0;
                } else {
                  Ga2 = w2;
                  vb2 = _2;
                  _2 = Y2;
                  do {
                    Ga2 = Ga2 + -1 | 0;
                    a[Ga2 >> 0] = d[3958 + (vb2 & 15) >> 0] | $2;
                    vb2 = le(vb2 | 0, _2 | 0, 4) | 0;
                    _2 = D;
                  } while (!((vb2 | 0) == 0 & (_2 | 0) == 0));
                  _2 = r2;
                  qc2 = Ga2;
                  rc2 = c[_2 >> 2] | 0;
                  sc2 = c[_2 + 4 >> 2] | 0;
                }
                _2 = (Ea2 & 8 | 0) == 0 | (rc2 | 0) == 0 & (sc2 | 0) == 0;
                Ha2 = qc2;
                Ia2 = _2 ? 0 : 2;
                Ja2 = _2 ? 3974 : 3974 + (Ca2 >> 4) | 0;
                Ka2 = Da2;
                La2 = Ea2;
                Q2 = 76;
              } else if ((Q2 | 0) == 75) {
                Q2 = 0;
                Ha2 = pd(Pa2, Qa2, w2) | 0;
                Ia2 = Na2;
                Ja2 = Oa2;
                Ka2 = xa2;
                La2 = ia2;
                Q2 = 76;
              } else if ((Q2 | 0) == 81) {
                Q2 = 0;
                _2 = rd(Xa2, 0, xa2) | 0;
                vb2 = (_2 | 0) == 0;
                Ra2 = Xa2;
                Sa2 = 0;
                Ta2 = 3974;
                Ua2 = vb2 ? Xa2 + xa2 | 0 : _2;
                Va2 = vb2 ? xa2 : _2 - Xa2 | 0;
                Wa2 = Z2;
              } else if ((Q2 | 0) == 85) {
                Q2 = 0;
                _2 = Za2;
                vb2 = 0;
                $2 = 0;
                while (1) {
                  Y2 = c[_2 >> 2] | 0;
                  if (!Y2) {
                    tc2 = vb2;
                    uc2 = $2;
                    break;
                  }
                  db2 = td(u2, Y2) | 0;
                  if ((db2 | 0) < 0 | db2 >>> 0 > (Ya2 - vb2 | 0) >>> 0) {
                    tc2 = vb2;
                    uc2 = db2;
                    break;
                  }
                  Y2 = db2 + vb2 | 0;
                  if (Ya2 >>> 0 > Y2 >>> 0) {
                    _2 = _2 + 4 | 0;
                    vb2 = Y2;
                    $2 = db2;
                  } else {
                    tc2 = Y2;
                    uc2 = db2;
                    break;
                  }
                }
                if ((uc2 | 0) < 0) {
                  la2 = -1;
                  break a;
                }
                sd(e2, 32, ma2, tc2, ia2);
                if (!tc2) {
                  _a2 = 0;
                  Q2 = 96;
                } else {
                  $2 = Za2;
                  vb2 = 0;
                  while (1) {
                    _2 = c[$2 >> 2] | 0;
                    if (!_2) {
                      _a2 = tc2;
                      Q2 = 96;
                      break g;
                    }
                    Ga2 = td(u2, _2) | 0;
                    vb2 = Ga2 + vb2 | 0;
                    if ((vb2 | 0) > (tc2 | 0)) {
                      _a2 = tc2;
                      Q2 = 96;
                      break g;
                    }
                    if (!(c[e2 >> 2] & 32)) nd(u2, Ga2, e2) | 0;
                    if (vb2 >>> 0 >= tc2 >>> 0) {
                      _a2 = tc2;
                      Q2 = 96;
                      break;
                    } else $2 = $2 + 4 | 0;
                  }
                }
              }
            while (0);
            if ((Q2 | 0) == 96) {
              Q2 = 0;
              sd(e2, 32, ma2, _a2, ia2 ^ 8192);
              L2 = (ma2 | 0) > (_a2 | 0) ? ma2 : _a2;
              M2 = P2;
              N2 = oa2;
              O2 = za2;
              continue;
            }
            if ((Q2 | 0) == 76) {
              Q2 = 0;
              Z2 = (Ka2 | 0) > -1 ? La2 & -65537 : La2;
              $2 = r2;
              vb2 = (c[$2 >> 2] | 0) != 0 | (c[$2 + 4 >> 2] | 0) != 0;
              if ((Ka2 | 0) != 0 | vb2) {
                $2 = (vb2 & 1 ^ 1) + (x2 - Ha2) | 0;
                Ra2 = Ha2;
                Sa2 = Ia2;
                Ta2 = Ja2;
                Ua2 = w2;
                Va2 = (Ka2 | 0) > ($2 | 0) ? Ka2 : $2;
                Wa2 = Z2;
              } else {
                Ra2 = w2;
                Sa2 = Ia2;
                Ta2 = Ja2;
                Ua2 = w2;
                Va2 = 0;
                Wa2 = Z2;
              }
            }
            Z2 = Ua2 - Ra2 | 0;
            $2 = (Va2 | 0) < (Z2 | 0) ? Z2 : Va2;
            vb2 = $2 + Sa2 | 0;
            Ga2 = (ma2 | 0) < (vb2 | 0) ? vb2 : ma2;
            sd(e2, 32, Ga2, vb2, Wa2);
            if (!(c[e2 >> 2] & 32)) nd(Ta2, Sa2, e2) | 0;
            sd(e2, 48, Ga2, vb2, Wa2 ^ 65536);
            sd(e2, 48, $2, Z2, 0);
            if (!(c[e2 >> 2] & 32)) nd(Ra2, Z2, e2) | 0;
            sd(e2, 32, Ga2, vb2, Wa2 ^ 8192);
            L2 = Ga2;
            M2 = P2;
            N2 = oa2;
            O2 = za2;
          }
          h: do
            if ((Q2 | 0) == 243)
              if (!e2)
                if (!N2) la2 = 0;
                else {
                  za2 = 1;
                  while (1) {
                    O2 = c[k2 + (za2 << 2) >> 2] | 0;
                    if (!O2) {
                      vc2 = za2;
                      break;
                    }
                    od(j2 + (za2 << 3) | 0, O2, g2);
                    za2 = za2 + 1 | 0;
                    if ((za2 | 0) >= 10) {
                      la2 = 1;
                      break h;
                    }
                  }
                  while (1) {
                    if (c[k2 + (vc2 << 2) >> 2] | 0) {
                      la2 = -1;
                      break h;
                    }
                    vc2 = vc2 + 1 | 0;
                    if ((vc2 | 0) >= 10) {
                      la2 = 1;
                      break;
                    }
                  }
                }
              else la2 = P2;
          while (0);
          i2 = m2;
          return la2 | 0;
        }
        function md(a2) {
          a2 = a2 | 0;
          return 0;
        }
        function nd(b2, d2, e2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          var f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0;
          f2 = e2 + 16 | 0;
          g2 = c[f2 >> 2] | 0;
          if (!g2)
            if (!(xd(e2) | 0)) {
              h2 = c[f2 >> 2] | 0;
              i3 = 5;
            } else j2 = 0;
          else {
            h2 = g2;
            i3 = 5;
          }
          a: do
            if ((i3 | 0) == 5) {
              g2 = e2 + 20 | 0;
              f2 = c[g2 >> 2] | 0;
              k2 = f2;
              if ((h2 - f2 | 0) >>> 0 < d2 >>> 0) {
                j2 = Fa[c[e2 + 36 >> 2] & 7](e2, b2, d2) | 0;
                break;
              }
              b: do
                if ((a[e2 + 75 >> 0] | 0) > -1) {
                  f2 = d2;
                  while (1) {
                    if (!f2) {
                      l2 = d2;
                      m2 = b2;
                      n2 = 0;
                      o2 = k2;
                      break b;
                    }
                    p2 = f2 + -1 | 0;
                    if ((a[b2 + p2 >> 0] | 0) == 10) break;
                    else f2 = p2;
                  }
                  if ((Fa[c[e2 + 36 >> 2] & 7](e2, b2, f2) | 0) >>> 0 < f2 >>> 0) {
                    j2 = f2;
                    break a;
                  }
                  l2 = d2 - f2 | 0;
                  m2 = b2 + f2 | 0;
                  n2 = f2;
                  o2 = c[g2 >> 2] | 0;
                } else {
                  l2 = d2;
                  m2 = b2;
                  n2 = 0;
                  o2 = k2;
                }
              while (0);
              me(o2 | 0, m2 | 0, l2 | 0) | 0;
              c[g2 >> 2] = (c[g2 >> 2] | 0) + l2;
              j2 = n2 + l2 | 0;
            }
          while (0);
          return j2 | 0;
        }
        function od(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, g2 = 0, i3 = 0, j2 = 0;
          a: do
            if (b2 >>> 0 <= 20)
              do
                switch (b2 | 0) {
                  case 9: {
                    e2 = (c[d2 >> 2] | 0) + (4 - 1) & ~(4 - 1);
                    f2 = c[e2 >> 2] | 0;
                    c[d2 >> 2] = e2 + 4;
                    c[a2 >> 2] = f2;
                    break a;
                    break;
                  }
                  case 10: {
                    f2 = (c[d2 >> 2] | 0) + (4 - 1) & ~(4 - 1);
                    e2 = c[f2 >> 2] | 0;
                    c[d2 >> 2] = f2 + 4;
                    f2 = a2;
                    c[f2 >> 2] = e2;
                    c[f2 + 4 >> 2] = ((e2 | 0) < 0) << 31 >> 31;
                    break a;
                    break;
                  }
                  case 11: {
                    e2 = (c[d2 >> 2] | 0) + (4 - 1) & ~(4 - 1);
                    f2 = c[e2 >> 2] | 0;
                    c[d2 >> 2] = e2 + 4;
                    e2 = a2;
                    c[e2 >> 2] = f2;
                    c[e2 + 4 >> 2] = 0;
                    break a;
                    break;
                  }
                  case 12: {
                    e2 = (c[d2 >> 2] | 0) + (8 - 1) & ~(8 - 1);
                    f2 = e2;
                    g2 = c[f2 >> 2] | 0;
                    i3 = c[f2 + 4 >> 2] | 0;
                    c[d2 >> 2] = e2 + 8;
                    e2 = a2;
                    c[e2 >> 2] = g2;
                    c[e2 + 4 >> 2] = i3;
                    break a;
                    break;
                  }
                  case 13: {
                    i3 = (c[d2 >> 2] | 0) + (4 - 1) & ~(4 - 1);
                    e2 = c[i3 >> 2] | 0;
                    c[d2 >> 2] = i3 + 4;
                    i3 = (e2 & 65535) << 16 >> 16;
                    e2 = a2;
                    c[e2 >> 2] = i3;
                    c[e2 + 4 >> 2] = ((i3 | 0) < 0) << 31 >> 31;
                    break a;
                    break;
                  }
                  case 14: {
                    i3 = (c[d2 >> 2] | 0) + (4 - 1) & ~(4 - 1);
                    e2 = c[i3 >> 2] | 0;
                    c[d2 >> 2] = i3 + 4;
                    i3 = a2;
                    c[i3 >> 2] = e2 & 65535;
                    c[i3 + 4 >> 2] = 0;
                    break a;
                    break;
                  }
                  case 15: {
                    i3 = (c[d2 >> 2] | 0) + (4 - 1) & ~(4 - 1);
                    e2 = c[i3 >> 2] | 0;
                    c[d2 >> 2] = i3 + 4;
                    i3 = (e2 & 255) << 24 >> 24;
                    e2 = a2;
                    c[e2 >> 2] = i3;
                    c[e2 + 4 >> 2] = ((i3 | 0) < 0) << 31 >> 31;
                    break a;
                    break;
                  }
                  case 16: {
                    i3 = (c[d2 >> 2] | 0) + (4 - 1) & ~(4 - 1);
                    e2 = c[i3 >> 2] | 0;
                    c[d2 >> 2] = i3 + 4;
                    i3 = a2;
                    c[i3 >> 2] = e2 & 255;
                    c[i3 + 4 >> 2] = 0;
                    break a;
                    break;
                  }
                  case 17: {
                    i3 = (c[d2 >> 2] | 0) + (8 - 1) & ~(8 - 1);
                    j2 = +h[i3 >> 3];
                    c[d2 >> 2] = i3 + 8;
                    h[a2 >> 3] = j2;
                    break a;
                    break;
                  }
                  case 18: {
                    i3 = (c[d2 >> 2] | 0) + (8 - 1) & ~(8 - 1);
                    j2 = +h[i3 >> 3];
                    c[d2 >> 2] = i3 + 8;
                    h[a2 >> 3] = j2;
                    break a;
                    break;
                  }
                  default:
                    break a;
                }
              while (0);
          while (0);
          return;
        }
        function pd(b2, c2, d2) {
          b2 = b2 | 0;
          c2 = c2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0;
          if (c2 >>> 0 > 0 | (c2 | 0) == 0 & b2 >>> 0 > 4294967295) {
            e2 = d2;
            f2 = b2;
            g2 = c2;
            while (1) {
              c2 = re(f2 | 0, g2 | 0, 10, 0) | 0;
              e2 = e2 + -1 | 0;
              a[e2 >> 0] = c2 | 48;
              c2 = f2;
              f2 = pe(f2 | 0, g2 | 0, 10, 0) | 0;
              if (!(g2 >>> 0 > 9 | (g2 | 0) == 9 & c2 >>> 0 > 4294967295)) break;
              else g2 = D;
            }
            h2 = f2;
            i3 = e2;
          } else {
            h2 = b2;
            i3 = d2;
          }
          if (!h2) j2 = i3;
          else {
            d2 = h2;
            h2 = i3;
            while (1) {
              i3 = h2 + -1 | 0;
              a[i3 >> 0] = (d2 >>> 0) % 10 | 0 | 48;
              if (d2 >>> 0 < 10) {
                j2 = i3;
                break;
              } else {
                d2 = (d2 >>> 0) / 10 | 0;
                h2 = i3;
              }
            }
          }
          return j2 | 0;
        }
        function qd(b2) {
          b2 = b2 | 0;
          var c2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0;
          c2 = 0;
          while (1) {
            if ((d[4028 + c2 >> 0] | 0) == (b2 | 0)) {
              e2 = 2;
              break;
            }
            f2 = c2 + 1 | 0;
            if ((f2 | 0) == 87) {
              g2 = 4116;
              h2 = 87;
              e2 = 5;
              break;
            } else c2 = f2;
          }
          if ((e2 | 0) == 2)
            if (!c2) i3 = 4116;
            else {
              g2 = 4116;
              h2 = c2;
              e2 = 5;
            }
          if ((e2 | 0) == 5)
            while (1) {
              e2 = 0;
              c2 = g2;
              do {
                b2 = c2;
                c2 = c2 + 1 | 0;
              } while ((a[b2 >> 0] | 0) != 0);
              h2 = h2 + -1 | 0;
              if (!h2) {
                i3 = c2;
                break;
              } else {
                g2 = c2;
                e2 = 5;
              }
            }
          return i3 | 0;
        }
        function rd(b2, d2, e2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          var f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0;
          f2 = d2 & 255;
          g2 = (e2 | 0) != 0;
          a: do
            if (g2 & (b2 & 3 | 0) != 0) {
              h2 = d2 & 255;
              i3 = b2;
              j2 = e2;
              while (1) {
                if ((a[i3 >> 0] | 0) == h2 << 24 >> 24) {
                  k2 = i3;
                  l2 = j2;
                  m2 = 6;
                  break a;
                }
                n2 = i3 + 1 | 0;
                o2 = j2 + -1 | 0;
                p2 = (o2 | 0) != 0;
                if (p2 & (n2 & 3 | 0) != 0) {
                  i3 = n2;
                  j2 = o2;
                } else {
                  q2 = n2;
                  r2 = o2;
                  s2 = p2;
                  m2 = 5;
                  break;
                }
              }
            } else {
              q2 = b2;
              r2 = e2;
              s2 = g2;
              m2 = 5;
            }
          while (0);
          if ((m2 | 0) == 5)
            if (s2) {
              k2 = q2;
              l2 = r2;
              m2 = 6;
            } else {
              t2 = q2;
              u2 = 0;
            }
          b: do
            if ((m2 | 0) == 6) {
              q2 = d2 & 255;
              if ((a[k2 >> 0] | 0) == q2 << 24 >> 24) {
                t2 = k2;
                u2 = l2;
              } else {
                r2 = S(f2, 16843009) | 0;
                c: do
                  if (l2 >>> 0 > 3) {
                    s2 = k2;
                    g2 = l2;
                    while (1) {
                      e2 = c[s2 >> 2] ^ r2;
                      if ((e2 & -2139062144 ^ -2139062144) & e2 + -16843009 | 0) break;
                      e2 = s2 + 4 | 0;
                      b2 = g2 + -4 | 0;
                      if (b2 >>> 0 > 3) {
                        s2 = e2;
                        g2 = b2;
                      } else {
                        v2 = e2;
                        w2 = b2;
                        m2 = 11;
                        break c;
                      }
                    }
                    x2 = s2;
                    y2 = g2;
                  } else {
                    v2 = k2;
                    w2 = l2;
                    m2 = 11;
                  }
                while (0);
                if ((m2 | 0) == 11)
                  if (!w2) {
                    t2 = v2;
                    u2 = 0;
                    break;
                  } else {
                    x2 = v2;
                    y2 = w2;
                  }
                while (1) {
                  if ((a[x2 >> 0] | 0) == q2 << 24 >> 24) {
                    t2 = x2;
                    u2 = y2;
                    break b;
                  }
                  r2 = x2 + 1 | 0;
                  y2 = y2 + -1 | 0;
                  if (!y2) {
                    t2 = r2;
                    u2 = 0;
                    break;
                  } else x2 = r2;
                }
              }
            }
          while (0);
          return (u2 | 0 ? t2 : 0) | 0;
        }
        function sd(a2, b2, d2, e2, f2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          var g2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0;
          g2 = i2;
          i2 = i2 + 256 | 0;
          h2 = g2;
          do
            if ((d2 | 0) > (e2 | 0) & (f2 & 73728 | 0) == 0) {
              j2 = d2 - e2 | 0;
              je(h2 | 0, b2 | 0, (j2 >>> 0 > 256 ? 256 : j2) | 0) | 0;
              k2 = c[a2 >> 2] | 0;
              l2 = (k2 & 32 | 0) == 0;
              if (j2 >>> 0 > 255) {
                m2 = d2 - e2 | 0;
                n2 = j2;
                o2 = k2;
                k2 = l2;
                while (1) {
                  if (k2) {
                    nd(h2, 256, a2) | 0;
                    p2 = c[a2 >> 2] | 0;
                  } else p2 = o2;
                  n2 = n2 + -256 | 0;
                  k2 = (p2 & 32 | 0) == 0;
                  if (n2 >>> 0 <= 255) break;
                  else o2 = p2;
                }
                if (k2) q2 = m2 & 255;
                else break;
              } else if (l2) q2 = j2;
              else break;
              nd(h2, q2, a2) | 0;
            }
          while (0);
          i2 = g2;
          return;
        }
        function td(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          var c2 = 0;
          if (!a2) c2 = 0;
          else c2 = wd(a2, b2, 0) | 0;
          return c2 | 0;
        }
        function ud(a2, b2) {
          a2 = +a2;
          b2 = b2 | 0;
          return + +vd(a2, b2);
        }
        function vd(a2, b2) {
          a2 = +a2;
          b2 = b2 | 0;
          var d2 = 0, e2 = 0, f2 = 0, g2 = 0, i3 = 0, j2 = 0, k2 = 0;
          h[l >> 3] = a2;
          d2 = c[l >> 2] | 0;
          e2 = c[l + 4 >> 2] | 0;
          f2 = le(d2 | 0, e2 | 0, 52) | 0;
          switch (f2 & 2047) {
            case 0: {
              if (a2 != 0) {
                g2 = +vd(a2 * 18446744073709552e3, b2);
                i3 = g2;
                j2 = (c[b2 >> 2] | 0) + -64 | 0;
              } else {
                i3 = a2;
                j2 = 0;
              }
              c[b2 >> 2] = j2;
              k2 = i3;
              break;
            }
            case 2047: {
              k2 = a2;
              break;
            }
            default: {
              c[b2 >> 2] = (f2 & 2047) + -1022;
              c[l >> 2] = d2;
              c[l + 4 >> 2] = e2 & -2146435073 | 1071644672;
              k2 = +h[l >> 3];
            }
          }
          return +k2;
        }
        function wd(b2, d2, e2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          var f2 = 0;
          do
            if (b2) {
              if (d2 >>> 0 < 128) {
                a[b2 >> 0] = d2;
                f2 = 1;
                break;
              }
              if (d2 >>> 0 < 2048) {
                a[b2 >> 0] = d2 >>> 6 | 192;
                a[b2 + 1 >> 0] = d2 & 63 | 128;
                f2 = 2;
                break;
              }
              if (d2 >>> 0 < 55296 | (d2 & -8192 | 0) == 57344) {
                a[b2 >> 0] = d2 >>> 12 | 224;
                a[b2 + 1 >> 0] = d2 >>> 6 & 63 | 128;
                a[b2 + 2 >> 0] = d2 & 63 | 128;
                f2 = 3;
                break;
              }
              if ((d2 + -65536 | 0) >>> 0 < 1048576) {
                a[b2 >> 0] = d2 >>> 18 | 240;
                a[b2 + 1 >> 0] = d2 >>> 12 & 63 | 128;
                a[b2 + 2 >> 0] = d2 >>> 6 & 63 | 128;
                a[b2 + 3 >> 0] = d2 & 63 | 128;
                f2 = 4;
                break;
              } else {
                c[(Tc() | 0) >> 2] = 84;
                f2 = -1;
                break;
              }
            } else f2 = 1;
          while (0);
          return f2 | 0;
        }
        function xd(b2) {
          b2 = b2 | 0;
          var d2 = 0, e2 = 0, f2 = 0;
          d2 = b2 + 74 | 0;
          e2 = a[d2 >> 0] | 0;
          a[d2 >> 0] = e2 + 255 | e2;
          e2 = c[b2 >> 2] | 0;
          if (!(e2 & 8)) {
            c[b2 + 8 >> 2] = 0;
            c[b2 + 4 >> 2] = 0;
            d2 = c[b2 + 44 >> 2] | 0;
            c[b2 + 28 >> 2] = d2;
            c[b2 + 20 >> 2] = d2;
            c[b2 + 16 >> 2] = d2 + (c[b2 + 48 >> 2] | 0);
            f2 = 0;
          } else {
            c[b2 >> 2] = e2 | 32;
            f2 = -1;
          }
          return f2 | 0;
        }
        function yd(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, g2 = 0;
          e2 = a2 + 20 | 0;
          f2 = c[e2 >> 2] | 0;
          g2 = (c[a2 + 16 >> 2] | 0) - f2 | 0;
          a2 = g2 >>> 0 > d2 >>> 0 ? d2 : g2;
          me(f2 | 0, b2 | 0, a2 | 0) | 0;
          c[e2 >> 2] = (c[e2 >> 2] | 0) + a2;
          return d2 | 0;
        }
        function zd(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          var d2 = 0, e2 = 0;
          d2 = i2;
          i2 = i2 + 16 | 0;
          e2 = d2;
          c[e2 >> 2] = a2;
          c[e2 + 4 >> 2] = b2;
          b2 = Sc(qa(195, e2 | 0) | 0) | 0;
          i2 = d2;
          return b2 | 0;
        }
        function Ad(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0, j2 = 0;
          d2 = i2;
          i2 = i2 + 48 | 0;
          e2 = d2 + 40 | 0;
          f2 = d2 + 8 | 0;
          g2 = d2;
          c[g2 >> 2] = a2;
          c[g2 + 4 >> 2] = b2;
          h2 = ma(197, g2 | 0) | 0;
          if ((h2 | 0) == -9 ? (c[f2 >> 2] = a2, c[f2 + 4 >> 2] = 1, (ea(221, f2 | 0) | 0) >= 0) : 0) {
            dd(f2, a2);
            c[e2 >> 2] = f2;
            c[e2 + 4 >> 2] = b2;
            j2 = Sc(qa(195, e2 | 0) | 0) | 0;
          } else j2 = Sc(h2) | 0;
          i2 = d2;
          return j2 | 0;
        }
        function Bd(a2) {
          a2 = a2 | 0;
          var b2 = 0, d2 = 0, e2 = 0, f2 = 0;
          b2 = (c[a2 >> 2] & 1 | 0) != 0;
          if (!b2) {
            va(16092);
            d2 = c[a2 + 52 >> 2] | 0;
            e2 = a2 + 56 | 0;
            if (d2 | 0) c[d2 + 56 >> 2] = c[e2 >> 2];
            f2 = c[e2 >> 2] | 0;
            if (f2 | 0) c[f2 + 52 >> 2] = d2;
            if ((c[4022] | 0) == (a2 | 0)) c[4022] = f2;
            ta(16092);
          }
          f2 = Cd(a2) | 0;
          d2 = Ea[c[a2 + 12 >> 2] & 3](a2) | 0 | f2;
          f2 = c[a2 + 92 >> 2] | 0;
          if (f2 | 0) fe(f2);
          if (!b2) fe(a2);
          return d2 | 0;
        }
        function Cd(a2) {
          a2 = a2 | 0;
          var b2 = 0, d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0;
          do
            if (a2) {
              if ((c[a2 + 76 >> 2] | 0) <= -1) {
                b2 = Dd(a2) | 0;
                break;
              }
              d2 = (md(a2) | 0) == 0;
              e2 = Dd(a2) | 0;
              if (d2) b2 = e2;
              else {
                Vc(a2);
                b2 = e2;
              }
            } else {
              if (!(c[268] | 0)) f2 = 0;
              else f2 = Cd(c[268] | 0) | 0;
              va(16092);
              e2 = c[4022] | 0;
              if (!e2) g2 = f2;
              else {
                d2 = e2;
                e2 = f2;
                while (1) {
                  if ((c[d2 + 76 >> 2] | 0) > -1) h2 = md(d2) | 0;
                  else h2 = 0;
                  if ((c[d2 + 20 >> 2] | 0) >>> 0 > (c[d2 + 28 >> 2] | 0) >>> 0) i3 = Dd(d2) | 0 | e2;
                  else i3 = e2;
                  if (h2 | 0) Vc(d2);
                  d2 = c[d2 + 56 >> 2] | 0;
                  if (!d2) {
                    g2 = i3;
                    break;
                  } else e2 = i3;
                }
              }
              ta(16092);
              b2 = g2;
            }
          while (0);
          return b2 | 0;
        }
        function Dd(a2) {
          a2 = a2 | 0;
          var b2 = 0, d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0;
          b2 = a2 + 20 | 0;
          d2 = a2 + 28 | 0;
          if ((c[b2 >> 2] | 0) >>> 0 > (c[d2 >> 2] | 0) >>> 0 ? (Fa[c[a2 + 36 >> 2] & 7](a2, 0, 0) | 0, (c[b2 >> 2] | 0) == 0) : 0) e2 = -1;
          else {
            f2 = a2 + 4 | 0;
            g2 = c[f2 >> 2] | 0;
            h2 = a2 + 8 | 0;
            i3 = c[h2 >> 2] | 0;
            if (g2 >>> 0 < i3 >>> 0) Fa[c[a2 + 40 >> 2] & 7](a2, g2 - i3 | 0, 1) | 0;
            c[a2 + 16 >> 2] = 0;
            c[d2 >> 2] = 0;
            c[b2 >> 2] = 0;
            c[h2 >> 2] = 0;
            c[f2 >> 2] = 0;
            e2 = 0;
          }
          return e2 | 0;
        }
        function Ed(b2, d2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, g2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0;
          e2 = i2;
          i2 = i2 + 112 | 0;
          f2 = e2 + 40 | 0;
          g2 = e2 + 24 | 0;
          h2 = e2 + 16 | 0;
          j2 = e2;
          k2 = e2 + 52 | 0;
          l2 = a[d2 >> 0] | 0;
          if (rd(5920, l2 << 24 >> 24, 4) | 0) {
            m2 = ee(1144) | 0;
            if (!m2) n2 = 0;
            else {
              o2 = m2;
              p2 = o2 + 112 | 0;
              do {
                c[o2 >> 2] = 0;
                o2 = o2 + 4 | 0;
              } while ((o2 | 0) < (p2 | 0));
              if (!(Fd(d2, 43) | 0)) c[m2 >> 2] = l2 << 24 >> 24 == 114 ? 8 : 4;
              if (!(Fd(d2, 101) | 0)) q2 = l2;
              else {
                c[j2 >> 2] = b2;
                c[j2 + 4 >> 2] = 2;
                c[j2 + 8 >> 2] = 1;
                ea(221, j2 | 0) | 0;
                q2 = a[d2 >> 0] | 0;
              }
              if (q2 << 24 >> 24 == 97) {
                c[h2 >> 2] = b2;
                c[h2 + 4 >> 2] = 3;
                q2 = ea(221, h2 | 0) | 0;
                if (!(q2 & 1024)) {
                  c[g2 >> 2] = b2;
                  c[g2 + 4 >> 2] = 4;
                  c[g2 + 8 >> 2] = q2 | 1024;
                  ea(221, g2 | 0) | 0;
                }
                g2 = c[m2 >> 2] | 128;
                c[m2 >> 2] = g2;
                r2 = g2;
              } else r2 = c[m2 >> 2] | 0;
              c[m2 + 60 >> 2] = b2;
              c[m2 + 44 >> 2] = m2 + 120;
              c[m2 + 48 >> 2] = 1024;
              g2 = m2 + 75 | 0;
              a[g2 >> 0] = -1;
              if ((r2 & 8 | 0) == 0 ? (c[f2 >> 2] = b2, c[f2 + 4 >> 2] = 21505, c[f2 + 8 >> 2] = k2, (sa(54, f2 | 0) | 0) == 0) : 0) a[g2 >> 0] = 10;
              c[m2 + 32 >> 2] = 1;
              c[m2 + 36 >> 2] = 3;
              c[m2 + 40 >> 2] = 2;
              c[m2 + 12 >> 2] = 1;
              if (!(c[4017] | 0)) c[m2 + 76 >> 2] = -1;
              va(16092);
              g2 = c[4022] | 0;
              c[m2 + 56 >> 2] = g2;
              if (g2 | 0) c[g2 + 52 >> 2] = m2;
              c[4022] = m2;
              ta(16092);
              n2 = m2;
            }
          } else {
            c[(Tc() | 0) >> 2] = 22;
            n2 = 0;
          }
          i2 = e2;
          return n2 | 0;
        }
        function Fd(b2, c2) {
          b2 = b2 | 0;
          c2 = c2 | 0;
          var d2 = 0;
          d2 = Gd(b2, c2) | 0;
          return ((a[d2 >> 0] | 0) == (c2 & 255) << 24 >> 24 ? d2 : 0) | 0;
        }
        function Gd(b2, d2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0;
          e2 = d2 & 255;
          a: do
            if (!e2) f2 = b2 + (bd(b2) | 0) | 0;
            else {
              if (!(b2 & 3)) g2 = b2;
              else {
                h2 = d2 & 255;
                i3 = b2;
                while (1) {
                  j2 = a[i3 >> 0] | 0;
                  if (j2 << 24 >> 24 == 0 ? 1 : j2 << 24 >> 24 == h2 << 24 >> 24) {
                    f2 = i3;
                    break a;
                  }
                  j2 = i3 + 1 | 0;
                  if (!(j2 & 3)) {
                    g2 = j2;
                    break;
                  } else i3 = j2;
                }
              }
              i3 = S(e2, 16843009) | 0;
              h2 = c[g2 >> 2] | 0;
              b: do
                if (!((h2 & -2139062144 ^ -2139062144) & h2 + -16843009)) {
                  j2 = g2;
                  k2 = h2;
                  while (1) {
                    l2 = k2 ^ i3;
                    if ((l2 & -2139062144 ^ -2139062144) & l2 + -16843009 | 0) {
                      m2 = j2;
                      break b;
                    }
                    l2 = j2 + 4 | 0;
                    k2 = c[l2 >> 2] | 0;
                    if ((k2 & -2139062144 ^ -2139062144) & k2 + -16843009 | 0) {
                      m2 = l2;
                      break;
                    } else j2 = l2;
                  }
                } else m2 = g2;
              while (0);
              i3 = d2 & 255;
              h2 = m2;
              while (1) {
                j2 = a[h2 >> 0] | 0;
                if (j2 << 24 >> 24 == 0 ? 1 : j2 << 24 >> 24 == i3 << 24 >> 24) {
                  f2 = h2;
                  break;
                } else h2 = h2 + 1 | 0;
              }
            }
          while (0);
          return f2 | 0;
        }
        function Hd(b2, d2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, g2 = 0, h2 = 0, j2 = 0;
          e2 = i2;
          i2 = i2 + 32 | 0;
          f2 = e2 + 16 | 0;
          g2 = e2;
          if (rd(5920, a[d2 >> 0] | 0, 4) | 0) {
            h2 = Id(d2) | 0 | 32768;
            c[g2 >> 2] = b2;
            c[g2 + 4 >> 2] = h2;
            c[g2 + 8 >> 2] = 438;
            h2 = Sc(xa(5, g2 | 0) | 0) | 0;
            if ((h2 | 0) >= 0) {
              g2 = Ed(h2, d2) | 0;
              if (!g2) {
                c[f2 >> 2] = h2;
                wa(6, f2 | 0) | 0;
                j2 = 0;
              } else j2 = g2;
            } else j2 = 0;
          } else {
            c[(Tc() | 0) >> 2] = 22;
            j2 = 0;
          }
          i2 = e2;
          return j2 | 0;
        }
        function Id(b2) {
          b2 = b2 | 0;
          var c2 = 0, d2 = 0, e2 = 0, f2 = 0;
          c2 = (Fd(b2, 43) | 0) == 0;
          d2 = a[b2 >> 0] | 0;
          e2 = c2 ? d2 << 24 >> 24 != 114 & 1 : 2;
          c2 = (Fd(b2, 120) | 0) == 0;
          f2 = c2 ? e2 : e2 | 128;
          e2 = (Fd(b2, 101) | 0) == 0;
          b2 = e2 ? f2 : f2 | 524288;
          f2 = d2 << 24 >> 24 == 114 ? b2 : b2 | 64;
          b2 = d2 << 24 >> 24 == 119 ? f2 | 512 : f2;
          return (d2 << 24 >> 24 == 97 ? b2 | 1024 : b2) | 0;
        }
        function Jd(a2) {
          a2 = a2 | 0;
          return ((a2 | 0) == 32 | (a2 + -9 | 0) >>> 0 < 5) & 1 | 0;
        }
        function Kd(a2, b2, c2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          return Md(a2, b2, c2) | 0;
        }
        function Ld(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0;
          e2 = i2;
          i2 = i2 + 16 | 0;
          f2 = e2;
          c[f2 >> 2] = d2;
          d2 = kd(a2, b2, f2) | 0;
          i2 = e2;
          return d2 | 0;
        }
        function Md(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, g2 = 0;
          if ((c[a2 + 76 >> 2] | 0) > -1) {
            e2 = (md(a2) | 0) == 0;
            f2 = Nd(a2, b2, d2) | 0;
            if (e2) g2 = f2;
            else {
              Vc(a2);
              g2 = f2;
            }
          } else g2 = Nd(a2, b2, d2) | 0;
          return g2 | 0;
        }
        function Nd(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, g2 = 0;
          if ((d2 | 0) == 1) e2 = b2 - (c[a2 + 8 >> 2] | 0) + (c[a2 + 4 >> 2] | 0) | 0;
          else e2 = b2;
          b2 = a2 + 20 | 0;
          f2 = a2 + 28 | 0;
          if ((c[b2 >> 2] | 0) >>> 0 > (c[f2 >> 2] | 0) >>> 0 ? (Fa[c[a2 + 36 >> 2] & 7](a2, 0, 0) | 0, (c[b2 >> 2] | 0) == 0) : 0) g2 = -1;
          else {
            c[a2 + 16 >> 2] = 0;
            c[f2 >> 2] = 0;
            c[b2 >> 2] = 0;
            if ((Fa[c[a2 + 40 >> 2] & 7](a2, e2, d2) | 0) < 0) g2 = -1;
            else {
              c[a2 + 8 >> 2] = 0;
              c[a2 + 4 >> 2] = 0;
              c[a2 >> 2] = c[a2 >> 2] & -17;
              g2 = 0;
            }
          }
          return g2 | 0;
        }
        function Od(a2, b2, d2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          var f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0;
          f2 = S(d2, b2) | 0;
          if ((c[e2 + 76 >> 2] | 0) > -1) {
            g2 = (md(e2) | 0) == 0;
            h2 = nd(a2, f2, e2) | 0;
            if (g2) i3 = h2;
            else {
              Vc(e2);
              i3 = h2;
            }
          } else i3 = nd(a2, f2, e2) | 0;
          if ((i3 | 0) == (f2 | 0)) j2 = d2;
          else j2 = (i3 >>> 0) / (b2 >>> 0) | 0;
          return j2 | 0;
        }
        function Pd(b2, d2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0;
          if ((c[d2 + 76 >> 2] | 0) >= 0 ? (md(d2) | 0) != 0 : 0) {
            if ((a[d2 + 75 >> 0] | 0) != (b2 | 0) ? (e2 = d2 + 20 | 0, f2 = c[e2 >> 2] | 0, f2 >>> 0 < (c[d2 + 16 >> 2] | 0) >>> 0) : 0) {
              c[e2 >> 2] = f2 + 1;
              a[f2 >> 0] = b2;
              g2 = b2 & 255;
            } else g2 = Qd(d2, b2) | 0;
            Vc(d2);
            h2 = g2;
          } else i3 = 3;
          do
            if ((i3 | 0) == 3) {
              if ((a[d2 + 75 >> 0] | 0) != (b2 | 0) ? (g2 = d2 + 20 | 0, f2 = c[g2 >> 2] | 0, f2 >>> 0 < (c[d2 + 16 >> 2] | 0) >>> 0) : 0) {
                c[g2 >> 2] = f2 + 1;
                a[f2 >> 0] = b2;
                h2 = b2 & 255;
                break;
              }
              h2 = Qd(d2, b2) | 0;
            }
          while (0);
          return h2 | 0;
        }
        function Qd(b2, e2) {
          b2 = b2 | 0;
          e2 = e2 | 0;
          var f2 = 0, g2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0;
          f2 = i2;
          i2 = i2 + 16 | 0;
          g2 = f2;
          h2 = e2 & 255;
          a[g2 >> 0] = h2;
          j2 = b2 + 16 | 0;
          k2 = c[j2 >> 2] | 0;
          if (!k2)
            if (!(xd(b2) | 0)) {
              l2 = c[j2 >> 2] | 0;
              m2 = 4;
            } else n2 = -1;
          else {
            l2 = k2;
            m2 = 4;
          }
          do
            if ((m2 | 0) == 4) {
              k2 = b2 + 20 | 0;
              j2 = c[k2 >> 2] | 0;
              if (j2 >>> 0 < l2 >>> 0 ? (o2 = e2 & 255, (o2 | 0) != (a[b2 + 75 >> 0] | 0)) : 0) {
                c[k2 >> 2] = j2 + 1;
                a[j2 >> 0] = h2;
                n2 = o2;
                break;
              }
              if ((Fa[c[b2 + 36 >> 2] & 7](b2, g2, 1) | 0) == 1) n2 = d[g2 >> 0] | 0;
              else n2 = -1;
            }
          while (0);
          i2 = f2;
          return n2 | 0;
        }
        function Rd(b2, d2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0;
          if ((c[d2 + 76 >> 2] | 0) >= 0 ? (md(d2) | 0) != 0 : 0) {
            if ((a[d2 + 75 >> 0] | 0) != (b2 | 0) ? (e2 = d2 + 20 | 0, f2 = c[e2 >> 2] | 0, f2 >>> 0 < (c[d2 + 16 >> 2] | 0) >>> 0) : 0) {
              c[e2 >> 2] = f2 + 1;
              a[f2 >> 0] = b2;
              g2 = b2 & 255;
            } else g2 = Qd(d2, b2) | 0;
            Vc(d2);
            h2 = g2;
          } else i3 = 3;
          do
            if ((i3 | 0) == 3) {
              if ((a[d2 + 75 >> 0] | 0) != (b2 | 0) ? (g2 = d2 + 20 | 0, f2 = c[g2 >> 2] | 0, f2 >>> 0 < (c[d2 + 16 >> 2] | 0) >>> 0) : 0) {
                c[g2 >> 2] = f2 + 1;
                a[f2 >> 0] = b2;
                h2 = b2 & 255;
                break;
              }
              h2 = Qd(d2, b2) | 0;
            }
          while (0);
          return h2 | 0;
        }
        function Sd(a2) {
          a2 = a2 | 0;
          var b2 = 0;
          if ((c[a2 + 76 >> 2] | 0) > -1) {
            b2 = (md(a2) | 0) == 0;
            Nd(a2, 0, 0) | 0;
            c[a2 >> 2] = c[a2 >> 2] & -33;
            if (!b2) Vc(a2);
          } else {
            Nd(a2, 0, 0) | 0;
            c[a2 >> 2] = c[a2 >> 2] & -33;
          }
          return;
        }
        function Td(b2) {
          b2 = b2 | 0;
          var d2 = 0, e2 = 0, f2 = 0;
          d2 = c[210] | 0;
          e2 = qd(c[(Tc() | 0) >> 2] | 0) | 0;
          if ((c[d2 + 76 >> 2] | 0) > -1) f2 = md(d2) | 0;
          else f2 = 0;
          if (b2 | 0 ? a[b2 >> 0] | 0 : 0) {
            Od(b2, bd(b2) | 0, 1, d2) | 0;
            Pd(58, d2) | 0;
            Pd(32, d2) | 0;
          }
          Od(e2, bd(e2) | 0, 1, d2) | 0;
          Pd(10, d2) | 0;
          if (f2 | 0) Vc(d2);
          return;
        }
        function Ud(a2) {
          a2 = a2 | 0;
          var b2 = 0, d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0;
          b2 = i2;
          i2 = i2 + 64 | 0;
          d2 = b2 + 32 | 0;
          e2 = b2 + 24 | 0;
          f2 = b2 + 8 | 0;
          g2 = b2;
          h2 = b2 + 40 | 0;
          j2 = b2 + 48 | 0;
          c[h2 >> 2] = a2;
          if (!a2) c[h2 >> 2] = 19108;
          c[g2 >> 2] = 5924;
          c[g2 + 4 >> 2] = 7;
          if (!(ra(33, g2 | 0) | 0)) {
            g2 = j2 + 4 | 0;
            a2 = h2;
            k2 = 0;
            while (1) {
              c[f2 >> 2] = 0;
              c[f2 + 4 >> 2] = j2;
              c[f2 + 8 >> 2] = 0;
              fa(265, f2 | 0) | 0;
              l2 = c[h2 >> 2] | 0;
              m2 = c[g2 >> 2] ^ a2 ^ l2;
              n2 = c[4028] | 0;
              c[4028] = n2 + 1;
              c[e2 >> 2] = n2;
              c[e2 + 4 >> 2] = m2;
              id(l2, 20, 5929, e2) | 0;
              c[d2 >> 2] = c[h2 >> 2];
              c[d2 + 4 >> 2] = 0;
              if (ra(33, d2 | 0) | 0) {
                o2 = k2;
                break;
              }
              l2 = k2 + 1 | 0;
              if ((k2 | 0) < 100) k2 = l2;
              else {
                o2 = l2;
                break;
              }
            }
            p2 = (o2 | 0) > 99 ? 0 : c[h2 >> 2] | 0;
          } else p2 = 0;
          i2 = b2;
          return p2 | 0;
        }
        function Vd(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0;
          e2 = i2;
          i2 = i2 + 16 | 0;
          f2 = e2;
          c[f2 >> 2] = d2;
          d2 = Wd(a2, b2, f2) | 0;
          i2 = e2;
          return d2 | 0;
        }
        function Wd(a2, b2, c2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          return jd(a2, 2147483647, b2, c2) | 0;
        }
        function Xd(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          return (Od(a2, bd(a2) | 0, 1, b2) | 0) + -1 | 0;
        }
        function Yd(a2) {
          a2 = a2 | 0;
          var b2 = 0, d2 = 0, e2 = 0;
          if ((c[a2 + 76 >> 2] | 0) > -1) {
            b2 = (md(a2) | 0) == 0;
            d2 = Zd(a2) | 0;
            if (b2) e2 = d2;
            else e2 = d2;
          } else e2 = Zd(a2) | 0;
          return e2 | 0;
        }
        function Zd(a2) {
          a2 = a2 | 0;
          var b2 = 0, d2 = 0, e2 = 0;
          if (!(c[a2 >> 2] & 128)) b2 = 1;
          else b2 = (c[a2 + 20 >> 2] | 0) >>> 0 > (c[a2 + 28 >> 2] | 0) >>> 0 ? 2 : 1;
          d2 = Fa[c[a2 + 40 >> 2] & 7](a2, 0, b2) | 0;
          if ((d2 | 0) < 0) e2 = d2;
          else e2 = d2 - (c[a2 + 8 >> 2] | 0) + (c[a2 + 4 >> 2] | 0) + (c[a2 + 20 >> 2] | 0) - (c[a2 + 28 >> 2] | 0) | 0;
          return e2 | 0;
        }
        function _d(a2) {
          a2 = a2 | 0;
          (c[a2 + 76 >> 2] | 0) > -1 ? md(a2) | 0 : 0;
          return c[a2 + 60 >> 2] | 0;
        }
        function $d() {
          var a2 = 0, b2 = 0, d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0, j2 = 0, k2 = 0;
          a2 = i2;
          i2 = i2 + 48 | 0;
          b2 = a2 + 16 | 0;
          d2 = a2;
          e2 = a2 + 20 | 0;
          f2 = 0;
          while (1) {
            g2 = Ud(e2) | 0;
            if (!g2) {
              h2 = 0;
              break;
            }
            c[d2 >> 2] = g2;
            c[d2 + 4 >> 2] = 32962;
            c[d2 + 8 >> 2] = 384;
            j2 = Sc(xa(5, d2 | 0) | 0) | 0;
            f2 = f2 + 1 | 0;
            if ((j2 | 0) > -1) {
              k2 = 5;
              break;
            }
            if ((f2 | 0) >= 100) {
              h2 = 0;
              break;
            }
          }
          if ((k2 | 0) == 5) {
            k2 = Ed(j2, 5941) | 0;
            c[b2 >> 2] = g2;
            ua(10, b2 | 0) | 0;
            h2 = k2;
          }
          i2 = a2;
          return h2 | 0;
        }
        function ae(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, g2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0;
          e2 = i2;
          i2 = i2 + 32 | 0;
          f2 = e2 + 16 | 0;
          g2 = e2;
          h2 = Id(b2) | 0;
          if ((c[d2 + 76 >> 2] | 0) > -1) j2 = md(d2) | 0;
          else j2 = 0;
          Cd(d2) | 0;
          do
            if (!a2) {
              k2 = d2 + 60 | 0;
              if (h2 & 524288 | 0) {
                c[g2 >> 2] = c[k2 >> 2];
                c[g2 + 4 >> 2] = 2;
                c[g2 + 8 >> 2] = 1;
                ea(221, g2 | 0) | 0;
              }
              c[f2 >> 2] = c[k2 >> 2];
              c[f2 + 4 >> 2] = 4;
              c[f2 + 8 >> 2] = h2 & -524481;
              if ((Sc(ea(221, f2 | 0) | 0) | 0) < 0) l2 = 15;
              else l2 = 12;
            } else {
              k2 = Hd(a2, b2) | 0;
              if (!k2) l2 = 15;
              else {
                m2 = k2 + 60 | 0;
                n2 = c[m2 >> 2] | 0;
                o2 = c[d2 + 60 >> 2] | 0;
                if ((n2 | 0) != (o2 | 0)) {
                  if ((cd(n2, o2, h2 & 524288) | 0) < 0) {
                    Bd(k2) | 0;
                    l2 = 15;
                    break;
                  }
                } else c[m2 >> 2] = -1;
                c[d2 >> 2] = c[d2 >> 2] & 1 | c[k2 >> 2];
                c[d2 + 32 >> 2] = c[k2 + 32 >> 2];
                c[d2 + 36 >> 2] = c[k2 + 36 >> 2];
                c[d2 + 40 >> 2] = c[k2 + 40 >> 2];
                c[d2 + 12 >> 2] = c[k2 + 12 >> 2];
                Bd(k2) | 0;
                l2 = 12;
              }
            }
          while (0);
          if ((l2 | 0) == 12)
            if (!j2) p2 = d2;
            else {
              Vc(d2);
              p2 = d2;
            }
          else if ((l2 | 0) == 15) {
            Bd(d2) | 0;
            p2 = 0;
          }
          i2 = e2;
          return p2 | 0;
        }
        function be(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          var d2 = 0, e2 = 0;
          d2 = i2;
          i2 = i2 + 16 | 0;
          e2 = d2;
          c[e2 >> 2] = b2;
          b2 = kd(c[239] | 0, a2, e2) | 0;
          i2 = d2;
          return b2 | 0;
        }
        function ce(a2) {
          a2 = a2 | 0;
          return Yd(a2) | 0;
        }
        function de(b2) {
          b2 = b2 | 0;
          var c2 = 0, d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, l2 = 0;
          c2 = b2;
          while (1) {
            d2 = a[c2 >> 0] | 0;
            e2 = d2 << 24 >> 24;
            f2 = c2 + 1 | 0;
            if (!(Jd(e2) | 0)) break;
            else c2 = f2;
          }
          switch (e2 | 0) {
            case 45: {
              g2 = 1;
              h2 = 5;
              break;
            }
            case 43: {
              g2 = 0;
              h2 = 5;
              break;
            }
            default: {
              i3 = 0;
              j2 = c2;
              k2 = d2;
            }
          }
          if ((h2 | 0) == 5) {
            i3 = g2;
            j2 = f2;
            k2 = a[f2 >> 0] | 0;
          }
          f2 = (k2 << 24 >> 24) + -48 | 0;
          if (f2 >>> 0 < 10) {
            k2 = 0;
            g2 = j2;
            j2 = f2;
            while (1) {
              g2 = g2 + 1 | 0;
              f2 = (k2 * 10 | 0) - j2 | 0;
              j2 = (a[g2 >> 0] | 0) + -48 | 0;
              if (j2 >>> 0 >= 10) {
                l2 = f2;
                break;
              } else k2 = f2;
            }
          } else l2 = 0;
          return (i3 | 0 ? l2 : 0 - l2 | 0) | 0;
        }
        function ee(a2) {
          a2 = a2 | 0;
          var b2 = 0, d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0, O2 = 0, P2 = 0, Q2 = 0, R2 = 0, S2 = 0, T2 = 0, U2 = 0, V2 = 0, W2 = 0, X2 = 0, Y2 = 0, Z2 = 0, _2 = 0, $2 = 0, aa2 = 0, ba2 = 0, ca2 = 0, da2 = 0, ea2 = 0, fa2 = 0, ga2 = 0, ia2 = 0, ja2 = 0, ka2 = 0, la2 = 0, ma2 = 0, na2 = 0, oa2 = 0, pa2 = 0, qa2 = 0, ra2 = 0, sa2 = 0, ta2 = 0, ua2 = 0, va2 = 0, wa2 = 0, xa2 = 0, ya2 = 0, za2 = 0, Aa2 = 0, Ba2 = 0;
          b2 = i2;
          i2 = i2 + 16 | 0;
          d2 = b2;
          do
            if (a2 >>> 0 < 245) {
              e2 = a2 >>> 0 < 11 ? 16 : a2 + 11 & -8;
              f2 = e2 >>> 3;
              g2 = c[4029] | 0;
              h2 = g2 >>> f2;
              if (h2 & 3 | 0) {
                j2 = (h2 & 1 ^ 1) + f2 | 0;
                k2 = 16156 + (j2 << 1 << 2) | 0;
                l2 = k2 + 8 | 0;
                m2 = c[l2 >> 2] | 0;
                n2 = m2 + 8 | 0;
                o2 = c[n2 >> 2] | 0;
                do
                  if ((k2 | 0) != (o2 | 0)) {
                    if (o2 >>> 0 < (c[4033] | 0) >>> 0) ha();
                    p2 = o2 + 12 | 0;
                    if ((c[p2 >> 2] | 0) == (m2 | 0)) {
                      c[p2 >> 2] = k2;
                      c[l2 >> 2] = o2;
                      break;
                    } else ha();
                  } else c[4029] = g2 & ~(1 << j2);
                while (0);
                o2 = j2 << 3;
                c[m2 + 4 >> 2] = o2 | 3;
                l2 = m2 + o2 + 4 | 0;
                c[l2 >> 2] = c[l2 >> 2] | 1;
                q2 = n2;
                i2 = b2;
                return q2 | 0;
              }
              l2 = c[4031] | 0;
              if (e2 >>> 0 > l2 >>> 0) {
                if (h2 | 0) {
                  o2 = 2 << f2;
                  k2 = h2 << f2 & (o2 | 0 - o2);
                  o2 = (k2 & 0 - k2) + -1 | 0;
                  k2 = o2 >>> 12 & 16;
                  p2 = o2 >>> k2;
                  o2 = p2 >>> 5 & 8;
                  r2 = p2 >>> o2;
                  p2 = r2 >>> 2 & 4;
                  s2 = r2 >>> p2;
                  r2 = s2 >>> 1 & 2;
                  t2 = s2 >>> r2;
                  s2 = t2 >>> 1 & 1;
                  u2 = (o2 | k2 | p2 | r2 | s2) + (t2 >>> s2) | 0;
                  s2 = 16156 + (u2 << 1 << 2) | 0;
                  t2 = s2 + 8 | 0;
                  r2 = c[t2 >> 2] | 0;
                  p2 = r2 + 8 | 0;
                  k2 = c[p2 >> 2] | 0;
                  do
                    if ((s2 | 0) != (k2 | 0)) {
                      if (k2 >>> 0 < (c[4033] | 0) >>> 0) ha();
                      o2 = k2 + 12 | 0;
                      if ((c[o2 >> 2] | 0) == (r2 | 0)) {
                        c[o2 >> 2] = s2;
                        c[t2 >> 2] = k2;
                        v2 = g2;
                        break;
                      } else ha();
                    } else {
                      o2 = g2 & ~(1 << u2);
                      c[4029] = o2;
                      v2 = o2;
                    }
                  while (0);
                  k2 = (u2 << 3) - e2 | 0;
                  c[r2 + 4 >> 2] = e2 | 3;
                  t2 = r2 + e2 | 0;
                  c[t2 + 4 >> 2] = k2 | 1;
                  c[t2 + k2 >> 2] = k2;
                  if (l2 | 0) {
                    s2 = c[4034] | 0;
                    f2 = l2 >>> 3;
                    h2 = 16156 + (f2 << 1 << 2) | 0;
                    n2 = 1 << f2;
                    if (v2 & n2) {
                      f2 = h2 + 8 | 0;
                      m2 = c[f2 >> 2] | 0;
                      if (m2 >>> 0 < (c[4033] | 0) >>> 0) ha();
                      else {
                        w2 = m2;
                        x2 = f2;
                      }
                    } else {
                      c[4029] = v2 | n2;
                      w2 = h2;
                      x2 = h2 + 8 | 0;
                    }
                    c[x2 >> 2] = s2;
                    c[w2 + 12 >> 2] = s2;
                    c[s2 + 8 >> 2] = w2;
                    c[s2 + 12 >> 2] = h2;
                  }
                  c[4031] = k2;
                  c[4034] = t2;
                  q2 = p2;
                  i2 = b2;
                  return q2 | 0;
                }
                t2 = c[4030] | 0;
                if (t2) {
                  k2 = (t2 & 0 - t2) + -1 | 0;
                  h2 = k2 >>> 12 & 16;
                  s2 = k2 >>> h2;
                  k2 = s2 >>> 5 & 8;
                  n2 = s2 >>> k2;
                  s2 = n2 >>> 2 & 4;
                  f2 = n2 >>> s2;
                  n2 = f2 >>> 1 & 2;
                  m2 = f2 >>> n2;
                  f2 = m2 >>> 1 & 1;
                  j2 = c[16420 + ((k2 | h2 | s2 | n2 | f2) + (m2 >>> f2) << 2) >> 2] | 0;
                  f2 = j2;
                  m2 = j2;
                  n2 = (c[j2 + 4 >> 2] & -8) - e2 | 0;
                  while (1) {
                    j2 = c[f2 + 16 >> 2] | 0;
                    if (!j2) {
                      s2 = c[f2 + 20 >> 2] | 0;
                      if (!s2) break;
                      else y2 = s2;
                    } else y2 = j2;
                    j2 = (c[y2 + 4 >> 2] & -8) - e2 | 0;
                    s2 = j2 >>> 0 < n2 >>> 0;
                    f2 = y2;
                    m2 = s2 ? y2 : m2;
                    n2 = s2 ? j2 : n2;
                  }
                  f2 = c[4033] | 0;
                  if (m2 >>> 0 < f2 >>> 0) ha();
                  p2 = m2 + e2 | 0;
                  if (m2 >>> 0 >= p2 >>> 0) ha();
                  r2 = c[m2 + 24 >> 2] | 0;
                  u2 = c[m2 + 12 >> 2] | 0;
                  do
                    if ((u2 | 0) == (m2 | 0)) {
                      j2 = m2 + 20 | 0;
                      s2 = c[j2 >> 2] | 0;
                      if (!s2) {
                        h2 = m2 + 16 | 0;
                        k2 = c[h2 >> 2] | 0;
                        if (!k2) {
                          z2 = 0;
                          break;
                        } else {
                          A2 = k2;
                          B2 = h2;
                        }
                      } else {
                        A2 = s2;
                        B2 = j2;
                      }
                      while (1) {
                        j2 = A2 + 20 | 0;
                        s2 = c[j2 >> 2] | 0;
                        if (s2 | 0) {
                          A2 = s2;
                          B2 = j2;
                          continue;
                        }
                        j2 = A2 + 16 | 0;
                        s2 = c[j2 >> 2] | 0;
                        if (!s2) break;
                        else {
                          A2 = s2;
                          B2 = j2;
                        }
                      }
                      if (B2 >>> 0 < f2 >>> 0) ha();
                      else {
                        c[B2 >> 2] = 0;
                        z2 = A2;
                        break;
                      }
                    } else {
                      j2 = c[m2 + 8 >> 2] | 0;
                      if (j2 >>> 0 < f2 >>> 0) ha();
                      s2 = j2 + 12 | 0;
                      if ((c[s2 >> 2] | 0) != (m2 | 0)) ha();
                      h2 = u2 + 8 | 0;
                      if ((c[h2 >> 2] | 0) == (m2 | 0)) {
                        c[s2 >> 2] = u2;
                        c[h2 >> 2] = j2;
                        z2 = u2;
                        break;
                      } else ha();
                    }
                  while (0);
                  do
                    if (r2 | 0) {
                      u2 = c[m2 + 28 >> 2] | 0;
                      f2 = 16420 + (u2 << 2) | 0;
                      if ((m2 | 0) == (c[f2 >> 2] | 0)) {
                        c[f2 >> 2] = z2;
                        if (!z2) {
                          c[4030] = t2 & ~(1 << u2);
                          break;
                        }
                      } else {
                        if (r2 >>> 0 < (c[4033] | 0) >>> 0) ha();
                        u2 = r2 + 16 | 0;
                        if ((c[u2 >> 2] | 0) == (m2 | 0)) c[u2 >> 2] = z2;
                        else c[r2 + 20 >> 2] = z2;
                        if (!z2) break;
                      }
                      u2 = c[4033] | 0;
                      if (z2 >>> 0 < u2 >>> 0) ha();
                      c[z2 + 24 >> 2] = r2;
                      f2 = c[m2 + 16 >> 2] | 0;
                      do
                        if (f2 | 0)
                          if (f2 >>> 0 < u2 >>> 0) ha();
                          else {
                            c[z2 + 16 >> 2] = f2;
                            c[f2 + 24 >> 2] = z2;
                            break;
                          }
                      while (0);
                      f2 = c[m2 + 20 >> 2] | 0;
                      if (f2 | 0)
                        if (f2 >>> 0 < (c[4033] | 0) >>> 0) ha();
                        else {
                          c[z2 + 20 >> 2] = f2;
                          c[f2 + 24 >> 2] = z2;
                          break;
                        }
                    }
                  while (0);
                  if (n2 >>> 0 < 16) {
                    r2 = n2 + e2 | 0;
                    c[m2 + 4 >> 2] = r2 | 3;
                    t2 = m2 + r2 + 4 | 0;
                    c[t2 >> 2] = c[t2 >> 2] | 1;
                  } else {
                    c[m2 + 4 >> 2] = e2 | 3;
                    c[p2 + 4 >> 2] = n2 | 1;
                    c[p2 + n2 >> 2] = n2;
                    if (l2 | 0) {
                      t2 = c[4034] | 0;
                      r2 = l2 >>> 3;
                      f2 = 16156 + (r2 << 1 << 2) | 0;
                      u2 = 1 << r2;
                      if (g2 & u2) {
                        r2 = f2 + 8 | 0;
                        j2 = c[r2 >> 2] | 0;
                        if (j2 >>> 0 < (c[4033] | 0) >>> 0) ha();
                        else {
                          C2 = j2;
                          D2 = r2;
                        }
                      } else {
                        c[4029] = g2 | u2;
                        C2 = f2;
                        D2 = f2 + 8 | 0;
                      }
                      c[D2 >> 2] = t2;
                      c[C2 + 12 >> 2] = t2;
                      c[t2 + 8 >> 2] = C2;
                      c[t2 + 12 >> 2] = f2;
                    }
                    c[4031] = n2;
                    c[4034] = p2;
                  }
                  q2 = m2 + 8 | 0;
                  i2 = b2;
                  return q2 | 0;
                } else E2 = e2;
              } else E2 = e2;
            } else if (a2 >>> 0 <= 4294967231) {
              f2 = a2 + 11 | 0;
              t2 = f2 & -8;
              u2 = c[4030] | 0;
              if (u2) {
                r2 = 0 - t2 | 0;
                j2 = f2 >>> 8;
                if (j2)
                  if (t2 >>> 0 > 16777215) F2 = 31;
                  else {
                    f2 = (j2 + 1048320 | 0) >>> 16 & 8;
                    h2 = j2 << f2;
                    j2 = (h2 + 520192 | 0) >>> 16 & 4;
                    s2 = h2 << j2;
                    h2 = (s2 + 245760 | 0) >>> 16 & 2;
                    k2 = 14 - (j2 | f2 | h2) + (s2 << h2 >>> 15) | 0;
                    F2 = t2 >>> (k2 + 7 | 0) & 1 | k2 << 1;
                  }
                else F2 = 0;
                k2 = c[16420 + (F2 << 2) >> 2] | 0;
                a: do
                  if (!k2) {
                    G2 = 0;
                    H2 = 0;
                    I2 = r2;
                    J2 = 86;
                  } else {
                    h2 = 0;
                    s2 = r2;
                    f2 = k2;
                    j2 = t2 << ((F2 | 0) == 31 ? 0 : 25 - (F2 >>> 1) | 0);
                    o2 = 0;
                    while (1) {
                      K2 = (c[f2 + 4 >> 2] & -8) - t2 | 0;
                      if (K2 >>> 0 < s2 >>> 0)
                        if (!K2) {
                          L2 = f2;
                          M2 = 0;
                          N2 = f2;
                          J2 = 90;
                          break a;
                        } else {
                          O2 = f2;
                          P2 = K2;
                        }
                      else {
                        O2 = h2;
                        P2 = s2;
                      }
                      K2 = c[f2 + 20 >> 2] | 0;
                      f2 = c[f2 + 16 + (j2 >>> 31 << 2) >> 2] | 0;
                      Q2 = (K2 | 0) == 0 | (K2 | 0) == (f2 | 0) ? o2 : K2;
                      K2 = (f2 | 0) == 0;
                      if (K2) {
                        G2 = Q2;
                        H2 = O2;
                        I2 = P2;
                        J2 = 86;
                        break;
                      } else {
                        h2 = O2;
                        s2 = P2;
                        j2 = j2 << (K2 & 1 ^ 1);
                        o2 = Q2;
                      }
                    }
                  }
                while (0);
                if ((J2 | 0) == 86) {
                  if ((G2 | 0) == 0 & (H2 | 0) == 0) {
                    k2 = 2 << F2;
                    r2 = u2 & (k2 | 0 - k2);
                    if (!r2) {
                      E2 = t2;
                      break;
                    }
                    k2 = (r2 & 0 - r2) + -1 | 0;
                    r2 = k2 >>> 12 & 16;
                    e2 = k2 >>> r2;
                    k2 = e2 >>> 5 & 8;
                    m2 = e2 >>> k2;
                    e2 = m2 >>> 2 & 4;
                    p2 = m2 >>> e2;
                    m2 = p2 >>> 1 & 2;
                    n2 = p2 >>> m2;
                    p2 = n2 >>> 1 & 1;
                    R2 = c[16420 + ((k2 | r2 | e2 | m2 | p2) + (n2 >>> p2) << 2) >> 2] | 0;
                  } else R2 = G2;
                  if (!R2) {
                    S2 = H2;
                    T2 = I2;
                  } else {
                    L2 = H2;
                    M2 = I2;
                    N2 = R2;
                    J2 = 90;
                  }
                }
                if ((J2 | 0) == 90)
                  while (1) {
                    J2 = 0;
                    p2 = (c[N2 + 4 >> 2] & -8) - t2 | 0;
                    n2 = p2 >>> 0 < M2 >>> 0;
                    m2 = n2 ? p2 : M2;
                    p2 = n2 ? N2 : L2;
                    n2 = c[N2 + 16 >> 2] | 0;
                    if (n2 | 0) {
                      L2 = p2;
                      M2 = m2;
                      N2 = n2;
                      J2 = 90;
                      continue;
                    }
                    N2 = c[N2 + 20 >> 2] | 0;
                    if (!N2) {
                      S2 = p2;
                      T2 = m2;
                      break;
                    } else {
                      L2 = p2;
                      M2 = m2;
                      J2 = 90;
                    }
                  }
                if ((S2 | 0) != 0 ? T2 >>> 0 < ((c[4031] | 0) - t2 | 0) >>> 0 : 0) {
                  m2 = c[4033] | 0;
                  if (S2 >>> 0 < m2 >>> 0) ha();
                  p2 = S2 + t2 | 0;
                  if (S2 >>> 0 >= p2 >>> 0) ha();
                  n2 = c[S2 + 24 >> 2] | 0;
                  e2 = c[S2 + 12 >> 2] | 0;
                  do
                    if ((e2 | 0) == (S2 | 0)) {
                      r2 = S2 + 20 | 0;
                      k2 = c[r2 >> 2] | 0;
                      if (!k2) {
                        g2 = S2 + 16 | 0;
                        l2 = c[g2 >> 2] | 0;
                        if (!l2) {
                          U2 = 0;
                          break;
                        } else {
                          V2 = l2;
                          W2 = g2;
                        }
                      } else {
                        V2 = k2;
                        W2 = r2;
                      }
                      while (1) {
                        r2 = V2 + 20 | 0;
                        k2 = c[r2 >> 2] | 0;
                        if (k2 | 0) {
                          V2 = k2;
                          W2 = r2;
                          continue;
                        }
                        r2 = V2 + 16 | 0;
                        k2 = c[r2 >> 2] | 0;
                        if (!k2) break;
                        else {
                          V2 = k2;
                          W2 = r2;
                        }
                      }
                      if (W2 >>> 0 < m2 >>> 0) ha();
                      else {
                        c[W2 >> 2] = 0;
                        U2 = V2;
                        break;
                      }
                    } else {
                      r2 = c[S2 + 8 >> 2] | 0;
                      if (r2 >>> 0 < m2 >>> 0) ha();
                      k2 = r2 + 12 | 0;
                      if ((c[k2 >> 2] | 0) != (S2 | 0)) ha();
                      g2 = e2 + 8 | 0;
                      if ((c[g2 >> 2] | 0) == (S2 | 0)) {
                        c[k2 >> 2] = e2;
                        c[g2 >> 2] = r2;
                        U2 = e2;
                        break;
                      } else ha();
                    }
                  while (0);
                  do
                    if (n2) {
                      e2 = c[S2 + 28 >> 2] | 0;
                      m2 = 16420 + (e2 << 2) | 0;
                      if ((S2 | 0) == (c[m2 >> 2] | 0)) {
                        c[m2 >> 2] = U2;
                        if (!U2) {
                          m2 = u2 & ~(1 << e2);
                          c[4030] = m2;
                          X2 = m2;
                          break;
                        }
                      } else {
                        if (n2 >>> 0 < (c[4033] | 0) >>> 0) ha();
                        m2 = n2 + 16 | 0;
                        if ((c[m2 >> 2] | 0) == (S2 | 0)) c[m2 >> 2] = U2;
                        else c[n2 + 20 >> 2] = U2;
                        if (!U2) {
                          X2 = u2;
                          break;
                        }
                      }
                      m2 = c[4033] | 0;
                      if (U2 >>> 0 < m2 >>> 0) ha();
                      c[U2 + 24 >> 2] = n2;
                      e2 = c[S2 + 16 >> 2] | 0;
                      do
                        if (e2 | 0)
                          if (e2 >>> 0 < m2 >>> 0) ha();
                          else {
                            c[U2 + 16 >> 2] = e2;
                            c[e2 + 24 >> 2] = U2;
                            break;
                          }
                      while (0);
                      e2 = c[S2 + 20 >> 2] | 0;
                      if (e2)
                        if (e2 >>> 0 < (c[4033] | 0) >>> 0) ha();
                        else {
                          c[U2 + 20 >> 2] = e2;
                          c[e2 + 24 >> 2] = U2;
                          X2 = u2;
                          break;
                        }
                      else X2 = u2;
                    } else X2 = u2;
                  while (0);
                  do
                    if (T2 >>> 0 >= 16) {
                      c[S2 + 4 >> 2] = t2 | 3;
                      c[p2 + 4 >> 2] = T2 | 1;
                      c[p2 + T2 >> 2] = T2;
                      u2 = T2 >>> 3;
                      if (T2 >>> 0 < 256) {
                        n2 = 16156 + (u2 << 1 << 2) | 0;
                        e2 = c[4029] | 0;
                        m2 = 1 << u2;
                        if (e2 & m2) {
                          u2 = n2 + 8 | 0;
                          r2 = c[u2 >> 2] | 0;
                          if (r2 >>> 0 < (c[4033] | 0) >>> 0) ha();
                          else {
                            Y2 = r2;
                            Z2 = u2;
                          }
                        } else {
                          c[4029] = e2 | m2;
                          Y2 = n2;
                          Z2 = n2 + 8 | 0;
                        }
                        c[Z2 >> 2] = p2;
                        c[Y2 + 12 >> 2] = p2;
                        c[p2 + 8 >> 2] = Y2;
                        c[p2 + 12 >> 2] = n2;
                        break;
                      }
                      n2 = T2 >>> 8;
                      if (n2)
                        if (T2 >>> 0 > 16777215) _2 = 31;
                        else {
                          m2 = (n2 + 1048320 | 0) >>> 16 & 8;
                          e2 = n2 << m2;
                          n2 = (e2 + 520192 | 0) >>> 16 & 4;
                          u2 = e2 << n2;
                          e2 = (u2 + 245760 | 0) >>> 16 & 2;
                          r2 = 14 - (n2 | m2 | e2) + (u2 << e2 >>> 15) | 0;
                          _2 = T2 >>> (r2 + 7 | 0) & 1 | r2 << 1;
                        }
                      else _2 = 0;
                      r2 = 16420 + (_2 << 2) | 0;
                      c[p2 + 28 >> 2] = _2;
                      e2 = p2 + 16 | 0;
                      c[e2 + 4 >> 2] = 0;
                      c[e2 >> 2] = 0;
                      e2 = 1 << _2;
                      if (!(X2 & e2)) {
                        c[4030] = X2 | e2;
                        c[r2 >> 2] = p2;
                        c[p2 + 24 >> 2] = r2;
                        c[p2 + 12 >> 2] = p2;
                        c[p2 + 8 >> 2] = p2;
                        break;
                      }
                      e2 = T2 << ((_2 | 0) == 31 ? 0 : 25 - (_2 >>> 1) | 0);
                      u2 = c[r2 >> 2] | 0;
                      while (1) {
                        if ((c[u2 + 4 >> 2] & -8 | 0) == (T2 | 0)) {
                          J2 = 148;
                          break;
                        }
                        $2 = u2 + 16 + (e2 >>> 31 << 2) | 0;
                        r2 = c[$2 >> 2] | 0;
                        if (!r2) {
                          J2 = 145;
                          break;
                        } else {
                          e2 = e2 << 1;
                          u2 = r2;
                        }
                      }
                      if ((J2 | 0) == 145)
                        if ($2 >>> 0 < (c[4033] | 0) >>> 0) ha();
                        else {
                          c[$2 >> 2] = p2;
                          c[p2 + 24 >> 2] = u2;
                          c[p2 + 12 >> 2] = p2;
                          c[p2 + 8 >> 2] = p2;
                          break;
                        }
                      else if ((J2 | 0) == 148) {
                        e2 = u2 + 8 | 0;
                        r2 = c[e2 >> 2] | 0;
                        m2 = c[4033] | 0;
                        if (r2 >>> 0 >= m2 >>> 0 & u2 >>> 0 >= m2 >>> 0) {
                          c[r2 + 12 >> 2] = p2;
                          c[e2 >> 2] = p2;
                          c[p2 + 8 >> 2] = r2;
                          c[p2 + 12 >> 2] = u2;
                          c[p2 + 24 >> 2] = 0;
                          break;
                        } else ha();
                      }
                    } else {
                      r2 = T2 + t2 | 0;
                      c[S2 + 4 >> 2] = r2 | 3;
                      e2 = S2 + r2 + 4 | 0;
                      c[e2 >> 2] = c[e2 >> 2] | 1;
                    }
                  while (0);
                  q2 = S2 + 8 | 0;
                  i2 = b2;
                  return q2 | 0;
                } else E2 = t2;
              } else E2 = t2;
            } else E2 = -1;
          while (0);
          S2 = c[4031] | 0;
          if (S2 >>> 0 >= E2 >>> 0) {
            T2 = S2 - E2 | 0;
            $2 = c[4034] | 0;
            if (T2 >>> 0 > 15) {
              _2 = $2 + E2 | 0;
              c[4034] = _2;
              c[4031] = T2;
              c[_2 + 4 >> 2] = T2 | 1;
              c[_2 + T2 >> 2] = T2;
              c[$2 + 4 >> 2] = E2 | 3;
            } else {
              c[4031] = 0;
              c[4034] = 0;
              c[$2 + 4 >> 2] = S2 | 3;
              T2 = $2 + S2 + 4 | 0;
              c[T2 >> 2] = c[T2 >> 2] | 1;
            }
            q2 = $2 + 8 | 0;
            i2 = b2;
            return q2 | 0;
          }
          $2 = c[4032] | 0;
          if ($2 >>> 0 > E2 >>> 0) {
            T2 = $2 - E2 | 0;
            c[4032] = T2;
            S2 = c[4035] | 0;
            _2 = S2 + E2 | 0;
            c[4035] = _2;
            c[_2 + 4 >> 2] = T2 | 1;
            c[S2 + 4 >> 2] = E2 | 3;
            q2 = S2 + 8 | 0;
            i2 = b2;
            return q2 | 0;
          }
          if (!(c[4147] | 0)) {
            c[4149] = 4096;
            c[4148] = 4096;
            c[4150] = -1;
            c[4151] = -1;
            c[4152] = 0;
            c[4140] = 0;
            S2 = d2 & -16 ^ 1431655768;
            c[d2 >> 2] = S2;
            c[4147] = S2;
            aa2 = 4096;
          } else aa2 = c[4149] | 0;
          S2 = E2 + 48 | 0;
          d2 = E2 + 47 | 0;
          T2 = aa2 + d2 | 0;
          _2 = 0 - aa2 | 0;
          aa2 = T2 & _2;
          if (aa2 >>> 0 <= E2 >>> 0) {
            q2 = 0;
            i2 = b2;
            return q2 | 0;
          }
          X2 = c[4139] | 0;
          if (X2 | 0 ? (Y2 = c[4137] | 0, Z2 = Y2 + aa2 | 0, Z2 >>> 0 <= Y2 >>> 0 | Z2 >>> 0 > X2 >>> 0) : 0) {
            q2 = 0;
            i2 = b2;
            return q2 | 0;
          }
          b: do
            if (!(c[4140] & 4)) {
              X2 = c[4035] | 0;
              c: do
                if (X2) {
                  Z2 = 16564;
                  while (1) {
                    Y2 = c[Z2 >> 2] | 0;
                    if (Y2 >>> 0 <= X2 >>> 0 ? (ba2 = Z2 + 4 | 0, (Y2 + (c[ba2 >> 2] | 0) | 0) >>> 0 > X2 >>> 0) : 0) break;
                    Y2 = c[Z2 + 8 >> 2] | 0;
                    if (!Y2) {
                      J2 = 172;
                      break c;
                    } else Z2 = Y2;
                  }
                  u2 = T2 - $2 & _2;
                  if (u2 >>> 0 < 2147483647) {
                    Y2 = qe(u2 | 0) | 0;
                    if ((Y2 | 0) == ((c[Z2 >> 2] | 0) + (c[ba2 >> 2] | 0) | 0)) {
                      if ((Y2 | 0) != (-1 | 0)) {
                        ca2 = u2;
                        da2 = Y2;
                        J2 = 190;
                        break b;
                      }
                    } else {
                      ea2 = Y2;
                      fa2 = u2;
                      J2 = 180;
                    }
                  }
                } else J2 = 172;
              while (0);
              do
                if (((J2 | 0) == 172 ? (X2 = qe(0) | 0, (X2 | 0) != (-1 | 0)) : 0) ? (t2 = X2, u2 = c[4148] | 0, Y2 = u2 + -1 | 0, U2 = ((Y2 & t2 | 0) == 0 ? 0 : (Y2 + t2 & 0 - u2) - t2 | 0) + aa2 | 0, t2 = c[4137] | 0, u2 = U2 + t2 | 0, U2 >>> 0 > E2 >>> 0 & U2 >>> 0 < 2147483647) : 0) {
                  Y2 = c[4139] | 0;
                  if (Y2 | 0 ? u2 >>> 0 <= t2 >>> 0 | u2 >>> 0 > Y2 >>> 0 : 0) break;
                  Y2 = qe(U2 | 0) | 0;
                  if ((Y2 | 0) == (X2 | 0)) {
                    ca2 = U2;
                    da2 = X2;
                    J2 = 190;
                    break b;
                  } else {
                    ea2 = Y2;
                    fa2 = U2;
                    J2 = 180;
                  }
                }
              while (0);
              d: do
                if ((J2 | 0) == 180) {
                  U2 = 0 - fa2 | 0;
                  do
                    if (S2 >>> 0 > fa2 >>> 0 & (fa2 >>> 0 < 2147483647 & (ea2 | 0) != (-1 | 0)) ? (Y2 = c[4149] | 0, X2 = d2 - fa2 + Y2 & 0 - Y2, X2 >>> 0 < 2147483647) : 0)
                      if ((qe(X2 | 0) | 0) == (-1 | 0)) {
                        qe(U2 | 0) | 0;
                        break d;
                      } else {
                        ga2 = X2 + fa2 | 0;
                        break;
                      }
                    else ga2 = fa2;
                  while (0);
                  if ((ea2 | 0) != (-1 | 0)) {
                    ca2 = ga2;
                    da2 = ea2;
                    J2 = 190;
                    break b;
                  }
                }
              while (0);
              c[4140] = c[4140] | 4;
              J2 = 187;
            } else J2 = 187;
          while (0);
          if ((((J2 | 0) == 187 ? aa2 >>> 0 < 2147483647 : 0) ? (ea2 = qe(aa2 | 0) | 0, aa2 = qe(0) | 0, ea2 >>> 0 < aa2 >>> 0 & ((ea2 | 0) != (-1 | 0) & (aa2 | 0) != (-1 | 0))) : 0) ? (ga2 = aa2 - ea2 | 0, ga2 >>> 0 > (E2 + 40 | 0) >>> 0) : 0) {
            ca2 = ga2;
            da2 = ea2;
            J2 = 190;
          }
          if ((J2 | 0) == 190) {
            ea2 = (c[4137] | 0) + ca2 | 0;
            c[4137] = ea2;
            if (ea2 >>> 0 > (c[4138] | 0) >>> 0) c[4138] = ea2;
            ea2 = c[4035] | 0;
            do
              if (ea2) {
                ga2 = 16564;
                while (1) {
                  ia2 = c[ga2 >> 2] | 0;
                  ja2 = ga2 + 4 | 0;
                  ka2 = c[ja2 >> 2] | 0;
                  if ((da2 | 0) == (ia2 + ka2 | 0)) {
                    J2 = 200;
                    break;
                  }
                  aa2 = c[ga2 + 8 >> 2] | 0;
                  if (!aa2) break;
                  else ga2 = aa2;
                }
                if (((J2 | 0) == 200 ? (c[ga2 + 12 >> 2] & 8 | 0) == 0 : 0) ? ea2 >>> 0 < da2 >>> 0 & ea2 >>> 0 >= ia2 >>> 0 : 0) {
                  c[ja2 >> 2] = ka2 + ca2;
                  aa2 = ea2 + 8 | 0;
                  fa2 = (aa2 & 7 | 0) == 0 ? 0 : 0 - aa2 & 7;
                  aa2 = ea2 + fa2 | 0;
                  d2 = ca2 - fa2 + (c[4032] | 0) | 0;
                  c[4035] = aa2;
                  c[4032] = d2;
                  c[aa2 + 4 >> 2] = d2 | 1;
                  c[aa2 + d2 + 4 >> 2] = 40;
                  c[4036] = c[4151];
                  break;
                }
                d2 = c[4033] | 0;
                if (da2 >>> 0 < d2 >>> 0) {
                  c[4033] = da2;
                  la2 = da2;
                } else la2 = d2;
                d2 = da2 + ca2 | 0;
                aa2 = 16564;
                while (1) {
                  if ((c[aa2 >> 2] | 0) == (d2 | 0)) {
                    J2 = 208;
                    break;
                  }
                  fa2 = c[aa2 + 8 >> 2] | 0;
                  if (!fa2) {
                    ma2 = 16564;
                    break;
                  } else aa2 = fa2;
                }
                if ((J2 | 0) == 208)
                  if (!(c[aa2 + 12 >> 2] & 8)) {
                    c[aa2 >> 2] = da2;
                    ga2 = aa2 + 4 | 0;
                    c[ga2 >> 2] = (c[ga2 >> 2] | 0) + ca2;
                    ga2 = da2 + 8 | 0;
                    fa2 = da2 + ((ga2 & 7 | 0) == 0 ? 0 : 0 - ga2 & 7) | 0;
                    ga2 = d2 + 8 | 0;
                    S2 = d2 + ((ga2 & 7 | 0) == 0 ? 0 : 0 - ga2 & 7) | 0;
                    ga2 = fa2 + E2 | 0;
                    ba2 = S2 - fa2 - E2 | 0;
                    c[fa2 + 4 >> 2] = E2 | 3;
                    do
                      if ((S2 | 0) != (ea2 | 0)) {
                        if ((S2 | 0) == (c[4034] | 0)) {
                          _2 = (c[4031] | 0) + ba2 | 0;
                          c[4031] = _2;
                          c[4034] = ga2;
                          c[ga2 + 4 >> 2] = _2 | 1;
                          c[ga2 + _2 >> 2] = _2;
                          break;
                        }
                        _2 = c[S2 + 4 >> 2] | 0;
                        if ((_2 & 3 | 0) == 1) {
                          $2 = _2 & -8;
                          T2 = _2 >>> 3;
                          e: do
                            if (_2 >>> 0 >= 256) {
                              U2 = c[S2 + 24 >> 2] | 0;
                              Z2 = c[S2 + 12 >> 2] | 0;
                              do
                                if ((Z2 | 0) == (S2 | 0)) {
                                  X2 = S2 + 16 | 0;
                                  Y2 = X2 + 4 | 0;
                                  u2 = c[Y2 >> 2] | 0;
                                  if (!u2) {
                                    t2 = c[X2 >> 2] | 0;
                                    if (!t2) {
                                      na2 = 0;
                                      break;
                                    } else {
                                      oa2 = t2;
                                      pa2 = X2;
                                    }
                                  } else {
                                    oa2 = u2;
                                    pa2 = Y2;
                                  }
                                  while (1) {
                                    Y2 = oa2 + 20 | 0;
                                    u2 = c[Y2 >> 2] | 0;
                                    if (u2 | 0) {
                                      oa2 = u2;
                                      pa2 = Y2;
                                      continue;
                                    }
                                    Y2 = oa2 + 16 | 0;
                                    u2 = c[Y2 >> 2] | 0;
                                    if (!u2) break;
                                    else {
                                      oa2 = u2;
                                      pa2 = Y2;
                                    }
                                  }
                                  if (pa2 >>> 0 < la2 >>> 0) ha();
                                  else {
                                    c[pa2 >> 2] = 0;
                                    na2 = oa2;
                                    break;
                                  }
                                } else {
                                  Y2 = c[S2 + 8 >> 2] | 0;
                                  if (Y2 >>> 0 < la2 >>> 0) ha();
                                  u2 = Y2 + 12 | 0;
                                  if ((c[u2 >> 2] | 0) != (S2 | 0)) ha();
                                  X2 = Z2 + 8 | 0;
                                  if ((c[X2 >> 2] | 0) == (S2 | 0)) {
                                    c[u2 >> 2] = Z2;
                                    c[X2 >> 2] = Y2;
                                    na2 = Z2;
                                    break;
                                  } else ha();
                                }
                              while (0);
                              if (!U2) break;
                              Z2 = c[S2 + 28 >> 2] | 0;
                              Y2 = 16420 + (Z2 << 2) | 0;
                              do
                                if ((S2 | 0) != (c[Y2 >> 2] | 0)) {
                                  if (U2 >>> 0 < (c[4033] | 0) >>> 0) ha();
                                  X2 = U2 + 16 | 0;
                                  if ((c[X2 >> 2] | 0) == (S2 | 0)) c[X2 >> 2] = na2;
                                  else c[U2 + 20 >> 2] = na2;
                                  if (!na2) break e;
                                } else {
                                  c[Y2 >> 2] = na2;
                                  if (na2 | 0) break;
                                  c[4030] = c[4030] & ~(1 << Z2);
                                  break e;
                                }
                              while (0);
                              Z2 = c[4033] | 0;
                              if (na2 >>> 0 < Z2 >>> 0) ha();
                              c[na2 + 24 >> 2] = U2;
                              Y2 = S2 + 16 | 0;
                              X2 = c[Y2 >> 2] | 0;
                              do
                                if (X2 | 0)
                                  if (X2 >>> 0 < Z2 >>> 0) ha();
                                  else {
                                    c[na2 + 16 >> 2] = X2;
                                    c[X2 + 24 >> 2] = na2;
                                    break;
                                  }
                              while (0);
                              X2 = c[Y2 + 4 >> 2] | 0;
                              if (!X2) break;
                              if (X2 >>> 0 < (c[4033] | 0) >>> 0) ha();
                              else {
                                c[na2 + 20 >> 2] = X2;
                                c[X2 + 24 >> 2] = na2;
                                break;
                              }
                            } else {
                              X2 = c[S2 + 8 >> 2] | 0;
                              Z2 = c[S2 + 12 >> 2] | 0;
                              U2 = 16156 + (T2 << 1 << 2) | 0;
                              do
                                if ((X2 | 0) != (U2 | 0)) {
                                  if (X2 >>> 0 < la2 >>> 0) ha();
                                  if ((c[X2 + 12 >> 2] | 0) == (S2 | 0)) break;
                                  ha();
                                }
                              while (0);
                              if ((Z2 | 0) == (X2 | 0)) {
                                c[4029] = c[4029] & ~(1 << T2);
                                break;
                              }
                              do
                                if ((Z2 | 0) == (U2 | 0)) qa2 = Z2 + 8 | 0;
                                else {
                                  if (Z2 >>> 0 < la2 >>> 0) ha();
                                  Y2 = Z2 + 8 | 0;
                                  if ((c[Y2 >> 2] | 0) == (S2 | 0)) {
                                    qa2 = Y2;
                                    break;
                                  }
                                  ha();
                                }
                              while (0);
                              c[X2 + 12 >> 2] = Z2;
                              c[qa2 >> 2] = X2;
                            }
                          while (0);
                          ra2 = S2 + $2 | 0;
                          sa2 = $2 + ba2 | 0;
                        } else {
                          ra2 = S2;
                          sa2 = ba2;
                        }
                        T2 = ra2 + 4 | 0;
                        c[T2 >> 2] = c[T2 >> 2] & -2;
                        c[ga2 + 4 >> 2] = sa2 | 1;
                        c[ga2 + sa2 >> 2] = sa2;
                        T2 = sa2 >>> 3;
                        if (sa2 >>> 0 < 256) {
                          _2 = 16156 + (T2 << 1 << 2) | 0;
                          U2 = c[4029] | 0;
                          Y2 = 1 << T2;
                          do
                            if (!(U2 & Y2)) {
                              c[4029] = U2 | Y2;
                              ta2 = _2;
                              ua2 = _2 + 8 | 0;
                            } else {
                              T2 = _2 + 8 | 0;
                              u2 = c[T2 >> 2] | 0;
                              if (u2 >>> 0 >= (c[4033] | 0) >>> 0) {
                                ta2 = u2;
                                ua2 = T2;
                                break;
                              }
                              ha();
                            }
                          while (0);
                          c[ua2 >> 2] = ga2;
                          c[ta2 + 12 >> 2] = ga2;
                          c[ga2 + 8 >> 2] = ta2;
                          c[ga2 + 12 >> 2] = _2;
                          break;
                        }
                        Y2 = sa2 >>> 8;
                        do
                          if (!Y2) va2 = 0;
                          else {
                            if (sa2 >>> 0 > 16777215) {
                              va2 = 31;
                              break;
                            }
                            U2 = (Y2 + 1048320 | 0) >>> 16 & 8;
                            $2 = Y2 << U2;
                            T2 = ($2 + 520192 | 0) >>> 16 & 4;
                            u2 = $2 << T2;
                            $2 = (u2 + 245760 | 0) >>> 16 & 2;
                            t2 = 14 - (T2 | U2 | $2) + (u2 << $2 >>> 15) | 0;
                            va2 = sa2 >>> (t2 + 7 | 0) & 1 | t2 << 1;
                          }
                        while (0);
                        Y2 = 16420 + (va2 << 2) | 0;
                        c[ga2 + 28 >> 2] = va2;
                        _2 = ga2 + 16 | 0;
                        c[_2 + 4 >> 2] = 0;
                        c[_2 >> 2] = 0;
                        _2 = c[4030] | 0;
                        t2 = 1 << va2;
                        if (!(_2 & t2)) {
                          c[4030] = _2 | t2;
                          c[Y2 >> 2] = ga2;
                          c[ga2 + 24 >> 2] = Y2;
                          c[ga2 + 12 >> 2] = ga2;
                          c[ga2 + 8 >> 2] = ga2;
                          break;
                        }
                        t2 = sa2 << ((va2 | 0) == 31 ? 0 : 25 - (va2 >>> 1) | 0);
                        _2 = c[Y2 >> 2] | 0;
                        while (1) {
                          if ((c[_2 + 4 >> 2] & -8 | 0) == (sa2 | 0)) {
                            J2 = 278;
                            break;
                          }
                          wa2 = _2 + 16 + (t2 >>> 31 << 2) | 0;
                          Y2 = c[wa2 >> 2] | 0;
                          if (!Y2) {
                            J2 = 275;
                            break;
                          } else {
                            t2 = t2 << 1;
                            _2 = Y2;
                          }
                        }
                        if ((J2 | 0) == 275)
                          if (wa2 >>> 0 < (c[4033] | 0) >>> 0) ha();
                          else {
                            c[wa2 >> 2] = ga2;
                            c[ga2 + 24 >> 2] = _2;
                            c[ga2 + 12 >> 2] = ga2;
                            c[ga2 + 8 >> 2] = ga2;
                            break;
                          }
                        else if ((J2 | 0) == 278) {
                          t2 = _2 + 8 | 0;
                          Y2 = c[t2 >> 2] | 0;
                          $2 = c[4033] | 0;
                          if (Y2 >>> 0 >= $2 >>> 0 & _2 >>> 0 >= $2 >>> 0) {
                            c[Y2 + 12 >> 2] = ga2;
                            c[t2 >> 2] = ga2;
                            c[ga2 + 8 >> 2] = Y2;
                            c[ga2 + 12 >> 2] = _2;
                            c[ga2 + 24 >> 2] = 0;
                            break;
                          } else ha();
                        }
                      } else {
                        Y2 = (c[4032] | 0) + ba2 | 0;
                        c[4032] = Y2;
                        c[4035] = ga2;
                        c[ga2 + 4 >> 2] = Y2 | 1;
                      }
                    while (0);
                    q2 = fa2 + 8 | 0;
                    i2 = b2;
                    return q2 | 0;
                  } else ma2 = 16564;
                while (1) {
                  ga2 = c[ma2 >> 2] | 0;
                  if (ga2 >>> 0 <= ea2 >>> 0 ? (xa2 = ga2 + (c[ma2 + 4 >> 2] | 0) | 0, xa2 >>> 0 > ea2 >>> 0) : 0) break;
                  ma2 = c[ma2 + 8 >> 2] | 0;
                }
                fa2 = xa2 + -47 | 0;
                ga2 = fa2 + 8 | 0;
                ba2 = fa2 + ((ga2 & 7 | 0) == 0 ? 0 : 0 - ga2 & 7) | 0;
                ga2 = ea2 + 16 | 0;
                fa2 = ba2 >>> 0 < ga2 >>> 0 ? ea2 : ba2;
                ba2 = fa2 + 8 | 0;
                S2 = da2 + 8 | 0;
                d2 = (S2 & 7 | 0) == 0 ? 0 : 0 - S2 & 7;
                S2 = da2 + d2 | 0;
                aa2 = ca2 + -40 - d2 | 0;
                c[4035] = S2;
                c[4032] = aa2;
                c[S2 + 4 >> 2] = aa2 | 1;
                c[S2 + aa2 + 4 >> 2] = 40;
                c[4036] = c[4151];
                aa2 = fa2 + 4 | 0;
                c[aa2 >> 2] = 27;
                c[ba2 >> 2] = c[4141];
                c[ba2 + 4 >> 2] = c[4142];
                c[ba2 + 8 >> 2] = c[4143];
                c[ba2 + 12 >> 2] = c[4144];
                c[4141] = da2;
                c[4142] = ca2;
                c[4144] = 0;
                c[4143] = ba2;
                ba2 = fa2 + 24 | 0;
                do {
                  ba2 = ba2 + 4 | 0;
                  c[ba2 >> 2] = 7;
                } while ((ba2 + 4 | 0) >>> 0 < xa2 >>> 0);
                if ((fa2 | 0) != (ea2 | 0)) {
                  ba2 = fa2 - ea2 | 0;
                  c[aa2 >> 2] = c[aa2 >> 2] & -2;
                  c[ea2 + 4 >> 2] = ba2 | 1;
                  c[fa2 >> 2] = ba2;
                  S2 = ba2 >>> 3;
                  if (ba2 >>> 0 < 256) {
                    d2 = 16156 + (S2 << 1 << 2) | 0;
                    Y2 = c[4029] | 0;
                    t2 = 1 << S2;
                    if (Y2 & t2) {
                      S2 = d2 + 8 | 0;
                      $2 = c[S2 >> 2] | 0;
                      if ($2 >>> 0 < (c[4033] | 0) >>> 0) ha();
                      else {
                        ya2 = $2;
                        za2 = S2;
                      }
                    } else {
                      c[4029] = Y2 | t2;
                      ya2 = d2;
                      za2 = d2 + 8 | 0;
                    }
                    c[za2 >> 2] = ea2;
                    c[ya2 + 12 >> 2] = ea2;
                    c[ea2 + 8 >> 2] = ya2;
                    c[ea2 + 12 >> 2] = d2;
                    break;
                  }
                  d2 = ba2 >>> 8;
                  if (d2)
                    if (ba2 >>> 0 > 16777215) Aa2 = 31;
                    else {
                      t2 = (d2 + 1048320 | 0) >>> 16 & 8;
                      Y2 = d2 << t2;
                      d2 = (Y2 + 520192 | 0) >>> 16 & 4;
                      S2 = Y2 << d2;
                      Y2 = (S2 + 245760 | 0) >>> 16 & 2;
                      $2 = 14 - (d2 | t2 | Y2) + (S2 << Y2 >>> 15) | 0;
                      Aa2 = ba2 >>> ($2 + 7 | 0) & 1 | $2 << 1;
                    }
                  else Aa2 = 0;
                  $2 = 16420 + (Aa2 << 2) | 0;
                  c[ea2 + 28 >> 2] = Aa2;
                  c[ea2 + 20 >> 2] = 0;
                  c[ga2 >> 2] = 0;
                  Y2 = c[4030] | 0;
                  S2 = 1 << Aa2;
                  if (!(Y2 & S2)) {
                    c[4030] = Y2 | S2;
                    c[$2 >> 2] = ea2;
                    c[ea2 + 24 >> 2] = $2;
                    c[ea2 + 12 >> 2] = ea2;
                    c[ea2 + 8 >> 2] = ea2;
                    break;
                  }
                  S2 = ba2 << ((Aa2 | 0) == 31 ? 0 : 25 - (Aa2 >>> 1) | 0);
                  Y2 = c[$2 >> 2] | 0;
                  while (1) {
                    if ((c[Y2 + 4 >> 2] & -8 | 0) == (ba2 | 0)) {
                      J2 = 304;
                      break;
                    }
                    Ba2 = Y2 + 16 + (S2 >>> 31 << 2) | 0;
                    $2 = c[Ba2 >> 2] | 0;
                    if (!$2) {
                      J2 = 301;
                      break;
                    } else {
                      S2 = S2 << 1;
                      Y2 = $2;
                    }
                  }
                  if ((J2 | 0) == 301)
                    if (Ba2 >>> 0 < (c[4033] | 0) >>> 0) ha();
                    else {
                      c[Ba2 >> 2] = ea2;
                      c[ea2 + 24 >> 2] = Y2;
                      c[ea2 + 12 >> 2] = ea2;
                      c[ea2 + 8 >> 2] = ea2;
                      break;
                    }
                  else if ((J2 | 0) == 304) {
                    S2 = Y2 + 8 | 0;
                    ba2 = c[S2 >> 2] | 0;
                    ga2 = c[4033] | 0;
                    if (ba2 >>> 0 >= ga2 >>> 0 & Y2 >>> 0 >= ga2 >>> 0) {
                      c[ba2 + 12 >> 2] = ea2;
                      c[S2 >> 2] = ea2;
                      c[ea2 + 8 >> 2] = ba2;
                      c[ea2 + 12 >> 2] = Y2;
                      c[ea2 + 24 >> 2] = 0;
                      break;
                    } else ha();
                  }
                }
              } else {
                ba2 = c[4033] | 0;
                if ((ba2 | 0) == 0 | da2 >>> 0 < ba2 >>> 0) c[4033] = da2;
                c[4141] = da2;
                c[4142] = ca2;
                c[4144] = 0;
                c[4038] = c[4147];
                c[4037] = -1;
                ba2 = 0;
                do {
                  S2 = 16156 + (ba2 << 1 << 2) | 0;
                  c[S2 + 12 >> 2] = S2;
                  c[S2 + 8 >> 2] = S2;
                  ba2 = ba2 + 1 | 0;
                } while ((ba2 | 0) != 32);
                ba2 = da2 + 8 | 0;
                Y2 = (ba2 & 7 | 0) == 0 ? 0 : 0 - ba2 & 7;
                ba2 = da2 + Y2 | 0;
                S2 = ca2 + -40 - Y2 | 0;
                c[4035] = ba2;
                c[4032] = S2;
                c[ba2 + 4 >> 2] = S2 | 1;
                c[ba2 + S2 + 4 >> 2] = 40;
                c[4036] = c[4151];
              }
            while (0);
            ca2 = c[4032] | 0;
            if (ca2 >>> 0 > E2 >>> 0) {
              da2 = ca2 - E2 | 0;
              c[4032] = da2;
              ca2 = c[4035] | 0;
              ea2 = ca2 + E2 | 0;
              c[4035] = ea2;
              c[ea2 + 4 >> 2] = da2 | 1;
              c[ca2 + 4 >> 2] = E2 | 3;
              q2 = ca2 + 8 | 0;
              i2 = b2;
              return q2 | 0;
            }
          }
          c[(Tc() | 0) >> 2] = 12;
          q2 = 0;
          i2 = b2;
          return q2 | 0;
        }
        function fe(a2) {
          a2 = a2 | 0;
          var b2 = 0, d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0;
          if (!a2) return;
          b2 = a2 + -8 | 0;
          d2 = c[4033] | 0;
          if (b2 >>> 0 < d2 >>> 0) ha();
          e2 = c[a2 + -4 >> 2] | 0;
          a2 = e2 & 3;
          if ((a2 | 0) == 1) ha();
          f2 = e2 & -8;
          g2 = b2 + f2 | 0;
          do
            if (!(e2 & 1)) {
              h2 = c[b2 >> 2] | 0;
              if (!a2) return;
              i3 = b2 + (0 - h2) | 0;
              j2 = h2 + f2 | 0;
              if (i3 >>> 0 < d2 >>> 0) ha();
              if ((i3 | 0) == (c[4034] | 0)) {
                k2 = g2 + 4 | 0;
                l2 = c[k2 >> 2] | 0;
                if ((l2 & 3 | 0) != 3) {
                  m2 = i3;
                  n2 = j2;
                  break;
                }
                c[4031] = j2;
                c[k2 >> 2] = l2 & -2;
                c[i3 + 4 >> 2] = j2 | 1;
                c[i3 + j2 >> 2] = j2;
                return;
              }
              l2 = h2 >>> 3;
              if (h2 >>> 0 < 256) {
                h2 = c[i3 + 8 >> 2] | 0;
                k2 = c[i3 + 12 >> 2] | 0;
                o2 = 16156 + (l2 << 1 << 2) | 0;
                if ((h2 | 0) != (o2 | 0)) {
                  if (h2 >>> 0 < d2 >>> 0) ha();
                  if ((c[h2 + 12 >> 2] | 0) != (i3 | 0)) ha();
                }
                if ((k2 | 0) == (h2 | 0)) {
                  c[4029] = c[4029] & ~(1 << l2);
                  m2 = i3;
                  n2 = j2;
                  break;
                }
                if ((k2 | 0) != (o2 | 0)) {
                  if (k2 >>> 0 < d2 >>> 0) ha();
                  o2 = k2 + 8 | 0;
                  if ((c[o2 >> 2] | 0) == (i3 | 0)) p2 = o2;
                  else ha();
                } else p2 = k2 + 8 | 0;
                c[h2 + 12 >> 2] = k2;
                c[p2 >> 2] = h2;
                m2 = i3;
                n2 = j2;
                break;
              }
              h2 = c[i3 + 24 >> 2] | 0;
              k2 = c[i3 + 12 >> 2] | 0;
              do
                if ((k2 | 0) == (i3 | 0)) {
                  o2 = i3 + 16 | 0;
                  l2 = o2 + 4 | 0;
                  q2 = c[l2 >> 2] | 0;
                  if (!q2) {
                    r2 = c[o2 >> 2] | 0;
                    if (!r2) {
                      s2 = 0;
                      break;
                    } else {
                      t2 = r2;
                      u2 = o2;
                    }
                  } else {
                    t2 = q2;
                    u2 = l2;
                  }
                  while (1) {
                    l2 = t2 + 20 | 0;
                    q2 = c[l2 >> 2] | 0;
                    if (q2 | 0) {
                      t2 = q2;
                      u2 = l2;
                      continue;
                    }
                    l2 = t2 + 16 | 0;
                    q2 = c[l2 >> 2] | 0;
                    if (!q2) break;
                    else {
                      t2 = q2;
                      u2 = l2;
                    }
                  }
                  if (u2 >>> 0 < d2 >>> 0) ha();
                  else {
                    c[u2 >> 2] = 0;
                    s2 = t2;
                    break;
                  }
                } else {
                  l2 = c[i3 + 8 >> 2] | 0;
                  if (l2 >>> 0 < d2 >>> 0) ha();
                  q2 = l2 + 12 | 0;
                  if ((c[q2 >> 2] | 0) != (i3 | 0)) ha();
                  o2 = k2 + 8 | 0;
                  if ((c[o2 >> 2] | 0) == (i3 | 0)) {
                    c[q2 >> 2] = k2;
                    c[o2 >> 2] = l2;
                    s2 = k2;
                    break;
                  } else ha();
                }
              while (0);
              if (h2) {
                k2 = c[i3 + 28 >> 2] | 0;
                l2 = 16420 + (k2 << 2) | 0;
                if ((i3 | 0) == (c[l2 >> 2] | 0)) {
                  c[l2 >> 2] = s2;
                  if (!s2) {
                    c[4030] = c[4030] & ~(1 << k2);
                    m2 = i3;
                    n2 = j2;
                    break;
                  }
                } else {
                  if (h2 >>> 0 < (c[4033] | 0) >>> 0) ha();
                  k2 = h2 + 16 | 0;
                  if ((c[k2 >> 2] | 0) == (i3 | 0)) c[k2 >> 2] = s2;
                  else c[h2 + 20 >> 2] = s2;
                  if (!s2) {
                    m2 = i3;
                    n2 = j2;
                    break;
                  }
                }
                k2 = c[4033] | 0;
                if (s2 >>> 0 < k2 >>> 0) ha();
                c[s2 + 24 >> 2] = h2;
                l2 = i3 + 16 | 0;
                o2 = c[l2 >> 2] | 0;
                do
                  if (o2 | 0)
                    if (o2 >>> 0 < k2 >>> 0) ha();
                    else {
                      c[s2 + 16 >> 2] = o2;
                      c[o2 + 24 >> 2] = s2;
                      break;
                    }
                while (0);
                o2 = c[l2 + 4 >> 2] | 0;
                if (o2)
                  if (o2 >>> 0 < (c[4033] | 0) >>> 0) ha();
                  else {
                    c[s2 + 20 >> 2] = o2;
                    c[o2 + 24 >> 2] = s2;
                    m2 = i3;
                    n2 = j2;
                    break;
                  }
                else {
                  m2 = i3;
                  n2 = j2;
                }
              } else {
                m2 = i3;
                n2 = j2;
              }
            } else {
              m2 = b2;
              n2 = f2;
            }
          while (0);
          if (m2 >>> 0 >= g2 >>> 0) ha();
          f2 = g2 + 4 | 0;
          b2 = c[f2 >> 2] | 0;
          if (!(b2 & 1)) ha();
          if (!(b2 & 2)) {
            if ((g2 | 0) == (c[4035] | 0)) {
              s2 = (c[4032] | 0) + n2 | 0;
              c[4032] = s2;
              c[4035] = m2;
              c[m2 + 4 >> 2] = s2 | 1;
              if ((m2 | 0) != (c[4034] | 0)) return;
              c[4034] = 0;
              c[4031] = 0;
              return;
            }
            if ((g2 | 0) == (c[4034] | 0)) {
              s2 = (c[4031] | 0) + n2 | 0;
              c[4031] = s2;
              c[4034] = m2;
              c[m2 + 4 >> 2] = s2 | 1;
              c[m2 + s2 >> 2] = s2;
              return;
            }
            s2 = (b2 & -8) + n2 | 0;
            d2 = b2 >>> 3;
            do
              if (b2 >>> 0 >= 256) {
                t2 = c[g2 + 24 >> 2] | 0;
                u2 = c[g2 + 12 >> 2] | 0;
                do
                  if ((u2 | 0) == (g2 | 0)) {
                    p2 = g2 + 16 | 0;
                    a2 = p2 + 4 | 0;
                    e2 = c[a2 >> 2] | 0;
                    if (!e2) {
                      o2 = c[p2 >> 2] | 0;
                      if (!o2) {
                        v2 = 0;
                        break;
                      } else {
                        w2 = o2;
                        x2 = p2;
                      }
                    } else {
                      w2 = e2;
                      x2 = a2;
                    }
                    while (1) {
                      a2 = w2 + 20 | 0;
                      e2 = c[a2 >> 2] | 0;
                      if (e2 | 0) {
                        w2 = e2;
                        x2 = a2;
                        continue;
                      }
                      a2 = w2 + 16 | 0;
                      e2 = c[a2 >> 2] | 0;
                      if (!e2) break;
                      else {
                        w2 = e2;
                        x2 = a2;
                      }
                    }
                    if (x2 >>> 0 < (c[4033] | 0) >>> 0) ha();
                    else {
                      c[x2 >> 2] = 0;
                      v2 = w2;
                      break;
                    }
                  } else {
                    a2 = c[g2 + 8 >> 2] | 0;
                    if (a2 >>> 0 < (c[4033] | 0) >>> 0) ha();
                    e2 = a2 + 12 | 0;
                    if ((c[e2 >> 2] | 0) != (g2 | 0)) ha();
                    p2 = u2 + 8 | 0;
                    if ((c[p2 >> 2] | 0) == (g2 | 0)) {
                      c[e2 >> 2] = u2;
                      c[p2 >> 2] = a2;
                      v2 = u2;
                      break;
                    } else ha();
                  }
                while (0);
                if (t2 | 0) {
                  u2 = c[g2 + 28 >> 2] | 0;
                  j2 = 16420 + (u2 << 2) | 0;
                  if ((g2 | 0) == (c[j2 >> 2] | 0)) {
                    c[j2 >> 2] = v2;
                    if (!v2) {
                      c[4030] = c[4030] & ~(1 << u2);
                      break;
                    }
                  } else {
                    if (t2 >>> 0 < (c[4033] | 0) >>> 0) ha();
                    u2 = t2 + 16 | 0;
                    if ((c[u2 >> 2] | 0) == (g2 | 0)) c[u2 >> 2] = v2;
                    else c[t2 + 20 >> 2] = v2;
                    if (!v2) break;
                  }
                  u2 = c[4033] | 0;
                  if (v2 >>> 0 < u2 >>> 0) ha();
                  c[v2 + 24 >> 2] = t2;
                  j2 = g2 + 16 | 0;
                  i3 = c[j2 >> 2] | 0;
                  do
                    if (i3 | 0)
                      if (i3 >>> 0 < u2 >>> 0) ha();
                      else {
                        c[v2 + 16 >> 2] = i3;
                        c[i3 + 24 >> 2] = v2;
                        break;
                      }
                  while (0);
                  i3 = c[j2 + 4 >> 2] | 0;
                  if (i3 | 0)
                    if (i3 >>> 0 < (c[4033] | 0) >>> 0) ha();
                    else {
                      c[v2 + 20 >> 2] = i3;
                      c[i3 + 24 >> 2] = v2;
                      break;
                    }
                }
              } else {
                i3 = c[g2 + 8 >> 2] | 0;
                u2 = c[g2 + 12 >> 2] | 0;
                t2 = 16156 + (d2 << 1 << 2) | 0;
                if ((i3 | 0) != (t2 | 0)) {
                  if (i3 >>> 0 < (c[4033] | 0) >>> 0) ha();
                  if ((c[i3 + 12 >> 2] | 0) != (g2 | 0)) ha();
                }
                if ((u2 | 0) == (i3 | 0)) {
                  c[4029] = c[4029] & ~(1 << d2);
                  break;
                }
                if ((u2 | 0) != (t2 | 0)) {
                  if (u2 >>> 0 < (c[4033] | 0) >>> 0) ha();
                  t2 = u2 + 8 | 0;
                  if ((c[t2 >> 2] | 0) == (g2 | 0)) y2 = t2;
                  else ha();
                } else y2 = u2 + 8 | 0;
                c[i3 + 12 >> 2] = u2;
                c[y2 >> 2] = i3;
              }
            while (0);
            c[m2 + 4 >> 2] = s2 | 1;
            c[m2 + s2 >> 2] = s2;
            if ((m2 | 0) == (c[4034] | 0)) {
              c[4031] = s2;
              return;
            } else z2 = s2;
          } else {
            c[f2 >> 2] = b2 & -2;
            c[m2 + 4 >> 2] = n2 | 1;
            c[m2 + n2 >> 2] = n2;
            z2 = n2;
          }
          n2 = z2 >>> 3;
          if (z2 >>> 0 < 256) {
            b2 = 16156 + (n2 << 1 << 2) | 0;
            f2 = c[4029] | 0;
            s2 = 1 << n2;
            if (f2 & s2) {
              n2 = b2 + 8 | 0;
              y2 = c[n2 >> 2] | 0;
              if (y2 >>> 0 < (c[4033] | 0) >>> 0) ha();
              else {
                A2 = y2;
                B2 = n2;
              }
            } else {
              c[4029] = f2 | s2;
              A2 = b2;
              B2 = b2 + 8 | 0;
            }
            c[B2 >> 2] = m2;
            c[A2 + 12 >> 2] = m2;
            c[m2 + 8 >> 2] = A2;
            c[m2 + 12 >> 2] = b2;
            return;
          }
          b2 = z2 >>> 8;
          if (b2)
            if (z2 >>> 0 > 16777215) C2 = 31;
            else {
              A2 = (b2 + 1048320 | 0) >>> 16 & 8;
              B2 = b2 << A2;
              b2 = (B2 + 520192 | 0) >>> 16 & 4;
              s2 = B2 << b2;
              B2 = (s2 + 245760 | 0) >>> 16 & 2;
              f2 = 14 - (b2 | A2 | B2) + (s2 << B2 >>> 15) | 0;
              C2 = z2 >>> (f2 + 7 | 0) & 1 | f2 << 1;
            }
          else C2 = 0;
          f2 = 16420 + (C2 << 2) | 0;
          c[m2 + 28 >> 2] = C2;
          c[m2 + 20 >> 2] = 0;
          c[m2 + 16 >> 2] = 0;
          B2 = c[4030] | 0;
          s2 = 1 << C2;
          do
            if (B2 & s2) {
              A2 = z2 << ((C2 | 0) == 31 ? 0 : 25 - (C2 >>> 1) | 0);
              b2 = c[f2 >> 2] | 0;
              while (1) {
                if ((c[b2 + 4 >> 2] & -8 | 0) == (z2 | 0)) {
                  D2 = 130;
                  break;
                }
                E2 = b2 + 16 + (A2 >>> 31 << 2) | 0;
                n2 = c[E2 >> 2] | 0;
                if (!n2) {
                  D2 = 127;
                  break;
                } else {
                  A2 = A2 << 1;
                  b2 = n2;
                }
              }
              if ((D2 | 0) == 127)
                if (E2 >>> 0 < (c[4033] | 0) >>> 0) ha();
                else {
                  c[E2 >> 2] = m2;
                  c[m2 + 24 >> 2] = b2;
                  c[m2 + 12 >> 2] = m2;
                  c[m2 + 8 >> 2] = m2;
                  break;
                }
              else if ((D2 | 0) == 130) {
                A2 = b2 + 8 | 0;
                j2 = c[A2 >> 2] | 0;
                n2 = c[4033] | 0;
                if (j2 >>> 0 >= n2 >>> 0 & b2 >>> 0 >= n2 >>> 0) {
                  c[j2 + 12 >> 2] = m2;
                  c[A2 >> 2] = m2;
                  c[m2 + 8 >> 2] = j2;
                  c[m2 + 12 >> 2] = b2;
                  c[m2 + 24 >> 2] = 0;
                  break;
                } else ha();
              }
            } else {
              c[4030] = B2 | s2;
              c[f2 >> 2] = m2;
              c[m2 + 24 >> 2] = f2;
              c[m2 + 12 >> 2] = m2;
              c[m2 + 8 >> 2] = m2;
            }
          while (0);
          m2 = (c[4037] | 0) + -1 | 0;
          c[4037] = m2;
          if (!m2) F2 = 16572;
          else return;
          while (1) {
            m2 = c[F2 >> 2] | 0;
            if (!m2) break;
            else F2 = m2 + 8 | 0;
          }
          c[4037] = -1;
          return;
        }
        function ge() {
        }
        function he(a2, b2, c2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          d2 = d2 | 0;
          var e2 = 0;
          e2 = b2 - d2 >>> 0;
          e2 = b2 - d2 - (c2 >>> 0 > a2 >>> 0 | 0) >>> 0;
          return (D = e2, a2 - c2 >>> 0 | 0) | 0;
        }
        function ie(a2, b2, c2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          d2 = d2 | 0;
          var e2 = 0;
          e2 = a2 + c2 >>> 0;
          return (D = b2 + d2 + (e2 >>> 0 < a2 >>> 0 | 0) >>> 0, e2 | 0) | 0;
        }
        function je(b2, d2, e2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          var f2 = 0, g2 = 0, h2 = 0, i3 = 0;
          f2 = b2 + e2 | 0;
          if ((e2 | 0) >= 20) {
            d2 = d2 & 255;
            g2 = b2 & 3;
            h2 = d2 | d2 << 8 | d2 << 16 | d2 << 24;
            i3 = f2 & ~3;
            if (g2) {
              g2 = b2 + 4 - g2 | 0;
              while ((b2 | 0) < (g2 | 0)) {
                a[b2 >> 0] = d2;
                b2 = b2 + 1 | 0;
              }
            }
            while ((b2 | 0) < (i3 | 0)) {
              c[b2 >> 2] = h2;
              b2 = b2 + 4 | 0;
            }
          }
          while ((b2 | 0) < (f2 | 0)) {
            a[b2 >> 0] = d2;
            b2 = b2 + 1 | 0;
          }
          return b2 - e2 | 0;
        }
        function ke(a2, b2, c2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          if ((c2 | 0) < 32) {
            D = b2 << c2 | (a2 & (1 << c2) - 1 << 32 - c2) >>> 32 - c2;
            return a2 << c2;
          }
          D = a2 << c2 - 32;
          return 0;
        }
        function le(a2, b2, c2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          if ((c2 | 0) < 32) {
            D = b2 >>> c2;
            return a2 >>> c2 | (b2 & (1 << c2) - 1) << 32 - c2;
          }
          D = 0;
          return b2 >>> c2 - 32 | 0;
        }
        function me(b2, d2, e2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          var f2 = 0;
          if ((e2 | 0) >= 4096) return na(b2 | 0, d2 | 0, e2 | 0) | 0;
          f2 = b2 | 0;
          if ((b2 & 3) == (d2 & 3)) {
            while (b2 & 3) {
              if (!e2) return f2 | 0;
              a[b2 >> 0] = a[d2 >> 0] | 0;
              b2 = b2 + 1 | 0;
              d2 = d2 + 1 | 0;
              e2 = e2 - 1 | 0;
            }
            while ((e2 | 0) >= 4) {
              c[b2 >> 2] = c[d2 >> 2];
              b2 = b2 + 4 | 0;
              d2 = d2 + 4 | 0;
              e2 = e2 - 4 | 0;
            }
          }
          while ((e2 | 0) > 0) {
            a[b2 >> 0] = a[d2 >> 0] | 0;
            b2 = b2 + 1 | 0;
            d2 = d2 + 1 | 0;
            e2 = e2 - 1 | 0;
          }
          return f2 | 0;
        }
        function ne(b2) {
          b2 = b2 | 0;
          var c2 = 0;
          c2 = a[n + (b2 & 255) >> 0] | 0;
          if ((c2 | 0) < 8) return c2 | 0;
          c2 = a[n + (b2 >> 8 & 255) >> 0] | 0;
          if ((c2 | 0) < 8) return c2 + 8 | 0;
          c2 = a[n + (b2 >> 16 & 255) >> 0] | 0;
          if ((c2 | 0) < 8) return c2 + 16 | 0;
          return (a[n + (b2 >>> 24) >> 0] | 0) + 24 | 0;
        }
        function oe(a2, b2, d2, e2, f2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          var g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0;
          g2 = a2;
          h2 = b2;
          i3 = h2;
          j2 = d2;
          k2 = e2;
          l2 = k2;
          if (!i3) {
            m2 = (f2 | 0) != 0;
            if (!l2) {
              if (m2) {
                c[f2 >> 2] = (g2 >>> 0) % (j2 >>> 0);
                c[f2 + 4 >> 2] = 0;
              }
              n2 = 0;
              o2 = (g2 >>> 0) / (j2 >>> 0) >>> 0;
              return (D = n2, o2) | 0;
            } else {
              if (!m2) {
                n2 = 0;
                o2 = 0;
                return (D = n2, o2) | 0;
              }
              c[f2 >> 2] = a2 | 0;
              c[f2 + 4 >> 2] = b2 & 0;
              n2 = 0;
              o2 = 0;
              return (D = n2, o2) | 0;
            }
          }
          m2 = (l2 | 0) == 0;
          do
            if (j2) {
              if (!m2) {
                p2 = (V(l2 | 0) | 0) - (V(i3 | 0) | 0) | 0;
                if (p2 >>> 0 <= 31) {
                  q2 = p2 + 1 | 0;
                  r2 = 31 - p2 | 0;
                  s2 = p2 - 31 >> 31;
                  t2 = q2;
                  u2 = g2 >>> (q2 >>> 0) & s2 | i3 << r2;
                  v2 = i3 >>> (q2 >>> 0) & s2;
                  w2 = 0;
                  x2 = g2 << r2;
                  break;
                }
                if (!f2) {
                  n2 = 0;
                  o2 = 0;
                  return (D = n2, o2) | 0;
                }
                c[f2 >> 2] = a2 | 0;
                c[f2 + 4 >> 2] = h2 | b2 & 0;
                n2 = 0;
                o2 = 0;
                return (D = n2, o2) | 0;
              }
              r2 = j2 - 1 | 0;
              if (r2 & j2 | 0) {
                s2 = (V(j2 | 0) | 0) + 33 - (V(i3 | 0) | 0) | 0;
                q2 = 64 - s2 | 0;
                p2 = 32 - s2 | 0;
                y2 = p2 >> 31;
                z2 = s2 - 32 | 0;
                A2 = z2 >> 31;
                t2 = s2;
                u2 = p2 - 1 >> 31 & i3 >>> (z2 >>> 0) | (i3 << p2 | g2 >>> (s2 >>> 0)) & A2;
                v2 = A2 & i3 >>> (s2 >>> 0);
                w2 = g2 << q2 & y2;
                x2 = (i3 << q2 | g2 >>> (z2 >>> 0)) & y2 | g2 << p2 & s2 - 33 >> 31;
                break;
              }
              if (f2 | 0) {
                c[f2 >> 2] = r2 & g2;
                c[f2 + 4 >> 2] = 0;
              }
              if ((j2 | 0) == 1) {
                n2 = h2 | b2 & 0;
                o2 = a2 | 0 | 0;
                return (D = n2, o2) | 0;
              } else {
                r2 = ne(j2 | 0) | 0;
                n2 = i3 >>> (r2 >>> 0) | 0;
                o2 = i3 << 32 - r2 | g2 >>> (r2 >>> 0) | 0;
                return (D = n2, o2) | 0;
              }
            } else {
              if (m2) {
                if (f2 | 0) {
                  c[f2 >> 2] = (i3 >>> 0) % (j2 >>> 0);
                  c[f2 + 4 >> 2] = 0;
                }
                n2 = 0;
                o2 = (i3 >>> 0) / (j2 >>> 0) >>> 0;
                return (D = n2, o2) | 0;
              }
              if (!g2) {
                if (f2 | 0) {
                  c[f2 >> 2] = 0;
                  c[f2 + 4 >> 2] = (i3 >>> 0) % (l2 >>> 0);
                }
                n2 = 0;
                o2 = (i3 >>> 0) / (l2 >>> 0) >>> 0;
                return (D = n2, o2) | 0;
              }
              r2 = l2 - 1 | 0;
              if (!(r2 & l2)) {
                if (f2 | 0) {
                  c[f2 >> 2] = a2 | 0;
                  c[f2 + 4 >> 2] = r2 & i3 | b2 & 0;
                }
                n2 = 0;
                o2 = i3 >>> ((ne(l2 | 0) | 0) >>> 0);
                return (D = n2, o2) | 0;
              }
              r2 = (V(l2 | 0) | 0) - (V(i3 | 0) | 0) | 0;
              if (r2 >>> 0 <= 30) {
                s2 = r2 + 1 | 0;
                p2 = 31 - r2 | 0;
                t2 = s2;
                u2 = i3 << p2 | g2 >>> (s2 >>> 0);
                v2 = i3 >>> (s2 >>> 0);
                w2 = 0;
                x2 = g2 << p2;
                break;
              }
              if (!f2) {
                n2 = 0;
                o2 = 0;
                return (D = n2, o2) | 0;
              }
              c[f2 >> 2] = a2 | 0;
              c[f2 + 4 >> 2] = h2 | b2 & 0;
              n2 = 0;
              o2 = 0;
              return (D = n2, o2) | 0;
            }
          while (0);
          if (!t2) {
            B2 = x2;
            C2 = w2;
            E2 = v2;
            F2 = u2;
            G2 = 0;
            H2 = 0;
          } else {
            b2 = d2 | 0 | 0;
            d2 = k2 | e2 & 0;
            e2 = ie(b2 | 0, d2 | 0, -1, -1) | 0;
            k2 = D;
            h2 = x2;
            x2 = w2;
            w2 = v2;
            v2 = u2;
            u2 = t2;
            t2 = 0;
            do {
              a2 = h2;
              h2 = x2 >>> 31 | h2 << 1;
              x2 = t2 | x2 << 1;
              g2 = v2 << 1 | a2 >>> 31 | 0;
              a2 = v2 >>> 31 | w2 << 1 | 0;
              he(e2 | 0, k2 | 0, g2 | 0, a2 | 0) | 0;
              i3 = D;
              l2 = i3 >> 31 | ((i3 | 0) < 0 ? -1 : 0) << 1;
              t2 = l2 & 1;
              v2 = he(g2 | 0, a2 | 0, l2 & b2 | 0, (((i3 | 0) < 0 ? -1 : 0) >> 31 | ((i3 | 0) < 0 ? -1 : 0) << 1) & d2 | 0) | 0;
              w2 = D;
              u2 = u2 - 1 | 0;
            } while ((u2 | 0) != 0);
            B2 = h2;
            C2 = x2;
            E2 = w2;
            F2 = v2;
            G2 = 0;
            H2 = t2;
          }
          t2 = C2;
          C2 = 0;
          if (f2 | 0) {
            c[f2 >> 2] = F2;
            c[f2 + 4 >> 2] = E2;
          }
          n2 = (t2 | 0) >>> 31 | (B2 | C2) << 1 | (C2 << 1 | t2 >>> 31) & 0 | G2;
          o2 = (t2 << 1 | 0 >>> 31) & -2 | H2;
          return (D = n2, o2) | 0;
        }
        function pe(a2, b2, c2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          d2 = d2 | 0;
          return oe(a2, b2, c2, d2, 0) | 0;
        }
        function qe(a2) {
          a2 = a2 | 0;
          var b2 = 0, d2 = 0;
          a2 = a2 + 15 & -16 | 0;
          b2 = c[k >> 2] | 0;
          d2 = b2 + a2 | 0;
          if ((a2 | 0) > 0 & (d2 | 0) < (b2 | 0) | (d2 | 0) < 0) {
            _() | 0;
            ka(12);
            return -1;
          }
          c[k >> 2] = d2;
          if ((d2 | 0) > (Z() | 0) ? (Y() | 0) == 0 : 0) {
            ka(12);
            c[k >> 2] = b2;
            return -1;
          }
          return b2 | 0;
        }
        function re(a2, b2, d2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          var f2 = 0, g2 = 0;
          f2 = i2;
          i2 = i2 + 16 | 0;
          g2 = f2 | 0;
          oe(a2, b2, d2, e2, g2) | 0;
          i2 = f2;
          return (D = c[g2 + 4 >> 2] | 0, c[g2 >> 2] | 0) | 0;
        }
        function se() {
          return 0;
        }
        function te(a2) {
          a2 = a2 | 0;
          return Da[a2 & 3]() | 0;
        }
        function ue(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          return Ea[a2 & 3](b2 | 0) | 0;
        }
        function ve(a2, b2, c2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          d2 = d2 | 0;
          return Fa[a2 & 7](b2 | 0, c2 | 0, d2 | 0) | 0;
        }
        function we(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          Ga[a2 & 3](b2 | 0);
        }
        function xe() {
          W(0);
          return 0;
        }
        function ye(a2) {
          a2 = a2 | 0;
          W(1);
          return 0;
        }
        function ze(a2, b2, c2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          W(2);
          return 0;
        }
        function Ae(a2) {
          a2 = a2 | 0;
          W(3);
        }
        var Da = [xe, Mc, Nc, Kc];
        var Ea = [ye, Pc, Jc, ye];
        var Fa = [ze, Qc, Rc, Wc, Yc, yd, Ec, ze];
        var Ga = [Ae, pc, Uc, Xc];
        return {
          _sbrk: qe,
          _i64Subtract: he,
          _fflush: Cd,
          ___udivmoddi4: oe,
          _i64Add: ie,
          _pthread_self: se,
          _memset: je,
          _llvm_cttz_i32: ne,
          _malloc: ee,
          _memcpy: me,
          _dgeev_: Xa,
          _bitshift64Lshr: le,
          _free: fe,
          ___udivdi3: pe,
          ___uremdi3: re,
          ___errno_location: Tc,
          _bitshift64Shl: ke,
          runPostSets: ge,
          stackAlloc: Ha,
          stackSave: Ia,
          stackRestore: Ja,
          establishStackSpace: Ka,
          setThrew: La,
          setTempRet0: Ma,
          getTempRet0: Na,
          dynCall_i: te,
          dynCall_ii: ue,
          dynCall_iiii: ve,
          dynCall_vi: we
        };
      })(Module.asmGlobalArg, Module.asmLibraryArg, buffer);
      var _malloc = Module["_malloc"] = asm["_malloc"];
      var _i64Subtract = Module["_i64Subtract"] = asm["_i64Subtract"];
      var _fflush = Module["_fflush"] = asm["_fflush"];
      var ___udivmoddi4 = Module["___udivmoddi4"] = asm["___udivmoddi4"];
      var _i64Add = Module["_i64Add"] = asm["_i64Add"];
      var runPostSets = Module["runPostSets"] = asm["runPostSets"];
      var _pthread_self = Module["_pthread_self"] = asm["_pthread_self"];
      var _memset = Module["_memset"] = asm["_memset"];
      var _llvm_cttz_i32 = Module["_llvm_cttz_i32"] = asm["_llvm_cttz_i32"];
      var _sbrk = Module["_sbrk"] = asm["_sbrk"];
      var _memcpy = Module["_memcpy"] = asm["_memcpy"];
      var _dgeev_ = Module["_dgeev_"] = asm["_dgeev_"];
      var _bitshift64Lshr = Module["_bitshift64Lshr"] = asm["_bitshift64Lshr"];
      var _free = Module["_free"] = asm["_free"];
      var ___udivdi3 = Module["___udivdi3"] = asm["___udivdi3"];
      var ___uremdi3 = Module["___uremdi3"] = asm["___uremdi3"];
      var ___errno_location = Module["___errno_location"] = asm["___errno_location"];
      var _bitshift64Shl = Module["_bitshift64Shl"] = asm["_bitshift64Shl"];
      var dynCall_i = Module["dynCall_i"] = asm["dynCall_i"];
      var dynCall_ii = Module["dynCall_ii"] = asm["dynCall_ii"];
      var dynCall_iiii = Module["dynCall_iiii"] = asm["dynCall_iiii"];
      var dynCall_vi = Module["dynCall_vi"] = asm["dynCall_vi"];
      Runtime.stackAlloc = asm["stackAlloc"];
      Runtime.stackSave = asm["stackSave"];
      Runtime.stackRestore = asm["stackRestore"];
      Runtime.establishStackSpace = asm["establishStackSpace"];
      Runtime.setTempRet0 = asm["setTempRet0"];
      Runtime.getTempRet0 = asm["getTempRet0"];
      function ExitStatus(status) {
        this.name = "ExitStatus";
        this.message = "Program terminated with exit(" + status + ")";
        this.status = status;
      }
      ExitStatus.prototype = new Error();
      ExitStatus.prototype.constructor = ExitStatus;
      var initialStackTop;
      var preloadStartTime = null;
      var calledMain = false;
      dependenciesFulfilled = function runCaller() {
        if (!Module["calledRun"]) run();
        if (!Module["calledRun"]) dependenciesFulfilled = runCaller;
      };
      Module["callMain"] = Module.callMain = function callMain(args) {
        args = args || [];
        ensureInitRuntime();
        var argc = args.length + 1;
        function pad() {
          for (var i3 = 0; i3 < 4 - 1; i3++) {
            argv.push(0);
          }
        }
        var argv = [allocate(intArrayFromString(Module["thisProgram"]), "i8", ALLOC_NORMAL)];
        pad();
        for (var i2 = 0; i2 < argc - 1; i2 = i2 + 1) {
          argv.push(allocate(intArrayFromString(args[i2]), "i8", ALLOC_NORMAL));
          pad();
        }
        argv.push(0);
        argv = allocate(argv, "i32", ALLOC_NORMAL);
        try {
          var ret = Module["_main"](argc, argv, 0);
          exit(ret, true);
        } catch (e) {
          if (e instanceof ExitStatus) {
            return;
          } else if (e == "SimulateInfiniteLoop") {
            Module["noExitRuntime"] = true;
            return;
          } else {
            if (e && typeof e === "object" && e.stack) Module.printErr("exception thrown: " + [e, e.stack]);
            throw e;
          }
        } finally {
          calledMain = true;
        }
      };
      function run(args) {
        args = args || Module["arguments"];
        if (preloadStartTime === null) preloadStartTime = Date.now();
        if (runDependencies > 0) {
          return;
        }
        preRun();
        if (runDependencies > 0) return;
        if (Module["calledRun"]) return;
        function doRun() {
          if (Module["calledRun"]) return;
          Module["calledRun"] = true;
          if (ABORT) return;
          ensureInitRuntime();
          preMain();
          if (Module["onRuntimeInitialized"]) Module["onRuntimeInitialized"]();
          if (Module["_main"] && shouldRunNow) Module["callMain"](args);
          postRun();
        }
        if (Module["setStatus"]) {
          Module["setStatus"]("Running...");
          setTimeout((function() {
            setTimeout((function() {
              Module["setStatus"]("");
            }), 1);
            doRun();
          }), 1);
        } else {
          doRun();
        }
      }
      Module["run"] = Module.run = run;
      function exit(status, implicit) {
        if (implicit && Module["noExitRuntime"]) {
          return;
        }
        if (Module["noExitRuntime"]) {
        } else {
          ABORT = true;
          EXITSTATUS = status;
          STACKTOP = initialStackTop;
          exitRuntime();
          if (Module["onExit"]) Module["onExit"](status);
        }
        if (ENVIRONMENT_IS_NODE) {
          process["exit"](status);
        } else if (ENVIRONMENT_IS_SHELL && typeof quit === "function") {
          quit(status);
        }
        throw new ExitStatus(status);
      }
      Module["exit"] = Module.exit = exit;
      var abortDecorators = [];
      function abort(what) {
        if (what !== void 0) {
          Module.print(what);
          Module.printErr(what);
          what = JSON.stringify(what);
        } else {
          what = "";
        }
        ABORT = true;
        EXITSTATUS = 1;
        var extra = "\nIf this abort() is unexpected, build with -s ASSERTIONS=1 which can give more information.";
        var output = "abort(" + what + ") at " + stackTrace() + extra;
        if (abortDecorators) {
          abortDecorators.forEach((function(decorator) {
            output = decorator(output, what);
          }));
        }
        throw output;
      }
      Module["abort"] = Module.abort = abort;
      if (Module["preInit"]) {
        if (typeof Module["preInit"] == "function") Module["preInit"] = [Module["preInit"]];
        while (Module["preInit"].length > 0) {
          Module["preInit"].pop()();
        }
      }
      var shouldRunNow = true;
      if (Module["noInitialRun"]) {
        shouldRunNow = false;
      }
      run();
    })();
    module.exports = Module;
  }
});
export default require_index();
